module.exports = (function() {
    function word_to_u16(w) {
        var u = 0;
        for (var i = 0; i < 16; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u16_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 16; ++i) {
            w = {
                _: (u >>> (16 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u16_to_bits(x) {
        var s = '';
        for (var i = 0; i < 16; ++i) {
            s = (x & 1 ? '1' : '0') + s;
            x = x >>> 1;
        }
        return s;
    };

    function word_to_u32(w) {
        var u = 0;
        for (var i = 0; i < 32; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u32_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 32; ++i) {
            w = {
                _: (u >>> (32 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u32_for(state, from, til, func) {
        for (var i = from; i < til; ++i) {
            state = func(i)(state);
        }
        return state;
    };
    var bitsmap_new = {
        _: 'BitsMap.new'
    };
    var bitsmap_tie = function(val, lft, rgt) {
        return {
            _: 'BitsMap.tip',
            val,
            lft,
            rgt
        };
    }
    var maybe_none = {
        _: 'Maybe.none'
    };
    var maybe_some = function(value) {
        return {
            _: 'Maybe.some',
            value
        };
    }
    var bitsmap_get = function(bits, map) {
        for (var i = bits.length - 1; i >= 0; --i) {
            if (map._ !== 'BitsMap.new') {
                map = bits[i] === '0' ? map.lft : map.rgt;
            }
        }
        return map._ === 'BitsMap.new' ? maybe_none : map.val;
    }
    var bitsmap_set = function(bits, val, map, mode) {
        var res = {
            value: map
        };
        var key = 'value';
        var obj = res;
        for (var i = bits.length - 1; i >= 0; --i) {
            var map = obj[key];
            if (map._ === 'BitsMap.new') {
                obj[key] = {
                    _: 'BitsMap.tie',
                    val: maybe_none,
                    lft: bitsmap_new,
                    rgt: bitsmap_new
                };
            } else {
                obj[key] = {
                    _: 'BitsMap.tie',
                    val: map.val,
                    lft: map.lft,
                    rgt: map.rgt
                };
            }
            obj = obj[key];
            key = bits[i] === '0' ? 'lft' : 'rgt';
        }
        var map = obj[key];
        if (map._ === 'BitsMap.new') {
            var x = mode === 'del' ? maybe_none : {
                _: 'Maybe.some',
                value: val
            };
            obj[key] = {
                _: 'BitsMap.tie',
                val: x,
                lft: bitsmap_new,
                rgt: bitsmap_new
            };
        } else {
            var x = mode === 'set' ? {
                _: 'Maybe.some',
                value: val
            } : mode === 'del' ? maybe_none : map.val;
            obj[key] = {
                _: 'BitsMap.tie',
                val: x,
                lft: map.lft,
                rgt: map.rgt
            };
        }
        return res.value;
    };
    var list_for = list => nil => cons => {
        while (list._ !== 'List.nil') {
            nil = cons(list.head)(nil);
            list = list.tail;
        }
        return nil;
    };
    var list_length = list => {
        var len = 0;
        while (list._ === 'List.cons') {
            len += 1;
            list = list.tail;
        };
        return BigInt(len);
    };
    var nat_to_bits = n => {
        return n === 0n ? '' : n.toString(2);
    };
    var kind_name_to_bits = name => {
        const TABLE = {
            'A': '000000',
            'B': '100000',
            'C': '010000',
            'D': '110000',
            'E': '001000',
            'F': '101000',
            'G': '011000',
            'H': '111000',
            'I': '000100',
            'J': '100100',
            'K': '010100',
            'L': '110100',
            'M': '001100',
            'N': '101100',
            'O': '011100',
            'P': '111100',
            'Q': '000010',
            'R': '100010',
            'S': '010010',
            'T': '110010',
            'U': '001010',
            'V': '101010',
            'W': '011010',
            'X': '111010',
            'Y': '000110',
            'Z': '100110',
            'a': '010110',
            'b': '110110',
            'c': '001110',
            'd': '101110',
            'e': '011110',
            'f': '111110',
            'g': '000001',
            'h': '100001',
            'i': '010001',
            'j': '110001',
            'k': '001001',
            'l': '101001',
            'm': '011001',
            'n': '111001',
            'o': '000101',
            'p': '100101',
            'q': '010101',
            'r': '110101',
            's': '001101',
            't': '101101',
            'u': '011101',
            'v': '111101',
            'w': '000011',
            'x': '100011',
            'y': '010011',
            'z': '110011',
            '0': '001011',
            '1': '101011',
            '2': '011011',
            '3': '111011',
            '4': '000111',
            '5': '100111',
            '6': '010111',
            '7': '110111',
            '8': '001111',
            '9': '101111',
            '.': '011111',
            '_': '111111',
        }
        var a = '';
        for (var i = name.length - 1; i >= 0; --i) {
            a += TABLE[name[i]];
        }
        return a;
    };
    const inst_unit = x => x(null);
    const elim_unit = (x => {
        var $1 = (() => c0 => {
            var self = x;
            switch ("unit") {
                case 'unit':
                    var $0 = c0;
                    return $0;
            };
        })();
        return $1;
    });
    const inst_bool = x => x(true)(false);
    const elim_bool = (x => {
        var $4 = (() => c0 => c1 => {
            var self = x;
            if (self) {
                var $2 = c0;
                return $2;
            } else {
                var $3 = c1;
                return $3;
            };
        })();
        return $4;
    });
    const inst_nat = x => x(0n)(x0 => 1n + x0);
    const elim_nat = (x => {
        var $8 = (() => c0 => c1 => {
            var self = x;
            if (self === 0n) {
                var $5 = c0;
                return $5;
            } else {
                var $6 = (self - 1n);
                var $7 = c1($6);
                return $7;
            };
        })();
        return $8;
    });
    const inst_bits = x => x('')(x0 => x0 + '0')(x0 => x0 + '1');
    const elim_bits = (x => {
        var $14 = (() => c0 => c1 => c2 => {
            var self = x;
            switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                case 'o':
                    var $9 = self.slice(0, -1);
                    var $10 = c1($9);
                    return $10;
                case 'i':
                    var $11 = self.slice(0, -1);
                    var $12 = c2($11);
                    return $12;
                case 'e':
                    var $13 = c0;
                    return $13;
            };
        })();
        return $14;
    });
    const inst_u16 = x => x(x0 => word_to_u16(x0));
    const elim_u16 = (x => {
        var $17 = (() => c0 => {
            var self = x;
            switch ('u16') {
                case 'u16':
                    var $15 = u16_to_word(self);
                    var $16 = c0($15);
                    return $16;
            };
        })();
        return $17;
    });
    const inst_u32 = x => x(x0 => word_to_u32(x0));
    const elim_u32 = (x => {
        var $20 = (() => c0 => {
            var self = x;
            switch ('u32') {
                case 'u32':
                    var $18 = u32_to_word(self);
                    var $19 = c0($18);
                    return $19;
            };
        })();
        return $20;
    });
    const inst_string = x => x('')(x0 => x1 => (String.fromCharCode(x0) + x1));
    const elim_string = (x => {
        var $25 = (() => c0 => c1 => {
            var self = x;
            if (self.length === 0) {
                var $21 = c0;
                return $21;
            } else {
                var $22 = self.charCodeAt(0);
                var $23 = self.slice(1);
                var $24 = c1($22)($23);
                return $24;
            };
        })();
        return $25;
    });
    var run = (p) => {
        if (typeof window === 'undefined') {
            var rl = eval("require('readline')").createInterface({
                input: process.stdin,
                output: process.stdout,
                terminal: false
            });
            var fs = eval("require('fs')");
            var pc = eval("process");
            var ht = eval("require('http')");
            var hs = eval("require('https')");
        } else {
            var rl = {
                question: (x, f) => f(''),
                close: () => {}
            };
            var fs = {
                readFileSync: () => ''
            };
            var pc = {
                exit: () => {},
                argv: []
            };
            var ht = null;
            var hs = null;
        };
        return run_io({
            rl,
            fs,
            pc,
            ht,
            hs
        }, p).then((x) => {
            rl.close();
            return x;
        }).catch((e) => {
            rl.close();
            throw e;
        });
    };
    var set_file = (lib, param) => {
        var path = '';
        for (var i = 0; i < param.length && param[i] !== '='; ++i) {
            path += param[i];
        };
        var data = param.slice(i + 1);
        lib.fs.mkdirSync(path.split('/').slice(0, -1).join('/'), {
            recursive: true
        });
        lib.fs.writeFileSync(path, data);
        return '';
    };
    var del_file = (lib, param) => {
        try {
            lib.fs.unlinkSync(param);
            return '';
        } catch (e) {
            if (e.message.indexOf('EPERM') !== -1) {
                lib.fs.rmdirSync(param);
                return '';
            } else {
                throw e;
            }
        }
    };
    var get_file = (lib, param) => {
        return lib.fs.readFileSync(param, 'utf8');
    }
    var get_dir = (lib, param) => {
        return lib.fs.readdirSync(param).join(';');
    };
    var get_file_mtime = (lib, param) => {
        return String(lib.fs.statSync(param).mtime.getTime());
    };
    var request = (lib, param) => {
        if (typeof fetch === 'undefined') {
            return new Promise((res, err) => {
                (/^https/.test(param) ? lib.hs : lib.ht).get(param, r => {
                    let data = '';
                    r.on('data', chunk => {
                        data += chunk;
                    });
                    r.on('end', () => res(data));
                }).on('error', e => res(''));
            });
        } else {
            return fetch(param).then(res => res.text()).catch(e => '');
        }
    }
    var file_error = e => {
        if (e.message.indexOf('NOENT') !== -1) {
            return '';
        } else {
            throw e;
        }
    };
    var io_action = {
        print: async (lib, param) => {
            console.log(param);
            return '';
        },
        put_string: async (lib, param) => {
            process.stdout.write(param);
            return '';
        },
        get_file: async (lib, param) => {
            try {
                return get_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        set_file: async (lib, param) => {
            try {
                return set_file(lib, param)
            } catch (e) {
                return file_error(e);
            }
        },
        del_file: async (lib, param) => {
            try {
                return del_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_dir: async (lib, param) => {
            try {
                return get_dir(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_file_mtime: async (lib, param) => {
            try {
                return get_file_mtime(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        exit: async (lib, param) => {
            lib.pc.exit();
            return '';
        },
        request: async (lib, param) => {
            return request(lib, param);
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        get_line: async (lib, param) => {
            return await new Promise((res, err) => {
                lib.rl.question(param, (line) => res(line));
            });
        },
        get_args: async (lib, param) => {
            return lib.pc.argv[2] || '';
        },
    };
    var run_io = async (lib, io, depth = 0) => {
        switch (io._) {
            case 'IO.end':
                return Promise.resolve(io.value);
            case 'IO.ask':
                var action = io_action[io.query];
                var answer = await action(lib, io.param);
                return await run_io(lib, io.then(answer), depth + 1);
        }
    };

    function IO$(_A$1) {
        var $26 = null;
        return $26;
    };
    const IO = x0 => IO$(x0);

    function IO$ask$(_query$2, _param$3, _then$4) {
        var $27 = ({
            _: 'IO.ask',
            'query': _query$2,
            'param': _param$3,
            'then': _then$4
        });
        return $27;
    };
    const IO$ask = x0 => x1 => x2 => IO$ask$(x0, x1, x2);

    function IO$bind$(_a$3, _f$4) {
        var self = _a$3;
        switch (self._) {
            case 'IO.end':
                var $29 = self.value;
                var $30 = _f$4($29);
                var $28 = $30;
                break;
            case 'IO.ask':
                var $31 = self.query;
                var $32 = self.param;
                var $33 = self.then;
                var $34 = IO$ask$($31, $32, (_x$8 => {
                    var $35 = IO$bind$($33(_x$8), _f$4);
                    return $35;
                }));
                var $28 = $34;
                break;
        };
        return $28;
    };
    const IO$bind = x0 => x1 => IO$bind$(x0, x1);

    function IO$end$(_value$2) {
        var $36 = ({
            _: 'IO.end',
            'value': _value$2
        });
        return $36;
    };
    const IO$end = x0 => IO$end$(x0);

    function IO$monad$(_new$2) {
        var $37 = _new$2(IO$bind)(IO$end);
        return $37;
    };
    const IO$monad = x0 => IO$monad$(x0);

    function Maybe$(_A$1) {
        var $38 = null;
        return $38;
    };
    const Maybe = x0 => Maybe$(x0);

    function BitsMap$(_A$1) {
        var $39 = null;
        return $39;
    };
    const BitsMap = x0 => BitsMap$(x0);
    const Maybe$none = ({
        _: 'Maybe.none'
    });
    const BitsMap$get = a0 => a1 => (bitsmap_get(a0, a1));
    const Bits$o = a0 => (a0 + '0');
    const Bits$i = a0 => (a0 + '1');
    const Bool$true = true;
    const Bool$false = false;

    function Cmp$as_ltn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $41 = Bool$true;
                var $40 = $41;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $42 = Bool$false;
                var $40 = $42;
                break;
        };
        return $40;
    };
    const Cmp$as_ltn = x0 => Cmp$as_ltn$(x0);
    const Cmp$ltn = ({
        _: 'Cmp.ltn'
    });
    const Cmp$gtn = ({
        _: 'Cmp.gtn'
    });

    function Word$cmp$go$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $44 = self.pred;
                var $45 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $47 = self.pred;
                            var $48 = (_a$pred$10 => {
                                var $49 = Word$cmp$go$(_a$pred$10, $47, _c$4);
                                return $49;
                            });
                            var $46 = $48;
                            break;
                        case 'Word.i':
                            var $50 = self.pred;
                            var $51 = (_a$pred$10 => {
                                var $52 = Word$cmp$go$(_a$pred$10, $50, Cmp$ltn);
                                return $52;
                            });
                            var $46 = $51;
                            break;
                        case 'Word.e':
                            var $53 = (_a$pred$8 => {
                                var $54 = _c$4;
                                return $54;
                            });
                            var $46 = $53;
                            break;
                    };
                    var $46 = $46($44);
                    return $46;
                });
                var $43 = $45;
                break;
            case 'Word.i':
                var $55 = self.pred;
                var $56 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $58 = self.pred;
                            var $59 = (_a$pred$10 => {
                                var $60 = Word$cmp$go$(_a$pred$10, $58, Cmp$gtn);
                                return $60;
                            });
                            var $57 = $59;
                            break;
                        case 'Word.i':
                            var $61 = self.pred;
                            var $62 = (_a$pred$10 => {
                                var $63 = Word$cmp$go$(_a$pred$10, $61, _c$4);
                                return $63;
                            });
                            var $57 = $62;
                            break;
                        case 'Word.e':
                            var $64 = (_a$pred$8 => {
                                var $65 = _c$4;
                                return $65;
                            });
                            var $57 = $64;
                            break;
                    };
                    var $57 = $57($55);
                    return $57;
                });
                var $43 = $56;
                break;
            case 'Word.e':
                var $66 = (_b$5 => {
                    var $67 = _c$4;
                    return $67;
                });
                var $43 = $66;
                break;
        };
        var $43 = $43(_b$3);
        return $43;
    };
    const Word$cmp$go = x0 => x1 => x2 => Word$cmp$go$(x0, x1, x2);
    const Cmp$eql = ({
        _: 'Cmp.eql'
    });

    function Word$cmp$(_a$2, _b$3) {
        var $68 = Word$cmp$go$(_a$2, _b$3, Cmp$eql);
        return $68;
    };
    const Word$cmp = x0 => x1 => Word$cmp$(x0, x1);

    function Word$ltn$(_a$2, _b$3) {
        var $69 = Cmp$as_ltn$(Word$cmp$(_a$2, _b$3));
        return $69;
    };
    const Word$ltn = x0 => x1 => Word$ltn$(x0, x1);

    function Nat$succ$(_pred$1) {
        var $70 = 1n + _pred$1;
        return $70;
    };
    const Nat$succ = x0 => Nat$succ$(x0);
    const Nat$zero = 0n;
    const U16$ltn = a0 => a1 => (a0 < a1);

    function U16$new$(_value$1) {
        var $71 = word_to_u16(_value$1);
        return $71;
    };
    const U16$new = x0 => U16$new$(x0);

    function Nat$apply$(_n$2, _f$3, _x$4) {
        var Nat$apply$ = (_n$2, _f$3, _x$4) => ({
            ctr: 'TCO',
            arg: [_n$2, _f$3, _x$4]
        });
        var Nat$apply = _n$2 => _f$3 => _x$4 => Nat$apply$(_n$2, _f$3, _x$4);
        var arg = [_n$2, _f$3, _x$4];
        while (true) {
            let [_n$2, _f$3, _x$4] = arg;
            var R = (() => {
                var self = _n$2;
                if (self === 0n) {
                    var $72 = _x$4;
                    return $72;
                } else {
                    var $73 = (self - 1n);
                    var $74 = Nat$apply$($73, _f$3, _f$3(_x$4));
                    return $74;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$apply = x0 => x1 => x2 => Nat$apply$(x0, x1, x2);

    function Word$(_size$1) {
        var $75 = null;
        return $75;
    };
    const Word = x0 => Word$(x0);
    const Word$e = ({
        _: 'Word.e'
    });

    function Word$i$(_pred$2) {
        var $76 = ({
            _: 'Word.i',
            'pred': _pred$2
        });
        return $76;
    };
    const Word$i = x0 => Word$i$(x0);

    function Word$o$(_pred$2) {
        var $77 = ({
            _: 'Word.o',
            'pred': _pred$2
        });
        return $77;
    };
    const Word$o = x0 => Word$o$(x0);

    function Word$inc$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $79 = self.pred;
                var $80 = Word$i$($79);
                var $78 = $80;
                break;
            case 'Word.i':
                var $81 = self.pred;
                var $82 = Word$o$(Word$inc$($81));
                var $78 = $82;
                break;
            case 'Word.e':
                var $83 = Word$e;
                var $78 = $83;
                break;
        };
        return $78;
    };
    const Word$inc = x0 => Word$inc$(x0);

    function Word$zero$(_size$1) {
        var self = _size$1;
        if (self === 0n) {
            var $85 = Word$e;
            var $84 = $85;
        } else {
            var $86 = (self - 1n);
            var $87 = Word$o$(Word$zero$($86));
            var $84 = $87;
        };
        return $84;
    };
    const Word$zero = x0 => Word$zero$(x0);

    function Nat$to_word$(_size$1, _n$2) {
        var $88 = Nat$apply$(_n$2, Word$inc, Word$zero$(_size$1));
        return $88;
    };
    const Nat$to_word = x0 => x1 => Nat$to_word$(x0, x1);
    const Nat$to_u16 = a0 => (Number(a0) & 0xFFFF);

    function Kind$Name$to_bits$go$(_name$1, _end$2) {
        var self = _name$1;
        if (self.length === 0) {
            var $90 = _end$2;
            var $89 = $90;
        } else {
            var $91 = self.charCodeAt(0);
            var $92 = self.slice(1);
            var _x$5 = $91;
            var _O$6 = Bits$o;
            var _I$7 = Bits$i;
            var self = (_x$5 < 47);
            if (self) {
                var $94 = _I$7(_I$7(_I$7(_I$7(_I$7(_O$6((kind_name_to_bits($92))))))));
                var $93 = $94;
            } else {
                var self = (_x$5 < 58);
                if (self) {
                    var self = (_x$5 < 53);
                    if (self) {
                        var self = (_x$5 < 50);
                        if (self) {
                            var self = (_x$5 < 49);
                            if (self) {
                                var $99 = _I$7(_I$7(_O$6(_I$7(_O$6(_O$6((kind_name_to_bits($92))))))));
                                var $98 = $99;
                            } else {
                                var $100 = _I$7(_I$7(_O$6(_I$7(_O$6(_I$7((kind_name_to_bits($92))))))));
                                var $98 = $100;
                            };
                            var $97 = $98;
                        } else {
                            var self = (_x$5 < 51);
                            if (self) {
                                var $102 = _I$7(_I$7(_O$6(_I$7(_I$7(_O$6((kind_name_to_bits($92))))))));
                                var $101 = $102;
                            } else {
                                var self = (_x$5 < 52);
                                if (self) {
                                    var $104 = _I$7(_I$7(_O$6(_I$7(_I$7(_I$7((kind_name_to_bits($92))))))));
                                    var $103 = $104;
                                } else {
                                    var $105 = _I$7(_I$7(_I$7(_O$6(_O$6(_O$6((kind_name_to_bits($92))))))));
                                    var $103 = $105;
                                };
                                var $101 = $103;
                            };
                            var $97 = $101;
                        };
                        var $96 = $97;
                    } else {
                        var self = (_x$5 < 55);
                        if (self) {
                            var self = (_x$5 < 54);
                            if (self) {
                                var $108 = _I$7(_I$7(_I$7(_O$6(_O$6(_I$7((kind_name_to_bits($92))))))));
                                var $107 = $108;
                            } else {
                                var $109 = _I$7(_I$7(_I$7(_O$6(_I$7(_O$6((kind_name_to_bits($92))))))));
                                var $107 = $109;
                            };
                            var $106 = $107;
                        } else {
                            var self = (_x$5 < 56);
                            if (self) {
                                var $111 = _I$7(_I$7(_I$7(_O$6(_I$7(_I$7((kind_name_to_bits($92))))))));
                                var $110 = $111;
                            } else {
                                var self = (_x$5 < 57);
                                if (self) {
                                    var $113 = _I$7(_I$7(_I$7(_I$7(_O$6(_O$6((kind_name_to_bits($92))))))));
                                    var $112 = $113;
                                } else {
                                    var $114 = _I$7(_I$7(_I$7(_I$7(_O$6(_I$7((kind_name_to_bits($92))))))));
                                    var $112 = $114;
                                };
                                var $110 = $112;
                            };
                            var $106 = $110;
                        };
                        var $96 = $106;
                    };
                    var $95 = $96;
                } else {
                    var self = (_x$5 < 91);
                    if (self) {
                        var self = (_x$5 < 78);
                        if (self) {
                            var self = (_x$5 < 71);
                            if (self) {
                                var self = (_x$5 < 68);
                                if (self) {
                                    var self = (_x$5 < 66);
                                    if (self) {
                                        var $120 = _O$6(_O$6(_O$6(_O$6(_O$6(_O$6((kind_name_to_bits($92))))))));
                                        var $119 = $120;
                                    } else {
                                        var self = (_x$5 < 67);
                                        if (self) {
                                            var $122 = _O$6(_O$6(_O$6(_O$6(_O$6(_I$7((kind_name_to_bits($92))))))));
                                            var $121 = $122;
                                        } else {
                                            var $123 = _O$6(_O$6(_O$6(_O$6(_I$7(_O$6((kind_name_to_bits($92))))))));
                                            var $121 = $123;
                                        };
                                        var $119 = $121;
                                    };
                                    var $118 = $119;
                                } else {
                                    var self = (_x$5 < 69);
                                    if (self) {
                                        var $125 = _O$6(_O$6(_O$6(_O$6(_I$7(_I$7((kind_name_to_bits($92))))))));
                                        var $124 = $125;
                                    } else {
                                        var self = (_x$5 < 70);
                                        if (self) {
                                            var $127 = _O$6(_O$6(_O$6(_I$7(_O$6(_O$6((kind_name_to_bits($92))))))));
                                            var $126 = $127;
                                        } else {
                                            var $128 = _O$6(_O$6(_O$6(_I$7(_O$6(_I$7((kind_name_to_bits($92))))))));
                                            var $126 = $128;
                                        };
                                        var $124 = $126;
                                    };
                                    var $118 = $124;
                                };
                                var $117 = $118;
                            } else {
                                var self = (_x$5 < 74);
                                if (self) {
                                    var self = (_x$5 < 72);
                                    if (self) {
                                        var $131 = _O$6(_O$6(_O$6(_I$7(_I$7(_O$6((kind_name_to_bits($92))))))));
                                        var $130 = $131;
                                    } else {
                                        var self = (_x$5 < 73);
                                        if (self) {
                                            var $133 = _O$6(_O$6(_O$6(_I$7(_I$7(_I$7((kind_name_to_bits($92))))))));
                                            var $132 = $133;
                                        } else {
                                            var $134 = _O$6(_O$6(_I$7(_O$6(_O$6(_O$6((kind_name_to_bits($92))))))));
                                            var $132 = $134;
                                        };
                                        var $130 = $132;
                                    };
                                    var $129 = $130;
                                } else {
                                    var self = (_x$5 < 76);
                                    if (self) {
                                        var self = (_x$5 < 75);
                                        if (self) {
                                            var $137 = _O$6(_O$6(_I$7(_O$6(_O$6(_I$7((kind_name_to_bits($92))))))));
                                            var $136 = $137;
                                        } else {
                                            var $138 = _O$6(_O$6(_I$7(_O$6(_I$7(_O$6((kind_name_to_bits($92))))))));
                                            var $136 = $138;
                                        };
                                        var $135 = $136;
                                    } else {
                                        var self = (_x$5 < 77);
                                        if (self) {
                                            var $140 = _O$6(_O$6(_I$7(_O$6(_I$7(_I$7((kind_name_to_bits($92))))))));
                                            var $139 = $140;
                                        } else {
                                            var $141 = _O$6(_O$6(_I$7(_I$7(_O$6(_O$6((kind_name_to_bits($92))))))));
                                            var $139 = $141;
                                        };
                                        var $135 = $139;
                                    };
                                    var $129 = $135;
                                };
                                var $117 = $129;
                            };
                            var $116 = $117;
                        } else {
                            var self = (_x$5 < 84);
                            if (self) {
                                var self = (_x$5 < 81);
                                if (self) {
                                    var self = (_x$5 < 79);
                                    if (self) {
                                        var $145 = _O$6(_O$6(_I$7(_I$7(_O$6(_I$7((kind_name_to_bits($92))))))));
                                        var $144 = $145;
                                    } else {
                                        var self = (_x$5 < 80);
                                        if (self) {
                                            var $147 = _O$6(_O$6(_I$7(_I$7(_I$7(_O$6((kind_name_to_bits($92))))))));
                                            var $146 = $147;
                                        } else {
                                            var $148 = _O$6(_O$6(_I$7(_I$7(_I$7(_I$7((kind_name_to_bits($92))))))));
                                            var $146 = $148;
                                        };
                                        var $144 = $146;
                                    };
                                    var $143 = $144;
                                } else {
                                    var self = (_x$5 < 82);
                                    if (self) {
                                        var $150 = _O$6(_I$7(_O$6(_O$6(_O$6(_O$6((kind_name_to_bits($92))))))));
                                        var $149 = $150;
                                    } else {
                                        var self = (_x$5 < 83);
                                        if (self) {
                                            var $152 = _O$6(_I$7(_O$6(_O$6(_O$6(_I$7((kind_name_to_bits($92))))))));
                                            var $151 = $152;
                                        } else {
                                            var $153 = _O$6(_I$7(_O$6(_O$6(_I$7(_O$6((kind_name_to_bits($92))))))));
                                            var $151 = $153;
                                        };
                                        var $149 = $151;
                                    };
                                    var $143 = $149;
                                };
                                var $142 = $143;
                            } else {
                                var self = (_x$5 < 87);
                                if (self) {
                                    var self = (_x$5 < 85);
                                    if (self) {
                                        var $156 = _O$6(_I$7(_O$6(_O$6(_I$7(_I$7((kind_name_to_bits($92))))))));
                                        var $155 = $156;
                                    } else {
                                        var self = (_x$5 < 86);
                                        if (self) {
                                            var $158 = _O$6(_I$7(_O$6(_I$7(_O$6(_O$6((kind_name_to_bits($92))))))));
                                            var $157 = $158;
                                        } else {
                                            var $159 = _O$6(_I$7(_O$6(_I$7(_O$6(_I$7((kind_name_to_bits($92))))))));
                                            var $157 = $159;
                                        };
                                        var $155 = $157;
                                    };
                                    var $154 = $155;
                                } else {
                                    var self = (_x$5 < 89);
                                    if (self) {
                                        var self = (_x$5 < 88);
                                        if (self) {
                                            var $162 = _O$6(_I$7(_O$6(_I$7(_I$7(_O$6((kind_name_to_bits($92))))))));
                                            var $161 = $162;
                                        } else {
                                            var $163 = _O$6(_I$7(_O$6(_I$7(_I$7(_I$7((kind_name_to_bits($92))))))));
                                            var $161 = $163;
                                        };
                                        var $160 = $161;
                                    } else {
                                        var self = (_x$5 < 90);
                                        if (self) {
                                            var $165 = _O$6(_I$7(_I$7(_O$6(_O$6(_O$6((kind_name_to_bits($92))))))));
                                            var $164 = $165;
                                        } else {
                                            var $166 = _O$6(_I$7(_I$7(_O$6(_O$6(_I$7((kind_name_to_bits($92))))))));
                                            var $164 = $166;
                                        };
                                        var $160 = $164;
                                    };
                                    var $154 = $160;
                                };
                                var $142 = $154;
                            };
                            var $116 = $142;
                        };
                        var $115 = $116;
                    } else {
                        var self = (_x$5 < 96);
                        if (self) {
                            var $168 = _I$7(_I$7(_I$7(_I$7(_I$7(_I$7((kind_name_to_bits($92))))))));
                            var $167 = $168;
                        } else {
                            var self = (_x$5 < 110);
                            if (self) {
                                var self = (_x$5 < 103);
                                if (self) {
                                    var self = (_x$5 < 100);
                                    if (self) {
                                        var self = (_x$5 < 98);
                                        if (self) {
                                            var $173 = _O$6(_I$7(_I$7(_O$6(_I$7(_O$6((kind_name_to_bits($92))))))));
                                            var $172 = $173;
                                        } else {
                                            var self = (_x$5 < 99);
                                            if (self) {
                                                var $175 = _O$6(_I$7(_I$7(_O$6(_I$7(_I$7((kind_name_to_bits($92))))))));
                                                var $174 = $175;
                                            } else {
                                                var $176 = _O$6(_I$7(_I$7(_I$7(_O$6(_O$6((kind_name_to_bits($92))))))));
                                                var $174 = $176;
                                            };
                                            var $172 = $174;
                                        };
                                        var $171 = $172;
                                    } else {
                                        var self = (_x$5 < 101);
                                        if (self) {
                                            var $178 = _O$6(_I$7(_I$7(_I$7(_O$6(_I$7((kind_name_to_bits($92))))))));
                                            var $177 = $178;
                                        } else {
                                            var self = (_x$5 < 102);
                                            if (self) {
                                                var $180 = _O$6(_I$7(_I$7(_I$7(_I$7(_O$6((kind_name_to_bits($92))))))));
                                                var $179 = $180;
                                            } else {
                                                var $181 = _O$6(_I$7(_I$7(_I$7(_I$7(_I$7((kind_name_to_bits($92))))))));
                                                var $179 = $181;
                                            };
                                            var $177 = $179;
                                        };
                                        var $171 = $177;
                                    };
                                    var $170 = $171;
                                } else {
                                    var self = (_x$5 < 106);
                                    if (self) {
                                        var self = (_x$5 < 104);
                                        if (self) {
                                            var $184 = _I$7(_O$6(_O$6(_O$6(_O$6(_O$6((kind_name_to_bits($92))))))));
                                            var $183 = $184;
                                        } else {
                                            var self = (_x$5 < 105);
                                            if (self) {
                                                var $186 = _I$7(_O$6(_O$6(_O$6(_O$6(_I$7((kind_name_to_bits($92))))))));
                                                var $185 = $186;
                                            } else {
                                                var $187 = _I$7(_O$6(_O$6(_O$6(_I$7(_O$6((kind_name_to_bits($92))))))));
                                                var $185 = $187;
                                            };
                                            var $183 = $185;
                                        };
                                        var $182 = $183;
                                    } else {
                                        var self = (_x$5 < 108);
                                        if (self) {
                                            var self = (_x$5 < 107);
                                            if (self) {
                                                var $190 = _I$7(_O$6(_O$6(_O$6(_I$7(_I$7((kind_name_to_bits($92))))))));
                                                var $189 = $190;
                                            } else {
                                                var $191 = _I$7(_O$6(_O$6(_I$7(_O$6(_O$6((kind_name_to_bits($92))))))));
                                                var $189 = $191;
                                            };
                                            var $188 = $189;
                                        } else {
                                            var self = (_x$5 < 109);
                                            if (self) {
                                                var $193 = _I$7(_O$6(_O$6(_I$7(_O$6(_I$7((kind_name_to_bits($92))))))));
                                                var $192 = $193;
                                            } else {
                                                var $194 = _I$7(_O$6(_O$6(_I$7(_I$7(_O$6((kind_name_to_bits($92))))))));
                                                var $192 = $194;
                                            };
                                            var $188 = $192;
                                        };
                                        var $182 = $188;
                                    };
                                    var $170 = $182;
                                };
                                var $169 = $170;
                            } else {
                                var self = (_x$5 < 116);
                                if (self) {
                                    var self = (_x$5 < 113);
                                    if (self) {
                                        var self = (_x$5 < 111);
                                        if (self) {
                                            var $198 = _I$7(_O$6(_O$6(_I$7(_I$7(_I$7((kind_name_to_bits($92))))))));
                                            var $197 = $198;
                                        } else {
                                            var self = (_x$5 < 112);
                                            if (self) {
                                                var $200 = _I$7(_O$6(_I$7(_O$6(_O$6(_O$6((kind_name_to_bits($92))))))));
                                                var $199 = $200;
                                            } else {
                                                var $201 = _I$7(_O$6(_I$7(_O$6(_O$6(_I$7((kind_name_to_bits($92))))))));
                                                var $199 = $201;
                                            };
                                            var $197 = $199;
                                        };
                                        var $196 = $197;
                                    } else {
                                        var self = (_x$5 < 114);
                                        if (self) {
                                            var $203 = _I$7(_O$6(_I$7(_O$6(_I$7(_O$6((kind_name_to_bits($92))))))));
                                            var $202 = $203;
                                        } else {
                                            var self = (_x$5 < 115);
                                            if (self) {
                                                var $205 = _I$7(_O$6(_I$7(_O$6(_I$7(_I$7((kind_name_to_bits($92))))))));
                                                var $204 = $205;
                                            } else {
                                                var $206 = _I$7(_O$6(_I$7(_I$7(_O$6(_O$6((kind_name_to_bits($92))))))));
                                                var $204 = $206;
                                            };
                                            var $202 = $204;
                                        };
                                        var $196 = $202;
                                    };
                                    var $195 = $196;
                                } else {
                                    var self = (_x$5 < 119);
                                    if (self) {
                                        var self = (_x$5 < 117);
                                        if (self) {
                                            var $209 = _I$7(_O$6(_I$7(_I$7(_O$6(_I$7((kind_name_to_bits($92))))))));
                                            var $208 = $209;
                                        } else {
                                            var self = (_x$5 < 118);
                                            if (self) {
                                                var $211 = _I$7(_O$6(_I$7(_I$7(_I$7(_O$6((kind_name_to_bits($92))))))));
                                                var $210 = $211;
                                            } else {
                                                var $212 = _I$7(_O$6(_I$7(_I$7(_I$7(_I$7((kind_name_to_bits($92))))))));
                                                var $210 = $212;
                                            };
                                            var $208 = $210;
                                        };
                                        var $207 = $208;
                                    } else {
                                        var self = (_x$5 < 121);
                                        if (self) {
                                            var self = (_x$5 < 120);
                                            if (self) {
                                                var $215 = _I$7(_I$7(_O$6(_O$6(_O$6(_O$6((kind_name_to_bits($92))))))));
                                                var $214 = $215;
                                            } else {
                                                var $216 = _I$7(_I$7(_O$6(_O$6(_O$6(_I$7((kind_name_to_bits($92))))))));
                                                var $214 = $216;
                                            };
                                            var $213 = $214;
                                        } else {
                                            var self = (_x$5 < 122);
                                            if (self) {
                                                var $218 = _I$7(_I$7(_O$6(_O$6(_I$7(_O$6((kind_name_to_bits($92))))))));
                                                var $217 = $218;
                                            } else {
                                                var $219 = _I$7(_I$7(_O$6(_O$6(_I$7(_I$7((kind_name_to_bits($92))))))));
                                                var $217 = $219;
                                            };
                                            var $213 = $217;
                                        };
                                        var $207 = $213;
                                    };
                                    var $195 = $207;
                                };
                                var $169 = $195;
                            };
                            var $167 = $169;
                        };
                        var $115 = $167;
                    };
                    var $95 = $115;
                };
                var $93 = $95;
            };
            var $89 = $93;
        };
        return $89;
    };
    const Kind$Name$to_bits$go = x0 => x1 => Kind$Name$to_bits$go$(x0, x1);
    const Bits$e = '';
    const Kind$Name$to_bits = a0 => (kind_name_to_bits(a0));

    function Kind$Map$get$(_name$2, _map$3) {
        var $220 = (bitsmap_get((kind_name_to_bits(_name$2)), _map$3));
        return $220;
    };
    const Kind$Map$get = x0 => x1 => Kind$Map$get$(x0, x1);

    function Maybe$default$(_m$2, _a$3) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $222 = self.value;
                var $223 = $222;
                var $221 = $223;
                break;
            case 'Maybe.none':
                var $224 = _a$3;
                var $221 = $224;
                break;
        };
        return $221;
    };
    const Maybe$default = x0 => x1 => Maybe$default$(x0, x1);

    function Parser$State$new$(_err$1, _nam$2, _ini$3, _idx$4, _str$5) {
        var $225 = ({
            _: 'Parser.State.new',
            'err': _err$1,
            'nam': _nam$2,
            'ini': _ini$3,
            'idx': _idx$4,
            'str': _str$5
        });
        return $225;
    };
    const Parser$State$new = x0 => x1 => x2 => x3 => x4 => Parser$State$new$(x0, x1, x2, x3, x4);

    function Maybe$some$(_value$2) {
        var $226 = ({
            _: 'Maybe.some',
            'value': _value$2
        });
        return $226;
    };
    const Maybe$some = x0 => Maybe$some$(x0);

    function Parser$run$(_parser$2, _code$3) {
        var self = _parser$2(Parser$State$new$(Maybe$none, "", 0n, 0n, _code$3));
        switch (self._) {
            case 'Parser.Reply.value':
                var $228 = self.val;
                var $229 = Maybe$some$($228);
                var $227 = $229;
                break;
            case 'Parser.Reply.error':
                var $230 = Maybe$none;
                var $227 = $230;
                break;
        };
        return $227;
    };
    const Parser$run = x0 => x1 => Parser$run$(x0, x1);

    function Parser$Reply$(_V$1) {
        var $231 = null;
        return $231;
    };
    const Parser$Reply = x0 => Parser$Reply$(x0);

    function List$(_A$1) {
        var $232 = null;
        return $232;
    };
    const List = x0 => List$(x0);

    function Parser$Reply$error$(_err$2) {
        var $233 = ({
            _: 'Parser.Reply.error',
            'err': _err$2
        });
        return $233;
    };
    const Parser$Reply$error = x0 => Parser$Reply$error$(x0);
    const Nat$gtn = a0 => a1 => (a0 > a1);

    function Parser$Error$combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Parser.Error.new':
                var $235 = self.idx;
                var self = _b$2;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $237 = self.idx;
                        var self = ($235 > $237);
                        if (self) {
                            var $239 = _a$1;
                            var $238 = $239;
                        } else {
                            var $240 = _b$2;
                            var $238 = $240;
                        };
                        var $236 = $238;
                        break;
                };
                var $234 = $236;
                break;
        };
        return $234;
    };
    const Parser$Error$combine = x0 => x1 => Parser$Error$combine$(x0, x1);

    function Parser$Error$maybe_combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Maybe.some':
                var $242 = self.value;
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $244 = self.value;
                        var $245 = Maybe$some$(Parser$Error$combine$($242, $244));
                        var $243 = $245;
                        break;
                    case 'Maybe.none':
                        var $246 = _a$1;
                        var $243 = $246;
                        break;
                };
                var $241 = $243;
                break;
            case 'Maybe.none':
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.none':
                        var $248 = Maybe$none;
                        var $247 = $248;
                        break;
                    case 'Maybe.some':
                        var $249 = _b$2;
                        var $247 = $249;
                        break;
                };
                var $241 = $247;
                break;
        };
        return $241;
    };
    const Parser$Error$maybe_combine = x0 => x1 => Parser$Error$maybe_combine$(x0, x1);

    function Parser$Reply$value$(_pst$2, _val$3) {
        var $250 = ({
            _: 'Parser.Reply.value',
            'pst': _pst$2,
            'val': _val$3
        });
        return $250;
    };
    const Parser$Reply$value = x0 => x1 => Parser$Reply$value$(x0, x1);
    const List$nil = ({
        _: 'List.nil'
    });

    function List$cons$(_head$2, _tail$3) {
        var $251 = ({
            _: 'List.cons',
            'head': _head$2,
            'tail': _tail$3
        });
        return $251;
    };
    const List$cons = x0 => x1 => List$cons$(x0, x1);

    function Parser$many$go$(_parse$2, _values$3, _pst$4) {
        var Parser$many$go$ = (_parse$2, _values$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_parse$2, _values$3, _pst$4]
        });
        var Parser$many$go = _parse$2 => _values$3 => _pst$4 => Parser$many$go$(_parse$2, _values$3, _pst$4);
        var arg = [_parse$2, _values$3, _pst$4];
        while (true) {
            let [_parse$2, _values$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var self = _parse$2(_pst$4);
                        switch (self._) {
                            case 'Parser.Reply.value':
                                var $253 = self.pst;
                                var $254 = self.val;
                                var $255 = Parser$many$go$(_parse$2, (_xs$12 => {
                                    var $256 = _values$3(List$cons$($254, _xs$12));
                                    return $256;
                                }), $253);
                                var $252 = $255;
                                break;
                            case 'Parser.Reply.error':
                                var $257 = Parser$Reply$value$(_pst$4, _values$3(List$nil));
                                var $252 = $257;
                                break;
                        };
                        return $252;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$many$go = x0 => x1 => x2 => Parser$many$go$(x0, x1, x2);

    function Parser$many$(_parser$2) {
        var $258 = Parser$many$go(_parser$2)((_x$3 => {
            var $259 = _x$3;
            return $259;
        }));
        return $258;
    };
    const Parser$many = x0 => Parser$many$(x0);

    function Parser$many1$(_parser$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $261 = self.err;
                var _reply$9 = _parser$2(_pst$3);
                var self = _reply$9;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $263 = self.err;
                        var self = $261;
                        switch (self._) {
                            case 'Maybe.some':
                                var $265 = self.value;
                                var $266 = Parser$Reply$error$(Parser$Error$combine$($265, $263));
                                var $264 = $266;
                                break;
                            case 'Maybe.none':
                                var $267 = Parser$Reply$error$($263);
                                var $264 = $267;
                                break;
                        };
                        var $262 = $264;
                        break;
                    case 'Parser.Reply.value':
                        var $268 = self.pst;
                        var $269 = self.val;
                        var self = $268;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $271 = self.err;
                                var $272 = self.nam;
                                var $273 = self.ini;
                                var $274 = self.idx;
                                var $275 = self.str;
                                var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($261, $271), $272, $273, $274, $275);
                                var self = _reply$pst$17;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $277 = self.err;
                                        var _reply$23 = Parser$many$(_parser$2)(_reply$pst$17);
                                        var self = _reply$23;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $279 = self.err;
                                                var self = $277;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $281 = self.value;
                                                        var $282 = Parser$Reply$error$(Parser$Error$combine$($281, $279));
                                                        var $280 = $282;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $283 = Parser$Reply$error$($279);
                                                        var $280 = $283;
                                                        break;
                                                };
                                                var $278 = $280;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $284 = self.pst;
                                                var $285 = self.val;
                                                var self = $284;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $287 = self.err;
                                                        var $288 = self.nam;
                                                        var $289 = self.ini;
                                                        var $290 = self.idx;
                                                        var $291 = self.str;
                                                        var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($277, $287), $288, $289, $290, $291);
                                                        var $292 = Parser$Reply$value$(_reply$pst$31, List$cons$($269, $285));
                                                        var $286 = $292;
                                                        break;
                                                };
                                                var $278 = $286;
                                                break;
                                        };
                                        var $276 = $278;
                                        break;
                                };
                                var $270 = $276;
                                break;
                        };
                        var $262 = $270;
                        break;
                };
                var $260 = $262;
                break;
        };
        return $260;
    };
    const Parser$many1 = x0 => x1 => Parser$many1$(x0, x1);

    function Parser$Error$new$(_nam$1, _ini$2, _idx$3, _msg$4) {
        var $293 = ({
            _: 'Parser.Error.new',
            'nam': _nam$1,
            'ini': _ini$2,
            'idx': _idx$3,
            'msg': _msg$4
        });
        return $293;
    };
    const Parser$Error$new = x0 => x1 => x2 => x3 => Parser$Error$new$(x0, x1, x2, x3);

    function Parser$Reply$fail$(_nam$2, _ini$3, _idx$4, _msg$5) {
        var $294 = Parser$Reply$error$(Parser$Error$new$(_nam$2, _ini$3, _idx$4, _msg$5));
        return $294;
    };
    const Parser$Reply$fail = x0 => x1 => x2 => x3 => Parser$Reply$fail$(x0, x1, x2, x3);

    function Cmp$as_eql$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.gtn':
                var $296 = Bool$false;
                var $295 = $296;
                break;
            case 'Cmp.eql':
                var $297 = Bool$true;
                var $295 = $297;
                break;
        };
        return $295;
    };
    const Cmp$as_eql = x0 => Cmp$as_eql$(x0);

    function Word$eql$(_a$2, _b$3) {
        var $298 = Cmp$as_eql$(Word$cmp$(_a$2, _b$3));
        return $298;
    };
    const Word$eql = x0 => x1 => Word$eql$(x0, x1);
    const U16$eql = a0 => a1 => (a0 === a1);

    function Parser$digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $300 = self.err;
                var $301 = self.nam;
                var $302 = self.ini;
                var $303 = self.idx;
                var $304 = self.str;
                var self = $304;
                if (self.length === 0) {
                    var $306 = Parser$Reply$fail$($301, $302, $303, "Not a digit.");
                    var $305 = $306;
                } else {
                    var $307 = self.charCodeAt(0);
                    var $308 = self.slice(1);
                    var _pst$9 = Parser$State$new$($300, $301, $302, Nat$succ$($303), $308);
                    var self = ($307 === 48);
                    if (self) {
                        var $310 = Parser$Reply$value$(_pst$9, 0n);
                        var $309 = $310;
                    } else {
                        var self = ($307 === 49);
                        if (self) {
                            var $312 = Parser$Reply$value$(_pst$9, 1n);
                            var $311 = $312;
                        } else {
                            var self = ($307 === 50);
                            if (self) {
                                var $314 = Parser$Reply$value$(_pst$9, 2n);
                                var $313 = $314;
                            } else {
                                var self = ($307 === 51);
                                if (self) {
                                    var $316 = Parser$Reply$value$(_pst$9, 3n);
                                    var $315 = $316;
                                } else {
                                    var self = ($307 === 52);
                                    if (self) {
                                        var $318 = Parser$Reply$value$(_pst$9, 4n);
                                        var $317 = $318;
                                    } else {
                                        var self = ($307 === 53);
                                        if (self) {
                                            var $320 = Parser$Reply$value$(_pst$9, 5n);
                                            var $319 = $320;
                                        } else {
                                            var self = ($307 === 54);
                                            if (self) {
                                                var $322 = Parser$Reply$value$(_pst$9, 6n);
                                                var $321 = $322;
                                            } else {
                                                var self = ($307 === 55);
                                                if (self) {
                                                    var $324 = Parser$Reply$value$(_pst$9, 7n);
                                                    var $323 = $324;
                                                } else {
                                                    var self = ($307 === 56);
                                                    if (self) {
                                                        var $326 = Parser$Reply$value$(_pst$9, 8n);
                                                        var $325 = $326;
                                                    } else {
                                                        var self = ($307 === 57);
                                                        if (self) {
                                                            var $328 = Parser$Reply$value$(_pst$9, 9n);
                                                            var $327 = $328;
                                                        } else {
                                                            var $329 = Parser$Reply$fail$($301, $302, $303, "Not a digit.");
                                                            var $327 = $329;
                                                        };
                                                        var $325 = $327;
                                                    };
                                                    var $323 = $325;
                                                };
                                                var $321 = $323;
                                            };
                                            var $319 = $321;
                                        };
                                        var $317 = $319;
                                    };
                                    var $315 = $317;
                                };
                                var $313 = $315;
                            };
                            var $311 = $313;
                        };
                        var $309 = $311;
                    };
                    var $305 = $309;
                };
                var $299 = $305;
                break;
        };
        return $299;
    };
    const Parser$digit = x0 => Parser$digit$(x0);
    const Nat$add = a0 => a1 => (a0 + a1);
    const Nat$mul = a0 => a1 => (a0 * a1);

    function Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4) {
        var Nat$from_base$go$ = (_b$1, _ds$2, _p$3, _res$4) => ({
            ctr: 'TCO',
            arg: [_b$1, _ds$2, _p$3, _res$4]
        });
        var Nat$from_base$go = _b$1 => _ds$2 => _p$3 => _res$4 => Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4);
        var arg = [_b$1, _ds$2, _p$3, _res$4];
        while (true) {
            let [_b$1, _ds$2, _p$3, _res$4] = arg;
            var R = (() => {
                var self = _ds$2;
                switch (self._) {
                    case 'List.cons':
                        var $330 = self.head;
                        var $331 = self.tail;
                        var $332 = Nat$from_base$go$(_b$1, $331, (_b$1 * _p$3), (($330 * _p$3) + _res$4));
                        return $332;
                    case 'List.nil':
                        var $333 = _res$4;
                        return $333;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$from_base$go = x0 => x1 => x2 => x3 => Nat$from_base$go$(x0, x1, x2, x3);

    function List$reverse$go$(_xs$2, _res$3) {
        var List$reverse$go$ = (_xs$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_xs$2, _res$3]
        });
        var List$reverse$go = _xs$2 => _res$3 => List$reverse$go$(_xs$2, _res$3);
        var arg = [_xs$2, _res$3];
        while (true) {
            let [_xs$2, _res$3] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $334 = self.head;
                        var $335 = self.tail;
                        var $336 = List$reverse$go$($335, List$cons$($334, _res$3));
                        return $336;
                    case 'List.nil':
                        var $337 = _res$3;
                        return $337;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$reverse$go = x0 => x1 => List$reverse$go$(x0, x1);

    function List$reverse$(_xs$2) {
        var $338 = List$reverse$go$(_xs$2, List$nil);
        return $338;
    };
    const List$reverse = x0 => List$reverse$(x0);

    function Nat$from_base$(_base$1, _ds$2) {
        var $339 = Nat$from_base$go$(_base$1, List$reverse$(_ds$2), 1n, 0n);
        return $339;
    };
    const Nat$from_base = x0 => x1 => Nat$from_base$(x0, x1);

    function Parser$nat$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $341 = self.err;
                var _reply$7 = Parser$many1$(Parser$digit, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $343 = self.err;
                        var self = $341;
                        switch (self._) {
                            case 'Maybe.some':
                                var $345 = self.value;
                                var $346 = Parser$Reply$error$(Parser$Error$combine$($345, $343));
                                var $344 = $346;
                                break;
                            case 'Maybe.none':
                                var $347 = Parser$Reply$error$($343);
                                var $344 = $347;
                                break;
                        };
                        var $342 = $344;
                        break;
                    case 'Parser.Reply.value':
                        var $348 = self.pst;
                        var $349 = self.val;
                        var self = $348;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $351 = self.err;
                                var $352 = self.nam;
                                var $353 = self.ini;
                                var $354 = self.idx;
                                var $355 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($341, $351), $352, $353, $354, $355);
                                var $356 = Parser$Reply$value$(_reply$pst$15, Nat$from_base$(10n, $349));
                                var $350 = $356;
                                break;
                        };
                        var $342 = $350;
                        break;
                };
                var $340 = $342;
                break;
        };
        return $340;
    };
    const Parser$nat = x0 => Parser$nat$(x0);
    const Nat$read = a0 => (BigInt(a0));
    const IO$get_time = IO$ask$("get_time", "", (_time$1 => {
        var $357 = IO$end$((BigInt(_time$1)));
        return $357;
    }));

    function Kind$Synth$load$cached$is_loop$(_name$1, _defs$2) {
        var self = Kind$Map$get$(_name$1, _defs$2);
        switch (self._) {
            case 'Maybe.some':
                var $359 = self.value;
                var self = $359;
                switch (self._) {
                    case 'Kind.Def.new':
                        var $361 = self.stat;
                        var self = $361;
                        switch (self._) {
                            case 'Kind.Status.done':
                                var $363 = self.cached;
                                var $364 = $363;
                                var $362 = $364;
                                break;
                            case 'Kind.Status.init':
                            case 'Kind.Status.wait':
                            case 'Kind.Status.fail':
                                var $365 = Bool$false;
                                var $362 = $365;
                                break;
                        };
                        var $360 = $362;
                        break;
                };
                var $358 = $360;
                break;
            case 'Maybe.none':
                var $366 = Bool$false;
                var $358 = $366;
                break;
        };
        return $358;
    };
    const Kind$Synth$load$cached$is_loop = x0 => x1 => Kind$Synth$load$cached$is_loop$(x0, x1);

    function IO$get_file$(_name$1) {
        var $367 = IO$ask$("get_file", _name$1, (_file$2 => {
            var $368 = IO$end$(_file$2);
            return $368;
        }));
        return $367;
    };
    const IO$get_file = x0 => IO$get_file$(x0);

    function String$cons$(_head$1, _tail$2) {
        var $369 = (String.fromCharCode(_head$1) + _tail$2);
        return $369;
    };
    const String$cons = x0 => x1 => String$cons$(x0, x1);
    const String$concat = a0 => a1 => (a0 + a1);

    function Bits$hex$encode$(_x$1) {
        var self = _x$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $371 = self.slice(0, -1);
                var self = $371;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $373 = self.slice(0, -1);
                        var self = $373;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $375 = self.slice(0, -1);
                                var self = $375;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $377 = self.slice(0, -1);
                                        var $378 = ("0" + Bits$hex$encode$($377));
                                        var $376 = $378;
                                        break;
                                    case 'i':
                                        var $379 = self.slice(0, -1);
                                        var $380 = ("8" + Bits$hex$encode$($379));
                                        var $376 = $380;
                                        break;
                                    case 'e':
                                        var $381 = "0";
                                        var $376 = $381;
                                        break;
                                };
                                var $374 = $376;
                                break;
                            case 'i':
                                var $382 = self.slice(0, -1);
                                var self = $382;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $384 = self.slice(0, -1);
                                        var $385 = ("4" + Bits$hex$encode$($384));
                                        var $383 = $385;
                                        break;
                                    case 'i':
                                        var $386 = self.slice(0, -1);
                                        var $387 = ("c" + Bits$hex$encode$($386));
                                        var $383 = $387;
                                        break;
                                    case 'e':
                                        var $388 = "4";
                                        var $383 = $388;
                                        break;
                                };
                                var $374 = $383;
                                break;
                            case 'e':
                                var $389 = "0";
                                var $374 = $389;
                                break;
                        };
                        var $372 = $374;
                        break;
                    case 'i':
                        var $390 = self.slice(0, -1);
                        var self = $390;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $392 = self.slice(0, -1);
                                var self = $392;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $394 = self.slice(0, -1);
                                        var $395 = ("2" + Bits$hex$encode$($394));
                                        var $393 = $395;
                                        break;
                                    case 'i':
                                        var $396 = self.slice(0, -1);
                                        var $397 = ("a" + Bits$hex$encode$($396));
                                        var $393 = $397;
                                        break;
                                    case 'e':
                                        var $398 = "2";
                                        var $393 = $398;
                                        break;
                                };
                                var $391 = $393;
                                break;
                            case 'i':
                                var $399 = self.slice(0, -1);
                                var self = $399;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $401 = self.slice(0, -1);
                                        var $402 = ("6" + Bits$hex$encode$($401));
                                        var $400 = $402;
                                        break;
                                    case 'i':
                                        var $403 = self.slice(0, -1);
                                        var $404 = ("e" + Bits$hex$encode$($403));
                                        var $400 = $404;
                                        break;
                                    case 'e':
                                        var $405 = "6";
                                        var $400 = $405;
                                        break;
                                };
                                var $391 = $400;
                                break;
                            case 'e':
                                var $406 = "2";
                                var $391 = $406;
                                break;
                        };
                        var $372 = $391;
                        break;
                    case 'e':
                        var $407 = "0";
                        var $372 = $407;
                        break;
                };
                var $370 = $372;
                break;
            case 'i':
                var $408 = self.slice(0, -1);
                var self = $408;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $410 = self.slice(0, -1);
                        var self = $410;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $412 = self.slice(0, -1);
                                var self = $412;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $414 = self.slice(0, -1);
                                        var $415 = ("1" + Bits$hex$encode$($414));
                                        var $413 = $415;
                                        break;
                                    case 'i':
                                        var $416 = self.slice(0, -1);
                                        var $417 = ("9" + Bits$hex$encode$($416));
                                        var $413 = $417;
                                        break;
                                    case 'e':
                                        var $418 = "1";
                                        var $413 = $418;
                                        break;
                                };
                                var $411 = $413;
                                break;
                            case 'i':
                                var $419 = self.slice(0, -1);
                                var self = $419;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $421 = self.slice(0, -1);
                                        var $422 = ("5" + Bits$hex$encode$($421));
                                        var $420 = $422;
                                        break;
                                    case 'i':
                                        var $423 = self.slice(0, -1);
                                        var $424 = ("d" + Bits$hex$encode$($423));
                                        var $420 = $424;
                                        break;
                                    case 'e':
                                        var $425 = "5";
                                        var $420 = $425;
                                        break;
                                };
                                var $411 = $420;
                                break;
                            case 'e':
                                var $426 = "1";
                                var $411 = $426;
                                break;
                        };
                        var $409 = $411;
                        break;
                    case 'i':
                        var $427 = self.slice(0, -1);
                        var self = $427;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $429 = self.slice(0, -1);
                                var self = $429;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $431 = self.slice(0, -1);
                                        var $432 = ("3" + Bits$hex$encode$($431));
                                        var $430 = $432;
                                        break;
                                    case 'i':
                                        var $433 = self.slice(0, -1);
                                        var $434 = ("b" + Bits$hex$encode$($433));
                                        var $430 = $434;
                                        break;
                                    case 'e':
                                        var $435 = "3";
                                        var $430 = $435;
                                        break;
                                };
                                var $428 = $430;
                                break;
                            case 'i':
                                var $436 = self.slice(0, -1);
                                var self = $436;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $438 = self.slice(0, -1);
                                        var $439 = ("7" + Bits$hex$encode$($438));
                                        var $437 = $439;
                                        break;
                                    case 'i':
                                        var $440 = self.slice(0, -1);
                                        var $441 = ("f" + Bits$hex$encode$($440));
                                        var $437 = $441;
                                        break;
                                    case 'e':
                                        var $442 = "7";
                                        var $437 = $442;
                                        break;
                                };
                                var $428 = $437;
                                break;
                            case 'e':
                                var $443 = "3";
                                var $428 = $443;
                                break;
                        };
                        var $409 = $428;
                        break;
                    case 'e':
                        var $444 = "1";
                        var $409 = $444;
                        break;
                };
                var $370 = $409;
                break;
            case 'e':
                var $445 = "";
                var $370 = $445;
                break;
        };
        return $370;
    };
    const Bits$hex$encode = x0 => Bits$hex$encode$(x0);

    function Kind$Synth$load$cached$name$(_name$1) {
        var $446 = (".cache/" + Bits$hex$encode$((kind_name_to_bits(_name$1))));
        return $446;
    };
    const Kind$Synth$load$cached$name = x0 => Kind$Synth$load$cached$name$(x0);

    function Kind$Synth$load$cached$get_file$(_name$1) {
        var $447 = IO$get_file$(Kind$Synth$load$cached$name$(_name$1));
        return $447;
    };
    const Kind$Synth$load$cached$get_file = x0 => Kind$Synth$load$cached$get_file$(x0);
    const Bool$not = a0 => (!a0);

    function String$is_empty$(_str$1) {
        var self = _str$1;
        if (self.length === 0) {
            var $449 = Bool$true;
            var $448 = $449;
        } else {
            var $450 = self.charCodeAt(0);
            var $451 = self.slice(1);
            var $452 = Bool$false;
            var $448 = $452;
        };
        return $448;
    };
    const String$is_empty = x0 => String$is_empty$(x0);

    function IO$get_file_mtime$(_name$1) {
        var $453 = IO$ask$("get_file_mtime", _name$1, (_file$2 => {
            var $454 = IO$end$(_file$2);
            return $454;
        }));
        return $453;
    };
    const IO$get_file_mtime = x0 => IO$get_file_mtime$(x0);
    const Bool$and = a0 => a1 => (a0 && a1);
    const String$eql = a0 => a1 => (a0 === a1);

    function Pair$new$(_fst$3, _snd$4) {
        var $455 = ({
            _: 'Pair.new',
            'fst': _fst$3,
            'snd': _snd$4
        });
        return $455;
    };
    const Pair$new = x0 => x1 => Pair$new$(x0, x1);

    function Maybe$bind$(_m$3, _f$4) {
        var self = _m$3;
        switch (self._) {
            case 'Maybe.some':
                var $457 = self.value;
                var $458 = _f$4($457);
                var $456 = $458;
                break;
            case 'Maybe.none':
                var $459 = Maybe$none;
                var $456 = $459;
                break;
        };
        return $456;
    };
    const Maybe$bind = x0 => x1 => Maybe$bind$(x0, x1);

    function Maybe$monad$(_new$2) {
        var $460 = _new$2(Maybe$bind)(Maybe$some);
        return $460;
    };
    const Maybe$monad = x0 => Maybe$monad$(x0);

    function Pair$(_A$1, _B$2) {
        var $461 = null;
        return $461;
    };
    const Pair = x0 => x1 => Pair$(x0, x1);
    const Unit$new = null;
    const Bool$or = a0 => a1 => (a0 || a1);

    function Kind$Core$read$spaces$(_code$1) {
        var Kind$Core$read$spaces$ = (_code$1) => ({
            ctr: 'TCO',
            arg: [_code$1]
        });
        var Kind$Core$read$spaces = _code$1 => Kind$Core$read$spaces$(_code$1);
        var arg = [_code$1];
        while (true) {
            let [_code$1] = arg;
            var R = (() => {
                var self = _code$1;
                if (self.length === 0) {
                    var $462 = Pair$new$(_code$1, Unit$new);
                    return $462;
                } else {
                    var $463 = self.charCodeAt(0);
                    var $464 = self.slice(1);
                    var _is_space$4 = (($463 === 32) || (($463 === 10) || (($463 === 13) || (($463 === 9) || (($463 === 11) || (($463 === 12) || Bool$false))))));
                    var self = _is_space$4;
                    if (self) {
                        var $466 = Kind$Core$read$spaces$($464);
                        var $465 = $466;
                    } else {
                        var $467 = Pair$new$(_code$1, Unit$new);
                        var $465 = $467;
                    };
                    return $465;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$read$spaces = x0 => Kind$Core$read$spaces$(x0);

    function Kind$Term$ref$(_name$1) {
        var $468 = ({
            _: 'Kind.Term.ref',
            'name': _name$1
        });
        return $468;
    };
    const Kind$Term$ref = x0 => Kind$Term$ref$(x0);

    function Char$eql$(_a$1, _b$2) {
        var $469 = (_a$1 === _b$2);
        return $469;
    };
    const Char$eql = x0 => x1 => Char$eql$(x0, x1);
    const Kind$Term$typ = ({
        _: 'Kind.Term.typ'
    });

    function Cmp$as_gte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $471 = Bool$false;
                var $470 = $471;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $472 = Bool$true;
                var $470 = $472;
                break;
        };
        return $470;
    };
    const Cmp$as_gte = x0 => Cmp$as_gte$(x0);

    function Word$gte$(_a$2, _b$3) {
        var $473 = Cmp$as_gte$(Word$cmp$(_a$2, _b$3));
        return $473;
    };
    const Word$gte = x0 => x1 => Word$gte$(x0, x1);
    const U16$gte = a0 => a1 => (a0 >= a1);

    function Cmp$as_lte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $475 = Bool$true;
                var $474 = $475;
                break;
            case 'Cmp.gtn':
                var $476 = Bool$false;
                var $474 = $476;
                break;
        };
        return $474;
    };
    const Cmp$as_lte = x0 => Cmp$as_lte$(x0);

    function Word$lte$(_a$2, _b$3) {
        var $477 = Cmp$as_lte$(Word$cmp$(_a$2, _b$3));
        return $477;
    };
    const Word$lte = x0 => x1 => Word$lte$(x0, x1);
    const U16$lte = a0 => a1 => (a0 <= a1);

    function Kind$Core$read$is_name$(_chr$1) {
        var $478 = (((_chr$1 >= 46) && (_chr$1 <= 47)) || (((_chr$1 >= 48) && (_chr$1 < 58)) || (((_chr$1 >= 65) && (_chr$1 < 91)) || (((_chr$1 >= 95) && (_chr$1 < 96)) || (((_chr$1 >= 97) && (_chr$1 < 123)) || Bool$false)))));
        return $478;
    };
    const Kind$Core$read$is_name = x0 => Kind$Core$read$is_name$(x0);

    function Kind$Core$read$name$(_code$1) {
        var self = _code$1;
        if (self.length === 0) {
            var $480 = Pair$new$(_code$1, "");
            var $479 = $480;
        } else {
            var $481 = self.charCodeAt(0);
            var $482 = self.slice(1);
            var self = Kind$Core$read$is_name$($481);
            if (self) {
                var self = Kind$Core$read$name$($482);
                switch (self._) {
                    case 'Pair.new':
                        var $485 = self.fst;
                        var $486 = self.snd;
                        var $487 = Pair$new$($485, String$cons$($481, $486));
                        var $484 = $487;
                        break;
                };
                var $483 = $484;
            } else {
                var $488 = Pair$new$(_code$1, "");
                var $483 = $488;
            };
            var $479 = $483;
        };
        return $479;
    };
    const Kind$Core$read$name = x0 => Kind$Core$read$name$(x0);

    function Kind$Core$read$char$(_code$1, _chr$2) {
        var self = Kind$Core$read$spaces$(_code$1);
        switch (self._) {
            case 'Pair.new':
                var $490 = self.fst;
                var self = $490;
                if (self.length === 0) {
                    var $492 = Pair$new$("", Unit$new);
                    var $491 = $492;
                } else {
                    var $493 = self.charCodeAt(0);
                    var $494 = self.slice(1);
                    var self = ($493 === _chr$2);
                    if (self) {
                        var $496 = Pair$new$($494, Unit$new);
                        var $495 = $496;
                    } else {
                        var $497 = Pair$new$("", Unit$new);
                        var $495 = $497;
                    };
                    var $491 = $495;
                };
                var $489 = $491;
                break;
        };
        return $489;
    };
    const Kind$Core$read$char = x0 => x1 => Kind$Core$read$char$(x0, x1);

    function Kind$Term$all$(_eras$1, _self$2, _name$3, _xtyp$4, _body$5) {
        var $498 = ({
            _: 'Kind.Term.all',
            'eras': _eras$1,
            'self': _self$2,
            'name': _name$3,
            'xtyp': _xtyp$4,
            'body': _body$5
        });
        return $498;
    };
    const Kind$Term$all = x0 => x1 => x2 => x3 => x4 => Kind$Term$all$(x0, x1, x2, x3, x4);

    function Kind$Term$lam$(_name$1, _body$2) {
        var $499 = ({
            _: 'Kind.Term.lam',
            'name': _name$1,
            'body': _body$2
        });
        return $499;
    };
    const Kind$Term$lam = x0 => x1 => Kind$Term$lam$(x0, x1);

    function Kind$Term$app$(_func$1, _argm$2) {
        var $500 = ({
            _: 'Kind.Term.app',
            'func': _func$1,
            'argm': _argm$2
        });
        return $500;
    };
    const Kind$Term$app = x0 => x1 => Kind$Term$app$(x0, x1);

    function Kind$Term$let$(_name$1, _expr$2, _body$3) {
        var $501 = ({
            _: 'Kind.Term.let',
            'name': _name$1,
            'expr': _expr$2,
            'body': _body$3
        });
        return $501;
    };
    const Kind$Term$let = x0 => x1 => x2 => Kind$Term$let$(x0, x1, x2);

    function Kind$Term$def$(_name$1, _expr$2, _body$3) {
        var $502 = ({
            _: 'Kind.Term.def',
            'name': _name$1,
            'expr': _expr$2,
            'body': _body$3
        });
        return $502;
    };
    const Kind$Term$def = x0 => x1 => x2 => Kind$Term$def$(x0, x1, x2);

    function Kind$Term$ann$(_done$1, _term$2, _type$3) {
        var $503 = ({
            _: 'Kind.Term.ann',
            'done': _done$1,
            'term': _term$2,
            'type': _type$3
        });
        return $503;
    };
    const Kind$Term$ann = x0 => x1 => x2 => Kind$Term$ann$(x0, x1, x2);

    function String$starts_with$(_xs$1, _match$2) {
        var String$starts_with$ = (_xs$1, _match$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _match$2]
        });
        var String$starts_with = _xs$1 => _match$2 => String$starts_with$(_xs$1, _match$2);
        var arg = [_xs$1, _match$2];
        while (true) {
            let [_xs$1, _match$2] = arg;
            var R = (() => {
                var self = _match$2;
                if (self.length === 0) {
                    var $504 = Bool$true;
                    return $504;
                } else {
                    var $505 = self.charCodeAt(0);
                    var $506 = self.slice(1);
                    var self = _xs$1;
                    if (self.length === 0) {
                        var $508 = Bool$false;
                        var $507 = $508;
                    } else {
                        var $509 = self.charCodeAt(0);
                        var $510 = self.slice(1);
                        var self = Char$eql$($505, $509);
                        if (self) {
                            var $512 = String$starts_with$($510, $506);
                            var $511 = $512;
                        } else {
                            var $513 = Bool$false;
                            var $511 = $513;
                        };
                        var $507 = $511;
                    };
                    return $507;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$starts_with = x0 => x1 => String$starts_with$(x0, x1);
    const String$nil = '';

    function String$drop$(_n$1, _xs$2) {
        var String$drop$ = (_n$1, _xs$2) => ({
            ctr: 'TCO',
            arg: [_n$1, _xs$2]
        });
        var String$drop = _n$1 => _xs$2 => String$drop$(_n$1, _xs$2);
        var arg = [_n$1, _xs$2];
        while (true) {
            let [_n$1, _xs$2] = arg;
            var R = (() => {
                var self = _n$1;
                if (self === 0n) {
                    var $514 = _xs$2;
                    return $514;
                } else {
                    var $515 = (self - 1n);
                    var self = _xs$2;
                    if (self.length === 0) {
                        var $517 = String$nil;
                        var $516 = $517;
                    } else {
                        var $518 = self.charCodeAt(0);
                        var $519 = self.slice(1);
                        var $520 = String$drop$($515, $519);
                        var $516 = $520;
                    };
                    return $516;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$drop = x0 => x1 => String$drop$(x0, x1);

    function Char$is_hex$(_chr$1) {
        var $521 = (((_chr$1 >= 48) && (_chr$1 <= 57)) || (((_chr$1 >= 97) && (_chr$1 <= 102)) || (((_chr$1 >= 65) && (_chr$1 <= 70)) || Bool$false)));
        return $521;
    };
    const Char$is_hex = x0 => Char$is_hex$(x0);

    function Word$adder$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $523 = self.pred;
                var $524 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $526 = self.pred;
                            var $527 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $529 = Word$i$(Word$adder$(_a$pred$10, $526, Bool$false));
                                    var $528 = $529;
                                } else {
                                    var $530 = Word$o$(Word$adder$(_a$pred$10, $526, Bool$false));
                                    var $528 = $530;
                                };
                                return $528;
                            });
                            var $525 = $527;
                            break;
                        case 'Word.i':
                            var $531 = self.pred;
                            var $532 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $534 = Word$o$(Word$adder$(_a$pred$10, $531, Bool$true));
                                    var $533 = $534;
                                } else {
                                    var $535 = Word$i$(Word$adder$(_a$pred$10, $531, Bool$false));
                                    var $533 = $535;
                                };
                                return $533;
                            });
                            var $525 = $532;
                            break;
                        case 'Word.e':
                            var $536 = (_a$pred$8 => {
                                var $537 = Word$e;
                                return $537;
                            });
                            var $525 = $536;
                            break;
                    };
                    var $525 = $525($523);
                    return $525;
                });
                var $522 = $524;
                break;
            case 'Word.i':
                var $538 = self.pred;
                var $539 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $541 = self.pred;
                            var $542 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $544 = Word$o$(Word$adder$(_a$pred$10, $541, Bool$true));
                                    var $543 = $544;
                                } else {
                                    var $545 = Word$i$(Word$adder$(_a$pred$10, $541, Bool$false));
                                    var $543 = $545;
                                };
                                return $543;
                            });
                            var $540 = $542;
                            break;
                        case 'Word.i':
                            var $546 = self.pred;
                            var $547 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $549 = Word$i$(Word$adder$(_a$pred$10, $546, Bool$true));
                                    var $548 = $549;
                                } else {
                                    var $550 = Word$o$(Word$adder$(_a$pred$10, $546, Bool$true));
                                    var $548 = $550;
                                };
                                return $548;
                            });
                            var $540 = $547;
                            break;
                        case 'Word.e':
                            var $551 = (_a$pred$8 => {
                                var $552 = Word$e;
                                return $552;
                            });
                            var $540 = $551;
                            break;
                    };
                    var $540 = $540($538);
                    return $540;
                });
                var $522 = $539;
                break;
            case 'Word.e':
                var $553 = (_b$5 => {
                    var $554 = Word$e;
                    return $554;
                });
                var $522 = $553;
                break;
        };
        var $522 = $522(_b$3);
        return $522;
    };
    const Word$adder = x0 => x1 => x2 => Word$adder$(x0, x1, x2);

    function Word$add$(_a$2, _b$3) {
        var $555 = Word$adder$(_a$2, _b$3, Bool$false);
        return $555;
    };
    const Word$add = x0 => x1 => Word$add$(x0, x1);
    const U16$add = a0 => a1 => ((a0 + a1) & 0xFFFF);

    function Word$shift_left$one$go$(_word$2, _prev$3) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $557 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $559 = Word$i$(Word$shift_left$one$go$($557, Bool$false));
                    var $558 = $559;
                } else {
                    var $560 = Word$o$(Word$shift_left$one$go$($557, Bool$false));
                    var $558 = $560;
                };
                var $556 = $558;
                break;
            case 'Word.i':
                var $561 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $563 = Word$i$(Word$shift_left$one$go$($561, Bool$true));
                    var $562 = $563;
                } else {
                    var $564 = Word$o$(Word$shift_left$one$go$($561, Bool$true));
                    var $562 = $564;
                };
                var $556 = $562;
                break;
            case 'Word.e':
                var $565 = Word$e;
                var $556 = $565;
                break;
        };
        return $556;
    };
    const Word$shift_left$one$go = x0 => x1 => Word$shift_left$one$go$(x0, x1);

    function Word$shift_left$one$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $567 = self.pred;
                var $568 = Word$o$(Word$shift_left$one$go$($567, Bool$false));
                var $566 = $568;
                break;
            case 'Word.i':
                var $569 = self.pred;
                var $570 = Word$o$(Word$shift_left$one$go$($569, Bool$true));
                var $566 = $570;
                break;
            case 'Word.e':
                var $571 = Word$e;
                var $566 = $571;
                break;
        };
        return $566;
    };
    const Word$shift_left$one = x0 => Word$shift_left$one$(x0);

    function Word$shift_left$(_n$2, _value$3) {
        var Word$shift_left$ = (_n$2, _value$3) => ({
            ctr: 'TCO',
            arg: [_n$2, _value$3]
        });
        var Word$shift_left = _n$2 => _value$3 => Word$shift_left$(_n$2, _value$3);
        var arg = [_n$2, _value$3];
        while (true) {
            let [_n$2, _value$3] = arg;
            var R = (() => {
                var self = _n$2;
                if (self === 0n) {
                    var $572 = _value$3;
                    return $572;
                } else {
                    var $573 = (self - 1n);
                    var $574 = Word$shift_left$($573, Word$shift_left$one$(_value$3));
                    return $574;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$shift_left = x0 => x1 => Word$shift_left$(x0, x1);

    function Word$mul$go$(_a$3, _b$4, _acc$5) {
        var Word$mul$go$ = (_a$3, _b$4, _acc$5) => ({
            ctr: 'TCO',
            arg: [_a$3, _b$4, _acc$5]
        });
        var Word$mul$go = _a$3 => _b$4 => _acc$5 => Word$mul$go$(_a$3, _b$4, _acc$5);
        var arg = [_a$3, _b$4, _acc$5];
        while (true) {
            let [_a$3, _b$4, _acc$5] = arg;
            var R = (() => {
                var self = _a$3;
                switch (self._) {
                    case 'Word.o':
                        var $575 = self.pred;
                        var $576 = Word$mul$go$($575, Word$shift_left$(1n, _b$4), _acc$5);
                        return $576;
                    case 'Word.i':
                        var $577 = self.pred;
                        var $578 = Word$mul$go$($577, Word$shift_left$(1n, _b$4), Word$add$(_b$4, _acc$5));
                        return $578;
                    case 'Word.e':
                        var $579 = _acc$5;
                        return $579;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$mul$go = x0 => x1 => x2 => Word$mul$go$(x0, x1, x2);

    function Word$to_zero$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $581 = self.pred;
                var $582 = Word$o$(Word$to_zero$($581));
                var $580 = $582;
                break;
            case 'Word.i':
                var $583 = self.pred;
                var $584 = Word$o$(Word$to_zero$($583));
                var $580 = $584;
                break;
            case 'Word.e':
                var $585 = Word$e;
                var $580 = $585;
                break;
        };
        return $580;
    };
    const Word$to_zero = x0 => Word$to_zero$(x0);

    function Word$mul$(_a$2, _b$3) {
        var $586 = Word$mul$go$(_a$2, _b$3, Word$to_zero$(_a$2));
        return $586;
    };
    const Word$mul = x0 => x1 => Word$mul$(x0, x1);
    const U16$mul = a0 => a1 => ((a0 * a1) & 0xFFFF);
    const U16$inc = a0 => ((a0 + 1) & 0xFFFF);

    function Word$subber$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $588 = self.pred;
                var $589 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $591 = self.pred;
                            var $592 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $594 = Word$i$(Word$subber$(_a$pred$10, $591, Bool$true));
                                    var $593 = $594;
                                } else {
                                    var $595 = Word$o$(Word$subber$(_a$pred$10, $591, Bool$false));
                                    var $593 = $595;
                                };
                                return $593;
                            });
                            var $590 = $592;
                            break;
                        case 'Word.i':
                            var $596 = self.pred;
                            var $597 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $599 = Word$o$(Word$subber$(_a$pred$10, $596, Bool$true));
                                    var $598 = $599;
                                } else {
                                    var $600 = Word$i$(Word$subber$(_a$pred$10, $596, Bool$true));
                                    var $598 = $600;
                                };
                                return $598;
                            });
                            var $590 = $597;
                            break;
                        case 'Word.e':
                            var $601 = (_a$pred$8 => {
                                var $602 = Word$e;
                                return $602;
                            });
                            var $590 = $601;
                            break;
                    };
                    var $590 = $590($588);
                    return $590;
                });
                var $587 = $589;
                break;
            case 'Word.i':
                var $603 = self.pred;
                var $604 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $606 = self.pred;
                            var $607 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $609 = Word$o$(Word$subber$(_a$pred$10, $606, Bool$false));
                                    var $608 = $609;
                                } else {
                                    var $610 = Word$i$(Word$subber$(_a$pred$10, $606, Bool$false));
                                    var $608 = $610;
                                };
                                return $608;
                            });
                            var $605 = $607;
                            break;
                        case 'Word.i':
                            var $611 = self.pred;
                            var $612 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $614 = Word$i$(Word$subber$(_a$pred$10, $611, Bool$true));
                                    var $613 = $614;
                                } else {
                                    var $615 = Word$o$(Word$subber$(_a$pred$10, $611, Bool$false));
                                    var $613 = $615;
                                };
                                return $613;
                            });
                            var $605 = $612;
                            break;
                        case 'Word.e':
                            var $616 = (_a$pred$8 => {
                                var $617 = Word$e;
                                return $617;
                            });
                            var $605 = $616;
                            break;
                    };
                    var $605 = $605($603);
                    return $605;
                });
                var $587 = $604;
                break;
            case 'Word.e':
                var $618 = (_b$5 => {
                    var $619 = Word$e;
                    return $619;
                });
                var $587 = $618;
                break;
        };
        var $587 = $587(_b$3);
        return $587;
    };
    const Word$subber = x0 => x1 => x2 => Word$subber$(x0, x1, x2);

    function Word$sub$(_a$2, _b$3) {
        var $620 = Word$subber$(_a$2, _b$3, Bool$false);
        return $620;
    };
    const Word$sub = x0 => x1 => Word$sub$(x0, x1);
    const U16$sub = a0 => a1 => ((a0 - a1) & 0xFFFF);
    const U16$zero = U16$new$(Word$zero$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$zero))))))))))))))))));

    function Char$hex_value16$(_chr$1) {
        var self = ((_chr$1 >= 48) && (_chr$1 <= 57));
        if (self) {
            var $622 = ((_chr$1 - 48) & 0xFFFF);
            var $621 = $622;
        } else {
            var self = ((_chr$1 >= 97) && (_chr$1 <= 102));
            if (self) {
                var $624 = (_x0$2 => {
                    var $625 = ((((((((((((((((((((_x0$2 + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF);
                    return $625;
                })(((_chr$1 - 97) & 0xFFFF));
                var $623 = $624;
            } else {
                var self = ((_chr$1 >= 65) && (_chr$1 <= 70));
                if (self) {
                    var $627 = (_x0$2 => {
                        var $628 = ((((((((((((((((((((_x0$2 + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF);
                        return $628;
                    })(((_chr$1 - 65) & 0xFFFF));
                    var $626 = $627;
                } else {
                    var $629 = U16$zero;
                    var $626 = $629;
                };
                var $623 = $626;
            };
            var $621 = $623;
        };
        return $621;
    };
    const Char$hex_value16 = x0 => Char$hex_value16$(x0);

    function Kind$Core$read$u16$(_code$1, _u16$2) {
        var Kind$Core$read$u16$ = (_code$1, _u16$2) => ({
            ctr: 'TCO',
            arg: [_code$1, _u16$2]
        });
        var Kind$Core$read$u16 = _code$1 => _u16$2 => Kind$Core$read$u16$(_code$1, _u16$2);
        var arg = [_code$1, _u16$2];
        while (true) {
            let [_code$1, _u16$2] = arg;
            var R = (() => {
                var self = _code$1;
                if (self.length === 0) {
                    var $630 = Pair$new$(_code$1, _u16$2);
                    return $630;
                } else {
                    var $631 = self.charCodeAt(0);
                    var $632 = self.slice(1);
                    var self = Char$is_hex$($631);
                    if (self) {
                        var _u16$5 = ((((_u16$2 * 16) & 0xFFFF) + Char$hex_value16$($631)) & 0xFFFF);
                        var $634 = Kind$Core$read$u16$($632, _u16$5);
                        var $633 = $634;
                    } else {
                        var $635 = Pair$new$(_code$1, _u16$2);
                        var $633 = $635;
                    };
                    return $633;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$read$u16 = x0 => x1 => Kind$Core$read$u16$(x0, x1);

    function Kind$Core$read$chrx$(_code$1) {
        var self = String$starts_with$(_code$1, "\\u{");
        if (self) {
            var _code$2 = String$drop$(3n, _code$1);
            var self = Kind$Core$read$u16$(_code$2, 0);
            switch (self._) {
                case 'Pair.new':
                    var $638 = self.fst;
                    var $639 = self.snd;
                    var self = String$starts_with$($638, "}");
                    if (self) {
                        var $641 = Pair$new$(String$drop$(1n, $638), $639);
                        var $640 = $641;
                    } else {
                        var $642 = Pair$new$("", 63);
                        var $640 = $642;
                    };
                    var $637 = $640;
                    break;
            };
            var $636 = $637;
        } else {
            var self = String$starts_with$(_code$1, "\\\'");
            if (self) {
                var $644 = Pair$new$(String$drop$(2n, _code$1), 39);
                var $643 = $644;
            } else {
                var self = String$starts_with$(_code$1, "\\\"");
                if (self) {
                    var $646 = Pair$new$(String$drop$(2n, _code$1), 34);
                    var $645 = $646;
                } else {
                    var self = String$starts_with$(_code$1, "\\\\");
                    if (self) {
                        var $648 = Pair$new$(String$drop$(2n, _code$1), 92);
                        var $647 = $648;
                    } else {
                        var self = _code$1;
                        if (self.length === 0) {
                            var $650 = Pair$new$("", 63);
                            var $649 = $650;
                        } else {
                            var $651 = self.charCodeAt(0);
                            var $652 = self.slice(1);
                            var $653 = Pair$new$($652, $651);
                            var $649 = $653;
                        };
                        var $647 = $649;
                    };
                    var $645 = $647;
                };
                var $643 = $645;
            };
            var $636 = $643;
        };
        return $636;
    };
    const Kind$Core$read$chrx = x0 => Kind$Core$read$chrx$(x0);

    function Kind$Term$chr$(_chrx$1) {
        var $654 = ({
            _: 'Kind.Term.chr',
            'chrx': _chrx$1
        });
        return $654;
    };
    const Kind$Term$chr = x0 => Kind$Term$chr$(x0);

    function Kind$Core$read$strx$(_code$1) {
        var self = String$starts_with$(_code$1, "\"");
        if (self) {
            var $656 = Pair$new$(_code$1, "");
            var $655 = $656;
        } else {
            var self = Kind$Core$read$chrx$(_code$1);
            switch (self._) {
                case 'Pair.new':
                    var $658 = self.fst;
                    var $659 = self.snd;
                    var self = Kind$Core$read$strx$($658);
                    switch (self._) {
                        case 'Pair.new':
                            var $661 = self.fst;
                            var $662 = self.snd;
                            var $663 = Pair$new$($661, String$cons$($659, $662));
                            var $660 = $663;
                            break;
                    };
                    var $657 = $660;
                    break;
            };
            var $655 = $657;
        };
        return $655;
    };
    const Kind$Core$read$strx = x0 => Kind$Core$read$strx$(x0);

    function Kind$Term$str$(_strx$1) {
        var $664 = ({
            _: 'Kind.Term.str',
            'strx': _strx$1
        });
        return $664;
    };
    const Kind$Term$str = x0 => Kind$Term$str$(x0);

    function Char$dec_value$(_chr$1) {
        var self = (_chr$1 === 48);
        if (self) {
            var $666 = 0n;
            var $665 = $666;
        } else {
            var self = (_chr$1 === 49);
            if (self) {
                var $668 = 1n;
                var $667 = $668;
            } else {
                var self = (_chr$1 === 50);
                if (self) {
                    var $670 = 2n;
                    var $669 = $670;
                } else {
                    var self = (_chr$1 === 51);
                    if (self) {
                        var $672 = 3n;
                        var $671 = $672;
                    } else {
                        var self = (_chr$1 === 52);
                        if (self) {
                            var $674 = 4n;
                            var $673 = $674;
                        } else {
                            var self = (_chr$1 === 53);
                            if (self) {
                                var $676 = 5n;
                                var $675 = $676;
                            } else {
                                var self = (_chr$1 === 54);
                                if (self) {
                                    var $678 = 6n;
                                    var $677 = $678;
                                } else {
                                    var self = (_chr$1 === 55);
                                    if (self) {
                                        var $680 = 7n;
                                        var $679 = $680;
                                    } else {
                                        var self = (_chr$1 === 56);
                                        if (self) {
                                            var $682 = 8n;
                                            var $681 = $682;
                                        } else {
                                            var self = (_chr$1 === 57);
                                            if (self) {
                                                var $684 = 9n;
                                                var $683 = $684;
                                            } else {
                                                var $685 = 0n;
                                                var $683 = $685;
                                            };
                                            var $681 = $683;
                                        };
                                        var $679 = $681;
                                    };
                                    var $677 = $679;
                                };
                                var $675 = $677;
                            };
                            var $673 = $675;
                        };
                        var $671 = $673;
                    };
                    var $669 = $671;
                };
                var $667 = $669;
            };
            var $665 = $667;
        };
        return $665;
    };
    const Char$dec_value = x0 => Char$dec_value$(x0);

    function Kind$Core$read$natx$(_code$1, _nat$2) {
        var Kind$Core$read$natx$ = (_code$1, _nat$2) => ({
            ctr: 'TCO',
            arg: [_code$1, _nat$2]
        });
        var Kind$Core$read$natx = _code$1 => _nat$2 => Kind$Core$read$natx$(_code$1, _nat$2);
        var arg = [_code$1, _nat$2];
        while (true) {
            let [_code$1, _nat$2] = arg;
            var R = (() => {
                var self = _code$1;
                if (self.length === 0) {
                    var $686 = Pair$new$(_code$1, _nat$2);
                    return $686;
                } else {
                    var $687 = self.charCodeAt(0);
                    var $688 = self.slice(1);
                    var self = Char$is_hex$($687);
                    if (self) {
                        var _nat$5 = ((_nat$2 * 10n) + Char$dec_value$($687));
                        var $690 = Kind$Core$read$natx$($688, _nat$5);
                        var $689 = $690;
                    } else {
                        var $691 = Pair$new$(_code$1, _nat$2);
                        var $689 = $691;
                    };
                    return $689;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$read$natx = x0 => x1 => Kind$Core$read$natx$(x0, x1);

    function Kind$Term$nat$(_natx$1) {
        var $692 = ({
            _: 'Kind.Term.nat',
            'natx': _natx$1
        });
        return $692;
    };
    const Kind$Term$nat = x0 => Kind$Term$nat$(x0);

    function Pair$fst$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $694 = self.fst;
                var $695 = $694;
                var $693 = $695;
                break;
        };
        return $693;
    };
    const Pair$fst = x0 => Pair$fst$(x0);
    const Nat$eql = a0 => a1 => (a0 === a1);

    function Nat$pred$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $697 = Nat$zero;
            var $696 = $697;
        } else {
            var $698 = (self - 1n);
            var $699 = $698;
            var $696 = $699;
        };
        return $696;
    };
    const Nat$pred = x0 => Nat$pred$(x0);

    function Kind$Core$read$find$(_list$2, _cond$3, _indx$4, _skip$5) {
        var Kind$Core$read$find$ = (_list$2, _cond$3, _indx$4, _skip$5) => ({
            ctr: 'TCO',
            arg: [_list$2, _cond$3, _indx$4, _skip$5]
        });
        var Kind$Core$read$find = _list$2 => _cond$3 => _indx$4 => _skip$5 => Kind$Core$read$find$(_list$2, _cond$3, _indx$4, _skip$5);
        var arg = [_list$2, _cond$3, _indx$4, _skip$5];
        while (true) {
            let [_list$2, _cond$3, _indx$4, _skip$5] = arg;
            var R = (() => {
                var self = _list$2;
                switch (self._) {
                    case 'List.cons':
                        var $700 = self.head;
                        var $701 = self.tail;
                        var self = _cond$3($700)(_indx$4);
                        if (self) {
                            var self = (_skip$5 === 0n);
                            if (self) {
                                var $704 = Maybe$some$(Pair$new$($700, _indx$4));
                                var $703 = $704;
                            } else {
                                var $705 = Kind$Core$read$find$($701, _cond$3, Nat$succ$(_indx$4), Nat$pred$(_skip$5));
                                var $703 = $705;
                            };
                            var $702 = $703;
                        } else {
                            var $706 = Kind$Core$read$find$($701, _cond$3, Nat$succ$(_indx$4), _skip$5);
                            var $702 = $706;
                        };
                        return $702;
                    case 'List.nil':
                        var $707 = Maybe$none;
                        return $707;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$read$find = x0 => x1 => x2 => x3 => Kind$Core$read$find$(x0, x1, x2, x3);

    function Pair$snd$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $709 = self.snd;
                var $710 = $709;
                var $708 = $710;
                break;
        };
        return $708;
    };
    const Pair$snd = x0 => Pair$snd$(x0);

    function Kind$Core$read$term$(_code$1) {
        var self = Kind$Core$read$spaces$(_code$1);
        switch (self._) {
            case 'Pair.new':
                var $712 = self.fst;
                var self = $712;
                if (self.length === 0) {
                    var $714 = Pair$new$("", (_ctx$4 => {
                        var $715 = Kind$Term$ref$("error");
                        return $715;
                    }));
                    var $713 = $714;
                } else {
                    var $716 = self.charCodeAt(0);
                    var $717 = self.slice(1);
                    var _head$6 = $716;
                    var _code$7 = $717;
                    var self = Char$eql$(_head$6, 42);
                    if (self) {
                        var $719 = Pair$new$(_code$7, (_ctx$8 => {
                            var $720 = Kind$Term$typ;
                            return $720;
                        }));
                        var $718 = $719;
                    } else {
                        var self = (_head$6 === 64);
                        if (self) {
                            var self = Kind$Core$read$name$(_code$7);
                            switch (self._) {
                                case 'Pair.new':
                                    var $723 = self.fst;
                                    var $724 = self.snd;
                                    var self = Kind$Core$read$char$($723, 40);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $726 = self.fst;
                                            var self = Kind$Core$read$name$($726);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $728 = self.fst;
                                                    var $729 = self.snd;
                                                    var self = Kind$Core$read$char$($728, 58);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $731 = self.fst;
                                                            var self = Kind$Core$read$term$($731);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $733 = self.fst;
                                                                    var $734 = self.snd;
                                                                    var self = Kind$Core$read$char$($733, 41);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $736 = self.fst;
                                                                            var self = Kind$Core$read$term$($736);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $738 = self.fst;
                                                                                    var $739 = self.snd;
                                                                                    var $740 = Pair$new$($738, (_ctx$22 => {
                                                                                        var $741 = Kind$Term$all$(Bool$false, $724, $729, $734(_ctx$22), (_s$23 => _x$24 => {
                                                                                            var $742 = $739(List$cons$(Pair$new$($729, _x$24), List$cons$(Pair$new$($724, _s$23), _ctx$22)));
                                                                                            return $742;
                                                                                        }));
                                                                                        return $741;
                                                                                    }));
                                                                                    var $737 = $740;
                                                                                    break;
                                                                            };
                                                                            var $735 = $737;
                                                                            break;
                                                                    };
                                                                    var $732 = $735;
                                                                    break;
                                                            };
                                                            var $730 = $732;
                                                            break;
                                                    };
                                                    var $727 = $730;
                                                    break;
                                            };
                                            var $725 = $727;
                                            break;
                                    };
                                    var $722 = $725;
                                    break;
                            };
                            var $721 = $722;
                        } else {
                            var self = (_head$6 === 37);
                            if (self) {
                                var self = Kind$Core$read$name$(_code$7);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $745 = self.fst;
                                        var $746 = self.snd;
                                        var self = Kind$Core$read$char$($745, 40);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $748 = self.fst;
                                                var self = Kind$Core$read$name$($748);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $750 = self.fst;
                                                        var $751 = self.snd;
                                                        var self = Kind$Core$read$char$($750, 58);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $753 = self.fst;
                                                                var self = Kind$Core$read$term$($753);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $755 = self.fst;
                                                                        var $756 = self.snd;
                                                                        var self = Kind$Core$read$char$($755, 41);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $758 = self.fst;
                                                                                var self = Kind$Core$read$term$($758);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $760 = self.fst;
                                                                                        var $761 = self.snd;
                                                                                        var $762 = Pair$new$($760, (_ctx$22 => {
                                                                                            var $763 = Kind$Term$all$(Bool$true, $746, $751, $756(_ctx$22), (_s$23 => _x$24 => {
                                                                                                var $764 = $761(List$cons$(Pair$new$($751, _x$24), List$cons$(Pair$new$($746, _s$23), _ctx$22)));
                                                                                                return $764;
                                                                                            }));
                                                                                            return $763;
                                                                                        }));
                                                                                        var $759 = $762;
                                                                                        break;
                                                                                };
                                                                                var $757 = $759;
                                                                                break;
                                                                        };
                                                                        var $754 = $757;
                                                                        break;
                                                                };
                                                                var $752 = $754;
                                                                break;
                                                        };
                                                        var $749 = $752;
                                                        break;
                                                };
                                                var $747 = $749;
                                                break;
                                        };
                                        var $744 = $747;
                                        break;
                                };
                                var $743 = $744;
                            } else {
                                var self = (_head$6 === 35);
                                if (self) {
                                    var self = Kind$Core$read$name$(_code$7);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $767 = self.fst;
                                            var $768 = self.snd;
                                            var self = Kind$Core$read$term$($767);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $770 = self.fst;
                                                    var $771 = self.snd;
                                                    var $772 = Pair$new$($770, (_ctx$12 => {
                                                        var $773 = Kind$Term$lam$($768, (_x$13 => {
                                                            var $774 = $771(List$cons$(Pair$new$($768, _x$13), _ctx$12));
                                                            return $774;
                                                        }));
                                                        return $773;
                                                    }));
                                                    var $769 = $772;
                                                    break;
                                            };
                                            var $766 = $769;
                                            break;
                                    };
                                    var $765 = $766;
                                } else {
                                    var self = (_head$6 === 40);
                                    if (self) {
                                        var self = Kind$Core$read$term$(_code$7);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $777 = self.fst;
                                                var $778 = self.snd;
                                                var self = Kind$Core$read$term$($777);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $780 = self.fst;
                                                        var $781 = self.snd;
                                                        var self = Kind$Core$read$char$($780, 41);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $783 = self.fst;
                                                                var $784 = Pair$new$($783, (_ctx$14 => {
                                                                    var $785 = Kind$Term$app$($778(_ctx$14), $781(_ctx$14));
                                                                    return $785;
                                                                }));
                                                                var $782 = $784;
                                                                break;
                                                        };
                                                        var $779 = $782;
                                                        break;
                                                };
                                                var $776 = $779;
                                                break;
                                        };
                                        var $775 = $776;
                                    } else {
                                        var self = (_head$6 === 33);
                                        if (self) {
                                            var self = Kind$Core$read$name$(_code$7);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $788 = self.fst;
                                                    var $789 = self.snd;
                                                    var self = Kind$Core$read$char$($788, 61);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $791 = self.fst;
                                                            var self = Kind$Core$read$term$($791);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $793 = self.fst;
                                                                    var $794 = self.snd;
                                                                    var self = Kind$Core$read$char$($793, 59);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $796 = self.fst;
                                                                            var self = Kind$Core$read$term$($796);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $798 = self.fst;
                                                                                    var $799 = self.snd;
                                                                                    var $800 = Pair$new$($798, (_ctx$18 => {
                                                                                        var $801 = Kind$Term$let$($789, $794(_ctx$18), (_x$19 => {
                                                                                            var $802 = $799(List$cons$(Pair$new$($789, _x$19), _ctx$18));
                                                                                            return $802;
                                                                                        }));
                                                                                        return $801;
                                                                                    }));
                                                                                    var $797 = $800;
                                                                                    break;
                                                                            };
                                                                            var $795 = $797;
                                                                            break;
                                                                    };
                                                                    var $792 = $795;
                                                                    break;
                                                            };
                                                            var $790 = $792;
                                                            break;
                                                    };
                                                    var $787 = $790;
                                                    break;
                                            };
                                            var $786 = $787;
                                        } else {
                                            var self = (_head$6 === 36);
                                            if (self) {
                                                var self = Kind$Core$read$name$(_code$7);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $805 = self.fst;
                                                        var $806 = self.snd;
                                                        var self = Kind$Core$read$char$($805, 61);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $808 = self.fst;
                                                                var self = Kind$Core$read$term$($808);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $810 = self.fst;
                                                                        var $811 = self.snd;
                                                                        var self = Kind$Core$read$char$($810, 59);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $813 = self.fst;
                                                                                var self = Kind$Core$read$term$($813);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $815 = self.fst;
                                                                                        var $816 = self.snd;
                                                                                        var $817 = Pair$new$($815, (_ctx$18 => {
                                                                                            var $818 = Kind$Term$def$($806, $811(_ctx$18), (_x$19 => {
                                                                                                var $819 = $816(List$cons$(Pair$new$($806, _x$19), _ctx$18));
                                                                                                return $819;
                                                                                            }));
                                                                                            return $818;
                                                                                        }));
                                                                                        var $814 = $817;
                                                                                        break;
                                                                                };
                                                                                var $812 = $814;
                                                                                break;
                                                                        };
                                                                        var $809 = $812;
                                                                        break;
                                                                };
                                                                var $807 = $809;
                                                                break;
                                                        };
                                                        var $804 = $807;
                                                        break;
                                                };
                                                var $803 = $804;
                                            } else {
                                                var self = (_head$6 === 123);
                                                if (self) {
                                                    var self = Kind$Core$read$term$(_code$7);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $822 = self.fst;
                                                            var $823 = self.snd;
                                                            var self = Kind$Core$read$char$($822, 58);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $825 = self.fst;
                                                                    var self = Kind$Core$read$term$($825);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $827 = self.fst;
                                                                            var $828 = self.snd;
                                                                            var self = Kind$Core$read$char$($827, 125);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $830 = self.fst;
                                                                                    var $831 = Pair$new$($830, (_ctx$16 => {
                                                                                        var $832 = Kind$Term$ann$(Bool$false, $823(_ctx$16), $828(_ctx$16));
                                                                                        return $832;
                                                                                    }));
                                                                                    var $829 = $831;
                                                                                    break;
                                                                            };
                                                                            var $826 = $829;
                                                                            break;
                                                                    };
                                                                    var $824 = $826;
                                                                    break;
                                                            };
                                                            var $821 = $824;
                                                            break;
                                                    };
                                                    var $820 = $821;
                                                } else {
                                                    var self = (_head$6 === 39);
                                                    if (self) {
                                                        var self = Kind$Core$read$chrx$(_code$7);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $835 = self.fst;
                                                                var $836 = self.snd;
                                                                var self = Kind$Core$read$char$($835, 39);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $838 = self.fst;
                                                                        var $839 = Pair$new$($838, (_ctx$12 => {
                                                                            var $840 = Kind$Term$chr$($836);
                                                                            return $840;
                                                                        }));
                                                                        var $837 = $839;
                                                                        break;
                                                                };
                                                                var $834 = $837;
                                                                break;
                                                        };
                                                        var $833 = $834;
                                                    } else {
                                                        var self = (_head$6 === 34);
                                                        if (self) {
                                                            var self = Kind$Core$read$strx$(_code$7);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $843 = self.fst;
                                                                    var $844 = self.snd;
                                                                    var self = Kind$Core$read$char$($843, 34);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $846 = self.fst;
                                                                            var $847 = Pair$new$($846, (_ctx$12 => {
                                                                                var $848 = Kind$Term$str$($844);
                                                                                return $848;
                                                                            }));
                                                                            var $845 = $847;
                                                                            break;
                                                                    };
                                                                    var $842 = $845;
                                                                    break;
                                                            };
                                                            var $841 = $842;
                                                        } else {
                                                            var self = (_head$6 === 43);
                                                            if (self) {
                                                                var self = Kind$Core$read$natx$(_code$7, 0n);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $851 = self.fst;
                                                                        var $852 = self.snd;
                                                                        var $853 = Pair$new$($851, (_ctx$10 => {
                                                                            var $854 = Kind$Term$nat$($852);
                                                                            return $854;
                                                                        }));
                                                                        var $850 = $853;
                                                                        break;
                                                                };
                                                                var $849 = $850;
                                                            } else {
                                                                var self = Kind$Core$read$is_name$(_head$6);
                                                                if (self) {
                                                                    var self = Kind$Core$read$name$(_code$7);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $857 = self.fst;
                                                                            var $858 = self.snd;
                                                                            var _name$10 = String$cons$(_head$6, $858);
                                                                            var self = $857;
                                                                            if (self.length === 0) {
                                                                                var $860 = Pair$new$("", 0n);
                                                                                var self = $860;
                                                                            } else {
                                                                                var $861 = self.charCodeAt(0);
                                                                                var $862 = self.slice(1);
                                                                                var self = ($861 === 94);
                                                                                if (self) {
                                                                                    var $864 = Kind$Core$read$natx$($862, 0n);
                                                                                    var $863 = $864;
                                                                                } else {
                                                                                    var $865 = Pair$new$($857, 0n);
                                                                                    var $863 = $865;
                                                                                };
                                                                                var self = $863;
                                                                            };
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $866 = self.fst;
                                                                                    var $867 = self.snd;
                                                                                    var $868 = Pair$new$($866, (_ctx$13 => {
                                                                                        var _got$14 = Kind$Core$read$find$(_ctx$13, (_x$14 => _i$15 => {
                                                                                            var $870 = (Pair$fst$(_x$14) === _name$10);
                                                                                            return $870;
                                                                                        }), 0n, $867);
                                                                                        var self = _got$14;
                                                                                        switch (self._) {
                                                                                            case 'Maybe.some':
                                                                                                var $871 = self.value;
                                                                                                var $872 = Pair$snd$(Pair$fst$($871));
                                                                                                var $869 = $872;
                                                                                                break;
                                                                                            case 'Maybe.none':
                                                                                                var $873 = Kind$Term$ref$(_name$10);
                                                                                                var $869 = $873;
                                                                                                break;
                                                                                        };
                                                                                        return $869;
                                                                                    }));
                                                                                    var $859 = $868;
                                                                                    break;
                                                                            };
                                                                            var $856 = $859;
                                                                            break;
                                                                    };
                                                                    var $855 = $856;
                                                                } else {
                                                                    var $874 = Pair$new$("", (_ctx$8 => {
                                                                        var $875 = Kind$Term$ref$("error");
                                                                        return $875;
                                                                    }));
                                                                    var $855 = $874;
                                                                };
                                                                var $849 = $855;
                                                            };
                                                            var $841 = $849;
                                                        };
                                                        var $833 = $841;
                                                    };
                                                    var $820 = $833;
                                                };
                                                var $803 = $820;
                                            };
                                            var $786 = $803;
                                        };
                                        var $775 = $786;
                                    };
                                    var $765 = $775;
                                };
                                var $743 = $765;
                            };
                            var $721 = $743;
                        };
                        var $718 = $721;
                    };
                    var $713 = $718;
                };
                var $711 = $713;
                break;
        };
        return $711;
    };
    const Kind$Core$read$term = x0 => Kind$Core$read$term$(x0);

    function Kind$Core$read$(_code$1) {
        var self = Kind$Core$read$term$((_code$1 + ";"));
        switch (self._) {
            case 'Pair.new':
                var $877 = self.fst;
                var $878 = self.snd;
                var self = $877;
                if (self.length === 0) {
                    var $880 = Maybe$none;
                    var $879 = $880;
                } else {
                    var $881 = self.charCodeAt(0);
                    var $882 = self.slice(1);
                    var $883 = Maybe$some$($878(List$nil));
                    var $879 = $883;
                };
                var $876 = $879;
                break;
        };
        return $876;
    };
    const Kind$Core$read = x0 => Kind$Core$read$(x0);

    function Bool$read$(_code$1) {
        var self = (_code$1 === "Bool.true");
        if (self) {
            var $885 = Maybe$some$(Bool$true);
            var $884 = $885;
        } else {
            var self = (_code$1 === "Bool.false");
            if (self) {
                var $887 = Maybe$some$(Bool$false);
                var $886 = $887;
            } else {
                var $888 = Maybe$none;
                var $886 = $888;
            };
            var $884 = $886;
        };
        return $884;
    };
    const Bool$read = x0 => Bool$read$(x0);

    function Kind$Status$done$(_cached$1) {
        var $889 = ({
            _: 'Kind.Status.done',
            'cached': _cached$1
        });
        return $889;
    };
    const Kind$Status$done = x0 => Kind$Status$done$(x0);

    function Kind$Def$new$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _stat$9) {
        var $890 = ({
            _: 'Kind.Def.new',
            'file': _file$1,
            'code': _code$2,
            'orig': _orig$3,
            'name': _name$4,
            'term': _term$5,
            'type': _type$6,
            'isct': _isct$7,
            'arit': _arit$8,
            'stat': _stat$9
        });
        return $890;
    };
    const Kind$Def$new = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Def$new$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Synth$load$cached$def$(_name$1) {
        var $891 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $892 = _m$bind$2;
            return $892;
        }))(Kind$Synth$load$cached$get_file$((_name$1 + ".file")))((_cache_file$2 => {
            var self = (!String$is_empty$(_cache_file$2));
            if (self) {
                var $894 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $895 = _m$bind$3;
                    return $895;
                }))(Kind$Synth$load$cached$get_file$((_name$1 + ".time")))((_cache_time$3 => {
                    var $896 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $897 = _m$bind$4;
                        return $897;
                    }))(IO$get_file_mtime$(_cache_file$2))((_cache_file_time$4 => {
                        var self = (_cache_time$3 === _cache_file_time$4);
                        if (self) {
                            var $899 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                                var $900 = _m$bind$5;
                                return $900;
                            }))(Kind$Synth$load$cached$get_file$((_name$1 + ".term")))((_cache_term$5 => {
                                var $901 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                                    var $902 = _m$bind$6;
                                    return $902;
                                }))(Kind$Synth$load$cached$get_file$((_name$1 + ".type")))((_cache_type$6 => {
                                    var $903 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                                        var $904 = _m$bind$7;
                                        return $904;
                                    }))(Kind$Synth$load$cached$get_file$((_name$1 + ".isct")))((_cache_isct$7 => {
                                        var $905 = IO$monad$((_m$bind$8 => _m$pure$9 => {
                                            var $906 = _m$bind$8;
                                            return $906;
                                        }))(Kind$Synth$load$cached$get_file$((_name$1 + ".arit")))((_cache_arit$8 => {
                                            var $907 = IO$monad$((_m$bind$9 => _m$pure$10 => {
                                                var $908 = _m$pure$10;
                                                return $908;
                                            }))((() => {
                                                var _file$9 = _cache_file$2;
                                                var _code$10 = "<cached>";
                                                var _orig$11 = Pair$new$(0n, 0n);
                                                var $909 = Maybe$monad$((_m$bind$12 => _m$pure$13 => {
                                                    var $910 = _m$bind$12;
                                                    return $910;
                                                }))(Kind$Core$read$(_cache_term$5))((_term$12 => {
                                                    var $911 = Maybe$monad$((_m$bind$13 => _m$pure$14 => {
                                                        var $912 = _m$bind$13;
                                                        return $912;
                                                    }))(Kind$Core$read$(_cache_type$6))((_type$13 => {
                                                        var $913 = Maybe$monad$((_m$bind$14 => _m$pure$15 => {
                                                            var $914 = _m$bind$14;
                                                            return $914;
                                                        }))(Bool$read$(_cache_isct$7))((_isct$14 => {
                                                            var $915 = Maybe$monad$((_m$bind$15 => _m$pure$16 => {
                                                                var $916 = _m$bind$15;
                                                                return $916;
                                                            }))(Maybe$some$((BigInt(_cache_arit$8))))((_arit$15 => {
                                                                var _stat$16 = Kind$Status$done$(Bool$true);
                                                                var $917 = Maybe$monad$((_m$bind$17 => _m$pure$18 => {
                                                                    var $918 = _m$pure$18;
                                                                    return $918;
                                                                }))(Kind$Def$new$(_file$9, _code$10, _orig$11, _name$1, _term$12, _type$13, _isct$14, _arit$15, _stat$16));
                                                                return $917;
                                                            }));
                                                            return $915;
                                                        }));
                                                        return $913;
                                                    }));
                                                    return $911;
                                                }));
                                                return $909;
                                            })());
                                            return $907;
                                        }));
                                        return $905;
                                    }));
                                    return $903;
                                }));
                                return $901;
                            }));
                            var $898 = $899;
                        } else {
                            var $919 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                                var $920 = _m$pure$6;
                                return $920;
                            }))(Maybe$none);
                            var $898 = $919;
                        };
                        return $898;
                    }));
                    return $896;
                }));
                var $893 = $894;
            } else {
                var $921 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $922 = _m$pure$4;
                    return $922;
                }))(Maybe$none);
                var $893 = $921;
            };
            return $893;
        }));
        return $891;
    };
    const Kind$Synth$load$cached$def = x0 => Kind$Synth$load$cached$def$(x0);

    function BitsMap$tie$(_val$2, _lft$3, _rgt$4) {
        var $923 = ({
            _: 'BitsMap.tie',
            'val': _val$2,
            'lft': _lft$3,
            'rgt': _rgt$4
        });
        return $923;
    };
    const BitsMap$tie = x0 => x1 => x2 => BitsMap$tie$(x0, x1, x2);
    const BitsMap$new = ({
        _: 'BitsMap.new'
    });
    const BitsMap$set = a0 => a1 => a2 => (bitsmap_set(a0, a1, a2, 'set'));

    function Kind$Map$set$(_name$2, _val$3, _map$4) {
        var $924 = (bitsmap_set((kind_name_to_bits(_name$2)), _val$3, _map$4, 'set'));
        return $924;
    };
    const Kind$Map$set = x0 => x1 => x2 => Kind$Map$set$(x0, x1, x2);
    const Kind$Map$new = BitsMap$new;
    const Kind$Map = null;

    function Kind$Core$dependencies$go$(_term$1, _deps$2) {
        var _nil$3 = Kind$Term$typ;
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $926 = self.name;
                var $927 = Kind$Map$set$($926, Unit$new, _deps$2);
                var $925 = $927;
                break;
            case 'Kind.Term.all':
                var $928 = self.xtyp;
                var $929 = self.body;
                var _deps$9 = Kind$Core$dependencies$go$($928, _deps$2);
                var _deps$10 = Kind$Core$dependencies$go$($929(_nil$3)(_nil$3), _deps$9);
                var $930 = _deps$10;
                var $925 = $930;
                break;
            case 'Kind.Term.lam':
                var $931 = self.body;
                var _deps$6 = Kind$Core$dependencies$go$($931(_nil$3), _deps$2);
                var $932 = _deps$6;
                var $925 = $932;
                break;
            case 'Kind.Term.app':
                var $933 = self.func;
                var $934 = self.argm;
                var _deps$6 = Kind$Core$dependencies$go$($933, _deps$2);
                var _deps$7 = Kind$Core$dependencies$go$($934, _deps$6);
                var $935 = _deps$7;
                var $925 = $935;
                break;
            case 'Kind.Term.let':
                var $936 = self.expr;
                var $937 = self.body;
                var _deps$7 = Kind$Core$dependencies$go$($936, _deps$2);
                var _deps$8 = Kind$Core$dependencies$go$($937(_nil$3), _deps$7);
                var $938 = _deps$8;
                var $925 = $938;
                break;
            case 'Kind.Term.ann':
                var $939 = self.term;
                var $940 = self.type;
                var _deps$7 = Kind$Core$dependencies$go$($939, _deps$2);
                var _deps$8 = Kind$Core$dependencies$go$($940, _deps$7);
                var $941 = _deps$8;
                var $925 = $941;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.def':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $942 = _deps$2;
                var $925 = $942;
                break;
        };
        return $925;
    };
    const Kind$Core$dependencies$go = x0 => x1 => Kind$Core$dependencies$go$(x0, x1);

    function List$mapped$(_as$2, _f$4) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $944 = self.head;
                var $945 = self.tail;
                var $946 = List$cons$(_f$4($944), List$mapped$($945, _f$4));
                var $943 = $946;
                break;
            case 'List.nil':
                var $947 = List$nil;
                var $943 = $947;
                break;
        };
        return $943;
    };
    const List$mapped = x0 => x1 => List$mapped$(x0, x1);

    function Bits$reverse$tco$(_a$1, _r$2) {
        var Bits$reverse$tco$ = (_a$1, _r$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _r$2]
        });
        var Bits$reverse$tco = _a$1 => _r$2 => Bits$reverse$tco$(_a$1, _r$2);
        var arg = [_a$1, _r$2];
        while (true) {
            let [_a$1, _r$2] = arg;
            var R = (() => {
                var self = _a$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $948 = self.slice(0, -1);
                        var $949 = Bits$reverse$tco$($948, (_r$2 + '0'));
                        return $949;
                    case 'i':
                        var $950 = self.slice(0, -1);
                        var $951 = Bits$reverse$tco$($950, (_r$2 + '1'));
                        return $951;
                    case 'e':
                        var $952 = _r$2;
                        return $952;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Bits$reverse$tco = x0 => x1 => Bits$reverse$tco$(x0, x1);

    function Bits$reverse$(_a$1) {
        var $953 = Bits$reverse$tco$(_a$1, Bits$e);
        return $953;
    };
    const Bits$reverse = x0 => Bits$reverse$(x0);

    function BitsMap$to_list$go$(_xs$2, _key$3, _list$4) {
        var self = _xs$2;
        switch (self._) {
            case 'BitsMap.tie':
                var $955 = self.val;
                var $956 = self.lft;
                var $957 = self.rgt;
                var self = $955;
                switch (self._) {
                    case 'Maybe.some':
                        var $959 = self.value;
                        var $960 = List$cons$(Pair$new$(Bits$reverse$(_key$3), $959), _list$4);
                        var _list0$8 = $960;
                        break;
                    case 'Maybe.none':
                        var $961 = _list$4;
                        var _list0$8 = $961;
                        break;
                };
                var _list1$9 = BitsMap$to_list$go$($956, (_key$3 + '0'), _list0$8);
                var _list2$10 = BitsMap$to_list$go$($957, (_key$3 + '1'), _list1$9);
                var $958 = _list2$10;
                var $954 = $958;
                break;
            case 'BitsMap.new':
                var $962 = _list$4;
                var $954 = $962;
                break;
        };
        return $954;
    };
    const BitsMap$to_list$go = x0 => x1 => x2 => BitsMap$to_list$go$(x0, x1, x2);

    function Kind$Name$from_bits$(_bs$1) {
        var self = _bs$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $964 = self.slice(0, -1);
                var _bs$3 = $964;
                var self = _bs$3;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $966 = self.slice(0, -1);
                        var _bs$5 = $966;
                        var self = _bs$5;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $968 = self.slice(0, -1);
                                var _bs$7 = $968;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $970 = self.slice(0, -1);
                                        var _bs$9 = $970;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $972 = self.slice(0, -1);
                                                var _bs$11 = $972;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $974 = self.slice(0, -1);
                                                        var _bs$13 = $974;
                                                        var $975 = String$cons$(65, Kind$Name$from_bits$(_bs$13));
                                                        var $973 = $975;
                                                        break;
                                                    case 'i':
                                                        var $976 = self.slice(0, -1);
                                                        var _bs$13 = $976;
                                                        var $977 = String$cons$(66, Kind$Name$from_bits$(_bs$13));
                                                        var $973 = $977;
                                                        break;
                                                    case 'e':
                                                        var $978 = String$nil;
                                                        var $973 = $978;
                                                        break;
                                                };
                                                var $971 = $973;
                                                break;
                                            case 'i':
                                                var $979 = self.slice(0, -1);
                                                var _bs$11 = $979;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $981 = self.slice(0, -1);
                                                        var _bs$13 = $981;
                                                        var $982 = String$cons$(67, Kind$Name$from_bits$(_bs$13));
                                                        var $980 = $982;
                                                        break;
                                                    case 'i':
                                                        var $983 = self.slice(0, -1);
                                                        var _bs$13 = $983;
                                                        var $984 = String$cons$(68, Kind$Name$from_bits$(_bs$13));
                                                        var $980 = $984;
                                                        break;
                                                    case 'e':
                                                        var $985 = String$nil;
                                                        var $980 = $985;
                                                        break;
                                                };
                                                var $971 = $980;
                                                break;
                                            case 'e':
                                                var $986 = String$nil;
                                                var $971 = $986;
                                                break;
                                        };
                                        var $969 = $971;
                                        break;
                                    case 'i':
                                        var $987 = self.slice(0, -1);
                                        var _bs$9 = $987;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $989 = self.slice(0, -1);
                                                var _bs$11 = $989;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $991 = self.slice(0, -1);
                                                        var _bs$13 = $991;
                                                        var $992 = String$cons$(69, Kind$Name$from_bits$(_bs$13));
                                                        var $990 = $992;
                                                        break;
                                                    case 'i':
                                                        var $993 = self.slice(0, -1);
                                                        var _bs$13 = $993;
                                                        var $994 = String$cons$(70, Kind$Name$from_bits$(_bs$13));
                                                        var $990 = $994;
                                                        break;
                                                    case 'e':
                                                        var $995 = String$nil;
                                                        var $990 = $995;
                                                        break;
                                                };
                                                var $988 = $990;
                                                break;
                                            case 'i':
                                                var $996 = self.slice(0, -1);
                                                var _bs$11 = $996;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $998 = self.slice(0, -1);
                                                        var _bs$13 = $998;
                                                        var $999 = String$cons$(71, Kind$Name$from_bits$(_bs$13));
                                                        var $997 = $999;
                                                        break;
                                                    case 'i':
                                                        var $1000 = self.slice(0, -1);
                                                        var _bs$13 = $1000;
                                                        var $1001 = String$cons$(72, Kind$Name$from_bits$(_bs$13));
                                                        var $997 = $1001;
                                                        break;
                                                    case 'e':
                                                        var $1002 = String$nil;
                                                        var $997 = $1002;
                                                        break;
                                                };
                                                var $988 = $997;
                                                break;
                                            case 'e':
                                                var $1003 = String$nil;
                                                var $988 = $1003;
                                                break;
                                        };
                                        var $969 = $988;
                                        break;
                                    case 'e':
                                        var $1004 = String$nil;
                                        var $969 = $1004;
                                        break;
                                };
                                var $967 = $969;
                                break;
                            case 'i':
                                var $1005 = self.slice(0, -1);
                                var _bs$7 = $1005;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1007 = self.slice(0, -1);
                                        var _bs$9 = $1007;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1009 = self.slice(0, -1);
                                                var _bs$11 = $1009;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1011 = self.slice(0, -1);
                                                        var _bs$13 = $1011;
                                                        var $1012 = String$cons$(73, Kind$Name$from_bits$(_bs$13));
                                                        var $1010 = $1012;
                                                        break;
                                                    case 'i':
                                                        var $1013 = self.slice(0, -1);
                                                        var _bs$13 = $1013;
                                                        var $1014 = String$cons$(74, Kind$Name$from_bits$(_bs$13));
                                                        var $1010 = $1014;
                                                        break;
                                                    case 'e':
                                                        var $1015 = String$nil;
                                                        var $1010 = $1015;
                                                        break;
                                                };
                                                var $1008 = $1010;
                                                break;
                                            case 'i':
                                                var $1016 = self.slice(0, -1);
                                                var _bs$11 = $1016;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1018 = self.slice(0, -1);
                                                        var _bs$13 = $1018;
                                                        var $1019 = String$cons$(75, Kind$Name$from_bits$(_bs$13));
                                                        var $1017 = $1019;
                                                        break;
                                                    case 'i':
                                                        var $1020 = self.slice(0, -1);
                                                        var _bs$13 = $1020;
                                                        var $1021 = String$cons$(76, Kind$Name$from_bits$(_bs$13));
                                                        var $1017 = $1021;
                                                        break;
                                                    case 'e':
                                                        var $1022 = String$nil;
                                                        var $1017 = $1022;
                                                        break;
                                                };
                                                var $1008 = $1017;
                                                break;
                                            case 'e':
                                                var $1023 = String$nil;
                                                var $1008 = $1023;
                                                break;
                                        };
                                        var $1006 = $1008;
                                        break;
                                    case 'i':
                                        var $1024 = self.slice(0, -1);
                                        var _bs$9 = $1024;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1026 = self.slice(0, -1);
                                                var _bs$11 = $1026;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1028 = self.slice(0, -1);
                                                        var _bs$13 = $1028;
                                                        var $1029 = String$cons$(77, Kind$Name$from_bits$(_bs$13));
                                                        var $1027 = $1029;
                                                        break;
                                                    case 'i':
                                                        var $1030 = self.slice(0, -1);
                                                        var _bs$13 = $1030;
                                                        var $1031 = String$cons$(78, Kind$Name$from_bits$(_bs$13));
                                                        var $1027 = $1031;
                                                        break;
                                                    case 'e':
                                                        var $1032 = String$nil;
                                                        var $1027 = $1032;
                                                        break;
                                                };
                                                var $1025 = $1027;
                                                break;
                                            case 'i':
                                                var $1033 = self.slice(0, -1);
                                                var _bs$11 = $1033;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1035 = self.slice(0, -1);
                                                        var _bs$13 = $1035;
                                                        var $1036 = String$cons$(79, Kind$Name$from_bits$(_bs$13));
                                                        var $1034 = $1036;
                                                        break;
                                                    case 'i':
                                                        var $1037 = self.slice(0, -1);
                                                        var _bs$13 = $1037;
                                                        var $1038 = String$cons$(80, Kind$Name$from_bits$(_bs$13));
                                                        var $1034 = $1038;
                                                        break;
                                                    case 'e':
                                                        var $1039 = String$nil;
                                                        var $1034 = $1039;
                                                        break;
                                                };
                                                var $1025 = $1034;
                                                break;
                                            case 'e':
                                                var $1040 = String$nil;
                                                var $1025 = $1040;
                                                break;
                                        };
                                        var $1006 = $1025;
                                        break;
                                    case 'e':
                                        var $1041 = String$nil;
                                        var $1006 = $1041;
                                        break;
                                };
                                var $967 = $1006;
                                break;
                            case 'e':
                                var $1042 = String$nil;
                                var $967 = $1042;
                                break;
                        };
                        var $965 = $967;
                        break;
                    case 'i':
                        var $1043 = self.slice(0, -1);
                        var _bs$5 = $1043;
                        var self = _bs$5;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $1045 = self.slice(0, -1);
                                var _bs$7 = $1045;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1047 = self.slice(0, -1);
                                        var _bs$9 = $1047;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1049 = self.slice(0, -1);
                                                var _bs$11 = $1049;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1051 = self.slice(0, -1);
                                                        var _bs$13 = $1051;
                                                        var $1052 = String$cons$(81, Kind$Name$from_bits$(_bs$13));
                                                        var $1050 = $1052;
                                                        break;
                                                    case 'i':
                                                        var $1053 = self.slice(0, -1);
                                                        var _bs$13 = $1053;
                                                        var $1054 = String$cons$(82, Kind$Name$from_bits$(_bs$13));
                                                        var $1050 = $1054;
                                                        break;
                                                    case 'e':
                                                        var $1055 = String$nil;
                                                        var $1050 = $1055;
                                                        break;
                                                };
                                                var $1048 = $1050;
                                                break;
                                            case 'i':
                                                var $1056 = self.slice(0, -1);
                                                var _bs$11 = $1056;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1058 = self.slice(0, -1);
                                                        var _bs$13 = $1058;
                                                        var $1059 = String$cons$(83, Kind$Name$from_bits$(_bs$13));
                                                        var $1057 = $1059;
                                                        break;
                                                    case 'i':
                                                        var $1060 = self.slice(0, -1);
                                                        var _bs$13 = $1060;
                                                        var $1061 = String$cons$(84, Kind$Name$from_bits$(_bs$13));
                                                        var $1057 = $1061;
                                                        break;
                                                    case 'e':
                                                        var $1062 = String$nil;
                                                        var $1057 = $1062;
                                                        break;
                                                };
                                                var $1048 = $1057;
                                                break;
                                            case 'e':
                                                var $1063 = String$nil;
                                                var $1048 = $1063;
                                                break;
                                        };
                                        var $1046 = $1048;
                                        break;
                                    case 'i':
                                        var $1064 = self.slice(0, -1);
                                        var _bs$9 = $1064;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1066 = self.slice(0, -1);
                                                var _bs$11 = $1066;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1068 = self.slice(0, -1);
                                                        var _bs$13 = $1068;
                                                        var $1069 = String$cons$(85, Kind$Name$from_bits$(_bs$13));
                                                        var $1067 = $1069;
                                                        break;
                                                    case 'i':
                                                        var $1070 = self.slice(0, -1);
                                                        var _bs$13 = $1070;
                                                        var $1071 = String$cons$(86, Kind$Name$from_bits$(_bs$13));
                                                        var $1067 = $1071;
                                                        break;
                                                    case 'e':
                                                        var $1072 = String$nil;
                                                        var $1067 = $1072;
                                                        break;
                                                };
                                                var $1065 = $1067;
                                                break;
                                            case 'i':
                                                var $1073 = self.slice(0, -1);
                                                var _bs$11 = $1073;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1075 = self.slice(0, -1);
                                                        var _bs$13 = $1075;
                                                        var $1076 = String$cons$(87, Kind$Name$from_bits$(_bs$13));
                                                        var $1074 = $1076;
                                                        break;
                                                    case 'i':
                                                        var $1077 = self.slice(0, -1);
                                                        var _bs$13 = $1077;
                                                        var $1078 = String$cons$(88, Kind$Name$from_bits$(_bs$13));
                                                        var $1074 = $1078;
                                                        break;
                                                    case 'e':
                                                        var $1079 = String$nil;
                                                        var $1074 = $1079;
                                                        break;
                                                };
                                                var $1065 = $1074;
                                                break;
                                            case 'e':
                                                var $1080 = String$nil;
                                                var $1065 = $1080;
                                                break;
                                        };
                                        var $1046 = $1065;
                                        break;
                                    case 'e':
                                        var $1081 = String$nil;
                                        var $1046 = $1081;
                                        break;
                                };
                                var $1044 = $1046;
                                break;
                            case 'i':
                                var $1082 = self.slice(0, -1);
                                var _bs$7 = $1082;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1084 = self.slice(0, -1);
                                        var _bs$9 = $1084;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1086 = self.slice(0, -1);
                                                var _bs$11 = $1086;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1088 = self.slice(0, -1);
                                                        var _bs$13 = $1088;
                                                        var $1089 = String$cons$(89, Kind$Name$from_bits$(_bs$13));
                                                        var $1087 = $1089;
                                                        break;
                                                    case 'i':
                                                        var $1090 = self.slice(0, -1);
                                                        var _bs$13 = $1090;
                                                        var $1091 = String$cons$(90, Kind$Name$from_bits$(_bs$13));
                                                        var $1087 = $1091;
                                                        break;
                                                    case 'e':
                                                        var $1092 = String$nil;
                                                        var $1087 = $1092;
                                                        break;
                                                };
                                                var $1085 = $1087;
                                                break;
                                            case 'i':
                                                var $1093 = self.slice(0, -1);
                                                var _bs$11 = $1093;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1095 = self.slice(0, -1);
                                                        var _bs$13 = $1095;
                                                        var $1096 = String$cons$(97, Kind$Name$from_bits$(_bs$13));
                                                        var $1094 = $1096;
                                                        break;
                                                    case 'i':
                                                        var $1097 = self.slice(0, -1);
                                                        var _bs$13 = $1097;
                                                        var $1098 = String$cons$(98, Kind$Name$from_bits$(_bs$13));
                                                        var $1094 = $1098;
                                                        break;
                                                    case 'e':
                                                        var $1099 = String$nil;
                                                        var $1094 = $1099;
                                                        break;
                                                };
                                                var $1085 = $1094;
                                                break;
                                            case 'e':
                                                var $1100 = String$nil;
                                                var $1085 = $1100;
                                                break;
                                        };
                                        var $1083 = $1085;
                                        break;
                                    case 'i':
                                        var $1101 = self.slice(0, -1);
                                        var _bs$9 = $1101;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1103 = self.slice(0, -1);
                                                var _bs$11 = $1103;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1105 = self.slice(0, -1);
                                                        var _bs$13 = $1105;
                                                        var $1106 = String$cons$(99, Kind$Name$from_bits$(_bs$13));
                                                        var $1104 = $1106;
                                                        break;
                                                    case 'i':
                                                        var $1107 = self.slice(0, -1);
                                                        var _bs$13 = $1107;
                                                        var $1108 = String$cons$(100, Kind$Name$from_bits$(_bs$13));
                                                        var $1104 = $1108;
                                                        break;
                                                    case 'e':
                                                        var $1109 = String$nil;
                                                        var $1104 = $1109;
                                                        break;
                                                };
                                                var $1102 = $1104;
                                                break;
                                            case 'i':
                                                var $1110 = self.slice(0, -1);
                                                var _bs$11 = $1110;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1112 = self.slice(0, -1);
                                                        var _bs$13 = $1112;
                                                        var $1113 = String$cons$(101, Kind$Name$from_bits$(_bs$13));
                                                        var $1111 = $1113;
                                                        break;
                                                    case 'i':
                                                        var $1114 = self.slice(0, -1);
                                                        var _bs$13 = $1114;
                                                        var $1115 = String$cons$(102, Kind$Name$from_bits$(_bs$13));
                                                        var $1111 = $1115;
                                                        break;
                                                    case 'e':
                                                        var $1116 = String$nil;
                                                        var $1111 = $1116;
                                                        break;
                                                };
                                                var $1102 = $1111;
                                                break;
                                            case 'e':
                                                var $1117 = String$nil;
                                                var $1102 = $1117;
                                                break;
                                        };
                                        var $1083 = $1102;
                                        break;
                                    case 'e':
                                        var $1118 = String$nil;
                                        var $1083 = $1118;
                                        break;
                                };
                                var $1044 = $1083;
                                break;
                            case 'e':
                                var $1119 = String$nil;
                                var $1044 = $1119;
                                break;
                        };
                        var $965 = $1044;
                        break;
                    case 'e':
                        var $1120 = String$nil;
                        var $965 = $1120;
                        break;
                };
                var $963 = $965;
                break;
            case 'i':
                var $1121 = self.slice(0, -1);
                var _bs$3 = $1121;
                var self = _bs$3;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $1123 = self.slice(0, -1);
                        var _bs$5 = $1123;
                        var self = _bs$5;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $1125 = self.slice(0, -1);
                                var _bs$7 = $1125;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1127 = self.slice(0, -1);
                                        var _bs$9 = $1127;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1129 = self.slice(0, -1);
                                                var _bs$11 = $1129;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1131 = self.slice(0, -1);
                                                        var _bs$13 = $1131;
                                                        var $1132 = String$cons$(103, Kind$Name$from_bits$(_bs$13));
                                                        var $1130 = $1132;
                                                        break;
                                                    case 'i':
                                                        var $1133 = self.slice(0, -1);
                                                        var _bs$13 = $1133;
                                                        var $1134 = String$cons$(104, Kind$Name$from_bits$(_bs$13));
                                                        var $1130 = $1134;
                                                        break;
                                                    case 'e':
                                                        var $1135 = String$nil;
                                                        var $1130 = $1135;
                                                        break;
                                                };
                                                var $1128 = $1130;
                                                break;
                                            case 'i':
                                                var $1136 = self.slice(0, -1);
                                                var _bs$11 = $1136;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1138 = self.slice(0, -1);
                                                        var _bs$13 = $1138;
                                                        var $1139 = String$cons$(105, Kind$Name$from_bits$(_bs$13));
                                                        var $1137 = $1139;
                                                        break;
                                                    case 'i':
                                                        var $1140 = self.slice(0, -1);
                                                        var _bs$13 = $1140;
                                                        var $1141 = String$cons$(106, Kind$Name$from_bits$(_bs$13));
                                                        var $1137 = $1141;
                                                        break;
                                                    case 'e':
                                                        var $1142 = String$nil;
                                                        var $1137 = $1142;
                                                        break;
                                                };
                                                var $1128 = $1137;
                                                break;
                                            case 'e':
                                                var $1143 = String$nil;
                                                var $1128 = $1143;
                                                break;
                                        };
                                        var $1126 = $1128;
                                        break;
                                    case 'i':
                                        var $1144 = self.slice(0, -1);
                                        var _bs$9 = $1144;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1146 = self.slice(0, -1);
                                                var _bs$11 = $1146;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1148 = self.slice(0, -1);
                                                        var _bs$13 = $1148;
                                                        var $1149 = String$cons$(107, Kind$Name$from_bits$(_bs$13));
                                                        var $1147 = $1149;
                                                        break;
                                                    case 'i':
                                                        var $1150 = self.slice(0, -1);
                                                        var _bs$13 = $1150;
                                                        var $1151 = String$cons$(108, Kind$Name$from_bits$(_bs$13));
                                                        var $1147 = $1151;
                                                        break;
                                                    case 'e':
                                                        var $1152 = String$nil;
                                                        var $1147 = $1152;
                                                        break;
                                                };
                                                var $1145 = $1147;
                                                break;
                                            case 'i':
                                                var $1153 = self.slice(0, -1);
                                                var _bs$11 = $1153;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1155 = self.slice(0, -1);
                                                        var _bs$13 = $1155;
                                                        var $1156 = String$cons$(109, Kind$Name$from_bits$(_bs$13));
                                                        var $1154 = $1156;
                                                        break;
                                                    case 'i':
                                                        var $1157 = self.slice(0, -1);
                                                        var _bs$13 = $1157;
                                                        var $1158 = String$cons$(110, Kind$Name$from_bits$(_bs$13));
                                                        var $1154 = $1158;
                                                        break;
                                                    case 'e':
                                                        var $1159 = String$nil;
                                                        var $1154 = $1159;
                                                        break;
                                                };
                                                var $1145 = $1154;
                                                break;
                                            case 'e':
                                                var $1160 = String$nil;
                                                var $1145 = $1160;
                                                break;
                                        };
                                        var $1126 = $1145;
                                        break;
                                    case 'e':
                                        var $1161 = String$nil;
                                        var $1126 = $1161;
                                        break;
                                };
                                var $1124 = $1126;
                                break;
                            case 'i':
                                var $1162 = self.slice(0, -1);
                                var _bs$7 = $1162;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1164 = self.slice(0, -1);
                                        var _bs$9 = $1164;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1166 = self.slice(0, -1);
                                                var _bs$11 = $1166;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1168 = self.slice(0, -1);
                                                        var _bs$13 = $1168;
                                                        var $1169 = String$cons$(111, Kind$Name$from_bits$(_bs$13));
                                                        var $1167 = $1169;
                                                        break;
                                                    case 'i':
                                                        var $1170 = self.slice(0, -1);
                                                        var _bs$13 = $1170;
                                                        var $1171 = String$cons$(112, Kind$Name$from_bits$(_bs$13));
                                                        var $1167 = $1171;
                                                        break;
                                                    case 'e':
                                                        var $1172 = String$nil;
                                                        var $1167 = $1172;
                                                        break;
                                                };
                                                var $1165 = $1167;
                                                break;
                                            case 'i':
                                                var $1173 = self.slice(0, -1);
                                                var _bs$11 = $1173;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1175 = self.slice(0, -1);
                                                        var _bs$13 = $1175;
                                                        var $1176 = String$cons$(113, Kind$Name$from_bits$(_bs$13));
                                                        var $1174 = $1176;
                                                        break;
                                                    case 'i':
                                                        var $1177 = self.slice(0, -1);
                                                        var _bs$13 = $1177;
                                                        var $1178 = String$cons$(114, Kind$Name$from_bits$(_bs$13));
                                                        var $1174 = $1178;
                                                        break;
                                                    case 'e':
                                                        var $1179 = String$nil;
                                                        var $1174 = $1179;
                                                        break;
                                                };
                                                var $1165 = $1174;
                                                break;
                                            case 'e':
                                                var $1180 = String$nil;
                                                var $1165 = $1180;
                                                break;
                                        };
                                        var $1163 = $1165;
                                        break;
                                    case 'i':
                                        var $1181 = self.slice(0, -1);
                                        var _bs$9 = $1181;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1183 = self.slice(0, -1);
                                                var _bs$11 = $1183;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1185 = self.slice(0, -1);
                                                        var _bs$13 = $1185;
                                                        var $1186 = String$cons$(115, Kind$Name$from_bits$(_bs$13));
                                                        var $1184 = $1186;
                                                        break;
                                                    case 'i':
                                                        var $1187 = self.slice(0, -1);
                                                        var _bs$13 = $1187;
                                                        var $1188 = String$cons$(116, Kind$Name$from_bits$(_bs$13));
                                                        var $1184 = $1188;
                                                        break;
                                                    case 'e':
                                                        var $1189 = String$nil;
                                                        var $1184 = $1189;
                                                        break;
                                                };
                                                var $1182 = $1184;
                                                break;
                                            case 'i':
                                                var $1190 = self.slice(0, -1);
                                                var _bs$11 = $1190;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1192 = self.slice(0, -1);
                                                        var _bs$13 = $1192;
                                                        var $1193 = String$cons$(117, Kind$Name$from_bits$(_bs$13));
                                                        var $1191 = $1193;
                                                        break;
                                                    case 'i':
                                                        var $1194 = self.slice(0, -1);
                                                        var _bs$13 = $1194;
                                                        var $1195 = String$cons$(118, Kind$Name$from_bits$(_bs$13));
                                                        var $1191 = $1195;
                                                        break;
                                                    case 'e':
                                                        var $1196 = String$nil;
                                                        var $1191 = $1196;
                                                        break;
                                                };
                                                var $1182 = $1191;
                                                break;
                                            case 'e':
                                                var $1197 = String$nil;
                                                var $1182 = $1197;
                                                break;
                                        };
                                        var $1163 = $1182;
                                        break;
                                    case 'e':
                                        var $1198 = String$nil;
                                        var $1163 = $1198;
                                        break;
                                };
                                var $1124 = $1163;
                                break;
                            case 'e':
                                var $1199 = String$nil;
                                var $1124 = $1199;
                                break;
                        };
                        var $1122 = $1124;
                        break;
                    case 'i':
                        var $1200 = self.slice(0, -1);
                        var _bs$5 = $1200;
                        var self = _bs$5;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $1202 = self.slice(0, -1);
                                var _bs$7 = $1202;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1204 = self.slice(0, -1);
                                        var _bs$9 = $1204;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1206 = self.slice(0, -1);
                                                var _bs$11 = $1206;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1208 = self.slice(0, -1);
                                                        var _bs$13 = $1208;
                                                        var $1209 = String$cons$(119, Kind$Name$from_bits$(_bs$13));
                                                        var $1207 = $1209;
                                                        break;
                                                    case 'i':
                                                        var $1210 = self.slice(0, -1);
                                                        var _bs$13 = $1210;
                                                        var $1211 = String$cons$(120, Kind$Name$from_bits$(_bs$13));
                                                        var $1207 = $1211;
                                                        break;
                                                    case 'e':
                                                        var $1212 = String$nil;
                                                        var $1207 = $1212;
                                                        break;
                                                };
                                                var $1205 = $1207;
                                                break;
                                            case 'i':
                                                var $1213 = self.slice(0, -1);
                                                var _bs$11 = $1213;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1215 = self.slice(0, -1);
                                                        var _bs$13 = $1215;
                                                        var $1216 = String$cons$(121, Kind$Name$from_bits$(_bs$13));
                                                        var $1214 = $1216;
                                                        break;
                                                    case 'i':
                                                        var $1217 = self.slice(0, -1);
                                                        var _bs$13 = $1217;
                                                        var $1218 = String$cons$(122, Kind$Name$from_bits$(_bs$13));
                                                        var $1214 = $1218;
                                                        break;
                                                    case 'e':
                                                        var $1219 = String$nil;
                                                        var $1214 = $1219;
                                                        break;
                                                };
                                                var $1205 = $1214;
                                                break;
                                            case 'e':
                                                var $1220 = String$nil;
                                                var $1205 = $1220;
                                                break;
                                        };
                                        var $1203 = $1205;
                                        break;
                                    case 'i':
                                        var $1221 = self.slice(0, -1);
                                        var _bs$9 = $1221;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1223 = self.slice(0, -1);
                                                var _bs$11 = $1223;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1225 = self.slice(0, -1);
                                                        var _bs$13 = $1225;
                                                        var $1226 = String$cons$(48, Kind$Name$from_bits$(_bs$13));
                                                        var $1224 = $1226;
                                                        break;
                                                    case 'i':
                                                        var $1227 = self.slice(0, -1);
                                                        var _bs$13 = $1227;
                                                        var $1228 = String$cons$(49, Kind$Name$from_bits$(_bs$13));
                                                        var $1224 = $1228;
                                                        break;
                                                    case 'e':
                                                        var $1229 = String$nil;
                                                        var $1224 = $1229;
                                                        break;
                                                };
                                                var $1222 = $1224;
                                                break;
                                            case 'i':
                                                var $1230 = self.slice(0, -1);
                                                var _bs$11 = $1230;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1232 = self.slice(0, -1);
                                                        var _bs$13 = $1232;
                                                        var $1233 = String$cons$(50, Kind$Name$from_bits$(_bs$13));
                                                        var $1231 = $1233;
                                                        break;
                                                    case 'i':
                                                        var $1234 = self.slice(0, -1);
                                                        var _bs$13 = $1234;
                                                        var $1235 = String$cons$(51, Kind$Name$from_bits$(_bs$13));
                                                        var $1231 = $1235;
                                                        break;
                                                    case 'e':
                                                        var $1236 = String$nil;
                                                        var $1231 = $1236;
                                                        break;
                                                };
                                                var $1222 = $1231;
                                                break;
                                            case 'e':
                                                var $1237 = String$nil;
                                                var $1222 = $1237;
                                                break;
                                        };
                                        var $1203 = $1222;
                                        break;
                                    case 'e':
                                        var $1238 = String$nil;
                                        var $1203 = $1238;
                                        break;
                                };
                                var $1201 = $1203;
                                break;
                            case 'i':
                                var $1239 = self.slice(0, -1);
                                var _bs$7 = $1239;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1241 = self.slice(0, -1);
                                        var _bs$9 = $1241;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1243 = self.slice(0, -1);
                                                var _bs$11 = $1243;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1245 = self.slice(0, -1);
                                                        var _bs$13 = $1245;
                                                        var $1246 = String$cons$(52, Kind$Name$from_bits$(_bs$13));
                                                        var $1244 = $1246;
                                                        break;
                                                    case 'i':
                                                        var $1247 = self.slice(0, -1);
                                                        var _bs$13 = $1247;
                                                        var $1248 = String$cons$(53, Kind$Name$from_bits$(_bs$13));
                                                        var $1244 = $1248;
                                                        break;
                                                    case 'e':
                                                        var $1249 = String$nil;
                                                        var $1244 = $1249;
                                                        break;
                                                };
                                                var $1242 = $1244;
                                                break;
                                            case 'i':
                                                var $1250 = self.slice(0, -1);
                                                var _bs$11 = $1250;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1252 = self.slice(0, -1);
                                                        var _bs$13 = $1252;
                                                        var $1253 = String$cons$(54, Kind$Name$from_bits$(_bs$13));
                                                        var $1251 = $1253;
                                                        break;
                                                    case 'i':
                                                        var $1254 = self.slice(0, -1);
                                                        var _bs$13 = $1254;
                                                        var $1255 = String$cons$(55, Kind$Name$from_bits$(_bs$13));
                                                        var $1251 = $1255;
                                                        break;
                                                    case 'e':
                                                        var $1256 = String$nil;
                                                        var $1251 = $1256;
                                                        break;
                                                };
                                                var $1242 = $1251;
                                                break;
                                            case 'e':
                                                var $1257 = String$nil;
                                                var $1242 = $1257;
                                                break;
                                        };
                                        var $1240 = $1242;
                                        break;
                                    case 'i':
                                        var $1258 = self.slice(0, -1);
                                        var _bs$9 = $1258;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1260 = self.slice(0, -1);
                                                var _bs$11 = $1260;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1262 = self.slice(0, -1);
                                                        var _bs$13 = $1262;
                                                        var $1263 = String$cons$(56, Kind$Name$from_bits$(_bs$13));
                                                        var $1261 = $1263;
                                                        break;
                                                    case 'i':
                                                        var $1264 = self.slice(0, -1);
                                                        var _bs$13 = $1264;
                                                        var $1265 = String$cons$(57, Kind$Name$from_bits$(_bs$13));
                                                        var $1261 = $1265;
                                                        break;
                                                    case 'e':
                                                        var $1266 = String$nil;
                                                        var $1261 = $1266;
                                                        break;
                                                };
                                                var $1259 = $1261;
                                                break;
                                            case 'i':
                                                var $1267 = self.slice(0, -1);
                                                var _bs$11 = $1267;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1269 = self.slice(0, -1);
                                                        var _bs$13 = $1269;
                                                        var $1270 = String$cons$(46, Kind$Name$from_bits$(_bs$13));
                                                        var $1268 = $1270;
                                                        break;
                                                    case 'i':
                                                        var $1271 = self.slice(0, -1);
                                                        var _bs$13 = $1271;
                                                        var $1272 = String$cons$(95, Kind$Name$from_bits$(_bs$13));
                                                        var $1268 = $1272;
                                                        break;
                                                    case 'e':
                                                        var $1273 = String$nil;
                                                        var $1268 = $1273;
                                                        break;
                                                };
                                                var $1259 = $1268;
                                                break;
                                            case 'e':
                                                var $1274 = String$nil;
                                                var $1259 = $1274;
                                                break;
                                        };
                                        var $1240 = $1259;
                                        break;
                                    case 'e':
                                        var $1275 = String$nil;
                                        var $1240 = $1275;
                                        break;
                                };
                                var $1201 = $1240;
                                break;
                            case 'e':
                                var $1276 = String$nil;
                                var $1201 = $1276;
                                break;
                        };
                        var $1122 = $1201;
                        break;
                    case 'e':
                        var $1277 = String$nil;
                        var $1122 = $1277;
                        break;
                };
                var $963 = $1122;
                break;
            case 'e':
                var $1278 = String$nil;
                var $963 = $1278;
                break;
        };
        return $963;
    };
    const Kind$Name$from_bits = x0 => Kind$Name$from_bits$(x0);

    function Kind$Map$to_list$(_xs$2) {
        var _kvs$3 = List$reverse$(BitsMap$to_list$go$(_xs$2, Bits$e, List$nil));
        var $1279 = List$mapped$(_kvs$3, (_kv$4 => {
            var self = _kv$4;
            switch (self._) {
                case 'Pair.new':
                    var $1281 = self.fst;
                    var $1282 = self.snd;
                    var $1283 = Pair$new$(Kind$Name$from_bits$($1281), $1282);
                    var $1280 = $1283;
                    break;
            };
            return $1280;
        }));
        return $1279;
    };
    const Kind$Map$to_list = x0 => Kind$Map$to_list$(x0);

    function Kind$Map$keys$(_xs$2) {
        var $1284 = List$mapped$(Kind$Map$to_list$(_xs$2), Pair$fst);
        return $1284;
    };
    const Kind$Map$keys = x0 => Kind$Map$keys$(x0);

    function Kind$Synth$load$cached$(_names$1, _defs$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.cons':
                var $1286 = self.head;
                var $1287 = self.tail;
                var self = Kind$Synth$load$cached$is_loop$($1286, _defs$2);
                if (self) {
                    var $1289 = Kind$Synth$load$cached$($1287, _defs$2);
                    var $1288 = $1289;
                } else {
                    var _name$5 = $1286;
                    var $1290 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                        var $1291 = _m$bind$6;
                        return $1291;
                    }))(Kind$Synth$load$cached$def$(_name$5))((_defn$6 => {
                        var self = _defn$6;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1293 = self.value;
                                var self = $1293;
                                switch (self._) {
                                    case 'Kind.Def.new':
                                        var $1295 = self.term;
                                        var $1296 = self.type;
                                        var _defs$17 = Kind$Map$set$(_name$5, $1293, _defs$2);
                                        var _deps$18 = Kind$Map$new;
                                        var _deps$19 = Kind$Core$dependencies$go$($1295, _deps$18);
                                        var _deps$20 = Kind$Core$dependencies$go$($1296, _deps$19);
                                        var _deps$21 = Kind$Map$keys$(_deps$20);
                                        var $1297 = IO$monad$((_m$bind$22 => _m$pure$23 => {
                                            var $1298 = _m$bind$22;
                                            return $1298;
                                        }))(Kind$Synth$load$cached$(_deps$21, _defs$17))((_defs$22 => {
                                            var self = _defs$22;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $1300 = self.value;
                                                    var $1301 = Kind$Synth$load$cached$($1287, $1300);
                                                    var $1299 = $1301;
                                                    break;
                                                case 'Maybe.none':
                                                    var $1302 = IO$monad$((_m$bind$23 => _m$pure$24 => {
                                                        var $1303 = _m$pure$24;
                                                        return $1303;
                                                    }))(Maybe$none);
                                                    var $1299 = $1302;
                                                    break;
                                            };
                                            return $1299;
                                        }));
                                        var $1294 = $1297;
                                        break;
                                };
                                var $1292 = $1294;
                                break;
                            case 'Maybe.none':
                                var $1304 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                                    var $1305 = _m$pure$8;
                                    return $1305;
                                }))(Maybe$none);
                                var $1292 = $1304;
                                break;
                        };
                        return $1292;
                    }));
                    var $1288 = $1290;
                };
                var $1285 = $1288;
                break;
            case 'List.nil':
                var $1306 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $1307 = _m$pure$4;
                    return $1307;
                }))(Maybe$some$(_defs$2));
                var $1285 = $1306;
                break;
        };
        return $1285;
    };
    const Kind$Synth$load$cached = x0 => x1 => Kind$Synth$load$cached$(x0, x1);

    function IO$request$(_url$1) {
        var $1308 = IO$ask$("request", _url$1, (_text$2 => {
            var $1309 = IO$end$(_text$2);
            return $1309;
        }));
        return $1308;
    };
    const IO$request = x0 => IO$request$(x0);

    function Kind$Synth$get_kind_code$(_file$1) {
        var $1310 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $1311 = _m$bind$2;
            return $1311;
        }))(IO$get_file$(_file$1))((_code$2 => {
            var self = (_code$2 === "");
            if (self) {
                var $1313 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $1314 = _m$bind$3;
                    return $1314;
                }))(IO$request$(("http://uwu.tech:7172/" + _file$1)))((_code$3 => {
                    var $1315 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $1316 = _m$pure$5;
                        return $1316;
                    }))(_code$3);
                    return $1315;
                }));
                var $1312 = $1313;
            } else {
                var $1317 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $1318 = _m$pure$4;
                    return $1318;
                }))(_code$2);
                var $1312 = $1317;
            };
            return $1312;
        }));
        return $1310;
    };
    const Kind$Synth$get_kind_code = x0 => Kind$Synth$get_kind_code$(x0);

    function Parser$is_eof$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1320 = self.str;
                var self = $1320;
                if (self.length === 0) {
                    var $1322 = Parser$Reply$value$(_pst$1, Bool$true);
                    var $1321 = $1322;
                } else {
                    var $1323 = self.charCodeAt(0);
                    var $1324 = self.slice(1);
                    var $1325 = Parser$Reply$value$(_pst$1, Bool$false);
                    var $1321 = $1325;
                };
                var $1319 = $1321;
                break;
        };
        return $1319;
    };
    const Parser$is_eof = x0 => Parser$is_eof$(x0);

    function Parser$(_V$1) {
        var $1326 = null;
        return $1326;
    };
    const Parser = x0 => Parser$(x0);

    function Parser$choice$(_pars$2, _pst$3) {
        var Parser$choice$ = (_pars$2, _pst$3) => ({
            ctr: 'TCO',
            arg: [_pars$2, _pst$3]
        });
        var Parser$choice = _pars$2 => _pst$3 => Parser$choice$(_pars$2, _pst$3);
        var arg = [_pars$2, _pst$3];
        while (true) {
            let [_pars$2, _pst$3] = arg;
            var R = (() => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $1327 = self.err;
                        var $1328 = self.nam;
                        var $1329 = self.ini;
                        var $1330 = self.idx;
                        var $1331 = self.str;
                        var self = _pars$2;
                        switch (self._) {
                            case 'List.cons':
                                var $1333 = self.head;
                                var $1334 = self.tail;
                                var _parsed$11 = $1333(_pst$3);
                                var self = _parsed$11;
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $1336 = self.err;
                                        var _cur_err$13 = Maybe$some$($1336);
                                        var _far_err$14 = Parser$Error$maybe_combine$($1327, _cur_err$13);
                                        var _new_pst$15 = Parser$State$new$(_far_err$14, $1328, $1329, $1330, $1331);
                                        var $1337 = Parser$choice$($1334, _new_pst$15);
                                        var $1335 = $1337;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $1338 = self.pst;
                                        var $1339 = self.val;
                                        var $1340 = Parser$Reply$value$($1338, $1339);
                                        var $1335 = $1340;
                                        break;
                                };
                                var $1332 = $1335;
                                break;
                            case 'List.nil':
                                var self = $1327;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $1342 = self.value;
                                        var $1343 = Parser$Reply$error$($1342);
                                        var $1341 = $1343;
                                        break;
                                    case 'Maybe.none':
                                        var $1344 = Parser$Reply$fail$($1328, $1329, $1330, "No parse.");
                                        var $1341 = $1344;
                                        break;
                                };
                                var $1332 = $1341;
                                break;
                        };
                        return $1332;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$choice = x0 => x1 => Parser$choice$(x0, x1);

    function Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4) {
        var Parser$text$go$ = (_ini_idx$1, _ini_txt$2, _text$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_ini_idx$1, _ini_txt$2, _text$3, _pst$4]
        });
        var Parser$text$go = _ini_idx$1 => _ini_txt$2 => _text$3 => _pst$4 => Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4);
        var arg = [_ini_idx$1, _ini_txt$2, _text$3, _pst$4];
        while (true) {
            let [_ini_idx$1, _ini_txt$2, _text$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var $1345 = self.err;
                        var $1346 = self.nam;
                        var $1347 = self.ini;
                        var $1348 = self.idx;
                        var $1349 = self.str;
                        var self = _text$3;
                        if (self.length === 0) {
                            var $1351 = Parser$Reply$value$(_pst$4, Unit$new);
                            var $1350 = $1351;
                        } else {
                            var $1352 = self.charCodeAt(0);
                            var $1353 = self.slice(1);
                            var self = $1349;
                            if (self.length === 0) {
                                var _error_msg$12 = ("Expected \'" + (_ini_txt$2 + "\', found end of file."));
                                var $1355 = Parser$Reply$fail$($1346, $1347, _ini_idx$1, _error_msg$12);
                                var $1354 = $1355;
                            } else {
                                var $1356 = self.charCodeAt(0);
                                var $1357 = self.slice(1);
                                var self = ($1352 === $1356);
                                if (self) {
                                    var _pst$14 = Parser$State$new$($1345, $1346, $1347, Nat$succ$($1348), $1357);
                                    var $1359 = Parser$text$go$(_ini_idx$1, _ini_txt$2, $1353, _pst$14);
                                    var $1358 = $1359;
                                } else {
                                    var _chr$14 = String$cons$($1356, String$nil);
                                    var _err$15 = ("Expected \'" + (_ini_txt$2 + ("\', found \'" + (_chr$14 + "\'."))));
                                    var $1360 = Parser$Reply$fail$($1346, $1347, _ini_idx$1, _err$15);
                                    var $1358 = $1360;
                                };
                                var $1354 = $1358;
                            };
                            var $1350 = $1354;
                        };
                        return $1350;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$text$go = x0 => x1 => x2 => x3 => Parser$text$go$(x0, x1, x2, x3);

    function Parser$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1362 = self.idx;
                var self = Parser$text$go$($1362, _text$1, _text$1, _pst$2);
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1364 = self.err;
                        var $1365 = Parser$Reply$error$($1364);
                        var $1363 = $1365;
                        break;
                    case 'Parser.Reply.value':
                        var $1366 = self.pst;
                        var $1367 = self.val;
                        var $1368 = Parser$Reply$value$($1366, $1367);
                        var $1363 = $1368;
                        break;
                };
                var $1361 = $1363;
                break;
        };
        return $1361;
    };
    const Parser$text = x0 => x1 => Parser$text$(x0, x1);

    function Parser$eof$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1370 = self.nam;
                var $1371 = self.ini;
                var $1372 = self.idx;
                var $1373 = self.str;
                var self = $1373;
                if (self.length === 0) {
                    var $1375 = Parser$Reply$value$(_pst$1, Unit$new);
                    var $1374 = $1375;
                } else {
                    var $1376 = self.charCodeAt(0);
                    var $1377 = self.slice(1);
                    var $1378 = Parser$Reply$fail$($1370, $1371, $1372, "Expected end-of-file.");
                    var $1374 = $1378;
                };
                var $1369 = $1374;
                break;
        };
        return $1369;
    };
    const Parser$eof = x0 => Parser$eof$(x0);

    function Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5) {
        var Parser$until$go$ = (_until$2, _parse$3, _values$4, _pst$5) => ({
            ctr: 'TCO',
            arg: [_until$2, _parse$3, _values$4, _pst$5]
        });
        var Parser$until$go = _until$2 => _parse$3 => _values$4 => _pst$5 => Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5);
        var arg = [_until$2, _parse$3, _values$4, _pst$5];
        while (true) {
            let [_until$2, _parse$3, _values$4, _pst$5] = arg;
            var R = (() => {
                var _until_reply$6 = _until$2(_pst$5);
                var self = _until_reply$6;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1380 = self.err;
                        var _reply$8 = _parse$3(_pst$5);
                        var self = _reply$8;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $1382 = self.err;
                                var $1383 = Parser$Reply$error$(Parser$Error$combine$($1382, $1380));
                                var $1381 = $1383;
                                break;
                            case 'Parser.Reply.value':
                                var $1384 = self.pst;
                                var $1385 = self.val;
                                var $1386 = Parser$until$go$(_until$2, _parse$3, List$cons$($1385, _values$4), $1384);
                                var $1381 = $1386;
                                break;
                        };
                        var $1379 = $1381;
                        break;
                    case 'Parser.Reply.value':
                        var $1387 = self.pst;
                        var $1388 = Parser$Reply$value$($1387, List$reverse$(_values$4));
                        var $1379 = $1388;
                        break;
                };
                return $1379;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$until$go = x0 => x1 => x2 => x3 => Parser$until$go$(x0, x1, x2, x3);

    function Parser$until$(_until$2, _parse$3) {
        var $1389 = Parser$until$go(_until$2)(_parse$3)(List$nil);
        return $1389;
    };
    const Parser$until = x0 => x1 => Parser$until$(x0, x1);

    function Parser$one$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1391 = self.err;
                var $1392 = self.nam;
                var $1393 = self.ini;
                var $1394 = self.idx;
                var $1395 = self.str;
                var self = $1395;
                if (self.length === 0) {
                    var $1397 = Parser$Reply$fail$($1392, $1393, $1394, "Unexpected end of file.");
                    var $1396 = $1397;
                } else {
                    var $1398 = self.charCodeAt(0);
                    var $1399 = self.slice(1);
                    var _pst$9 = Parser$State$new$($1391, $1392, $1393, Nat$succ$($1394), $1399);
                    var $1400 = Parser$Reply$value$(_pst$9, $1398);
                    var $1396 = $1400;
                };
                var $1390 = $1396;
                break;
        };
        return $1390;
    };
    const Parser$one = x0 => Parser$one$(x0);

    function Kind$Parser$comment$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1402 = self.err;
                var _reply$7 = Parser$text$("//", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1404 = self.err;
                        var self = $1402;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1406 = self.value;
                                var $1407 = Parser$Reply$error$(Parser$Error$combine$($1406, $1404));
                                var $1405 = $1407;
                                break;
                            case 'Maybe.none':
                                var $1408 = Parser$Reply$error$($1404);
                                var $1405 = $1408;
                                break;
                        };
                        var $1403 = $1405;
                        break;
                    case 'Parser.Reply.value':
                        var $1409 = self.pst;
                        var self = $1409;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1411 = self.err;
                                var $1412 = self.nam;
                                var $1413 = self.ini;
                                var $1414 = self.idx;
                                var $1415 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1402, $1411), $1412, $1413, $1414, $1415);
                                var _end$16 = Parser$choice(List$cons$(Parser$text("\u{a}"), List$cons$(Parser$eof, List$nil)));
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1417 = self.err;
                                        var _reply$22 = Parser$until$(_end$16, Parser$one)(_reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1419 = self.err;
                                                var self = $1417;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1421 = self.value;
                                                        var $1422 = Parser$Reply$error$(Parser$Error$combine$($1421, $1419));
                                                        var $1420 = $1422;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1423 = Parser$Reply$error$($1419);
                                                        var $1420 = $1423;
                                                        break;
                                                };
                                                var $1418 = $1420;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1424 = self.pst;
                                                var self = $1424;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1426 = self.err;
                                                        var $1427 = self.nam;
                                                        var $1428 = self.ini;
                                                        var $1429 = self.idx;
                                                        var $1430 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1417, $1426), $1427, $1428, $1429, $1430);
                                                        var $1431 = Parser$Reply$value$(_reply$pst$30, Unit$new);
                                                        var $1425 = $1431;
                                                        break;
                                                };
                                                var $1418 = $1425;
                                                break;
                                        };
                                        var $1416 = $1418;
                                        break;
                                };
                                var $1410 = $1416;
                                break;
                        };
                        var $1403 = $1410;
                        break;
                };
                var $1401 = $1403;
                break;
        };
        return $1401;
    };
    const Kind$Parser$comment = x0 => Kind$Parser$comment$(x0);
    const Kind$Parser$spaces = Parser$many$(Parser$choice(List$cons$(Parser$text(" "), List$cons$(Parser$text("\u{9}"), List$cons$(Parser$text("\u{d}"), List$cons$(Parser$text("\u{a}"), List$cons$(Kind$Parser$comment, List$nil)))))));

    function Parser$get_idx$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1433 = self.idx;
                var $1434 = Parser$Reply$value$(_pst$1, $1433);
                var $1432 = $1434;
                break;
        };
        return $1432;
    };
    const Parser$get_idx = x0 => Parser$get_idx$(x0);

    function U16$btw$(_a$1, _b$2, _c$3) {
        var $1435 = ((_a$1 <= _b$2) && (_b$2 <= _c$3));
        return $1435;
    };
    const U16$btw = x0 => x1 => x2 => U16$btw$(x0, x1, x2);

    function Kind$Name$is_letter$(_chr$1) {
        var self = U16$btw$(65, _chr$1, 90);
        if (self) {
            var $1437 = Bool$true;
            var $1436 = $1437;
        } else {
            var self = U16$btw$(97, _chr$1, 122);
            if (self) {
                var $1439 = Bool$true;
                var $1438 = $1439;
            } else {
                var self = U16$btw$(48, _chr$1, 57);
                if (self) {
                    var $1441 = Bool$true;
                    var $1440 = $1441;
                } else {
                    var self = (46 === _chr$1);
                    if (self) {
                        var $1443 = Bool$true;
                        var $1442 = $1443;
                    } else {
                        var self = (95 === _chr$1);
                        if (self) {
                            var $1445 = Bool$true;
                            var $1444 = $1445;
                        } else {
                            var self = (94 === _chr$1);
                            if (self) {
                                var $1447 = Bool$true;
                                var $1446 = $1447;
                            } else {
                                var $1448 = Bool$false;
                                var $1446 = $1448;
                            };
                            var $1444 = $1446;
                        };
                        var $1442 = $1444;
                    };
                    var $1440 = $1442;
                };
                var $1438 = $1440;
            };
            var $1436 = $1438;
        };
        return $1436;
    };
    const Kind$Name$is_letter = x0 => Kind$Name$is_letter$(x0);

    function Kind$Parser$letter$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1450 = self.err;
                var $1451 = self.nam;
                var $1452 = self.ini;
                var $1453 = self.idx;
                var $1454 = self.str;
                var self = $1454;
                if (self.length === 0) {
                    var $1456 = Parser$Reply$fail$($1451, $1452, $1453, "Unexpected eof.");
                    var $1455 = $1456;
                } else {
                    var $1457 = self.charCodeAt(0);
                    var $1458 = self.slice(1);
                    var self = Kind$Name$is_letter$($1457);
                    if (self) {
                        var _pst$9 = Parser$State$new$($1450, $1451, $1452, Nat$succ$($1453), $1458);
                        var $1460 = Parser$Reply$value$(_pst$9, $1457);
                        var $1459 = $1460;
                    } else {
                        var $1461 = Parser$Reply$fail$($1451, $1452, $1453, "Expected name.");
                        var $1459 = $1461;
                    };
                    var $1455 = $1459;
                };
                var $1449 = $1455;
                break;
        };
        return $1449;
    };
    const Kind$Parser$letter = x0 => Kind$Parser$letter$(x0);

    function List$fold$(_list$2, _nil$4, _cons$5) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $1463 = self.head;
                var $1464 = self.tail;
                var $1465 = _cons$5($1463)(List$fold$($1464, _nil$4, _cons$5));
                var $1462 = $1465;
                break;
            case 'List.nil':
                var $1466 = _nil$4;
                var $1462 = $1466;
                break;
        };
        return $1462;
    };
    const List$fold = x0 => x1 => x2 => List$fold$(x0, x1, x2);

    function Parser$fail$(_error$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $1468 = self.nam;
                var $1469 = self.ini;
                var $1470 = self.idx;
                var $1471 = Parser$Reply$fail$($1468, $1469, $1470, _error$2);
                var $1467 = $1471;
                break;
        };
        return $1467;
    };
    const Parser$fail = x0 => x1 => Parser$fail$(x0, x1);

    function String$head$(_xs$1) {
        var self = _xs$1;
        if (self.length === 0) {
            var $1473 = Maybe$none;
            var $1472 = $1473;
        } else {
            var $1474 = self.charCodeAt(0);
            var $1475 = self.slice(1);
            var $1476 = Maybe$some$($1474);
            var $1472 = $1476;
        };
        return $1472;
    };
    const String$head = x0 => String$head$(x0);

    function Kind$Parser$name1$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1478 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1480 = self.err;
                        var self = $1478;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1482 = self.value;
                                var $1483 = Parser$Reply$error$(Parser$Error$combine$($1482, $1480));
                                var $1481 = $1483;
                                break;
                            case 'Maybe.none':
                                var $1484 = Parser$Reply$error$($1480);
                                var $1481 = $1484;
                                break;
                        };
                        var $1479 = $1481;
                        break;
                    case 'Parser.Reply.value':
                        var $1485 = self.pst;
                        var self = $1485;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1487 = self.err;
                                var $1488 = self.nam;
                                var $1489 = self.ini;
                                var $1490 = self.idx;
                                var $1491 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1478, $1487), $1488, $1489, $1490, $1491);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1493 = self.err;
                                        var _reply$21 = Parser$many1$(Kind$Parser$letter, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1495 = self.err;
                                                var self = $1493;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1497 = self.value;
                                                        var $1498 = Parser$Reply$error$(Parser$Error$combine$($1497, $1495));
                                                        var $1496 = $1498;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1499 = Parser$Reply$error$($1495);
                                                        var $1496 = $1499;
                                                        break;
                                                };
                                                var $1494 = $1496;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1500 = self.pst;
                                                var $1501 = self.val;
                                                var self = $1500;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1503 = self.err;
                                                        var $1504 = self.nam;
                                                        var $1505 = self.ini;
                                                        var $1506 = self.idx;
                                                        var $1507 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1493, $1503), $1504, $1505, $1506, $1507);
                                                        var _name$30 = List$fold$($1501, String$nil, String$cons);
                                                        var _reserved$31 = Parser$fail("Reserved keyword.");
                                                        var _numeric$32 = Parser$fail("Name can\'t start with number or sign.");
                                                        var self = (_name$30 === "case");
                                                        if (self) {
                                                            var $1509 = _reserved$31;
                                                            var $1508 = $1509;
                                                        } else {
                                                            var self = (_name$30 === "do");
                                                            if (self) {
                                                                var $1511 = _reserved$31;
                                                                var $1510 = $1511;
                                                            } else {
                                                                var self = (_name$30 === "if");
                                                                if (self) {
                                                                    var $1513 = _reserved$31;
                                                                    var $1512 = $1513;
                                                                } else {
                                                                    var self = (_name$30 === "with");
                                                                    if (self) {
                                                                        var $1515 = _reserved$31;
                                                                        var $1514 = $1515;
                                                                    } else {
                                                                        var self = (_name$30 === "for");
                                                                        if (self) {
                                                                            var $1517 = _reserved$31;
                                                                            var $1516 = $1517;
                                                                        } else {
                                                                            var self = (_name$30 === "else");
                                                                            if (self) {
                                                                                var $1519 = _reserved$31;
                                                                                var $1518 = $1519;
                                                                            } else {
                                                                                var self = (_name$30 === "switch");
                                                                                if (self) {
                                                                                    var $1521 = _reserved$31;
                                                                                    var $1520 = $1521;
                                                                                } else {
                                                                                    var self = (Maybe$default$(String$head$(_name$30), 120) === 43);
                                                                                    if (self) {
                                                                                        var $1523 = _numeric$32;
                                                                                        var $1522 = $1523;
                                                                                    } else {
                                                                                        var self = (Maybe$default$(String$head$(_name$30), 120) === 45);
                                                                                        if (self) {
                                                                                            var $1525 = _numeric$32;
                                                                                            var $1524 = $1525;
                                                                                        } else {
                                                                                            var self = (Maybe$default$(String$head$(_name$30), 120) === 48);
                                                                                            if (self) {
                                                                                                var $1527 = _numeric$32;
                                                                                                var $1526 = $1527;
                                                                                            } else {
                                                                                                var self = (Maybe$default$(String$head$(_name$30), 120) === 49);
                                                                                                if (self) {
                                                                                                    var $1529 = _numeric$32;
                                                                                                    var $1528 = $1529;
                                                                                                } else {
                                                                                                    var self = (Maybe$default$(String$head$(_name$30), 120) === 50);
                                                                                                    if (self) {
                                                                                                        var $1531 = _numeric$32;
                                                                                                        var $1530 = $1531;
                                                                                                    } else {
                                                                                                        var self = (Maybe$default$(String$head$(_name$30), 120) === 51);
                                                                                                        if (self) {
                                                                                                            var $1533 = _numeric$32;
                                                                                                            var $1532 = $1533;
                                                                                                        } else {
                                                                                                            var self = (Maybe$default$(String$head$(_name$30), 120) === 52);
                                                                                                            if (self) {
                                                                                                                var $1535 = _numeric$32;
                                                                                                                var $1534 = $1535;
                                                                                                            } else {
                                                                                                                var self = (Maybe$default$(String$head$(_name$30), 120) === 53);
                                                                                                                if (self) {
                                                                                                                    var $1537 = _numeric$32;
                                                                                                                    var $1536 = $1537;
                                                                                                                } else {
                                                                                                                    var self = (Maybe$default$(String$head$(_name$30), 120) === 54);
                                                                                                                    if (self) {
                                                                                                                        var $1539 = _numeric$32;
                                                                                                                        var $1538 = $1539;
                                                                                                                    } else {
                                                                                                                        var self = (Maybe$default$(String$head$(_name$30), 120) === 55);
                                                                                                                        if (self) {
                                                                                                                            var $1541 = _numeric$32;
                                                                                                                            var $1540 = $1541;
                                                                                                                        } else {
                                                                                                                            var self = (Maybe$default$(String$head$(_name$30), 120) === 56);
                                                                                                                            if (self) {
                                                                                                                                var $1543 = _numeric$32;
                                                                                                                                var $1542 = $1543;
                                                                                                                            } else {
                                                                                                                                var self = (Maybe$default$(String$head$(_name$30), 120) === 57);
                                                                                                                                if (self) {
                                                                                                                                    var $1545 = _numeric$32;
                                                                                                                                    var $1544 = $1545;
                                                                                                                                } else {
                                                                                                                                    var $1546 = (_pst$33 => {
                                                                                                                                        var $1547 = Parser$Reply$value$(_pst$33, _name$30);
                                                                                                                                        return $1547;
                                                                                                                                    });
                                                                                                                                    var $1544 = $1546;
                                                                                                                                };
                                                                                                                                var $1542 = $1544;
                                                                                                                            };
                                                                                                                            var $1540 = $1542;
                                                                                                                        };
                                                                                                                        var $1538 = $1540;
                                                                                                                    };
                                                                                                                    var $1536 = $1538;
                                                                                                                };
                                                                                                                var $1534 = $1536;
                                                                                                            };
                                                                                                            var $1532 = $1534;
                                                                                                        };
                                                                                                        var $1530 = $1532;
                                                                                                    };
                                                                                                    var $1528 = $1530;
                                                                                                };
                                                                                                var $1526 = $1528;
                                                                                            };
                                                                                            var $1524 = $1526;
                                                                                        };
                                                                                        var $1522 = $1524;
                                                                                    };
                                                                                    var $1520 = $1522;
                                                                                };
                                                                                var $1518 = $1520;
                                                                            };
                                                                            var $1516 = $1518;
                                                                        };
                                                                        var $1514 = $1516;
                                                                    };
                                                                    var $1512 = $1514;
                                                                };
                                                                var $1510 = $1512;
                                                            };
                                                            var $1508 = $1510;
                                                        };
                                                        var $1508 = $1508(_reply$pst$29);
                                                        var $1502 = $1508;
                                                        break;
                                                };
                                                var $1494 = $1502;
                                                break;
                                        };
                                        var $1492 = $1494;
                                        break;
                                };
                                var $1486 = $1492;
                                break;
                        };
                        var $1479 = $1486;
                        break;
                };
                var $1477 = $1479;
                break;
        };
        return $1477;
    };
    const Kind$Parser$name1 = x0 => Kind$Parser$name1$(x0);

    function Parser$until1$(_cond$2, _parser$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $1549 = self.err;
                var _reply$10 = _parser$3(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1551 = self.err;
                        var self = $1549;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1553 = self.value;
                                var $1554 = Parser$Reply$error$(Parser$Error$combine$($1553, $1551));
                                var $1552 = $1554;
                                break;
                            case 'Maybe.none':
                                var $1555 = Parser$Reply$error$($1551);
                                var $1552 = $1555;
                                break;
                        };
                        var $1550 = $1552;
                        break;
                    case 'Parser.Reply.value':
                        var $1556 = self.pst;
                        var $1557 = self.val;
                        var self = $1556;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1559 = self.err;
                                var $1560 = self.nam;
                                var $1561 = self.ini;
                                var $1562 = self.idx;
                                var $1563 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($1549, $1559), $1560, $1561, $1562, $1563);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1565 = self.err;
                                        var _reply$24 = Parser$until$(_cond$2, _parser$3)(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1567 = self.err;
                                                var self = $1565;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1569 = self.value;
                                                        var $1570 = Parser$Reply$error$(Parser$Error$combine$($1569, $1567));
                                                        var $1568 = $1570;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1571 = Parser$Reply$error$($1567);
                                                        var $1568 = $1571;
                                                        break;
                                                };
                                                var $1566 = $1568;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1572 = self.pst;
                                                var $1573 = self.val;
                                                var self = $1572;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1575 = self.err;
                                                        var $1576 = self.nam;
                                                        var $1577 = self.ini;
                                                        var $1578 = self.idx;
                                                        var $1579 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($1565, $1575), $1576, $1577, $1578, $1579);
                                                        var $1580 = Parser$Reply$value$(_reply$pst$32, List$cons$($1557, $1573));
                                                        var $1574 = $1580;
                                                        break;
                                                };
                                                var $1566 = $1574;
                                                break;
                                        };
                                        var $1564 = $1566;
                                        break;
                                };
                                var $1558 = $1564;
                                break;
                        };
                        var $1550 = $1558;
                        break;
                };
                var $1548 = $1550;
                break;
        };
        return $1548;
    };
    const Parser$until1 = x0 => x1 => x2 => Parser$until1$(x0, x1, x2);

    function Parser$wrap1$(_opens$2, _parse$3, _close$4, _pst$5) {
        var self = _pst$5;
        switch (self._) {
            case 'Parser.State.new':
                var $1582 = self.err;
                var _reply$11 = _opens$2(_pst$5);
                var self = _reply$11;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1584 = self.err;
                        var self = $1582;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1586 = self.value;
                                var $1587 = Parser$Reply$error$(Parser$Error$combine$($1586, $1584));
                                var $1585 = $1587;
                                break;
                            case 'Maybe.none':
                                var $1588 = Parser$Reply$error$($1584);
                                var $1585 = $1588;
                                break;
                        };
                        var $1583 = $1585;
                        break;
                    case 'Parser.Reply.value':
                        var $1589 = self.pst;
                        var self = $1589;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1591 = self.err;
                                var $1592 = self.nam;
                                var $1593 = self.ini;
                                var $1594 = self.idx;
                                var $1595 = self.str;
                                var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($1582, $1591), $1592, $1593, $1594, $1595);
                                var $1596 = Parser$until1$(_close$4, _parse$3, _reply$pst$19);
                                var $1590 = $1596;
                                break;
                        };
                        var $1583 = $1590;
                        break;
                };
                var $1581 = $1583;
                break;
        };
        return $1581;
    };
    const Parser$wrap1 = x0 => x1 => x2 => x3 => Parser$wrap1$(x0, x1, x2, x3);

    function Kind$Parser$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1598 = self.err;
                var _reply$8 = Kind$Parser$spaces(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1600 = self.err;
                        var self = $1598;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1602 = self.value;
                                var $1603 = Parser$Reply$error$(Parser$Error$combine$($1602, $1600));
                                var $1601 = $1603;
                                break;
                            case 'Maybe.none':
                                var $1604 = Parser$Reply$error$($1600);
                                var $1601 = $1604;
                                break;
                        };
                        var $1599 = $1601;
                        break;
                    case 'Parser.Reply.value':
                        var $1605 = self.pst;
                        var self = $1605;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1607 = self.err;
                                var $1608 = self.nam;
                                var $1609 = self.ini;
                                var $1610 = self.idx;
                                var $1611 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1598, $1607), $1608, $1609, $1610, $1611);
                                var $1612 = Parser$text$(_text$1, _reply$pst$16);
                                var $1606 = $1612;
                                break;
                        };
                        var $1599 = $1606;
                        break;
                };
                var $1597 = $1599;
                break;
        };
        return $1597;
    };
    const Kind$Parser$text = x0 => x1 => Kind$Parser$text$(x0, x1);

    function Parser$maybe$(_parse$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var self = _parse$2(_pst$3);
                switch (self._) {
                    case 'Parser.Reply.value':
                        var $1615 = self.pst;
                        var $1616 = self.val;
                        var $1617 = Parser$Reply$value$($1615, Maybe$some$($1616));
                        var $1614 = $1617;
                        break;
                    case 'Parser.Reply.error':
                        var $1618 = Parser$Reply$value$(_pst$3, Maybe$none);
                        var $1614 = $1618;
                        break;
                };
                var $1613 = $1614;
                break;
        };
        return $1613;
    };
    const Parser$maybe = x0 => x1 => Parser$maybe$(x0, x1);

    function Kind$Parser$items1$(_ini$2, _parser$3, _end$4) {
        var $1619 = Parser$wrap1(Kind$Parser$text(_ini$2))((_pst$5 => {
            var self = _pst$5;
            switch (self._) {
                case 'Parser.State.new':
                    var $1621 = self.err;
                    var _reply$11 = Kind$Parser$spaces(_pst$5);
                    var self = _reply$11;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1623 = self.err;
                            var self = $1621;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1625 = self.value;
                                    var $1626 = Parser$Reply$error$(Parser$Error$combine$($1625, $1623));
                                    var $1624 = $1626;
                                    break;
                                case 'Maybe.none':
                                    var $1627 = Parser$Reply$error$($1623);
                                    var $1624 = $1627;
                                    break;
                            };
                            var $1622 = $1624;
                            break;
                        case 'Parser.Reply.value':
                            var $1628 = self.pst;
                            var self = $1628;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1630 = self.err;
                                    var $1631 = self.nam;
                                    var $1632 = self.ini;
                                    var $1633 = self.idx;
                                    var $1634 = self.str;
                                    var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($1621, $1630), $1631, $1632, $1633, $1634);
                                    var self = _reply$pst$19;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $1636 = self.err;
                                            var _reply$25 = _parser$3(_reply$pst$19);
                                            var self = _reply$25;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $1638 = self.err;
                                                    var self = $1636;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $1640 = self.value;
                                                            var $1641 = Parser$Reply$error$(Parser$Error$combine$($1640, $1638));
                                                            var $1639 = $1641;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $1642 = Parser$Reply$error$($1638);
                                                            var $1639 = $1642;
                                                            break;
                                                    };
                                                    var $1637 = $1639;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $1643 = self.pst;
                                                    var $1644 = self.val;
                                                    var self = $1643;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $1646 = self.err;
                                                            var $1647 = self.nam;
                                                            var $1648 = self.ini;
                                                            var $1649 = self.idx;
                                                            var $1650 = self.str;
                                                            var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($1636, $1646), $1647, $1648, $1649, $1650);
                                                            var self = _reply$pst$33;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1652 = self.err;
                                                                    var _reply$39 = Parser$maybe$(Kind$Parser$text(","), _reply$pst$33);
                                                                    var self = _reply$39;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $1654 = self.err;
                                                                            var self = $1652;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $1656 = self.value;
                                                                                    var $1657 = Parser$Reply$error$(Parser$Error$combine$($1656, $1654));
                                                                                    var $1655 = $1657;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $1658 = Parser$Reply$error$($1654);
                                                                                    var $1655 = $1658;
                                                                                    break;
                                                                            };
                                                                            var $1653 = $1655;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $1659 = self.pst;
                                                                            var self = $1659;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $1661 = self.err;
                                                                                    var $1662 = self.nam;
                                                                                    var $1663 = self.ini;
                                                                                    var $1664 = self.idx;
                                                                                    var $1665 = self.str;
                                                                                    var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($1652, $1661), $1662, $1663, $1664, $1665);
                                                                                    var $1666 = Parser$Reply$value$(_reply$pst$47, $1644);
                                                                                    var $1660 = $1666;
                                                                                    break;
                                                                            };
                                                                            var $1653 = $1660;
                                                                            break;
                                                                    };
                                                                    var $1651 = $1653;
                                                                    break;
                                                            };
                                                            var $1645 = $1651;
                                                            break;
                                                    };
                                                    var $1637 = $1645;
                                                    break;
                                            };
                                            var $1635 = $1637;
                                            break;
                                    };
                                    var $1629 = $1635;
                                    break;
                            };
                            var $1622 = $1629;
                            break;
                    };
                    var $1620 = $1622;
                    break;
            };
            return $1620;
        }))(Kind$Parser$text(_end$4));
        return $1619;
    };
    const Kind$Parser$items1 = x0 => x1 => x2 => Kind$Parser$items1$(x0, x1, x2);

    function Kind$Parser$name$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1668 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1670 = self.err;
                        var self = $1668;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1672 = self.value;
                                var $1673 = Parser$Reply$error$(Parser$Error$combine$($1672, $1670));
                                var $1671 = $1673;
                                break;
                            case 'Maybe.none':
                                var $1674 = Parser$Reply$error$($1670);
                                var $1671 = $1674;
                                break;
                        };
                        var $1669 = $1671;
                        break;
                    case 'Parser.Reply.value':
                        var $1675 = self.pst;
                        var self = $1675;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1677 = self.err;
                                var $1678 = self.nam;
                                var $1679 = self.ini;
                                var $1680 = self.idx;
                                var $1681 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1668, $1677), $1678, $1679, $1680, $1681);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1683 = self.err;
                                        var _reply$21 = Parser$many$(Kind$Parser$letter)(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1685 = self.err;
                                                var self = $1683;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1687 = self.value;
                                                        var $1688 = Parser$Reply$error$(Parser$Error$combine$($1687, $1685));
                                                        var $1686 = $1688;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1689 = Parser$Reply$error$($1685);
                                                        var $1686 = $1689;
                                                        break;
                                                };
                                                var $1684 = $1686;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1690 = self.pst;
                                                var $1691 = self.val;
                                                var self = $1690;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1693 = self.err;
                                                        var $1694 = self.nam;
                                                        var $1695 = self.ini;
                                                        var $1696 = self.idx;
                                                        var $1697 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1683, $1693), $1694, $1695, $1696, $1697);
                                                        var $1698 = Parser$Reply$value$(_reply$pst$29, List$fold$($1691, String$nil, String$cons));
                                                        var $1692 = $1698;
                                                        break;
                                                };
                                                var $1684 = $1692;
                                                break;
                                        };
                                        var $1682 = $1684;
                                        break;
                                };
                                var $1676 = $1682;
                                break;
                        };
                        var $1669 = $1676;
                        break;
                };
                var $1667 = $1669;
                break;
        };
        return $1667;
    };
    const Kind$Parser$name = x0 => Kind$Parser$name$(x0);

    function Kind$Term$ori$(_orig$1, _expr$2) {
        var $1699 = ({
            _: 'Kind.Term.ori',
            'orig': _orig$1,
            'expr': _expr$2
        });
        return $1699;
    };
    const Kind$Term$ori = x0 => x1 => Kind$Term$ori$(x0, x1);

    function Kind$Parser$block$(_name$1, _parse$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var _reply$9 = Kind$Parser$spaces(_pst$3);
                var self = _reply$9;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1702 = self.err;
                        var $1703 = Parser$Reply$error$($1702);
                        var $1701 = $1703;
                        break;
                    case 'Parser.Reply.value':
                        var $1704 = self.pst;
                        var _pst$12 = $1704;
                        var self = _pst$12;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1706 = self.err;
                                var $1707 = self.nam;
                                var $1708 = self.ini;
                                var $1709 = self.idx;
                                var $1710 = self.str;
                                var _reply$18 = _parse$2(Parser$State$new$($1706, _name$1, $1709, $1709, $1710));
                                var self = _reply$18;
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $1712 = self.err;
                                        var $1713 = Parser$Reply$error$($1712);
                                        var $1711 = $1713;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $1714 = self.pst;
                                        var $1715 = self.val;
                                        var self = $1714;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $1717 = self.err;
                                                var $1718 = self.idx;
                                                var $1719 = self.str;
                                                var _new_pst$26 = Parser$State$new$($1717, $1707, $1708, $1718, $1719);
                                                var $1720 = Parser$Reply$value$(_new_pst$26, Kind$Term$ori$(Pair$new$($1709, $1718), $1715));
                                                var $1716 = $1720;
                                                break;
                                        };
                                        var $1711 = $1716;
                                        break;
                                };
                                var $1705 = $1711;
                                break;
                        };
                        var $1701 = $1705;
                        break;
                };
                var $1700 = $1701;
                break;
        };
        return $1700;
    };
    const Kind$Parser$block = x0 => x1 => x2 => Kind$Parser$block$(x0, x1, x2);

    function Kind$Parser$dom$prop$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1722 = self.err;
                var _reply$7 = Kind$Parser$name1$(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1724 = self.err;
                        var self = $1722;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1726 = self.value;
                                var $1727 = Parser$Reply$error$(Parser$Error$combine$($1726, $1724));
                                var $1725 = $1727;
                                break;
                            case 'Maybe.none':
                                var $1728 = Parser$Reply$error$($1724);
                                var $1725 = $1728;
                                break;
                        };
                        var $1723 = $1725;
                        break;
                    case 'Parser.Reply.value':
                        var $1729 = self.pst;
                        var $1730 = self.val;
                        var self = $1729;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1732 = self.err;
                                var $1733 = self.nam;
                                var $1734 = self.ini;
                                var $1735 = self.idx;
                                var $1736 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1722, $1732), $1733, $1734, $1735, $1736);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1738 = self.err;
                                        var _reply$21 = Kind$Parser$text$("=", _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1740 = self.err;
                                                var self = $1738;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1742 = self.value;
                                                        var $1743 = Parser$Reply$error$(Parser$Error$combine$($1742, $1740));
                                                        var $1741 = $1743;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1744 = Parser$Reply$error$($1740);
                                                        var $1741 = $1744;
                                                        break;
                                                };
                                                var $1739 = $1741;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1745 = self.pst;
                                                var self = $1745;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1747 = self.err;
                                                        var $1748 = self.nam;
                                                        var $1749 = self.ini;
                                                        var $1750 = self.idx;
                                                        var $1751 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1738, $1747), $1748, $1749, $1750, $1751);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1753 = self.err;
                                                                var _reply$35 = Kind$Parser$term(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1755 = self.err;
                                                                        var self = $1753;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1757 = self.value;
                                                                                var $1758 = Parser$Reply$error$(Parser$Error$combine$($1757, $1755));
                                                                                var $1756 = $1758;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1759 = Parser$Reply$error$($1755);
                                                                                var $1756 = $1759;
                                                                                break;
                                                                        };
                                                                        var $1754 = $1756;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1760 = self.pst;
                                                                        var $1761 = self.val;
                                                                        var self = $1760;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1763 = self.err;
                                                                                var $1764 = self.nam;
                                                                                var $1765 = self.ini;
                                                                                var $1766 = self.idx;
                                                                                var $1767 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1753, $1763), $1764, $1765, $1766, $1767);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1769 = self.err;
                                                                                        var _reply$49 = Kind$Parser$spaces(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1771 = self.err;
                                                                                                var self = $1769;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1773 = self.value;
                                                                                                        var $1774 = Parser$Reply$error$(Parser$Error$combine$($1773, $1771));
                                                                                                        var $1772 = $1774;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1775 = Parser$Reply$error$($1771);
                                                                                                        var $1772 = $1775;
                                                                                                        break;
                                                                                                };
                                                                                                var $1770 = $1772;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1776 = self.pst;
                                                                                                var self = $1776;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1778 = self.err;
                                                                                                        var $1779 = self.nam;
                                                                                                        var $1780 = self.ini;
                                                                                                        var $1781 = self.idx;
                                                                                                        var $1782 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($1769, $1778), $1779, $1780, $1781, $1782);
                                                                                                        var $1783 = Parser$Reply$value$(_reply$pst$57, Pair$new$($1730, $1761));
                                                                                                        var $1777 = $1783;
                                                                                                        break;
                                                                                                };
                                                                                                var $1770 = $1777;
                                                                                                break;
                                                                                        };
                                                                                        var $1768 = $1770;
                                                                                        break;
                                                                                };
                                                                                var $1762 = $1768;
                                                                                break;
                                                                        };
                                                                        var $1754 = $1762;
                                                                        break;
                                                                };
                                                                var $1752 = $1754;
                                                                break;
                                                        };
                                                        var $1746 = $1752;
                                                        break;
                                                };
                                                var $1739 = $1746;
                                                break;
                                        };
                                        var $1737 = $1739;
                                        break;
                                };
                                var $1731 = $1737;
                                break;
                        };
                        var $1723 = $1731;
                        break;
                };
                var $1721 = $1723;
                break;
        };
        return $1721;
    };
    const Kind$Parser$dom$prop = x0 => Kind$Parser$dom$prop$(x0);

    function Kind$Term$hol$(_path$1) {
        var $1784 = ({
            _: 'Kind.Term.hol',
            'path': _path$1
        });
        return $1784;
    };
    const Kind$Term$hol = x0 => Kind$Term$hol$(x0);

    function Kind$Parser$dom$gen_prop$go$(_values$1, _result$2) {
        var Kind$Parser$dom$gen_prop$go$ = (_values$1, _result$2) => ({
            ctr: 'TCO',
            arg: [_values$1, _result$2]
        });
        var Kind$Parser$dom$gen_prop$go = _values$1 => _result$2 => Kind$Parser$dom$gen_prop$go$(_values$1, _result$2);
        var arg = [_values$1, _result$2];
        while (true) {
            let [_values$1, _result$2] = arg;
            var R = (() => {
                var self = _values$1;
                switch (self._) {
                    case 'List.cons':
                        var $1785 = self.head;
                        var $1786 = self.tail;
                        var self = $1785;
                        switch (self._) {
                            case 'Pair.new':
                                var $1788 = self.fst;
                                var $1789 = self.snd;
                                var self = ($1788 === "style");
                                if (self) {
                                    var $1791 = Kind$Parser$dom$gen_prop$go$($1786, Pair$new$((() => {
                                        var self = _result$2;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $1792 = self.fst;
                                                var $1793 = $1792;
                                                return $1793;
                                        };
                                    })(), $1789));
                                    var $1790 = $1791;
                                } else {
                                    var _pair$7 = Kind$Term$ref$("Pair.new");
                                    var _pair$8 = Kind$Term$app$(_pair$7, Kind$Term$hol$(Bits$e));
                                    var _pair$9 = Kind$Term$app$(_pair$8, Kind$Term$hol$(Bits$e));
                                    var _pair$10 = Kind$Term$app$(_pair$9, Kind$Term$str$($1788));
                                    var _pair$11 = Kind$Term$app$(_pair$10, $1789);
                                    var _term$12 = Kind$Term$ref$("List.cons");
                                    var _term$13 = Kind$Term$app$(_term$12, Kind$Term$hol$(Bits$e));
                                    var _term$14 = Kind$Term$app$(_term$13, _pair$11);
                                    var _term$15 = Kind$Term$app$(_term$14, (() => {
                                        var self = _result$2;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $1795 = self.fst;
                                                var $1796 = $1795;
                                                return $1796;
                                        };
                                    })());
                                    var $1794 = Kind$Parser$dom$gen_prop$go$($1786, Pair$new$(_term$15, (() => {
                                        var self = _result$2;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $1797 = self.snd;
                                                var $1798 = $1797;
                                                return $1798;
                                        };
                                    })()));
                                    var $1790 = $1794;
                                };
                                var $1787 = $1790;
                                break;
                        };
                        return $1787;
                    case 'List.nil':
                        var $1799 = _result$2;
                        return $1799;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Parser$dom$gen_prop$go = x0 => x1 => Kind$Parser$dom$gen_prop$go$(x0, x1);

    function Kind$Parser$dom$gen_prop$(_values$1) {
        var _empty_list$2 = Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e));
        var _empty_map$3 = Kind$Term$app$(Kind$Term$ref$("Map.new"), Kind$Term$hol$(Bits$e));
        var self = Kind$Parser$dom$gen_prop$go$(_values$1, Pair$new$(_empty_list$2, _empty_map$3));
        switch (self._) {
            case 'Pair.new':
                var $1801 = self.fst;
                var $1802 = self.snd;
                var _term_prop$6 = Kind$Term$ref$("Map.from_list");
                var _term_prop$7 = Kind$Term$app$(_term_prop$6, Kind$Term$hol$(Bits$e));
                var _term_prop$8 = Kind$Term$app$(_term_prop$7, $1801);
                var $1803 = Pair$new$(_term_prop$8, $1802);
                var $1800 = $1803;
                break;
        };
        return $1800;
    };
    const Kind$Parser$dom$gen_prop = x0 => Kind$Parser$dom$gen_prop$(x0);
    const Kind$Parser$dom$for = Kind$Parser$block("for_dom")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1805 = self.err;
                var _reply$7 = Kind$Parser$text$("for ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1807 = self.err;
                        var self = $1805;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1809 = self.value;
                                var $1810 = Parser$Reply$error$(Parser$Error$combine$($1809, $1807));
                                var $1808 = $1810;
                                break;
                            case 'Maybe.none':
                                var $1811 = Parser$Reply$error$($1807);
                                var $1808 = $1811;
                                break;
                        };
                        var $1806 = $1808;
                        break;
                    case 'Parser.Reply.value':
                        var $1812 = self.pst;
                        var self = $1812;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1814 = self.err;
                                var $1815 = self.nam;
                                var $1816 = self.ini;
                                var $1817 = self.idx;
                                var $1818 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1805, $1814), $1815, $1816, $1817, $1818);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1820 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1822 = self.err;
                                                var self = $1820;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1824 = self.value;
                                                        var $1825 = Parser$Reply$error$(Parser$Error$combine$($1824, $1822));
                                                        var $1823 = $1825;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1826 = Parser$Reply$error$($1822);
                                                        var $1823 = $1826;
                                                        break;
                                                };
                                                var $1821 = $1823;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1827 = self.pst;
                                                var $1828 = self.val;
                                                var self = $1827;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1830 = self.err;
                                                        var $1831 = self.nam;
                                                        var $1832 = self.ini;
                                                        var $1833 = self.idx;
                                                        var $1834 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1820, $1830), $1831, $1832, $1833, $1834);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1836 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("in", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1838 = self.err;
                                                                        var self = $1836;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1840 = self.value;
                                                                                var $1841 = Parser$Reply$error$(Parser$Error$combine$($1840, $1838));
                                                                                var $1839 = $1841;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1842 = Parser$Reply$error$($1838);
                                                                                var $1839 = $1842;
                                                                                break;
                                                                        };
                                                                        var $1837 = $1839;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1843 = self.pst;
                                                                        var self = $1843;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1845 = self.err;
                                                                                var $1846 = self.nam;
                                                                                var $1847 = self.ini;
                                                                                var $1848 = self.idx;
                                                                                var $1849 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1836, $1845), $1846, $1847, $1848, $1849);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1851 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1853 = self.err;
                                                                                                var self = $1851;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1855 = self.value;
                                                                                                        var $1856 = Parser$Reply$error$(Parser$Error$combine$($1855, $1853));
                                                                                                        var $1854 = $1856;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1857 = Parser$Reply$error$($1853);
                                                                                                        var $1854 = $1857;
                                                                                                        break;
                                                                                                };
                                                                                                var $1852 = $1854;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1858 = self.pst;
                                                                                                var $1859 = self.val;
                                                                                                var self = $1858;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1861 = self.err;
                                                                                                        var $1862 = self.nam;
                                                                                                        var $1863 = self.ini;
                                                                                                        var $1864 = self.idx;
                                                                                                        var $1865 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($1851, $1861), $1862, $1863, $1864, $1865);
                                                                                                        var _empty_list$58 = Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e));
                                                                                                        var _list_cons$59 = Kind$Term$app$(Kind$Term$ref$("List.cons"), Kind$Term$hol$(Bits$e));
                                                                                                        var _empty_map$60 = Kind$Term$app$(Kind$Term$ref$("Map.new"), Kind$Term$hol$(Bits$e));
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1867 = self.err;
                                                                                                                var _reply$66 = Kind$Parser$text$(":", _reply$pst$57);
                                                                                                                var self = _reply$66;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1869 = self.err;
                                                                                                                        var self = $1867;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1871 = self.value;
                                                                                                                                var $1872 = Parser$Reply$error$(Parser$Error$combine$($1871, $1869));
                                                                                                                                var $1870 = $1872;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1873 = Parser$Reply$error$($1869);
                                                                                                                                var $1870 = $1873;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1868 = $1870;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1874 = self.pst;
                                                                                                                        var self = $1874;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1876 = self.err;
                                                                                                                                var $1877 = self.nam;
                                                                                                                                var $1878 = self.ini;
                                                                                                                                var $1879 = self.idx;
                                                                                                                                var $1880 = self.str;
                                                                                                                                var _reply$pst$74 = Parser$State$new$(Parser$Error$maybe_combine$($1867, $1876), $1877, $1878, $1879, $1880);
                                                                                                                                var self = _reply$pst$74;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1882 = self.err;
                                                                                                                                        var _reply$80 = Kind$Parser$term(_reply$pst$74);
                                                                                                                                        var self = _reply$80;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1884 = self.err;
                                                                                                                                                var self = $1882;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1886 = self.value;
                                                                                                                                                        var $1887 = Parser$Reply$error$(Parser$Error$combine$($1886, $1884));
                                                                                                                                                        var $1885 = $1887;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1888 = Parser$Reply$error$($1884);
                                                                                                                                                        var $1885 = $1888;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1883 = $1885;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1889 = self.pst;
                                                                                                                                                var $1890 = self.val;
                                                                                                                                                var self = $1889;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1892 = self.err;
                                                                                                                                                        var $1893 = self.nam;
                                                                                                                                                        var $1894 = self.ini;
                                                                                                                                                        var $1895 = self.idx;
                                                                                                                                                        var $1896 = self.str;
                                                                                                                                                        var _reply$pst$88 = Parser$State$new$(Parser$Error$maybe_combine$($1882, $1892), $1893, $1894, $1895, $1896);
                                                                                                                                                        var _term$89 = Kind$Term$ref$("List.fold");
                                                                                                                                                        var _term$90 = Kind$Term$app$(_term$89, Kind$Term$hol$(Bits$e));
                                                                                                                                                        var _term$91 = Kind$Term$app$(_term$90, $1859);
                                                                                                                                                        var _term$92 = Kind$Term$app$(_term$91, Kind$Term$hol$(Bits$e));
                                                                                                                                                        var _term$93 = Kind$Term$app$(_term$92, _empty_list$58);
                                                                                                                                                        var _lamb$94 = Kind$Term$lam$($1828, (_i$94 => {
                                                                                                                                                            var $1898 = Kind$Term$lam$("placeholder", (_b$95 => {
                                                                                                                                                                var $1899 = Kind$Term$app$(Kind$Term$app$(_list_cons$59, $1890), _b$95);
                                                                                                                                                                return $1899;
                                                                                                                                                            }));
                                                                                                                                                            return $1898;
                                                                                                                                                        }));
                                                                                                                                                        var _term$95 = Kind$Term$app$(_term$93, _lamb$94);
                                                                                                                                                        var _display_content$96 = Kind$Term$app$(Kind$Term$ref$("Map.set"), Kind$Term$hol$(Bits$e));
                                                                                                                                                        var _display_content$97 = Kind$Term$app$(_display_content$96, Kind$Term$str$("display"));
                                                                                                                                                        var _display_content$98 = Kind$Term$app$(_display_content$97, Kind$Term$str$("contents"));
                                                                                                                                                        var _display_content$99 = Kind$Term$app$(_display_content$98, _empty_map$60);
                                                                                                                                                        var _root$100 = Kind$Term$ref$("DOM.node");
                                                                                                                                                        var _root$101 = Kind$Term$app$(_root$100, Kind$Term$str$("div"));
                                                                                                                                                        var _root$102 = Kind$Term$app$(_root$101, _empty_map$60);
                                                                                                                                                        var _root$103 = Kind$Term$app$(_root$102, _display_content$99);
                                                                                                                                                        var _root$104 = Kind$Term$app$(_root$103, _term$95);
                                                                                                                                                        var $1897 = Parser$Reply$value$(_reply$pst$88, _root$104);
                                                                                                                                                        var $1891 = $1897;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1883 = $1891;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1881 = $1883;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1875 = $1881;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1868 = $1875;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1866 = $1868;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1860 = $1866;
                                                                                                        break;
                                                                                                };
                                                                                                var $1852 = $1860;
                                                                                                break;
                                                                                        };
                                                                                        var $1850 = $1852;
                                                                                        break;
                                                                                };
                                                                                var $1844 = $1850;
                                                                                break;
                                                                        };
                                                                        var $1837 = $1844;
                                                                        break;
                                                                };
                                                                var $1835 = $1837;
                                                                break;
                                                        };
                                                        var $1829 = $1835;
                                                        break;
                                                };
                                                var $1821 = $1829;
                                                break;
                                        };
                                        var $1819 = $1821;
                                        break;
                                };
                                var $1813 = $1819;
                                break;
                        };
                        var $1806 = $1813;
                        break;
                };
                var $1804 = $1806;
                break;
        };
        return $1804;
    }));
    const Kind$Parser$dom$dynamic = Kind$Parser$block("DOM_dynamic")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1901 = self.err;
                var _reply$7 = Kind$Parser$text$("{", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1903 = self.err;
                        var self = $1901;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1905 = self.value;
                                var $1906 = Parser$Reply$error$(Parser$Error$combine$($1905, $1903));
                                var $1904 = $1906;
                                break;
                            case 'Maybe.none':
                                var $1907 = Parser$Reply$error$($1903);
                                var $1904 = $1907;
                                break;
                        };
                        var $1902 = $1904;
                        break;
                    case 'Parser.Reply.value':
                        var $1908 = self.pst;
                        var self = $1908;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1910 = self.err;
                                var $1911 = self.nam;
                                var $1912 = self.ini;
                                var $1913 = self.idx;
                                var $1914 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1901, $1910), $1911, $1912, $1913, $1914);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1916 = self.err;
                                        var _reply$21 = Parser$choice$(List$cons$(Kind$Parser$term, List$nil), _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1918 = self.err;
                                                var self = $1916;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1920 = self.value;
                                                        var $1921 = Parser$Reply$error$(Parser$Error$combine$($1920, $1918));
                                                        var $1919 = $1921;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1922 = Parser$Reply$error$($1918);
                                                        var $1919 = $1922;
                                                        break;
                                                };
                                                var $1917 = $1919;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1923 = self.pst;
                                                var $1924 = self.val;
                                                var self = $1923;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1926 = self.err;
                                                        var $1927 = self.nam;
                                                        var $1928 = self.ini;
                                                        var $1929 = self.idx;
                                                        var $1930 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1916, $1926), $1927, $1928, $1929, $1930);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1932 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("}", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1934 = self.err;
                                                                        var self = $1932;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1936 = self.value;
                                                                                var $1937 = Parser$Reply$error$(Parser$Error$combine$($1936, $1934));
                                                                                var $1935 = $1937;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1938 = Parser$Reply$error$($1934);
                                                                                var $1935 = $1938;
                                                                                break;
                                                                        };
                                                                        var $1933 = $1935;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1939 = self.pst;
                                                                        var self = $1939;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1941 = self.err;
                                                                                var $1942 = self.nam;
                                                                                var $1943 = self.ini;
                                                                                var $1944 = self.idx;
                                                                                var $1945 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1932, $1941), $1942, $1943, $1944, $1945);
                                                                                var $1946 = Parser$Reply$value$(_reply$pst$43, $1924);
                                                                                var $1940 = $1946;
                                                                                break;
                                                                        };
                                                                        var $1933 = $1940;
                                                                        break;
                                                                };
                                                                var $1931 = $1933;
                                                                break;
                                                        };
                                                        var $1925 = $1931;
                                                        break;
                                                };
                                                var $1917 = $1925;
                                                break;
                                        };
                                        var $1915 = $1917;
                                        break;
                                };
                                var $1909 = $1915;
                                break;
                        };
                        var $1902 = $1909;
                        break;
                };
                var $1900 = $1902;
                break;
        };
        return $1900;
    }));
    const Kind$Parser$dom$text = Kind$Parser$block("DOM_text")((() => {
        var _term$1 = Kind$Term$ref$("DOM.text");
        var $1947 = (_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $1949 = self.err;
                    var _reply$8 = Kind$Parser$term(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1951 = self.err;
                            var self = $1949;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1953 = self.value;
                                    var $1954 = Parser$Reply$error$(Parser$Error$combine$($1953, $1951));
                                    var $1952 = $1954;
                                    break;
                                case 'Maybe.none':
                                    var $1955 = Parser$Reply$error$($1951);
                                    var $1952 = $1955;
                                    break;
                            };
                            var $1950 = $1952;
                            break;
                        case 'Parser.Reply.value':
                            var $1956 = self.pst;
                            var $1957 = self.val;
                            var self = $1956;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1959 = self.err;
                                    var $1960 = self.nam;
                                    var $1961 = self.ini;
                                    var $1962 = self.idx;
                                    var $1963 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1949, $1959), $1960, $1961, $1962, $1963);
                                    var _term$17 = Kind$Term$app$(_term$1, $1957);
                                    var $1964 = Parser$Reply$value$(_reply$pst$16, _term$17);
                                    var $1958 = $1964;
                                    break;
                            };
                            var $1950 = $1958;
                            break;
                    };
                    var $1948 = $1950;
                    break;
            };
            return $1948;
        });
        return $1947;
    })());
    const Kind$Parser$dom$leaf = Kind$Parser$block("DOM_leaf")(Parser$choice(List$cons$(Kind$Parser$dom$for, List$cons$(Kind$Parser$dom$dynamic, List$cons$(Kind$Parser$dom$text, List$nil)))));

    function Kind$Parser$dom$transform_children$(_a$1) {
        var self = _a$1;
        switch (self._) {
            case 'List.cons':
                var $1966 = self.head;
                var $1967 = self.tail;
                var _term$4 = Kind$Term$app$(Kind$Term$ref$("List.cons"), Kind$Term$hol$(Bits$e));
                var _term$5 = Kind$Term$app$(_term$4, $1966);
                var _term$6 = Kind$Term$app$(_term$5, Kind$Parser$dom$transform_children$($1967));
                var $1968 = _term$6;
                var $1965 = $1968;
                break;
            case 'List.nil':
                var $1969 = Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e));
                var $1965 = $1969;
                break;
        };
        return $1965;
    };
    const Kind$Parser$dom$transform_children = x0 => Kind$Parser$dom$transform_children$(x0);
    const Kind$Parser$dom$node = Kind$Parser$block("DOM.node")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1971 = self.err;
                var _reply$7 = Kind$Parser$text$("<", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1973 = self.err;
                        var self = $1971;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1975 = self.value;
                                var $1976 = Parser$Reply$error$(Parser$Error$combine$($1975, $1973));
                                var $1974 = $1976;
                                break;
                            case 'Maybe.none':
                                var $1977 = Parser$Reply$error$($1973);
                                var $1974 = $1977;
                                break;
                        };
                        var $1972 = $1974;
                        break;
                    case 'Parser.Reply.value':
                        var $1978 = self.pst;
                        var self = $1978;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1980 = self.err;
                                var $1981 = self.nam;
                                var $1982 = self.ini;
                                var $1983 = self.idx;
                                var $1984 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1971, $1980), $1981, $1982, $1983, $1984);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1986 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1988 = self.err;
                                                var self = $1986;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1990 = self.value;
                                                        var $1991 = Parser$Reply$error$(Parser$Error$combine$($1990, $1988));
                                                        var $1989 = $1991;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1992 = Parser$Reply$error$($1988);
                                                        var $1989 = $1992;
                                                        break;
                                                };
                                                var $1987 = $1989;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1993 = self.pst;
                                                var $1994 = self.val;
                                                var self = $1993;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1996 = self.err;
                                                        var $1997 = self.nam;
                                                        var $1998 = self.ini;
                                                        var $1999 = self.idx;
                                                        var $2000 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1986, $1996), $1997, $1998, $1999, $2000);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2002 = self.err;
                                                                var _reply$35 = Kind$Parser$spaces(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2004 = self.err;
                                                                        var self = $2002;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2006 = self.value;
                                                                                var $2007 = Parser$Reply$error$(Parser$Error$combine$($2006, $2004));
                                                                                var $2005 = $2007;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2008 = Parser$Reply$error$($2004);
                                                                                var $2005 = $2008;
                                                                                break;
                                                                        };
                                                                        var $2003 = $2005;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2009 = self.pst;
                                                                        var self = $2009;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2011 = self.err;
                                                                                var $2012 = self.nam;
                                                                                var $2013 = self.ini;
                                                                                var $2014 = self.idx;
                                                                                var $2015 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($2002, $2011), $2012, $2013, $2014, $2015);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2017 = self.err;
                                                                                        var _reply$49 = Parser$until$(Kind$Parser$text(">"), Kind$Parser$dom$prop)(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2019 = self.err;
                                                                                                var self = $2017;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2021 = self.value;
                                                                                                        var $2022 = Parser$Reply$error$(Parser$Error$combine$($2021, $2019));
                                                                                                        var $2020 = $2022;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2023 = Parser$Reply$error$($2019);
                                                                                                        var $2020 = $2023;
                                                                                                        break;
                                                                                                };
                                                                                                var $2018 = $2020;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2024 = self.pst;
                                                                                                var $2025 = self.val;
                                                                                                var self = $2024;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2027 = self.err;
                                                                                                        var $2028 = self.nam;
                                                                                                        var $2029 = self.ini;
                                                                                                        var $2030 = self.idx;
                                                                                                        var $2031 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($2017, $2027), $2028, $2029, $2030, $2031);
                                                                                                        var _props$58 = Kind$Parser$dom$gen_prop$($2025);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $2033 = self.err;
                                                                                                                var _reply$64 = Parser$many$(Parser$choice(List$cons$(Kind$Parser$dom$node, List$cons$(Kind$Parser$dom$leaf, List$nil))))(_reply$pst$57);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $2035 = self.err;
                                                                                                                        var self = $2033;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $2037 = self.value;
                                                                                                                                var $2038 = Parser$Reply$error$(Parser$Error$combine$($2037, $2035));
                                                                                                                                var $2036 = $2038;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $2039 = Parser$Reply$error$($2035);
                                                                                                                                var $2036 = $2039;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2034 = $2036;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $2040 = self.pst;
                                                                                                                        var $2041 = self.val;
                                                                                                                        var self = $2040;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $2043 = self.err;
                                                                                                                                var $2044 = self.nam;
                                                                                                                                var $2045 = self.ini;
                                                                                                                                var $2046 = self.idx;
                                                                                                                                var $2047 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2033, $2043), $2044, $2045, $2046, $2047);
                                                                                                                                var _children$73 = Kind$Parser$dom$transform_children$($2041);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $2049 = self.err;
                                                                                                                                        var _reply$79 = Kind$Parser$text$(("</" + ($1994 + ">")), _reply$pst$72);
                                                                                                                                        var self = _reply$79;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $2051 = self.err;
                                                                                                                                                var self = $2049;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $2053 = self.value;
                                                                                                                                                        var $2054 = Parser$Reply$error$(Parser$Error$combine$($2053, $2051));
                                                                                                                                                        var $2052 = $2054;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $2055 = Parser$Reply$error$($2051);
                                                                                                                                                        var $2052 = $2055;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2050 = $2052;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $2056 = self.pst;
                                                                                                                                                var self = $2056;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $2058 = self.err;
                                                                                                                                                        var $2059 = self.nam;
                                                                                                                                                        var $2060 = self.ini;
                                                                                                                                                        var $2061 = self.idx;
                                                                                                                                                        var $2062 = self.str;
                                                                                                                                                        var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($2049, $2058), $2059, $2060, $2061, $2062);
                                                                                                                                                        var _term$88 = Kind$Term$ref$("DOM.node");
                                                                                                                                                        var _term$89 = Kind$Term$app$(_term$88, Kind$Term$str$($1994));
                                                                                                                                                        var _term$90 = Kind$Term$app$(_term$89, (() => {
                                                                                                                                                            var self = _props$58;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Pair.new':
                                                                                                                                                                    var $2064 = self.fst;
                                                                                                                                                                    var $2065 = $2064;
                                                                                                                                                                    return $2065;
                                                                                                                                                            };
                                                                                                                                                        })());
                                                                                                                                                        var _term$91 = Kind$Term$app$(_term$90, (() => {
                                                                                                                                                            var self = _props$58;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Pair.new':
                                                                                                                                                                    var $2066 = self.snd;
                                                                                                                                                                    var $2067 = $2066;
                                                                                                                                                                    return $2067;
                                                                                                                                                            };
                                                                                                                                                        })());
                                                                                                                                                        var _term$92 = Kind$Term$app$(_term$91, _children$73);
                                                                                                                                                        var $2063 = Parser$Reply$value$(_reply$pst$87, _term$92);
                                                                                                                                                        var $2057 = $2063;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2050 = $2057;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $2048 = $2050;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $2042 = $2048;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2034 = $2042;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $2032 = $2034;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $2026 = $2032;
                                                                                                        break;
                                                                                                };
                                                                                                var $2018 = $2026;
                                                                                                break;
                                                                                        };
                                                                                        var $2016 = $2018;
                                                                                        break;
                                                                                };
                                                                                var $2010 = $2016;
                                                                                break;
                                                                        };
                                                                        var $2003 = $2010;
                                                                        break;
                                                                };
                                                                var $2001 = $2003;
                                                                break;
                                                        };
                                                        var $1995 = $2001;
                                                        break;
                                                };
                                                var $1987 = $1995;
                                                break;
                                        };
                                        var $1985 = $1987;
                                        break;
                                };
                                var $1979 = $1985;
                                break;
                        };
                        var $1972 = $1979;
                        break;
                };
                var $1970 = $1972;
                break;
        };
        return $1970;
    }));
    const Kind$Parser$dom = Kind$Parser$dom$node;
    const Kind$Parser$forall = Kind$Parser$block("forall")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $2069 = self.err;
                var _reply$7 = Kind$Parser$name$(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2071 = self.err;
                        var self = $2069;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2073 = self.value;
                                var $2074 = Parser$Reply$error$(Parser$Error$combine$($2073, $2071));
                                var $2072 = $2074;
                                break;
                            case 'Maybe.none':
                                var $2075 = Parser$Reply$error$($2071);
                                var $2072 = $2075;
                                break;
                        };
                        var $2070 = $2072;
                        break;
                    case 'Parser.Reply.value':
                        var $2076 = self.pst;
                        var $2077 = self.val;
                        var self = $2076;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2079 = self.err;
                                var $2080 = self.nam;
                                var $2081 = self.ini;
                                var $2082 = self.idx;
                                var $2083 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($2069, $2079), $2080, $2081, $2082, $2083);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2085 = self.err;
                                        var _reply$21 = Kind$Parser$binder$(":", _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2087 = self.err;
                                                var self = $2085;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2089 = self.value;
                                                        var $2090 = Parser$Reply$error$(Parser$Error$combine$($2089, $2087));
                                                        var $2088 = $2090;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2091 = Parser$Reply$error$($2087);
                                                        var $2088 = $2091;
                                                        break;
                                                };
                                                var $2086 = $2088;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2092 = self.pst;
                                                var $2093 = self.val;
                                                var self = $2092;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2095 = self.err;
                                                        var $2096 = self.nam;
                                                        var $2097 = self.ini;
                                                        var $2098 = self.idx;
                                                        var $2099 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($2085, $2095), $2096, $2097, $2098, $2099);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2101 = self.err;
                                                                var _reply$35 = Parser$maybe$(Kind$Parser$text("->"), _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2103 = self.err;
                                                                        var self = $2101;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2105 = self.value;
                                                                                var $2106 = Parser$Reply$error$(Parser$Error$combine$($2105, $2103));
                                                                                var $2104 = $2106;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2107 = Parser$Reply$error$($2103);
                                                                                var $2104 = $2107;
                                                                                break;
                                                                        };
                                                                        var $2102 = $2104;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2108 = self.pst;
                                                                        var self = $2108;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2110 = self.err;
                                                                                var $2111 = self.nam;
                                                                                var $2112 = self.ini;
                                                                                var $2113 = self.idx;
                                                                                var $2114 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($2101, $2110), $2111, $2112, $2113, $2114);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2116 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2118 = self.err;
                                                                                                var self = $2116;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2120 = self.value;
                                                                                                        var $2121 = Parser$Reply$error$(Parser$Error$combine$($2120, $2118));
                                                                                                        var $2119 = $2121;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2122 = Parser$Reply$error$($2118);
                                                                                                        var $2119 = $2122;
                                                                                                        break;
                                                                                                };
                                                                                                var $2117 = $2119;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2123 = self.pst;
                                                                                                var $2124 = self.val;
                                                                                                var self = $2123;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2126 = self.err;
                                                                                                        var $2127 = self.nam;
                                                                                                        var $2128 = self.ini;
                                                                                                        var $2129 = self.idx;
                                                                                                        var $2130 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($2116, $2126), $2127, $2128, $2129, $2130);
                                                                                                        var _term$58 = List$fold$($2093, $2124, (_x$58 => _t$59 => {
                                                                                                            var self = _x$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Kind.Binder.new':
                                                                                                                    var $2133 = self.eras;
                                                                                                                    var $2134 = self.name;
                                                                                                                    var $2135 = self.term;
                                                                                                                    var $2136 = Kind$Term$all$($2133, "", $2134, $2135, (_s$63 => _x$64 => {
                                                                                                                        var $2137 = _t$59;
                                                                                                                        return $2137;
                                                                                                                    }));
                                                                                                                    var $2132 = $2136;
                                                                                                                    break;
                                                                                                            };
                                                                                                            return $2132;
                                                                                                        }));
                                                                                                        var $2131 = Parser$Reply$value$(_reply$pst$57, (() => {
                                                                                                            var self = _term$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Kind.Term.all':
                                                                                                                    var $2138 = self.eras;
                                                                                                                    var $2139 = self.name;
                                                                                                                    var $2140 = self.xtyp;
                                                                                                                    var $2141 = self.body;
                                                                                                                    var $2142 = Kind$Term$all$($2138, $2077, $2139, $2140, $2141);
                                                                                                                    return $2142;
                                                                                                                case 'Kind.Term.var':
                                                                                                                case 'Kind.Term.ref':
                                                                                                                case 'Kind.Term.typ':
                                                                                                                case 'Kind.Term.lam':
                                                                                                                case 'Kind.Term.app':
                                                                                                                case 'Kind.Term.let':
                                                                                                                case 'Kind.Term.def':
                                                                                                                case 'Kind.Term.ann':
                                                                                                                case 'Kind.Term.gol':
                                                                                                                case 'Kind.Term.hol':
                                                                                                                case 'Kind.Term.nat':
                                                                                                                case 'Kind.Term.chr':
                                                                                                                case 'Kind.Term.str':
                                                                                                                case 'Kind.Term.num':
                                                                                                                case 'Kind.Term.cse':
                                                                                                                case 'Kind.Term.new':
                                                                                                                case 'Kind.Term.get':
                                                                                                                case 'Kind.Term.set':
                                                                                                                case 'Kind.Term.ope':
                                                                                                                case 'Kind.Term.ori':
                                                                                                                    var $2143 = _term$58;
                                                                                                                    return $2143;
                                                                                                            };
                                                                                                        })());
                                                                                                        var $2125 = $2131;
                                                                                                        break;
                                                                                                };
                                                                                                var $2117 = $2125;
                                                                                                break;
                                                                                        };
                                                                                        var $2115 = $2117;
                                                                                        break;
                                                                                };
                                                                                var $2109 = $2115;
                                                                                break;
                                                                        };
                                                                        var $2102 = $2109;
                                                                        break;
                                                                };
                                                                var $2100 = $2102;
                                                                break;
                                                        };
                                                        var $2094 = $2100;
                                                        break;
                                                };
                                                var $2086 = $2094;
                                                break;
                                        };
                                        var $2084 = $2086;
                                        break;
                                };
                                var $2078 = $2084;
                                break;
                        };
                        var $2070 = $2078;
                        break;
                };
                var $2068 = $2070;
                break;
        };
        return $2068;
    }));

    function Parser$wrap$(_opens$2, _parse$3, _close$4, _pst$5) {
        var self = _pst$5;
        switch (self._) {
            case 'Parser.State.new':
                var $2145 = self.err;
                var _reply$11 = _opens$2(_pst$5);
                var self = _reply$11;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2147 = self.err;
                        var self = $2145;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2149 = self.value;
                                var $2150 = Parser$Reply$error$(Parser$Error$combine$($2149, $2147));
                                var $2148 = $2150;
                                break;
                            case 'Maybe.none':
                                var $2151 = Parser$Reply$error$($2147);
                                var $2148 = $2151;
                                break;
                        };
                        var $2146 = $2148;
                        break;
                    case 'Parser.Reply.value':
                        var $2152 = self.pst;
                        var self = $2152;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2154 = self.err;
                                var $2155 = self.nam;
                                var $2156 = self.ini;
                                var $2157 = self.idx;
                                var $2158 = self.str;
                                var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($2145, $2154), $2155, $2156, $2157, $2158);
                                var $2159 = Parser$until$(_close$4, _parse$3)(_reply$pst$19);
                                var $2153 = $2159;
                                break;
                        };
                        var $2146 = $2153;
                        break;
                };
                var $2144 = $2146;
                break;
        };
        return $2144;
    };
    const Parser$wrap = x0 => x1 => x2 => x3 => Parser$wrap$(x0, x1, x2, x3);

    function Kind$Parser$items$(_ini$2, _parser$3, _end$4) {
        var $2160 = Parser$wrap(Kind$Parser$text(_ini$2))((_pst$5 => {
            var self = _pst$5;
            switch (self._) {
                case 'Parser.State.new':
                    var $2162 = self.err;
                    var _reply$11 = Kind$Parser$spaces(_pst$5);
                    var self = _reply$11;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2164 = self.err;
                            var self = $2162;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2166 = self.value;
                                    var $2167 = Parser$Reply$error$(Parser$Error$combine$($2166, $2164));
                                    var $2165 = $2167;
                                    break;
                                case 'Maybe.none':
                                    var $2168 = Parser$Reply$error$($2164);
                                    var $2165 = $2168;
                                    break;
                            };
                            var $2163 = $2165;
                            break;
                        case 'Parser.Reply.value':
                            var $2169 = self.pst;
                            var self = $2169;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2171 = self.err;
                                    var $2172 = self.nam;
                                    var $2173 = self.ini;
                                    var $2174 = self.idx;
                                    var $2175 = self.str;
                                    var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($2162, $2171), $2172, $2173, $2174, $2175);
                                    var self = _reply$pst$19;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2177 = self.err;
                                            var _reply$25 = _parser$3(_reply$pst$19);
                                            var self = _reply$25;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2179 = self.err;
                                                    var self = $2177;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2181 = self.value;
                                                            var $2182 = Parser$Reply$error$(Parser$Error$combine$($2181, $2179));
                                                            var $2180 = $2182;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2183 = Parser$Reply$error$($2179);
                                                            var $2180 = $2183;
                                                            break;
                                                    };
                                                    var $2178 = $2180;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2184 = self.pst;
                                                    var $2185 = self.val;
                                                    var self = $2184;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2187 = self.err;
                                                            var $2188 = self.nam;
                                                            var $2189 = self.ini;
                                                            var $2190 = self.idx;
                                                            var $2191 = self.str;
                                                            var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($2177, $2187), $2188, $2189, $2190, $2191);
                                                            var self = _reply$pst$33;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2193 = self.err;
                                                                    var _reply$39 = Parser$maybe$(Kind$Parser$text(","), _reply$pst$33);
                                                                    var self = _reply$39;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2195 = self.err;
                                                                            var self = $2193;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2197 = self.value;
                                                                                    var $2198 = Parser$Reply$error$(Parser$Error$combine$($2197, $2195));
                                                                                    var $2196 = $2198;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2199 = Parser$Reply$error$($2195);
                                                                                    var $2196 = $2199;
                                                                                    break;
                                                                            };
                                                                            var $2194 = $2196;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2200 = self.pst;
                                                                            var self = $2200;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2202 = self.err;
                                                                                    var $2203 = self.nam;
                                                                                    var $2204 = self.ini;
                                                                                    var $2205 = self.idx;
                                                                                    var $2206 = self.str;
                                                                                    var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($2193, $2202), $2203, $2204, $2205, $2206);
                                                                                    var $2207 = Parser$Reply$value$(_reply$pst$47, $2185);
                                                                                    var $2201 = $2207;
                                                                                    break;
                                                                            };
                                                                            var $2194 = $2201;
                                                                            break;
                                                                    };
                                                                    var $2192 = $2194;
                                                                    break;
                                                            };
                                                            var $2186 = $2192;
                                                            break;
                                                    };
                                                    var $2178 = $2186;
                                                    break;
                                            };
                                            var $2176 = $2178;
                                            break;
                                    };
                                    var $2170 = $2176;
                                    break;
                            };
                            var $2163 = $2170;
                            break;
                    };
                    var $2161 = $2163;
                    break;
            };
            return $2161;
        }))(Kind$Parser$text(_end$4));
        return $2160;
    };
    const Kind$Parser$items = x0 => x1 => x2 => Kind$Parser$items$(x0, x1, x2);

    function Kind$Parser$lambda$make$(_names$1, _body$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.cons':
                var $2209 = self.head;
                var $2210 = self.tail;
                var $2211 = Kind$Term$lam$($2209, (_x$5 => {
                    var $2212 = Kind$Parser$lambda$make$($2210, _body$2);
                    return $2212;
                }));
                var $2208 = $2211;
                break;
            case 'List.nil':
                var $2213 = _body$2;
                var $2208 = $2213;
                break;
        };
        return $2208;
    };
    const Kind$Parser$lambda$make = x0 => x1 => Kind$Parser$lambda$make$(x0, x1);

    function Kind$Parser$lambda$make$start$(_names$1, _body$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.nil':
                var $2215 = Kind$Term$lam$("", (_x$3 => {
                    var $2216 = _body$2;
                    return $2216;
                }));
                var $2214 = $2215;
                break;
            case 'List.cons':
                var $2217 = Kind$Parser$lambda$make$(_names$1, _body$2);
                var $2214 = $2217;
                break;
        };
        return $2214;
    };
    const Kind$Parser$lambda$make$start = x0 => x1 => Kind$Parser$lambda$make$start$(x0, x1);
    const Kind$Parser$lambda = Kind$Parser$block("lambda")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $2219 = self.err;
                var _reply$7 = Kind$Parser$items$("(", Kind$Parser$name1, ")")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2221 = self.err;
                        var self = $2219;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2223 = self.value;
                                var $2224 = Parser$Reply$error$(Parser$Error$combine$($2223, $2221));
                                var $2222 = $2224;
                                break;
                            case 'Maybe.none':
                                var $2225 = Parser$Reply$error$($2221);
                                var $2222 = $2225;
                                break;
                        };
                        var $2220 = $2222;
                        break;
                    case 'Parser.Reply.value':
                        var $2226 = self.pst;
                        var $2227 = self.val;
                        var self = $2226;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2229 = self.err;
                                var $2230 = self.nam;
                                var $2231 = self.ini;
                                var $2232 = self.idx;
                                var $2233 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($2219, $2229), $2230, $2231, $2232, $2233);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2235 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2237 = self.err;
                                                var self = $2235;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2239 = self.value;
                                                        var $2240 = Parser$Reply$error$(Parser$Error$combine$($2239, $2237));
                                                        var $2238 = $2240;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2241 = Parser$Reply$error$($2237);
                                                        var $2238 = $2241;
                                                        break;
                                                };
                                                var $2236 = $2238;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2242 = self.pst;
                                                var $2243 = self.val;
                                                var self = $2242;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2245 = self.err;
                                                        var $2246 = self.nam;
                                                        var $2247 = self.ini;
                                                        var $2248 = self.idx;
                                                        var $2249 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($2235, $2245), $2246, $2247, $2248, $2249);
                                                        var $2250 = Parser$Reply$value$(_reply$pst$29, Kind$Parser$lambda$make$start$($2227, $2243));
                                                        var $2244 = $2250;
                                                        break;
                                                };
                                                var $2236 = $2244;
                                                break;
                                        };
                                        var $2234 = $2236;
                                        break;
                                };
                                var $2228 = $2234;
                                break;
                        };
                        var $2220 = $2228;
                        break;
                };
                var $2218 = $2220;
                break;
        };
        return $2218;
    }));
    const Kind$Parser$lambda$erased = Kind$Parser$block("lambda")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $2252 = self.err;
                var _reply$7 = Kind$Parser$items$("<", Kind$Parser$name1, ">")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2254 = self.err;
                        var self = $2252;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2256 = self.value;
                                var $2257 = Parser$Reply$error$(Parser$Error$combine$($2256, $2254));
                                var $2255 = $2257;
                                break;
                            case 'Maybe.none':
                                var $2258 = Parser$Reply$error$($2254);
                                var $2255 = $2258;
                                break;
                        };
                        var $2253 = $2255;
                        break;
                    case 'Parser.Reply.value':
                        var $2259 = self.pst;
                        var $2260 = self.val;
                        var self = $2259;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2262 = self.err;
                                var $2263 = self.nam;
                                var $2264 = self.ini;
                                var $2265 = self.idx;
                                var $2266 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($2252, $2262), $2263, $2264, $2265, $2266);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2268 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2270 = self.err;
                                                var self = $2268;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2272 = self.value;
                                                        var $2273 = Parser$Reply$error$(Parser$Error$combine$($2272, $2270));
                                                        var $2271 = $2273;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2274 = Parser$Reply$error$($2270);
                                                        var $2271 = $2274;
                                                        break;
                                                };
                                                var $2269 = $2271;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2275 = self.pst;
                                                var $2276 = self.val;
                                                var self = $2275;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2278 = self.err;
                                                        var $2279 = self.nam;
                                                        var $2280 = self.ini;
                                                        var $2281 = self.idx;
                                                        var $2282 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($2268, $2278), $2279, $2280, $2281, $2282);
                                                        var $2283 = Parser$Reply$value$(_reply$pst$29, Kind$Parser$lambda$make$start$($2260, $2276));
                                                        var $2277 = $2283;
                                                        break;
                                                };
                                                var $2269 = $2277;
                                                break;
                                        };
                                        var $2267 = $2269;
                                        break;
                                };
                                var $2261 = $2267;
                                break;
                        };
                        var $2253 = $2261;
                        break;
                };
                var $2251 = $2253;
                break;
        };
        return $2251;
    }));
    const Kind$Parser$parenthesis = Kind$Parser$block("parenthesis")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $2285 = self.err;
                var _reply$7 = Kind$Parser$text$("(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2287 = self.err;
                        var self = $2285;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2289 = self.value;
                                var $2290 = Parser$Reply$error$(Parser$Error$combine$($2289, $2287));
                                var $2288 = $2290;
                                break;
                            case 'Maybe.none':
                                var $2291 = Parser$Reply$error$($2287);
                                var $2288 = $2291;
                                break;
                        };
                        var $2286 = $2288;
                        break;
                    case 'Parser.Reply.value':
                        var $2292 = self.pst;
                        var self = $2292;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2294 = self.err;
                                var $2295 = self.nam;
                                var $2296 = self.ini;
                                var $2297 = self.idx;
                                var $2298 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($2285, $2294), $2295, $2296, $2297, $2298);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2300 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2302 = self.err;
                                                var self = $2300;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2304 = self.value;
                                                        var $2305 = Parser$Reply$error$(Parser$Error$combine$($2304, $2302));
                                                        var $2303 = $2305;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2306 = Parser$Reply$error$($2302);
                                                        var $2303 = $2306;
                                                        break;
                                                };
                                                var $2301 = $2303;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2307 = self.pst;
                                                var $2308 = self.val;
                                                var self = $2307;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2310 = self.err;
                                                        var $2311 = self.nam;
                                                        var $2312 = self.ini;
                                                        var $2313 = self.idx;
                                                        var $2314 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($2300, $2310), $2311, $2312, $2313, $2314);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2316 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2318 = self.err;
                                                                        var self = $2316;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2320 = self.value;
                                                                                var $2321 = Parser$Reply$error$(Parser$Error$combine$($2320, $2318));
                                                                                var $2319 = $2321;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2322 = Parser$Reply$error$($2318);
                                                                                var $2319 = $2322;
                                                                                break;
                                                                        };
                                                                        var $2317 = $2319;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2323 = self.pst;
                                                                        var self = $2323;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2325 = self.err;
                                                                                var $2326 = self.nam;
                                                                                var $2327 = self.ini;
                                                                                var $2328 = self.idx;
                                                                                var $2329 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($2316, $2325), $2326, $2327, $2328, $2329);
                                                                                var $2330 = Parser$Reply$value$(_reply$pst$43, $2308);
                                                                                var $2324 = $2330;
                                                                                break;
                                                                        };
                                                                        var $2317 = $2324;
                                                                        break;
                                                                };
                                                                var $2315 = $2317;
                                                                break;
                                                        };
                                                        var $2309 = $2315;
                                                        break;
                                                };
                                                var $2301 = $2309;
                                                break;
                                        };
                                        var $2299 = $2301;
                                        break;
                                };
                                var $2293 = $2299;
                                break;
                        };
                        var $2286 = $2293;
                        break;
                };
                var $2284 = $2286;
                break;
        };
        return $2284;
    }));

    function Kind$Parser$letforrange$(_typename$1, _body$2) {
        var $2331 = Kind$Parser$block("let-for")((_pst$3 => {
            var self = _pst$3;
            switch (self._) {
                case 'Parser.State.new':
                    var $2333 = self.err;
                    var _reply$9 = Kind$Parser$text$("let ", _pst$3);
                    var self = _reply$9;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2335 = self.err;
                            var self = $2333;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2337 = self.value;
                                    var $2338 = Parser$Reply$error$(Parser$Error$combine$($2337, $2335));
                                    var $2336 = $2338;
                                    break;
                                case 'Maybe.none':
                                    var $2339 = Parser$Reply$error$($2335);
                                    var $2336 = $2339;
                                    break;
                            };
                            var $2334 = $2336;
                            break;
                        case 'Parser.Reply.value':
                            var $2340 = self.pst;
                            var self = $2340;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2342 = self.err;
                                    var $2343 = self.nam;
                                    var $2344 = self.ini;
                                    var $2345 = self.idx;
                                    var $2346 = self.str;
                                    var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($2333, $2342), $2343, $2344, $2345, $2346);
                                    var self = _reply$pst$17;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2348 = self.err;
                                            var _reply$23 = Kind$Parser$name1$(_reply$pst$17);
                                            var self = _reply$23;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2350 = self.err;
                                                    var self = $2348;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2352 = self.value;
                                                            var $2353 = Parser$Reply$error$(Parser$Error$combine$($2352, $2350));
                                                            var $2351 = $2353;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2354 = Parser$Reply$error$($2350);
                                                            var $2351 = $2354;
                                                            break;
                                                    };
                                                    var $2349 = $2351;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2355 = self.pst;
                                                    var $2356 = self.val;
                                                    var self = $2355;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2358 = self.err;
                                                            var $2359 = self.nam;
                                                            var $2360 = self.ini;
                                                            var $2361 = self.idx;
                                                            var $2362 = self.str;
                                                            var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($2348, $2358), $2359, $2360, $2361, $2362);
                                                            var self = _reply$pst$31;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2364 = self.err;
                                                                    var _reply$37 = Kind$Parser$text$("=", _reply$pst$31);
                                                                    var self = _reply$37;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2366 = self.err;
                                                                            var self = $2364;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2368 = self.value;
                                                                                    var $2369 = Parser$Reply$error$(Parser$Error$combine$($2368, $2366));
                                                                                    var $2367 = $2369;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2370 = Parser$Reply$error$($2366);
                                                                                    var $2367 = $2370;
                                                                                    break;
                                                                            };
                                                                            var $2365 = $2367;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2371 = self.pst;
                                                                            var self = $2371;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2373 = self.err;
                                                                                    var $2374 = self.nam;
                                                                                    var $2375 = self.ini;
                                                                                    var $2376 = self.idx;
                                                                                    var $2377 = self.str;
                                                                                    var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($2364, $2373), $2374, $2375, $2376, $2377);
                                                                                    var self = _reply$pst$45;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2379 = self.err;
                                                                                            var _reply$51 = Kind$Parser$text$("for ", _reply$pst$45);
                                                                                            var self = _reply$51;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2381 = self.err;
                                                                                                    var self = $2379;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2383 = self.value;
                                                                                                            var $2384 = Parser$Reply$error$(Parser$Error$combine$($2383, $2381));
                                                                                                            var $2382 = $2384;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2385 = Parser$Reply$error$($2381);
                                                                                                            var $2382 = $2385;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2380 = $2382;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2386 = self.pst;
                                                                                                    var self = $2386;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2388 = self.err;
                                                                                                            var $2389 = self.nam;
                                                                                                            var $2390 = self.ini;
                                                                                                            var $2391 = self.idx;
                                                                                                            var $2392 = self.str;
                                                                                                            var _reply$pst$59 = Parser$State$new$(Parser$Error$maybe_combine$($2379, $2388), $2389, $2390, $2391, $2392);
                                                                                                            var self = _reply$pst$59;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $2394 = self.err;
                                                                                                                    var _reply$65 = Kind$Parser$name1$(_reply$pst$59);
                                                                                                                    var self = _reply$65;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $2396 = self.err;
                                                                                                                            var self = $2394;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $2398 = self.value;
                                                                                                                                    var $2399 = Parser$Reply$error$(Parser$Error$combine$($2398, $2396));
                                                                                                                                    var $2397 = $2399;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $2400 = Parser$Reply$error$($2396);
                                                                                                                                    var $2397 = $2400;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2395 = $2397;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $2401 = self.pst;
                                                                                                                            var $2402 = self.val;
                                                                                                                            var self = $2401;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $2404 = self.err;
                                                                                                                                    var $2405 = self.nam;
                                                                                                                                    var $2406 = self.ini;
                                                                                                                                    var $2407 = self.idx;
                                                                                                                                    var $2408 = self.str;
                                                                                                                                    var _reply$pst$73 = Parser$State$new$(Parser$Error$maybe_combine$($2394, $2404), $2405, $2406, $2407, $2408);
                                                                                                                                    var self = _reply$pst$73;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $2410 = self.err;
                                                                                                                                            var _reply$79 = Kind$Parser$text$(":", _reply$pst$73);
                                                                                                                                            var self = _reply$79;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $2412 = self.err;
                                                                                                                                                    var self = $2410;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $2414 = self.value;
                                                                                                                                                            var $2415 = Parser$Reply$error$(Parser$Error$combine$($2414, $2412));
                                                                                                                                                            var $2413 = $2415;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $2416 = Parser$Reply$error$($2412);
                                                                                                                                                            var $2413 = $2416;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2411 = $2413;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $2417 = self.pst;
                                                                                                                                                    var self = $2417;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $2419 = self.err;
                                                                                                                                                            var $2420 = self.nam;
                                                                                                                                                            var $2421 = self.ini;
                                                                                                                                                            var $2422 = self.idx;
                                                                                                                                                            var $2423 = self.str;
                                                                                                                                                            var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($2410, $2419), $2420, $2421, $2422, $2423);
                                                                                                                                                            var self = _reply$pst$87;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $2425 = self.err;
                                                                                                                                                                    var _reply$93 = Kind$Parser$text$(_typename$1, _reply$pst$87);
                                                                                                                                                                    var self = _reply$93;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $2427 = self.err;
                                                                                                                                                                            var self = $2425;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $2429 = self.value;
                                                                                                                                                                                    var $2430 = Parser$Reply$error$(Parser$Error$combine$($2429, $2427));
                                                                                                                                                                                    var $2428 = $2430;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $2431 = Parser$Reply$error$($2427);
                                                                                                                                                                                    var $2428 = $2431;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2426 = $2428;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $2432 = self.pst;
                                                                                                                                                                            var self = $2432;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $2434 = self.err;
                                                                                                                                                                                    var $2435 = self.nam;
                                                                                                                                                                                    var $2436 = self.ini;
                                                                                                                                                                                    var $2437 = self.idx;
                                                                                                                                                                                    var $2438 = self.str;
                                                                                                                                                                                    var _reply$pst$101 = Parser$State$new$(Parser$Error$maybe_combine$($2425, $2434), $2435, $2436, $2437, $2438);
                                                                                                                                                                                    var self = _reply$pst$101;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $2440 = self.err;
                                                                                                                                                                                            var _reply$107 = Kind$Parser$text$("from", _reply$pst$101);
                                                                                                                                                                                            var self = _reply$107;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $2442 = self.err;
                                                                                                                                                                                                    var self = $2440;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $2444 = self.value;
                                                                                                                                                                                                            var $2445 = Parser$Reply$error$(Parser$Error$combine$($2444, $2442));
                                                                                                                                                                                                            var $2443 = $2445;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $2446 = Parser$Reply$error$($2442);
                                                                                                                                                                                                            var $2443 = $2446;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2441 = $2443;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $2447 = self.pst;
                                                                                                                                                                                                    var self = $2447;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $2449 = self.err;
                                                                                                                                                                                                            var $2450 = self.nam;
                                                                                                                                                                                                            var $2451 = self.ini;
                                                                                                                                                                                                            var $2452 = self.idx;
                                                                                                                                                                                                            var $2453 = self.str;
                                                                                                                                                                                                            var _reply$pst$115 = Parser$State$new$(Parser$Error$maybe_combine$($2440, $2449), $2450, $2451, $2452, $2453);
                                                                                                                                                                                                            var self = _reply$pst$115;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $2455 = self.err;
                                                                                                                                                                                                                    var _reply$121 = Kind$Parser$term(_reply$pst$115);
                                                                                                                                                                                                                    var self = _reply$121;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $2457 = self.err;
                                                                                                                                                                                                                            var self = $2455;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $2459 = self.value;
                                                                                                                                                                                                                                    var $2460 = Parser$Reply$error$(Parser$Error$combine$($2459, $2457));
                                                                                                                                                                                                                                    var $2458 = $2460;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $2461 = Parser$Reply$error$($2457);
                                                                                                                                                                                                                                    var $2458 = $2461;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2456 = $2458;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $2462 = self.pst;
                                                                                                                                                                                                                            var $2463 = self.val;
                                                                                                                                                                                                                            var self = $2462;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $2465 = self.err;
                                                                                                                                                                                                                                    var $2466 = self.nam;
                                                                                                                                                                                                                                    var $2467 = self.ini;
                                                                                                                                                                                                                                    var $2468 = self.idx;
                                                                                                                                                                                                                                    var $2469 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$129 = Parser$State$new$(Parser$Error$maybe_combine$($2455, $2465), $2466, $2467, $2468, $2469);
                                                                                                                                                                                                                                    var self = _reply$pst$129;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $2471 = self.err;
                                                                                                                                                                                                                                            var _reply$135 = Kind$Parser$text$("to", _reply$pst$129);
                                                                                                                                                                                                                                            var self = _reply$135;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $2473 = self.err;
                                                                                                                                                                                                                                                    var self = $2471;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $2475 = self.value;
                                                                                                                                                                                                                                                            var $2476 = Parser$Reply$error$(Parser$Error$combine$($2475, $2473));
                                                                                                                                                                                                                                                            var $2474 = $2476;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $2477 = Parser$Reply$error$($2473);
                                                                                                                                                                                                                                                            var $2474 = $2477;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2472 = $2474;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $2478 = self.pst;
                                                                                                                                                                                                                                                    var self = $2478;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $2480 = self.err;
                                                                                                                                                                                                                                                            var $2481 = self.nam;
                                                                                                                                                                                                                                                            var $2482 = self.ini;
                                                                                                                                                                                                                                                            var $2483 = self.idx;
                                                                                                                                                                                                                                                            var $2484 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$143 = Parser$State$new$(Parser$Error$maybe_combine$($2471, $2480), $2481, $2482, $2483, $2484);
                                                                                                                                                                                                                                                            var self = _reply$pst$143;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $2486 = self.err;
                                                                                                                                                                                                                                                                    var _reply$149 = Kind$Parser$term(_reply$pst$143);
                                                                                                                                                                                                                                                                    var self = _reply$149;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $2488 = self.err;
                                                                                                                                                                                                                                                                            var self = $2486;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $2490 = self.value;
                                                                                                                                                                                                                                                                                    var $2491 = Parser$Reply$error$(Parser$Error$combine$($2490, $2488));
                                                                                                                                                                                                                                                                                    var $2489 = $2491;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $2492 = Parser$Reply$error$($2488);
                                                                                                                                                                                                                                                                                    var $2489 = $2492;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2487 = $2489;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $2493 = self.pst;
                                                                                                                                                                                                                                                                            var $2494 = self.val;
                                                                                                                                                                                                                                                                            var self = $2493;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $2496 = self.err;
                                                                                                                                                                                                                                                                                    var $2497 = self.nam;
                                                                                                                                                                                                                                                                                    var $2498 = self.ini;
                                                                                                                                                                                                                                                                                    var $2499 = self.idx;
                                                                                                                                                                                                                                                                                    var $2500 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$157 = Parser$State$new$(Parser$Error$maybe_combine$($2486, $2496), $2497, $2498, $2499, $2500);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$157;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $2502 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$163 = Kind$Parser$text$(":", _reply$pst$157);
                                                                                                                                                                                                                                                                                            var self = _reply$163;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $2504 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $2502;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $2506 = self.value;
                                                                                                                                                                                                                                                                                                            var $2507 = Parser$Reply$error$(Parser$Error$combine$($2506, $2504));
                                                                                                                                                                                                                                                                                                            var $2505 = $2507;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $2508 = Parser$Reply$error$($2504);
                                                                                                                                                                                                                                                                                                            var $2505 = $2508;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2503 = $2505;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $2509 = self.pst;
                                                                                                                                                                                                                                                                                                    var self = $2509;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $2511 = self.err;
                                                                                                                                                                                                                                                                                                            var $2512 = self.nam;
                                                                                                                                                                                                                                                                                                            var $2513 = self.ini;
                                                                                                                                                                                                                                                                                                            var $2514 = self.idx;
                                                                                                                                                                                                                                                                                                            var $2515 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$171 = Parser$State$new$(Parser$Error$maybe_combine$($2502, $2511), $2512, $2513, $2514, $2515);
                                                                                                                                                                                                                                                                                                            var self = _reply$pst$171;
                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                    var $2517 = self.err;
                                                                                                                                                                                                                                                                                                                    var _reply$177 = Kind$Parser$term(_reply$pst$171);
                                                                                                                                                                                                                                                                                                                    var self = _reply$177;
                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                            var $2519 = self.err;
                                                                                                                                                                                                                                                                                                                            var self = $2517;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                    var $2521 = self.value;
                                                                                                                                                                                                                                                                                                                                    var $2522 = Parser$Reply$error$(Parser$Error$combine$($2521, $2519));
                                                                                                                                                                                                                                                                                                                                    var $2520 = $2522;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                    var $2523 = Parser$Reply$error$($2519);
                                                                                                                                                                                                                                                                                                                                    var $2520 = $2523;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2518 = $2520;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                            var $2524 = self.pst;
                                                                                                                                                                                                                                                                                                                            var $2525 = self.val;
                                                                                                                                                                                                                                                                                                                            var self = $2524;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                    var $2527 = self.err;
                                                                                                                                                                                                                                                                                                                                    var $2528 = self.nam;
                                                                                                                                                                                                                                                                                                                                    var $2529 = self.ini;
                                                                                                                                                                                                                                                                                                                                    var $2530 = self.idx;
                                                                                                                                                                                                                                                                                                                                    var $2531 = self.str;
                                                                                                                                                                                                                                                                                                                                    var _reply$pst$185 = Parser$State$new$(Parser$Error$maybe_combine$($2517, $2527), $2528, $2529, $2530, $2531);
                                                                                                                                                                                                                                                                                                                                    var self = _reply$pst$185;
                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                            var $2533 = self.err;
                                                                                                                                                                                                                                                                                                                                            var _reply$191 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$185);
                                                                                                                                                                                                                                                                                                                                            var self = _reply$191;
                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                                                    var $2535 = self.err;
                                                                                                                                                                                                                                                                                                                                                    var self = $2533;
                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                                            var $2537 = self.value;
                                                                                                                                                                                                                                                                                                                                                            var $2538 = Parser$Reply$error$(Parser$Error$combine$($2537, $2535));
                                                                                                                                                                                                                                                                                                                                                            var $2536 = $2538;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                                            var $2539 = Parser$Reply$error$($2535);
                                                                                                                                                                                                                                                                                                                                                            var $2536 = $2539;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                    var $2534 = $2536;
                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                                                    var $2540 = self.pst;
                                                                                                                                                                                                                                                                                                                                                    var self = $2540;
                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                                            var $2542 = self.err;
                                                                                                                                                                                                                                                                                                                                                            var $2543 = self.nam;
                                                                                                                                                                                                                                                                                                                                                            var $2544 = self.ini;
                                                                                                                                                                                                                                                                                                                                                            var $2545 = self.idx;
                                                                                                                                                                                                                                                                                                                                                            var $2546 = self.str;
                                                                                                                                                                                                                                                                                                                                                            var _reply$pst$199 = Parser$State$new$(Parser$Error$maybe_combine$($2533, $2542), $2543, $2544, $2545, $2546);
                                                                                                                                                                                                                                                                                                                                                            var self = _reply$pst$199;
                                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                                                    var $2548 = self.err;
                                                                                                                                                                                                                                                                                                                                                                    var _reply$205 = _body$2(Unit$new)(_reply$pst$199);
                                                                                                                                                                                                                                                                                                                                                                    var self = _reply$205;
                                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                                                                            var $2550 = self.err;
                                                                                                                                                                                                                                                                                                                                                                            var self = $2548;
                                                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                                                                    var $2552 = self.value;
                                                                                                                                                                                                                                                                                                                                                                                    var $2553 = Parser$Reply$error$(Parser$Error$combine$($2552, $2550));
                                                                                                                                                                                                                                                                                                                                                                                    var $2551 = $2553;
                                                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                                                                    var $2554 = Parser$Reply$error$($2550);
                                                                                                                                                                                                                                                                                                                                                                                    var $2551 = $2554;
                                                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                                                            var $2549 = $2551;
                                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                                                                            var $2555 = self.pst;
                                                                                                                                                                                                                                                                                                                                                                            var $2556 = self.val;
                                                                                                                                                                                                                                                                                                                                                                            var self = $2555;
                                                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                                                                    var $2558 = self.err;
                                                                                                                                                                                                                                                                                                                                                                                    var $2559 = self.nam;
                                                                                                                                                                                                                                                                                                                                                                                    var $2560 = self.ini;
                                                                                                                                                                                                                                                                                                                                                                                    var $2561 = self.idx;
                                                                                                                                                                                                                                                                                                                                                                                    var $2562 = self.str;
                                                                                                                                                                                                                                                                                                                                                                                    var _reply$pst$213 = Parser$State$new$(Parser$Error$maybe_combine$($2548, $2558), $2559, $2560, $2561, $2562);
                                                                                                                                                                                                                                                                                                                                                                                    var _term$214 = Kind$Term$ref$((_typename$1 + ".for"));
                                                                                                                                                                                                                                                                                                                                                                                    var _term$215 = Kind$Term$app$(_term$214, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                                                                    var _term$216 = Kind$Term$app$(_term$215, Kind$Term$ref$($2356));
                                                                                                                                                                                                                                                                                                                                                                                    var _term$217 = Kind$Term$app$(_term$216, $2463);
                                                                                                                                                                                                                                                                                                                                                                                    var _term$218 = Kind$Term$app$(_term$217, $2494);
                                                                                                                                                                                                                                                                                                                                                                                    var _lamb$219 = Kind$Term$lam$($2402, (_e$219 => {
                                                                                                                                                                                                                                                                                                                                                                                        var $2564 = Kind$Term$lam$($2356, (_s$220 => {
                                                                                                                                                                                                                                                                                                                                                                                            var $2565 = $2525;
                                                                                                                                                                                                                                                                                                                                                                                            return $2565;
                                                                                                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                                                                                                        return $2564;
                                                                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                                                                    var _term$220 = Kind$Term$app$(_term$218, _lamb$219);
                                                                                                                                                                                                                                                                                                                                                                                    var _term$221 = Kind$Term$let$($2356, _term$220, (_x$221 => {
                                                                                                                                                                                                                                                                                                                                                                                        var $2566 = $2556;
                                                                                                                                                                                                                                                                                                                                                                                        return $2566;
                                                                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                                                                    var $2563 = Parser$Reply$value$(_reply$pst$213, _term$221);
                                                                                                                                                                                                                                                                                                                                                                                    var $2557 = $2563;
                                                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                                                            var $2549 = $2557;
                                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                                    var $2547 = $2549;
                                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                                            var $2541 = $2547;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                    var $2534 = $2541;
                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                            var $2532 = $2534;
                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                    var $2526 = $2532;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2518 = $2526;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                    var $2516 = $2518;
                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                            var $2510 = $2516;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2503 = $2510;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $2501 = $2503;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $2495 = $2501;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2487 = $2495;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $2485 = $2487;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $2479 = $2485;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2472 = $2479;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $2470 = $2472;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $2464 = $2470;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2456 = $2464;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $2454 = $2456;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $2448 = $2454;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2441 = $2448;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $2439 = $2441;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $2433 = $2439;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2426 = $2433;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $2424 = $2426;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $2418 = $2424;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2411 = $2418;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $2409 = $2411;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $2403 = $2409;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2395 = $2403;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $2393 = $2395;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $2387 = $2393;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2380 = $2387;
                                                                                                    break;
                                                                                            };
                                                                                            var $2378 = $2380;
                                                                                            break;
                                                                                    };
                                                                                    var $2372 = $2378;
                                                                                    break;
                                                                            };
                                                                            var $2365 = $2372;
                                                                            break;
                                                                    };
                                                                    var $2363 = $2365;
                                                                    break;
                                                            };
                                                            var $2357 = $2363;
                                                            break;
                                                    };
                                                    var $2349 = $2357;
                                                    break;
                                            };
                                            var $2347 = $2349;
                                            break;
                                    };
                                    var $2341 = $2347;
                                    break;
                            };
                            var $2334 = $2341;
                            break;
                    };
                    var $2332 = $2334;
                    break;
            };
            return $2332;
        }));
        return $2331;
    };
    const Kind$Parser$letforrange = x0 => x1 => Kind$Parser$letforrange$(x0, x1);

    function Kind$Parser$letforrange$u32$(_body$1) {
        var $2567 = Kind$Parser$letforrange$("U32", _body$1);
        return $2567;
    };
    const Kind$Parser$letforrange$u32 = x0 => Kind$Parser$letforrange$u32$(x0);

    function Kind$Parser$letforrange$with$(_typename$1, _body$2) {
        var $2568 = Kind$Parser$block("for")((_pst$3 => {
            var self = _pst$3;
            switch (self._) {
                case 'Parser.State.new':
                    var $2570 = self.err;
                    var _reply$9 = Kind$Parser$text$("for ", _pst$3);
                    var self = _reply$9;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2572 = self.err;
                            var self = $2570;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2574 = self.value;
                                    var $2575 = Parser$Reply$error$(Parser$Error$combine$($2574, $2572));
                                    var $2573 = $2575;
                                    break;
                                case 'Maybe.none':
                                    var $2576 = Parser$Reply$error$($2572);
                                    var $2573 = $2576;
                                    break;
                            };
                            var $2571 = $2573;
                            break;
                        case 'Parser.Reply.value':
                            var $2577 = self.pst;
                            var self = $2577;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2579 = self.err;
                                    var $2580 = self.nam;
                                    var $2581 = self.ini;
                                    var $2582 = self.idx;
                                    var $2583 = self.str;
                                    var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($2570, $2579), $2580, $2581, $2582, $2583);
                                    var self = _reply$pst$17;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2585 = self.err;
                                            var _reply$23 = Kind$Parser$name1$(_reply$pst$17);
                                            var self = _reply$23;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2587 = self.err;
                                                    var self = $2585;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2589 = self.value;
                                                            var $2590 = Parser$Reply$error$(Parser$Error$combine$($2589, $2587));
                                                            var $2588 = $2590;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2591 = Parser$Reply$error$($2587);
                                                            var $2588 = $2591;
                                                            break;
                                                    };
                                                    var $2586 = $2588;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2592 = self.pst;
                                                    var $2593 = self.val;
                                                    var self = $2592;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2595 = self.err;
                                                            var $2596 = self.nam;
                                                            var $2597 = self.ini;
                                                            var $2598 = self.idx;
                                                            var $2599 = self.str;
                                                            var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($2585, $2595), $2596, $2597, $2598, $2599);
                                                            var self = _reply$pst$31;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2601 = self.err;
                                                                    var _reply$37 = Kind$Parser$text$(":", _reply$pst$31);
                                                                    var self = _reply$37;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2603 = self.err;
                                                                            var self = $2601;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2605 = self.value;
                                                                                    var $2606 = Parser$Reply$error$(Parser$Error$combine$($2605, $2603));
                                                                                    var $2604 = $2606;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2607 = Parser$Reply$error$($2603);
                                                                                    var $2604 = $2607;
                                                                                    break;
                                                                            };
                                                                            var $2602 = $2604;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2608 = self.pst;
                                                                            var self = $2608;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2610 = self.err;
                                                                                    var $2611 = self.nam;
                                                                                    var $2612 = self.ini;
                                                                                    var $2613 = self.idx;
                                                                                    var $2614 = self.str;
                                                                                    var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($2601, $2610), $2611, $2612, $2613, $2614);
                                                                                    var self = _reply$pst$45;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2616 = self.err;
                                                                                            var _reply$51 = Kind$Parser$text$(_typename$1, _reply$pst$45);
                                                                                            var self = _reply$51;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2618 = self.err;
                                                                                                    var self = $2616;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2620 = self.value;
                                                                                                            var $2621 = Parser$Reply$error$(Parser$Error$combine$($2620, $2618));
                                                                                                            var $2619 = $2621;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2622 = Parser$Reply$error$($2618);
                                                                                                            var $2619 = $2622;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2617 = $2619;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2623 = self.pst;
                                                                                                    var self = $2623;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2625 = self.err;
                                                                                                            var $2626 = self.nam;
                                                                                                            var $2627 = self.ini;
                                                                                                            var $2628 = self.idx;
                                                                                                            var $2629 = self.str;
                                                                                                            var _reply$pst$59 = Parser$State$new$(Parser$Error$maybe_combine$($2616, $2625), $2626, $2627, $2628, $2629);
                                                                                                            var self = _reply$pst$59;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $2631 = self.err;
                                                                                                                    var _reply$65 = Kind$Parser$text$("from", _reply$pst$59);
                                                                                                                    var self = _reply$65;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $2633 = self.err;
                                                                                                                            var self = $2631;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $2635 = self.value;
                                                                                                                                    var $2636 = Parser$Reply$error$(Parser$Error$combine$($2635, $2633));
                                                                                                                                    var $2634 = $2636;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $2637 = Parser$Reply$error$($2633);
                                                                                                                                    var $2634 = $2637;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2632 = $2634;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $2638 = self.pst;
                                                                                                                            var self = $2638;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $2640 = self.err;
                                                                                                                                    var $2641 = self.nam;
                                                                                                                                    var $2642 = self.ini;
                                                                                                                                    var $2643 = self.idx;
                                                                                                                                    var $2644 = self.str;
                                                                                                                                    var _reply$pst$73 = Parser$State$new$(Parser$Error$maybe_combine$($2631, $2640), $2641, $2642, $2643, $2644);
                                                                                                                                    var self = _reply$pst$73;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $2646 = self.err;
                                                                                                                                            var _reply$79 = Kind$Parser$term(_reply$pst$73);
                                                                                                                                            var self = _reply$79;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $2648 = self.err;
                                                                                                                                                    var self = $2646;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $2650 = self.value;
                                                                                                                                                            var $2651 = Parser$Reply$error$(Parser$Error$combine$($2650, $2648));
                                                                                                                                                            var $2649 = $2651;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $2652 = Parser$Reply$error$($2648);
                                                                                                                                                            var $2649 = $2652;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2647 = $2649;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $2653 = self.pst;
                                                                                                                                                    var $2654 = self.val;
                                                                                                                                                    var self = $2653;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $2656 = self.err;
                                                                                                                                                            var $2657 = self.nam;
                                                                                                                                                            var $2658 = self.ini;
                                                                                                                                                            var $2659 = self.idx;
                                                                                                                                                            var $2660 = self.str;
                                                                                                                                                            var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($2646, $2656), $2657, $2658, $2659, $2660);
                                                                                                                                                            var self = _reply$pst$87;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $2662 = self.err;
                                                                                                                                                                    var _reply$93 = Kind$Parser$text$("to", _reply$pst$87);
                                                                                                                                                                    var self = _reply$93;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $2664 = self.err;
                                                                                                                                                                            var self = $2662;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $2666 = self.value;
                                                                                                                                                                                    var $2667 = Parser$Reply$error$(Parser$Error$combine$($2666, $2664));
                                                                                                                                                                                    var $2665 = $2667;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $2668 = Parser$Reply$error$($2664);
                                                                                                                                                                                    var $2665 = $2668;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2663 = $2665;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $2669 = self.pst;
                                                                                                                                                                            var self = $2669;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $2671 = self.err;
                                                                                                                                                                                    var $2672 = self.nam;
                                                                                                                                                                                    var $2673 = self.ini;
                                                                                                                                                                                    var $2674 = self.idx;
                                                                                                                                                                                    var $2675 = self.str;
                                                                                                                                                                                    var _reply$pst$101 = Parser$State$new$(Parser$Error$maybe_combine$($2662, $2671), $2672, $2673, $2674, $2675);
                                                                                                                                                                                    var self = _reply$pst$101;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $2677 = self.err;
                                                                                                                                                                                            var _reply$107 = Kind$Parser$term(_reply$pst$101);
                                                                                                                                                                                            var self = _reply$107;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $2679 = self.err;
                                                                                                                                                                                                    var self = $2677;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $2681 = self.value;
                                                                                                                                                                                                            var $2682 = Parser$Reply$error$(Parser$Error$combine$($2681, $2679));
                                                                                                                                                                                                            var $2680 = $2682;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $2683 = Parser$Reply$error$($2679);
                                                                                                                                                                                                            var $2680 = $2683;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2678 = $2680;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $2684 = self.pst;
                                                                                                                                                                                                    var $2685 = self.val;
                                                                                                                                                                                                    var self = $2684;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $2687 = self.err;
                                                                                                                                                                                                            var $2688 = self.nam;
                                                                                                                                                                                                            var $2689 = self.ini;
                                                                                                                                                                                                            var $2690 = self.idx;
                                                                                                                                                                                                            var $2691 = self.str;
                                                                                                                                                                                                            var _reply$pst$115 = Parser$State$new$(Parser$Error$maybe_combine$($2677, $2687), $2688, $2689, $2690, $2691);
                                                                                                                                                                                                            var self = _reply$pst$115;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $2693 = self.err;
                                                                                                                                                                                                                    var _reply$121 = Kind$Parser$text$("with ", _reply$pst$115);
                                                                                                                                                                                                                    var self = _reply$121;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $2695 = self.err;
                                                                                                                                                                                                                            var self = $2693;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $2697 = self.value;
                                                                                                                                                                                                                                    var $2698 = Parser$Reply$error$(Parser$Error$combine$($2697, $2695));
                                                                                                                                                                                                                                    var $2696 = $2698;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $2699 = Parser$Reply$error$($2695);
                                                                                                                                                                                                                                    var $2696 = $2699;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2694 = $2696;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $2700 = self.pst;
                                                                                                                                                                                                                            var self = $2700;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $2702 = self.err;
                                                                                                                                                                                                                                    var $2703 = self.nam;
                                                                                                                                                                                                                                    var $2704 = self.ini;
                                                                                                                                                                                                                                    var $2705 = self.idx;
                                                                                                                                                                                                                                    var $2706 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$129 = Parser$State$new$(Parser$Error$maybe_combine$($2693, $2702), $2703, $2704, $2705, $2706);
                                                                                                                                                                                                                                    var self = _reply$pst$129;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $2708 = self.err;
                                                                                                                                                                                                                                            var _reply$135 = Kind$Parser$name1$(_reply$pst$129);
                                                                                                                                                                                                                                            var self = _reply$135;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $2710 = self.err;
                                                                                                                                                                                                                                                    var self = $2708;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $2712 = self.value;
                                                                                                                                                                                                                                                            var $2713 = Parser$Reply$error$(Parser$Error$combine$($2712, $2710));
                                                                                                                                                                                                                                                            var $2711 = $2713;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $2714 = Parser$Reply$error$($2710);
                                                                                                                                                                                                                                                            var $2711 = $2714;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2709 = $2711;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $2715 = self.pst;
                                                                                                                                                                                                                                                    var $2716 = self.val;
                                                                                                                                                                                                                                                    var self = $2715;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $2718 = self.err;
                                                                                                                                                                                                                                                            var $2719 = self.nam;
                                                                                                                                                                                                                                                            var $2720 = self.ini;
                                                                                                                                                                                                                                                            var $2721 = self.idx;
                                                                                                                                                                                                                                                            var $2722 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$143 = Parser$State$new$(Parser$Error$maybe_combine$($2708, $2718), $2719, $2720, $2721, $2722);
                                                                                                                                                                                                                                                            var self = _reply$pst$143;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $2724 = self.err;
                                                                                                                                                                                                                                                                    var _reply$149 = Kind$Parser$text$(":", _reply$pst$143);
                                                                                                                                                                                                                                                                    var self = _reply$149;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $2726 = self.err;
                                                                                                                                                                                                                                                                            var self = $2724;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $2728 = self.value;
                                                                                                                                                                                                                                                                                    var $2729 = Parser$Reply$error$(Parser$Error$combine$($2728, $2726));
                                                                                                                                                                                                                                                                                    var $2727 = $2729;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $2730 = Parser$Reply$error$($2726);
                                                                                                                                                                                                                                                                                    var $2727 = $2730;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2725 = $2727;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $2731 = self.pst;
                                                                                                                                                                                                                                                                            var self = $2731;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $2733 = self.err;
                                                                                                                                                                                                                                                                                    var $2734 = self.nam;
                                                                                                                                                                                                                                                                                    var $2735 = self.ini;
                                                                                                                                                                                                                                                                                    var $2736 = self.idx;
                                                                                                                                                                                                                                                                                    var $2737 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$157 = Parser$State$new$(Parser$Error$maybe_combine$($2724, $2733), $2734, $2735, $2736, $2737);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$157;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $2739 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$163 = Kind$Parser$term(_reply$pst$157);
                                                                                                                                                                                                                                                                                            var self = _reply$163;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $2741 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $2739;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $2743 = self.value;
                                                                                                                                                                                                                                                                                                            var $2744 = Parser$Reply$error$(Parser$Error$combine$($2743, $2741));
                                                                                                                                                                                                                                                                                                            var $2742 = $2744;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $2745 = Parser$Reply$error$($2741);
                                                                                                                                                                                                                                                                                                            var $2742 = $2745;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2740 = $2742;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $2746 = self.pst;
                                                                                                                                                                                                                                                                                                    var $2747 = self.val;
                                                                                                                                                                                                                                                                                                    var self = $2746;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $2749 = self.err;
                                                                                                                                                                                                                                                                                                            var $2750 = self.nam;
                                                                                                                                                                                                                                                                                                            var $2751 = self.ini;
                                                                                                                                                                                                                                                                                                            var $2752 = self.idx;
                                                                                                                                                                                                                                                                                                            var $2753 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$171 = Parser$State$new$(Parser$Error$maybe_combine$($2739, $2749), $2750, $2751, $2752, $2753);
                                                                                                                                                                                                                                                                                                            var self = _reply$pst$171;
                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                    var $2755 = self.err;
                                                                                                                                                                                                                                                                                                                    var _reply$177 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$171);
                                                                                                                                                                                                                                                                                                                    var self = _reply$177;
                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                            var $2757 = self.err;
                                                                                                                                                                                                                                                                                                                            var self = $2755;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                    var $2759 = self.value;
                                                                                                                                                                                                                                                                                                                                    var $2760 = Parser$Reply$error$(Parser$Error$combine$($2759, $2757));
                                                                                                                                                                                                                                                                                                                                    var $2758 = $2760;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                    var $2761 = Parser$Reply$error$($2757);
                                                                                                                                                                                                                                                                                                                                    var $2758 = $2761;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2756 = $2758;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                            var $2762 = self.pst;
                                                                                                                                                                                                                                                                                                                            var self = $2762;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                    var $2764 = self.err;
                                                                                                                                                                                                                                                                                                                                    var $2765 = self.nam;
                                                                                                                                                                                                                                                                                                                                    var $2766 = self.ini;
                                                                                                                                                                                                                                                                                                                                    var $2767 = self.idx;
                                                                                                                                                                                                                                                                                                                                    var $2768 = self.str;
                                                                                                                                                                                                                                                                                                                                    var _reply$pst$185 = Parser$State$new$(Parser$Error$maybe_combine$($2755, $2764), $2765, $2766, $2767, $2768);
                                                                                                                                                                                                                                                                                                                                    var self = _reply$pst$185;
                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                            var $2770 = self.err;
                                                                                                                                                                                                                                                                                                                                            var _reply$191 = _body$2(Unit$new)(_reply$pst$185);
                                                                                                                                                                                                                                                                                                                                            var self = _reply$191;
                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                                                    var $2772 = self.err;
                                                                                                                                                                                                                                                                                                                                                    var self = $2770;
                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                                            var $2774 = self.value;
                                                                                                                                                                                                                                                                                                                                                            var $2775 = Parser$Reply$error$(Parser$Error$combine$($2774, $2772));
                                                                                                                                                                                                                                                                                                                                                            var $2773 = $2775;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                                            var $2776 = Parser$Reply$error$($2772);
                                                                                                                                                                                                                                                                                                                                                            var $2773 = $2776;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                    var $2771 = $2773;
                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                                                    var $2777 = self.pst;
                                                                                                                                                                                                                                                                                                                                                    var $2778 = self.val;
                                                                                                                                                                                                                                                                                                                                                    var self = $2777;
                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                                            var $2780 = self.err;
                                                                                                                                                                                                                                                                                                                                                            var $2781 = self.nam;
                                                                                                                                                                                                                                                                                                                                                            var $2782 = self.ini;
                                                                                                                                                                                                                                                                                                                                                            var $2783 = self.idx;
                                                                                                                                                                                                                                                                                                                                                            var $2784 = self.str;
                                                                                                                                                                                                                                                                                                                                                            var _reply$pst$199 = Parser$State$new$(Parser$Error$maybe_combine$($2770, $2780), $2781, $2782, $2783, $2784);
                                                                                                                                                                                                                                                                                                                                                            var _term$200 = Kind$Term$ref$((_typename$1 + ".for"));
                                                                                                                                                                                                                                                                                                                                                            var _term$201 = Kind$Term$app$(_term$200, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                                            var _term$202 = Kind$Term$app$(_term$201, Kind$Term$ref$($2716));
                                                                                                                                                                                                                                                                                                                                                            var _term$203 = Kind$Term$app$(_term$202, $2654);
                                                                                                                                                                                                                                                                                                                                                            var _term$204 = Kind$Term$app$(_term$203, $2685);
                                                                                                                                                                                                                                                                                                                                                            var _lamb$205 = Kind$Term$lam$($2593, (_e$205 => {
                                                                                                                                                                                                                                                                                                                                                                var $2786 = Kind$Term$lam$($2716, (_s$206 => {
                                                                                                                                                                                                                                                                                                                                                                    var $2787 = $2747;
                                                                                                                                                                                                                                                                                                                                                                    return $2787;
                                                                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                                                                return $2786;
                                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                                            var _term$206 = Kind$Term$app$(_term$204, _lamb$205);
                                                                                                                                                                                                                                                                                                                                                            var _term$207 = Kind$Term$let$($2716, _term$206, (_x$207 => {
                                                                                                                                                                                                                                                                                                                                                                var $2788 = $2778;
                                                                                                                                                                                                                                                                                                                                                                return $2788;
                                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                                            var $2785 = Parser$Reply$value$(_reply$pst$199, _term$207);
                                                                                                                                                                                                                                                                                                                                                            var $2779 = $2785;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                    var $2771 = $2779;
                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                            var $2769 = $2771;
                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                    var $2763 = $2769;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2756 = $2763;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                    var $2754 = $2756;
                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                            var $2748 = $2754;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2740 = $2748;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $2738 = $2740;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $2732 = $2738;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2725 = $2732;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $2723 = $2725;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $2717 = $2723;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2709 = $2717;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $2707 = $2709;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $2701 = $2707;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2694 = $2701;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $2692 = $2694;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $2686 = $2692;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2678 = $2686;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $2676 = $2678;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $2670 = $2676;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2663 = $2670;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $2661 = $2663;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $2655 = $2661;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2647 = $2655;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $2645 = $2647;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $2639 = $2645;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2632 = $2639;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $2630 = $2632;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $2624 = $2630;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2617 = $2624;
                                                                                                    break;
                                                                                            };
                                                                                            var $2615 = $2617;
                                                                                            break;
                                                                                    };
                                                                                    var $2609 = $2615;
                                                                                    break;
                                                                            };
                                                                            var $2602 = $2609;
                                                                            break;
                                                                    };
                                                                    var $2600 = $2602;
                                                                    break;
                                                            };
                                                            var $2594 = $2600;
                                                            break;
                                                    };
                                                    var $2586 = $2594;
                                                    break;
                                            };
                                            var $2584 = $2586;
                                            break;
                                    };
                                    var $2578 = $2584;
                                    break;
                            };
                            var $2571 = $2578;
                            break;
                    };
                    var $2569 = $2571;
                    break;
            };
            return $2569;
        }));
        return $2568;
    };
    const Kind$Parser$letforrange$with = x0 => x1 => Kind$Parser$letforrange$with$(x0, x1);

    function Kind$Parser$letforrange$u32$with$(_body$1) {
        var $2789 = Kind$Parser$letforrange$with$("U32", _body$1);
        return $2789;
    };
    const Kind$Parser$letforrange$u32$with = x0 => Kind$Parser$letforrange$u32$with$(x0);

    function Kind$Parser$letforrange$i32$(_body$1) {
        var $2790 = Kind$Parser$letforrange$("I32", _body$1);
        return $2790;
    };
    const Kind$Parser$letforrange$i32 = x0 => Kind$Parser$letforrange$i32$(x0);

    function Kind$Parser$letforrange$i32$with$(_body$1) {
        var $2791 = Kind$Parser$letforrange$with$("I32", _body$1);
        return $2791;
    };
    const Kind$Parser$letforrange$i32$with = x0 => Kind$Parser$letforrange$i32$with$(x0);

    function Kind$Parser$letforrange$nat$(_body$1) {
        var $2792 = Kind$Parser$block("let-for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2794 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2796 = self.err;
                            var self = $2794;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2798 = self.value;
                                    var $2799 = Parser$Reply$error$(Parser$Error$combine$($2798, $2796));
                                    var $2797 = $2799;
                                    break;
                                case 'Maybe.none':
                                    var $2800 = Parser$Reply$error$($2796);
                                    var $2797 = $2800;
                                    break;
                            };
                            var $2795 = $2797;
                            break;
                        case 'Parser.Reply.value':
                            var $2801 = self.pst;
                            var self = $2801;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2803 = self.err;
                                    var $2804 = self.nam;
                                    var $2805 = self.ini;
                                    var $2806 = self.idx;
                                    var $2807 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2794, $2803), $2804, $2805, $2806, $2807);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2809 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2811 = self.err;
                                                    var self = $2809;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2813 = self.value;
                                                            var $2814 = Parser$Reply$error$(Parser$Error$combine$($2813, $2811));
                                                            var $2812 = $2814;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2815 = Parser$Reply$error$($2811);
                                                            var $2812 = $2815;
                                                            break;
                                                    };
                                                    var $2810 = $2812;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2816 = self.pst;
                                                    var $2817 = self.val;
                                                    var self = $2816;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2819 = self.err;
                                                            var $2820 = self.nam;
                                                            var $2821 = self.ini;
                                                            var $2822 = self.idx;
                                                            var $2823 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2809, $2819), $2820, $2821, $2822, $2823);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2825 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2827 = self.err;
                                                                            var self = $2825;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2829 = self.value;
                                                                                    var $2830 = Parser$Reply$error$(Parser$Error$combine$($2829, $2827));
                                                                                    var $2828 = $2830;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2831 = Parser$Reply$error$($2827);
                                                                                    var $2828 = $2831;
                                                                                    break;
                                                                            };
                                                                            var $2826 = $2828;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2832 = self.pst;
                                                                            var self = $2832;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2834 = self.err;
                                                                                    var $2835 = self.nam;
                                                                                    var $2836 = self.ini;
                                                                                    var $2837 = self.idx;
                                                                                    var $2838 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2825, $2834), $2835, $2836, $2837, $2838);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2840 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$("for ", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2842 = self.err;
                                                                                                    var self = $2840;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2844 = self.value;
                                                                                                            var $2845 = Parser$Reply$error$(Parser$Error$combine$($2844, $2842));
                                                                                                            var $2843 = $2845;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2846 = Parser$Reply$error$($2842);
                                                                                                            var $2843 = $2846;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2841 = $2843;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2847 = self.pst;
                                                                                                    var self = $2847;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2849 = self.err;
                                                                                                            var $2850 = self.nam;
                                                                                                            var $2851 = self.ini;
                                                                                                            var $2852 = self.idx;
                                                                                                            var $2853 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2840, $2849), $2850, $2851, $2852, $2853);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $2855 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $2857 = self.err;
                                                                                                                            var self = $2855;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $2859 = self.value;
                                                                                                                                    var $2860 = Parser$Reply$error$(Parser$Error$combine$($2859, $2857));
                                                                                                                                    var $2858 = $2860;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $2861 = Parser$Reply$error$($2857);
                                                                                                                                    var $2858 = $2861;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2856 = $2858;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $2862 = self.pst;
                                                                                                                            var $2863 = self.val;
                                                                                                                            var self = $2862;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $2865 = self.err;
                                                                                                                                    var $2866 = self.nam;
                                                                                                                                    var $2867 = self.ini;
                                                                                                                                    var $2868 = self.idx;
                                                                                                                                    var $2869 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2855, $2865), $2866, $2867, $2868, $2869);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $2871 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("from", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $2873 = self.err;
                                                                                                                                                    var self = $2871;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $2875 = self.value;
                                                                                                                                                            var $2876 = Parser$Reply$error$(Parser$Error$combine$($2875, $2873));
                                                                                                                                                            var $2874 = $2876;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $2877 = Parser$Reply$error$($2873);
                                                                                                                                                            var $2874 = $2877;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2872 = $2874;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $2878 = self.pst;
                                                                                                                                                    var self = $2878;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $2880 = self.err;
                                                                                                                                                            var $2881 = self.nam;
                                                                                                                                                            var $2882 = self.ini;
                                                                                                                                                            var $2883 = self.idx;
                                                                                                                                                            var $2884 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2871, $2880), $2881, $2882, $2883, $2884);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $2886 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $2888 = self.err;
                                                                                                                                                                            var self = $2886;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $2890 = self.value;
                                                                                                                                                                                    var $2891 = Parser$Reply$error$(Parser$Error$combine$($2890, $2888));
                                                                                                                                                                                    var $2889 = $2891;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $2892 = Parser$Reply$error$($2888);
                                                                                                                                                                                    var $2889 = $2892;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2887 = $2889;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $2893 = self.pst;
                                                                                                                                                                            var $2894 = self.val;
                                                                                                                                                                            var self = $2893;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $2896 = self.err;
                                                                                                                                                                                    var $2897 = self.nam;
                                                                                                                                                                                    var $2898 = self.ini;
                                                                                                                                                                                    var $2899 = self.idx;
                                                                                                                                                                                    var $2900 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($2886, $2896), $2897, $2898, $2899, $2900);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $2902 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$text$("to", _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $2904 = self.err;
                                                                                                                                                                                                    var self = $2902;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $2906 = self.value;
                                                                                                                                                                                                            var $2907 = Parser$Reply$error$(Parser$Error$combine$($2906, $2904));
                                                                                                                                                                                                            var $2905 = $2907;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $2908 = Parser$Reply$error$($2904);
                                                                                                                                                                                                            var $2905 = $2908;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2903 = $2905;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $2909 = self.pst;
                                                                                                                                                                                                    var self = $2909;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $2911 = self.err;
                                                                                                                                                                                                            var $2912 = self.nam;
                                                                                                                                                                                                            var $2913 = self.ini;
                                                                                                                                                                                                            var $2914 = self.idx;
                                                                                                                                                                                                            var $2915 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($2902, $2911), $2912, $2913, $2914, $2915);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $2917 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$term(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $2919 = self.err;
                                                                                                                                                                                                                            var self = $2917;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $2921 = self.value;
                                                                                                                                                                                                                                    var $2922 = Parser$Reply$error$(Parser$Error$combine$($2921, $2919));
                                                                                                                                                                                                                                    var $2920 = $2922;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $2923 = Parser$Reply$error$($2919);
                                                                                                                                                                                                                                    var $2920 = $2923;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2918 = $2920;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $2924 = self.pst;
                                                                                                                                                                                                                            var $2925 = self.val;
                                                                                                                                                                                                                            var self = $2924;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $2927 = self.err;
                                                                                                                                                                                                                                    var $2928 = self.nam;
                                                                                                                                                                                                                                    var $2929 = self.ini;
                                                                                                                                                                                                                                    var $2930 = self.idx;
                                                                                                                                                                                                                                    var $2931 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($2917, $2927), $2928, $2929, $2930, $2931);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $2933 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Kind$Parser$text$(":", _reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $2935 = self.err;
                                                                                                                                                                                                                                                    var self = $2933;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $2937 = self.value;
                                                                                                                                                                                                                                                            var $2938 = Parser$Reply$error$(Parser$Error$combine$($2937, $2935));
                                                                                                                                                                                                                                                            var $2936 = $2938;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $2939 = Parser$Reply$error$($2935);
                                                                                                                                                                                                                                                            var $2936 = $2939;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2934 = $2936;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $2940 = self.pst;
                                                                                                                                                                                                                                                    var self = $2940;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $2942 = self.err;
                                                                                                                                                                                                                                                            var $2943 = self.nam;
                                                                                                                                                                                                                                                            var $2944 = self.ini;
                                                                                                                                                                                                                                                            var $2945 = self.idx;
                                                                                                                                                                                                                                                            var $2946 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($2933, $2942), $2943, $2944, $2945, $2946);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $2948 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = Kind$Parser$term(_reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $2950 = self.err;
                                                                                                                                                                                                                                                                            var self = $2948;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $2952 = self.value;
                                                                                                                                                                                                                                                                                    var $2953 = Parser$Reply$error$(Parser$Error$combine$($2952, $2950));
                                                                                                                                                                                                                                                                                    var $2951 = $2953;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $2954 = Parser$Reply$error$($2950);
                                                                                                                                                                                                                                                                                    var $2951 = $2954;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2949 = $2951;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $2955 = self.pst;
                                                                                                                                                                                                                                                                            var $2956 = self.val;
                                                                                                                                                                                                                                                                            var self = $2955;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $2958 = self.err;
                                                                                                                                                                                                                                                                                    var $2959 = self.nam;
                                                                                                                                                                                                                                                                                    var $2960 = self.ini;
                                                                                                                                                                                                                                                                                    var $2961 = self.idx;
                                                                                                                                                                                                                                                                                    var $2962 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($2948, $2958), $2959, $2960, $2961, $2962);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $2964 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$162 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$156);
                                                                                                                                                                                                                                                                                            var self = _reply$162;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $2966 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $2964;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $2968 = self.value;
                                                                                                                                                                                                                                                                                                            var $2969 = Parser$Reply$error$(Parser$Error$combine$($2968, $2966));
                                                                                                                                                                                                                                                                                                            var $2967 = $2969;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $2970 = Parser$Reply$error$($2966);
                                                                                                                                                                                                                                                                                                            var $2967 = $2970;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2965 = $2967;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $2971 = self.pst;
                                                                                                                                                                                                                                                                                                    var self = $2971;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $2973 = self.err;
                                                                                                                                                                                                                                                                                                            var $2974 = self.nam;
                                                                                                                                                                                                                                                                                                            var $2975 = self.ini;
                                                                                                                                                                                                                                                                                                            var $2976 = self.idx;
                                                                                                                                                                                                                                                                                                            var $2977 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($2964, $2973), $2974, $2975, $2976, $2977);
                                                                                                                                                                                                                                                                                                            var self = _reply$pst$170;
                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                    var $2979 = self.err;
                                                                                                                                                                                                                                                                                                                    var _reply$176 = _body$1(Unit$new)(_reply$pst$170);
                                                                                                                                                                                                                                                                                                                    var self = _reply$176;
                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                            var $2981 = self.err;
                                                                                                                                                                                                                                                                                                                            var self = $2979;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                    var $2983 = self.value;
                                                                                                                                                                                                                                                                                                                                    var $2984 = Parser$Reply$error$(Parser$Error$combine$($2983, $2981));
                                                                                                                                                                                                                                                                                                                                    var $2982 = $2984;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                    var $2985 = Parser$Reply$error$($2981);
                                                                                                                                                                                                                                                                                                                                    var $2982 = $2985;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2980 = $2982;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                            var $2986 = self.pst;
                                                                                                                                                                                                                                                                                                                            var $2987 = self.val;
                                                                                                                                                                                                                                                                                                                            var self = $2986;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                    var $2989 = self.err;
                                                                                                                                                                                                                                                                                                                                    var $2990 = self.nam;
                                                                                                                                                                                                                                                                                                                                    var $2991 = self.ini;
                                                                                                                                                                                                                                                                                                                                    var $2992 = self.idx;
                                                                                                                                                                                                                                                                                                                                    var $2993 = self.str;
                                                                                                                                                                                                                                                                                                                                    var _reply$pst$184 = Parser$State$new$(Parser$Error$maybe_combine$($2979, $2989), $2990, $2991, $2992, $2993);
                                                                                                                                                                                                                                                                                                                                    var _term$185 = Kind$Term$ref$("Nat.for");
                                                                                                                                                                                                                                                                                                                                    var _term$186 = Kind$Term$app$(_term$185, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                    var _term$187 = Kind$Term$app$(_term$186, Kind$Term$ref$($2817));
                                                                                                                                                                                                                                                                                                                                    var _term$188 = Kind$Term$app$(_term$187, $2894);
                                                                                                                                                                                                                                                                                                                                    var _term$189 = Kind$Term$app$(_term$188, $2925);
                                                                                                                                                                                                                                                                                                                                    var _lamb$190 = Kind$Term$lam$($2863, (_e$190 => {
                                                                                                                                                                                                                                                                                                                                        var $2995 = Kind$Term$lam$($2817, (_s$191 => {
                                                                                                                                                                                                                                                                                                                                            var $2996 = $2956;
                                                                                                                                                                                                                                                                                                                                            return $2996;
                                                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                                                        return $2995;
                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                    var _term$191 = Kind$Term$app$(_term$189, _lamb$190);
                                                                                                                                                                                                                                                                                                                                    var _term$192 = Kind$Term$let$($2817, _term$191, (_x$192 => {
                                                                                                                                                                                                                                                                                                                                        var $2997 = $2987;
                                                                                                                                                                                                                                                                                                                                        return $2997;
                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                    var $2994 = Parser$Reply$value$(_reply$pst$184, _term$192);
                                                                                                                                                                                                                                                                                                                                    var $2988 = $2994;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2980 = $2988;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                    var $2978 = $2980;
                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                            var $2972 = $2978;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2965 = $2972;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $2963 = $2965;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $2957 = $2963;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2949 = $2957;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $2947 = $2949;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $2941 = $2947;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2934 = $2941;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $2932 = $2934;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $2926 = $2932;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2918 = $2926;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $2916 = $2918;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $2910 = $2916;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2903 = $2910;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $2901 = $2903;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $2895 = $2901;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2887 = $2895;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $2885 = $2887;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $2879 = $2885;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2872 = $2879;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $2870 = $2872;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $2864 = $2870;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2856 = $2864;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $2854 = $2856;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $2848 = $2854;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2841 = $2848;
                                                                                                    break;
                                                                                            };
                                                                                            var $2839 = $2841;
                                                                                            break;
                                                                                    };
                                                                                    var $2833 = $2839;
                                                                                    break;
                                                                            };
                                                                            var $2826 = $2833;
                                                                            break;
                                                                    };
                                                                    var $2824 = $2826;
                                                                    break;
                                                            };
                                                            var $2818 = $2824;
                                                            break;
                                                    };
                                                    var $2810 = $2818;
                                                    break;
                                            };
                                            var $2808 = $2810;
                                            break;
                                    };
                                    var $2802 = $2808;
                                    break;
                            };
                            var $2795 = $2802;
                            break;
                    };
                    var $2793 = $2795;
                    break;
            };
            return $2793;
        }));
        return $2792;
    };
    const Kind$Parser$letforrange$nat = x0 => Kind$Parser$letforrange$nat$(x0);

    function Kind$Parser$letforrange$nat$with$(_body$1) {
        var $2998 = Kind$Parser$block("for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3000 = self.err;
                    var _reply$8 = Kind$Parser$text$("for ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3002 = self.err;
                            var self = $3000;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3004 = self.value;
                                    var $3005 = Parser$Reply$error$(Parser$Error$combine$($3004, $3002));
                                    var $3003 = $3005;
                                    break;
                                case 'Maybe.none':
                                    var $3006 = Parser$Reply$error$($3002);
                                    var $3003 = $3006;
                                    break;
                            };
                            var $3001 = $3003;
                            break;
                        case 'Parser.Reply.value':
                            var $3007 = self.pst;
                            var self = $3007;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3009 = self.err;
                                    var $3010 = self.nam;
                                    var $3011 = self.ini;
                                    var $3012 = self.idx;
                                    var $3013 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3000, $3009), $3010, $3011, $3012, $3013);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3015 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3017 = self.err;
                                                    var self = $3015;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3019 = self.value;
                                                            var $3020 = Parser$Reply$error$(Parser$Error$combine$($3019, $3017));
                                                            var $3018 = $3020;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3021 = Parser$Reply$error$($3017);
                                                            var $3018 = $3021;
                                                            break;
                                                    };
                                                    var $3016 = $3018;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3022 = self.pst;
                                                    var $3023 = self.val;
                                                    var self = $3022;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3025 = self.err;
                                                            var $3026 = self.nam;
                                                            var $3027 = self.ini;
                                                            var $3028 = self.idx;
                                                            var $3029 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3015, $3025), $3026, $3027, $3028, $3029);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3031 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("from", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3033 = self.err;
                                                                            var self = $3031;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3035 = self.value;
                                                                                    var $3036 = Parser$Reply$error$(Parser$Error$combine$($3035, $3033));
                                                                                    var $3034 = $3036;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3037 = Parser$Reply$error$($3033);
                                                                                    var $3034 = $3037;
                                                                                    break;
                                                                            };
                                                                            var $3032 = $3034;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3038 = self.pst;
                                                                            var self = $3038;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3040 = self.err;
                                                                                    var $3041 = self.nam;
                                                                                    var $3042 = self.ini;
                                                                                    var $3043 = self.idx;
                                                                                    var $3044 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3031, $3040), $3041, $3042, $3043, $3044);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3046 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3048 = self.err;
                                                                                                    var self = $3046;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3050 = self.value;
                                                                                                            var $3051 = Parser$Reply$error$(Parser$Error$combine$($3050, $3048));
                                                                                                            var $3049 = $3051;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3052 = Parser$Reply$error$($3048);
                                                                                                            var $3049 = $3052;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3047 = $3049;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3053 = self.pst;
                                                                                                    var $3054 = self.val;
                                                                                                    var self = $3053;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3056 = self.err;
                                                                                                            var $3057 = self.nam;
                                                                                                            var $3058 = self.ini;
                                                                                                            var $3059 = self.idx;
                                                                                                            var $3060 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3046, $3056), $3057, $3058, $3059, $3060);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3062 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("to", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3064 = self.err;
                                                                                                                            var self = $3062;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3066 = self.value;
                                                                                                                                    var $3067 = Parser$Reply$error$(Parser$Error$combine$($3066, $3064));
                                                                                                                                    var $3065 = $3067;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3068 = Parser$Reply$error$($3064);
                                                                                                                                    var $3065 = $3068;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3063 = $3065;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3069 = self.pst;
                                                                                                                            var self = $3069;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3071 = self.err;
                                                                                                                                    var $3072 = self.nam;
                                                                                                                                    var $3073 = self.ini;
                                                                                                                                    var $3074 = self.idx;
                                                                                                                                    var $3075 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3062, $3071), $3072, $3073, $3074, $3075);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3077 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$term(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3079 = self.err;
                                                                                                                                                    var self = $3077;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3081 = self.value;
                                                                                                                                                            var $3082 = Parser$Reply$error$(Parser$Error$combine$($3081, $3079));
                                                                                                                                                            var $3080 = $3082;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3083 = Parser$Reply$error$($3079);
                                                                                                                                                            var $3080 = $3083;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3078 = $3080;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3084 = self.pst;
                                                                                                                                                    var $3085 = self.val;
                                                                                                                                                    var self = $3084;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3087 = self.err;
                                                                                                                                                            var $3088 = self.nam;
                                                                                                                                                            var $3089 = self.ini;
                                                                                                                                                            var $3090 = self.idx;
                                                                                                                                                            var $3091 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3077, $3087), $3088, $3089, $3090, $3091);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3093 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$("with ", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3095 = self.err;
                                                                                                                                                                            var self = $3093;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3097 = self.value;
                                                                                                                                                                                    var $3098 = Parser$Reply$error$(Parser$Error$combine$($3097, $3095));
                                                                                                                                                                                    var $3096 = $3098;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3099 = Parser$Reply$error$($3095);
                                                                                                                                                                                    var $3096 = $3099;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3094 = $3096;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3100 = self.pst;
                                                                                                                                                                            var self = $3100;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3102 = self.err;
                                                                                                                                                                                    var $3103 = self.nam;
                                                                                                                                                                                    var $3104 = self.ini;
                                                                                                                                                                                    var $3105 = self.idx;
                                                                                                                                                                                    var $3106 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3093, $3102), $3103, $3104, $3105, $3106);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3108 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$name1$(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3110 = self.err;
                                                                                                                                                                                                    var self = $3108;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3112 = self.value;
                                                                                                                                                                                                            var $3113 = Parser$Reply$error$(Parser$Error$combine$($3112, $3110));
                                                                                                                                                                                                            var $3111 = $3113;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3114 = Parser$Reply$error$($3110);
                                                                                                                                                                                                            var $3111 = $3114;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3109 = $3111;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3115 = self.pst;
                                                                                                                                                                                                    var $3116 = self.val;
                                                                                                                                                                                                    var self = $3115;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3118 = self.err;
                                                                                                                                                                                                            var $3119 = self.nam;
                                                                                                                                                                                                            var $3120 = self.ini;
                                                                                                                                                                                                            var $3121 = self.idx;
                                                                                                                                                                                                            var $3122 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3108, $3118), $3119, $3120, $3121, $3122);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $3124 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$text$(":", _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $3126 = self.err;
                                                                                                                                                                                                                            var self = $3124;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3128 = self.value;
                                                                                                                                                                                                                                    var $3129 = Parser$Reply$error$(Parser$Error$combine$($3128, $3126));
                                                                                                                                                                                                                                    var $3127 = $3129;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3130 = Parser$Reply$error$($3126);
                                                                                                                                                                                                                                    var $3127 = $3130;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3125 = $3127;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3131 = self.pst;
                                                                                                                                                                                                                            var self = $3131;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3133 = self.err;
                                                                                                                                                                                                                                    var $3134 = self.nam;
                                                                                                                                                                                                                                    var $3135 = self.ini;
                                                                                                                                                                                                                                    var $3136 = self.idx;
                                                                                                                                                                                                                                    var $3137 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($3124, $3133), $3134, $3135, $3136, $3137);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $3139 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Kind$Parser$term(_reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $3141 = self.err;
                                                                                                                                                                                                                                                    var self = $3139;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $3143 = self.value;
                                                                                                                                                                                                                                                            var $3144 = Parser$Reply$error$(Parser$Error$combine$($3143, $3141));
                                                                                                                                                                                                                                                            var $3142 = $3144;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $3145 = Parser$Reply$error$($3141);
                                                                                                                                                                                                                                                            var $3142 = $3145;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3140 = $3142;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $3146 = self.pst;
                                                                                                                                                                                                                                                    var $3147 = self.val;
                                                                                                                                                                                                                                                    var self = $3146;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $3149 = self.err;
                                                                                                                                                                                                                                                            var $3150 = self.nam;
                                                                                                                                                                                                                                                            var $3151 = self.ini;
                                                                                                                                                                                                                                                            var $3152 = self.idx;
                                                                                                                                                                                                                                                            var $3153 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($3139, $3149), $3150, $3151, $3152, $3153);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $3155 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $3157 = self.err;
                                                                                                                                                                                                                                                                            var self = $3155;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $3159 = self.value;
                                                                                                                                                                                                                                                                                    var $3160 = Parser$Reply$error$(Parser$Error$combine$($3159, $3157));
                                                                                                                                                                                                                                                                                    var $3158 = $3160;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $3161 = Parser$Reply$error$($3157);
                                                                                                                                                                                                                                                                                    var $3158 = $3161;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $3156 = $3158;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $3162 = self.pst;
                                                                                                                                                                                                                                                                            var self = $3162;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $3164 = self.err;
                                                                                                                                                                                                                                                                                    var $3165 = self.nam;
                                                                                                                                                                                                                                                                                    var $3166 = self.ini;
                                                                                                                                                                                                                                                                                    var $3167 = self.idx;
                                                                                                                                                                                                                                                                                    var $3168 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($3155, $3164), $3165, $3166, $3167, $3168);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $3170 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$162 = _body$1(Unit$new)(_reply$pst$156);
                                                                                                                                                                                                                                                                                            var self = _reply$162;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $3172 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $3170;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $3174 = self.value;
                                                                                                                                                                                                                                                                                                            var $3175 = Parser$Reply$error$(Parser$Error$combine$($3174, $3172));
                                                                                                                                                                                                                                                                                                            var $3173 = $3175;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $3176 = Parser$Reply$error$($3172);
                                                                                                                                                                                                                                                                                                            var $3173 = $3176;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $3171 = $3173;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $3177 = self.pst;
                                                                                                                                                                                                                                                                                                    var $3178 = self.val;
                                                                                                                                                                                                                                                                                                    var self = $3177;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $3180 = self.err;
                                                                                                                                                                                                                                                                                                            var $3181 = self.nam;
                                                                                                                                                                                                                                                                                                            var $3182 = self.ini;
                                                                                                                                                                                                                                                                                                            var $3183 = self.idx;
                                                                                                                                                                                                                                                                                                            var $3184 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($3170, $3180), $3181, $3182, $3183, $3184);
                                                                                                                                                                                                                                                                                                            var _term$171 = Kind$Term$ref$("Nat.for");
                                                                                                                                                                                                                                                                                                            var _term$172 = Kind$Term$app$(_term$171, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                            var _term$173 = Kind$Term$app$(_term$172, Kind$Term$ref$($3116));
                                                                                                                                                                                                                                                                                                            var _term$174 = Kind$Term$app$(_term$173, $3054);
                                                                                                                                                                                                                                                                                                            var _term$175 = Kind$Term$app$(_term$174, $3085);
                                                                                                                                                                                                                                                                                                            var _lamb$176 = Kind$Term$lam$($3023, (_e$176 => {
                                                                                                                                                                                                                                                                                                                var $3186 = Kind$Term$lam$($3116, (_s$177 => {
                                                                                                                                                                                                                                                                                                                    var $3187 = $3147;
                                                                                                                                                                                                                                                                                                                    return $3187;
                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                return $3186;
                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                            var _term$177 = Kind$Term$app$(_term$175, _lamb$176);
                                                                                                                                                                                                                                                                                                            var _term$178 = Kind$Term$let$($3116, _term$177, (_x$178 => {
                                                                                                                                                                                                                                                                                                                var $3188 = $3178;
                                                                                                                                                                                                                                                                                                                return $3188;
                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                            var $3185 = Parser$Reply$value$(_reply$pst$170, _term$178);
                                                                                                                                                                                                                                                                                                            var $3179 = $3185;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $3171 = $3179;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $3169 = $3171;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $3163 = $3169;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $3156 = $3163;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $3154 = $3156;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $3148 = $3154;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3140 = $3148;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $3138 = $3140;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $3132 = $3138;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3125 = $3132;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $3123 = $3125;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $3117 = $3123;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3109 = $3117;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3107 = $3109;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3101 = $3107;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3094 = $3101;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3092 = $3094;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3086 = $3092;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3078 = $3086;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3076 = $3078;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3070 = $3076;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3063 = $3070;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3061 = $3063;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3055 = $3061;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3047 = $3055;
                                                                                                    break;
                                                                                            };
                                                                                            var $3045 = $3047;
                                                                                            break;
                                                                                    };
                                                                                    var $3039 = $3045;
                                                                                    break;
                                                                            };
                                                                            var $3032 = $3039;
                                                                            break;
                                                                    };
                                                                    var $3030 = $3032;
                                                                    break;
                                                            };
                                                            var $3024 = $3030;
                                                            break;
                                                    };
                                                    var $3016 = $3024;
                                                    break;
                                            };
                                            var $3014 = $3016;
                                            break;
                                    };
                                    var $3008 = $3014;
                                    break;
                            };
                            var $3001 = $3008;
                            break;
                    };
                    var $2999 = $3001;
                    break;
            };
            return $2999;
        }));
        return $2998;
    };
    const Kind$Parser$letforrange$nat$with = x0 => Kind$Parser$letforrange$nat$with$(x0);

    function Kind$Parser$letforin$(_body$1) {
        var $3189 = Kind$Parser$block("let-for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3191 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3193 = self.err;
                            var self = $3191;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3195 = self.value;
                                    var $3196 = Parser$Reply$error$(Parser$Error$combine$($3195, $3193));
                                    var $3194 = $3196;
                                    break;
                                case 'Maybe.none':
                                    var $3197 = Parser$Reply$error$($3193);
                                    var $3194 = $3197;
                                    break;
                            };
                            var $3192 = $3194;
                            break;
                        case 'Parser.Reply.value':
                            var $3198 = self.pst;
                            var self = $3198;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3200 = self.err;
                                    var $3201 = self.nam;
                                    var $3202 = self.ini;
                                    var $3203 = self.idx;
                                    var $3204 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3191, $3200), $3201, $3202, $3203, $3204);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3206 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3208 = self.err;
                                                    var self = $3206;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3210 = self.value;
                                                            var $3211 = Parser$Reply$error$(Parser$Error$combine$($3210, $3208));
                                                            var $3209 = $3211;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3212 = Parser$Reply$error$($3208);
                                                            var $3209 = $3212;
                                                            break;
                                                    };
                                                    var $3207 = $3209;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3213 = self.pst;
                                                    var $3214 = self.val;
                                                    var self = $3213;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3216 = self.err;
                                                            var $3217 = self.nam;
                                                            var $3218 = self.ini;
                                                            var $3219 = self.idx;
                                                            var $3220 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3206, $3216), $3217, $3218, $3219, $3220);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3222 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3224 = self.err;
                                                                            var self = $3222;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3226 = self.value;
                                                                                    var $3227 = Parser$Reply$error$(Parser$Error$combine$($3226, $3224));
                                                                                    var $3225 = $3227;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3228 = Parser$Reply$error$($3224);
                                                                                    var $3225 = $3228;
                                                                                    break;
                                                                            };
                                                                            var $3223 = $3225;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3229 = self.pst;
                                                                            var self = $3229;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3231 = self.err;
                                                                                    var $3232 = self.nam;
                                                                                    var $3233 = self.ini;
                                                                                    var $3234 = self.idx;
                                                                                    var $3235 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3222, $3231), $3232, $3233, $3234, $3235);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3237 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$("for ", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3239 = self.err;
                                                                                                    var self = $3237;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3241 = self.value;
                                                                                                            var $3242 = Parser$Reply$error$(Parser$Error$combine$($3241, $3239));
                                                                                                            var $3240 = $3242;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3243 = Parser$Reply$error$($3239);
                                                                                                            var $3240 = $3243;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3238 = $3240;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3244 = self.pst;
                                                                                                    var self = $3244;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3246 = self.err;
                                                                                                            var $3247 = self.nam;
                                                                                                            var $3248 = self.ini;
                                                                                                            var $3249 = self.idx;
                                                                                                            var $3250 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3237, $3246), $3247, $3248, $3249, $3250);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3252 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3254 = self.err;
                                                                                                                            var self = $3252;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3256 = self.value;
                                                                                                                                    var $3257 = Parser$Reply$error$(Parser$Error$combine$($3256, $3254));
                                                                                                                                    var $3255 = $3257;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3258 = Parser$Reply$error$($3254);
                                                                                                                                    var $3255 = $3258;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3253 = $3255;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3259 = self.pst;
                                                                                                                            var $3260 = self.val;
                                                                                                                            var self = $3259;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3262 = self.err;
                                                                                                                                    var $3263 = self.nam;
                                                                                                                                    var $3264 = self.ini;
                                                                                                                                    var $3265 = self.idx;
                                                                                                                                    var $3266 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3252, $3262), $3263, $3264, $3265, $3266);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3268 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("in", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3270 = self.err;
                                                                                                                                                    var self = $3268;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3272 = self.value;
                                                                                                                                                            var $3273 = Parser$Reply$error$(Parser$Error$combine$($3272, $3270));
                                                                                                                                                            var $3271 = $3273;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3274 = Parser$Reply$error$($3270);
                                                                                                                                                            var $3271 = $3274;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3269 = $3271;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3275 = self.pst;
                                                                                                                                                    var self = $3275;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3277 = self.err;
                                                                                                                                                            var $3278 = self.nam;
                                                                                                                                                            var $3279 = self.ini;
                                                                                                                                                            var $3280 = self.idx;
                                                                                                                                                            var $3281 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3268, $3277), $3278, $3279, $3280, $3281);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3283 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3285 = self.err;
                                                                                                                                                                            var self = $3283;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3287 = self.value;
                                                                                                                                                                                    var $3288 = Parser$Reply$error$(Parser$Error$combine$($3287, $3285));
                                                                                                                                                                                    var $3286 = $3288;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3289 = Parser$Reply$error$($3285);
                                                                                                                                                                                    var $3286 = $3289;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3284 = $3286;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3290 = self.pst;
                                                                                                                                                                            var $3291 = self.val;
                                                                                                                                                                            var self = $3290;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3293 = self.err;
                                                                                                                                                                                    var $3294 = self.nam;
                                                                                                                                                                                    var $3295 = self.ini;
                                                                                                                                                                                    var $3296 = self.idx;
                                                                                                                                                                                    var $3297 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3283, $3293), $3294, $3295, $3296, $3297);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3299 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$text$(":", _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3301 = self.err;
                                                                                                                                                                                                    var self = $3299;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3303 = self.value;
                                                                                                                                                                                                            var $3304 = Parser$Reply$error$(Parser$Error$combine$($3303, $3301));
                                                                                                                                                                                                            var $3302 = $3304;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3305 = Parser$Reply$error$($3301);
                                                                                                                                                                                                            var $3302 = $3305;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3300 = $3302;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3306 = self.pst;
                                                                                                                                                                                                    var self = $3306;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3308 = self.err;
                                                                                                                                                                                                            var $3309 = self.nam;
                                                                                                                                                                                                            var $3310 = self.ini;
                                                                                                                                                                                                            var $3311 = self.idx;
                                                                                                                                                                                                            var $3312 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3299, $3308), $3309, $3310, $3311, $3312);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $3314 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$term(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $3316 = self.err;
                                                                                                                                                                                                                            var self = $3314;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3318 = self.value;
                                                                                                                                                                                                                                    var $3319 = Parser$Reply$error$(Parser$Error$combine$($3318, $3316));
                                                                                                                                                                                                                                    var $3317 = $3319;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3320 = Parser$Reply$error$($3316);
                                                                                                                                                                                                                                    var $3317 = $3320;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3315 = $3317;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3321 = self.pst;
                                                                                                                                                                                                                            var $3322 = self.val;
                                                                                                                                                                                                                            var self = $3321;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3324 = self.err;
                                                                                                                                                                                                                                    var $3325 = self.nam;
                                                                                                                                                                                                                                    var $3326 = self.ini;
                                                                                                                                                                                                                                    var $3327 = self.idx;
                                                                                                                                                                                                                                    var $3328 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($3314, $3324), $3325, $3326, $3327, $3328);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $3330 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $3332 = self.err;
                                                                                                                                                                                                                                                    var self = $3330;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $3334 = self.value;
                                                                                                                                                                                                                                                            var $3335 = Parser$Reply$error$(Parser$Error$combine$($3334, $3332));
                                                                                                                                                                                                                                                            var $3333 = $3335;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $3336 = Parser$Reply$error$($3332);
                                                                                                                                                                                                                                                            var $3333 = $3336;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3331 = $3333;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $3337 = self.pst;
                                                                                                                                                                                                                                                    var self = $3337;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $3339 = self.err;
                                                                                                                                                                                                                                                            var $3340 = self.nam;
                                                                                                                                                                                                                                                            var $3341 = self.ini;
                                                                                                                                                                                                                                                            var $3342 = self.idx;
                                                                                                                                                                                                                                                            var $3343 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($3330, $3339), $3340, $3341, $3342, $3343);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $3345 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = _body$1(Unit$new)(_reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $3347 = self.err;
                                                                                                                                                                                                                                                                            var self = $3345;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $3349 = self.value;
                                                                                                                                                                                                                                                                                    var $3350 = Parser$Reply$error$(Parser$Error$combine$($3349, $3347));
                                                                                                                                                                                                                                                                                    var $3348 = $3350;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $3351 = Parser$Reply$error$($3347);
                                                                                                                                                                                                                                                                                    var $3348 = $3351;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $3346 = $3348;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $3352 = self.pst;
                                                                                                                                                                                                                                                                            var $3353 = self.val;
                                                                                                                                                                                                                                                                            var self = $3352;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $3355 = self.err;
                                                                                                                                                                                                                                                                                    var $3356 = self.nam;
                                                                                                                                                                                                                                                                                    var $3357 = self.ini;
                                                                                                                                                                                                                                                                                    var $3358 = self.idx;
                                                                                                                                                                                                                                                                                    var $3359 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($3345, $3355), $3356, $3357, $3358, $3359);
                                                                                                                                                                                                                                                                                    var _term$157 = Kind$Term$ref$("List.for");
                                                                                                                                                                                                                                                                                    var _term$158 = Kind$Term$app$(_term$157, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                    var _term$159 = Kind$Term$app$(_term$158, $3291);
                                                                                                                                                                                                                                                                                    var _term$160 = Kind$Term$app$(_term$159, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                    var _term$161 = Kind$Term$app$(_term$160, Kind$Term$ref$($3214));
                                                                                                                                                                                                                                                                                    var _lamb$162 = Kind$Term$lam$($3260, (_i$162 => {
                                                                                                                                                                                                                                                                                        var $3361 = Kind$Term$lam$($3214, (_x$163 => {
                                                                                                                                                                                                                                                                                            var $3362 = $3322;
                                                                                                                                                                                                                                                                                            return $3362;
                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                        return $3361;
                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                    var _term$163 = Kind$Term$app$(_term$161, _lamb$162);
                                                                                                                                                                                                                                                                                    var _term$164 = Kind$Term$let$($3214, _term$163, (_x$164 => {
                                                                                                                                                                                                                                                                                        var $3363 = $3353;
                                                                                                                                                                                                                                                                                        return $3363;
                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                    var $3360 = Parser$Reply$value$(_reply$pst$156, _term$164);
                                                                                                                                                                                                                                                                                    var $3354 = $3360;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $3346 = $3354;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $3344 = $3346;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $3338 = $3344;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3331 = $3338;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $3329 = $3331;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $3323 = $3329;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3315 = $3323;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $3313 = $3315;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $3307 = $3313;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3300 = $3307;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3298 = $3300;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3292 = $3298;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3284 = $3292;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3282 = $3284;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3276 = $3282;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3269 = $3276;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3267 = $3269;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3261 = $3267;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3253 = $3261;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3251 = $3253;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3245 = $3251;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3238 = $3245;
                                                                                                    break;
                                                                                            };
                                                                                            var $3236 = $3238;
                                                                                            break;
                                                                                    };
                                                                                    var $3230 = $3236;
                                                                                    break;
                                                                            };
                                                                            var $3223 = $3230;
                                                                            break;
                                                                    };
                                                                    var $3221 = $3223;
                                                                    break;
                                                            };
                                                            var $3215 = $3221;
                                                            break;
                                                    };
                                                    var $3207 = $3215;
                                                    break;
                                            };
                                            var $3205 = $3207;
                                            break;
                                    };
                                    var $3199 = $3205;
                                    break;
                            };
                            var $3192 = $3199;
                            break;
                    };
                    var $3190 = $3192;
                    break;
            };
            return $3190;
        }));
        return $3189;
    };
    const Kind$Parser$letforin = x0 => Kind$Parser$letforin$(x0);

    function Kind$Parser$letforin$with$(_body$1) {
        var $3364 = Kind$Parser$block("for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3366 = self.err;
                    var _reply$8 = Kind$Parser$text$("for ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3368 = self.err;
                            var self = $3366;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3370 = self.value;
                                    var $3371 = Parser$Reply$error$(Parser$Error$combine$($3370, $3368));
                                    var $3369 = $3371;
                                    break;
                                case 'Maybe.none':
                                    var $3372 = Parser$Reply$error$($3368);
                                    var $3369 = $3372;
                                    break;
                            };
                            var $3367 = $3369;
                            break;
                        case 'Parser.Reply.value':
                            var $3373 = self.pst;
                            var self = $3373;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3375 = self.err;
                                    var $3376 = self.nam;
                                    var $3377 = self.ini;
                                    var $3378 = self.idx;
                                    var $3379 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3366, $3375), $3376, $3377, $3378, $3379);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3381 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3383 = self.err;
                                                    var self = $3381;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3385 = self.value;
                                                            var $3386 = Parser$Reply$error$(Parser$Error$combine$($3385, $3383));
                                                            var $3384 = $3386;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3387 = Parser$Reply$error$($3383);
                                                            var $3384 = $3387;
                                                            break;
                                                    };
                                                    var $3382 = $3384;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3388 = self.pst;
                                                    var $3389 = self.val;
                                                    var self = $3388;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3391 = self.err;
                                                            var $3392 = self.nam;
                                                            var $3393 = self.ini;
                                                            var $3394 = self.idx;
                                                            var $3395 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3381, $3391), $3392, $3393, $3394, $3395);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3397 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("in", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3399 = self.err;
                                                                            var self = $3397;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3401 = self.value;
                                                                                    var $3402 = Parser$Reply$error$(Parser$Error$combine$($3401, $3399));
                                                                                    var $3400 = $3402;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3403 = Parser$Reply$error$($3399);
                                                                                    var $3400 = $3403;
                                                                                    break;
                                                                            };
                                                                            var $3398 = $3400;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3404 = self.pst;
                                                                            var self = $3404;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3406 = self.err;
                                                                                    var $3407 = self.nam;
                                                                                    var $3408 = self.ini;
                                                                                    var $3409 = self.idx;
                                                                                    var $3410 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3397, $3406), $3407, $3408, $3409, $3410);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3412 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3414 = self.err;
                                                                                                    var self = $3412;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3416 = self.value;
                                                                                                            var $3417 = Parser$Reply$error$(Parser$Error$combine$($3416, $3414));
                                                                                                            var $3415 = $3417;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3418 = Parser$Reply$error$($3414);
                                                                                                            var $3415 = $3418;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3413 = $3415;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3419 = self.pst;
                                                                                                    var $3420 = self.val;
                                                                                                    var self = $3419;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3422 = self.err;
                                                                                                            var $3423 = self.nam;
                                                                                                            var $3424 = self.ini;
                                                                                                            var $3425 = self.idx;
                                                                                                            var $3426 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3412, $3422), $3423, $3424, $3425, $3426);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3428 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("with", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3430 = self.err;
                                                                                                                            var self = $3428;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3432 = self.value;
                                                                                                                                    var $3433 = Parser$Reply$error$(Parser$Error$combine$($3432, $3430));
                                                                                                                                    var $3431 = $3433;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3434 = Parser$Reply$error$($3430);
                                                                                                                                    var $3431 = $3434;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3429 = $3431;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3435 = self.pst;
                                                                                                                            var self = $3435;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3437 = self.err;
                                                                                                                                    var $3438 = self.nam;
                                                                                                                                    var $3439 = self.ini;
                                                                                                                                    var $3440 = self.idx;
                                                                                                                                    var $3441 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3428, $3437), $3438, $3439, $3440, $3441);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3443 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$name1$(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3445 = self.err;
                                                                                                                                                    var self = $3443;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3447 = self.value;
                                                                                                                                                            var $3448 = Parser$Reply$error$(Parser$Error$combine$($3447, $3445));
                                                                                                                                                            var $3446 = $3448;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3449 = Parser$Reply$error$($3445);
                                                                                                                                                            var $3446 = $3449;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3444 = $3446;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3450 = self.pst;
                                                                                                                                                    var $3451 = self.val;
                                                                                                                                                    var self = $3450;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3453 = self.err;
                                                                                                                                                            var $3454 = self.nam;
                                                                                                                                                            var $3455 = self.ini;
                                                                                                                                                            var $3456 = self.idx;
                                                                                                                                                            var $3457 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3443, $3453), $3454, $3455, $3456, $3457);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3459 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$(":", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3461 = self.err;
                                                                                                                                                                            var self = $3459;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3463 = self.value;
                                                                                                                                                                                    var $3464 = Parser$Reply$error$(Parser$Error$combine$($3463, $3461));
                                                                                                                                                                                    var $3462 = $3464;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3465 = Parser$Reply$error$($3461);
                                                                                                                                                                                    var $3462 = $3465;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3460 = $3462;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3466 = self.pst;
                                                                                                                                                                            var self = $3466;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3468 = self.err;
                                                                                                                                                                                    var $3469 = self.nam;
                                                                                                                                                                                    var $3470 = self.ini;
                                                                                                                                                                                    var $3471 = self.idx;
                                                                                                                                                                                    var $3472 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3459, $3468), $3469, $3470, $3471, $3472);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3474 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$term(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3476 = self.err;
                                                                                                                                                                                                    var self = $3474;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3478 = self.value;
                                                                                                                                                                                                            var $3479 = Parser$Reply$error$(Parser$Error$combine$($3478, $3476));
                                                                                                                                                                                                            var $3477 = $3479;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3480 = Parser$Reply$error$($3476);
                                                                                                                                                                                                            var $3477 = $3480;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3475 = $3477;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3481 = self.pst;
                                                                                                                                                                                                    var $3482 = self.val;
                                                                                                                                                                                                    var self = $3481;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3484 = self.err;
                                                                                                                                                                                                            var $3485 = self.nam;
                                                                                                                                                                                                            var $3486 = self.ini;
                                                                                                                                                                                                            var $3487 = self.idx;
                                                                                                                                                                                                            var $3488 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3474, $3484), $3485, $3486, $3487, $3488);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $3490 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $3492 = self.err;
                                                                                                                                                                                                                            var self = $3490;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3494 = self.value;
                                                                                                                                                                                                                                    var $3495 = Parser$Reply$error$(Parser$Error$combine$($3494, $3492));
                                                                                                                                                                                                                                    var $3493 = $3495;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3496 = Parser$Reply$error$($3492);
                                                                                                                                                                                                                                    var $3493 = $3496;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3491 = $3493;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3497 = self.pst;
                                                                                                                                                                                                                            var self = $3497;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3499 = self.err;
                                                                                                                                                                                                                                    var $3500 = self.nam;
                                                                                                                                                                                                                                    var $3501 = self.ini;
                                                                                                                                                                                                                                    var $3502 = self.idx;
                                                                                                                                                                                                                                    var $3503 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($3490, $3499), $3500, $3501, $3502, $3503);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $3505 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = _body$1(Unit$new)(_reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $3507 = self.err;
                                                                                                                                                                                                                                                    var self = $3505;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $3509 = self.value;
                                                                                                                                                                                                                                                            var $3510 = Parser$Reply$error$(Parser$Error$combine$($3509, $3507));
                                                                                                                                                                                                                                                            var $3508 = $3510;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $3511 = Parser$Reply$error$($3507);
                                                                                                                                                                                                                                                            var $3508 = $3511;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3506 = $3508;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $3512 = self.pst;
                                                                                                                                                                                                                                                    var $3513 = self.val;
                                                                                                                                                                                                                                                    var self = $3512;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $3515 = self.err;
                                                                                                                                                                                                                                                            var $3516 = self.nam;
                                                                                                                                                                                                                                                            var $3517 = self.ini;
                                                                                                                                                                                                                                                            var $3518 = self.idx;
                                                                                                                                                                                                                                                            var $3519 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($3505, $3515), $3516, $3517, $3518, $3519);
                                                                                                                                                                                                                                                            var _term$143 = Kind$Term$ref$("List.for");
                                                                                                                                                                                                                                                            var _term$144 = Kind$Term$app$(_term$143, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                            var _term$145 = Kind$Term$app$(_term$144, $3420);
                                                                                                                                                                                                                                                            var _term$146 = Kind$Term$app$(_term$145, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                            var _term$147 = Kind$Term$app$(_term$146, Kind$Term$ref$($3451));
                                                                                                                                                                                                                                                            var _lamb$148 = Kind$Term$lam$($3389, (_i$148 => {
                                                                                                                                                                                                                                                                var $3521 = Kind$Term$lam$($3451, (_x$149 => {
                                                                                                                                                                                                                                                                    var $3522 = $3482;
                                                                                                                                                                                                                                                                    return $3522;
                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                return $3521;
                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                            var _term$149 = Kind$Term$app$(_term$147, _lamb$148);
                                                                                                                                                                                                                                                            var _term$150 = Kind$Term$let$($3451, _term$149, (_x$150 => {
                                                                                                                                                                                                                                                                var $3523 = $3513;
                                                                                                                                                                                                                                                                return $3523;
                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                            var $3520 = Parser$Reply$value$(_reply$pst$142, _term$150);
                                                                                                                                                                                                                                                            var $3514 = $3520;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3506 = $3514;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $3504 = $3506;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $3498 = $3504;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3491 = $3498;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $3489 = $3491;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $3483 = $3489;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3475 = $3483;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3473 = $3475;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3467 = $3473;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3460 = $3467;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3458 = $3460;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3452 = $3458;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3444 = $3452;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3442 = $3444;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3436 = $3442;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3429 = $3436;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3427 = $3429;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3421 = $3427;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3413 = $3421;
                                                                                                    break;
                                                                                            };
                                                                                            var $3411 = $3413;
                                                                                            break;
                                                                                    };
                                                                                    var $3405 = $3411;
                                                                                    break;
                                                                            };
                                                                            var $3398 = $3405;
                                                                            break;
                                                                    };
                                                                    var $3396 = $3398;
                                                                    break;
                                                            };
                                                            var $3390 = $3396;
                                                            break;
                                                    };
                                                    var $3382 = $3390;
                                                    break;
                                            };
                                            var $3380 = $3382;
                                            break;
                                    };
                                    var $3374 = $3380;
                                    break;
                            };
                            var $3367 = $3374;
                            break;
                    };
                    var $3365 = $3367;
                    break;
            };
            return $3365;
        }));
        return $3364;
    };
    const Kind$Parser$letforin$with = x0 => Kind$Parser$letforin$with$(x0);

    function Kind$Parser$letwhile$(_body$1) {
        var $3524 = Kind$Parser$block("let-while")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3526 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3528 = self.err;
                            var self = $3526;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3530 = self.value;
                                    var $3531 = Parser$Reply$error$(Parser$Error$combine$($3530, $3528));
                                    var $3529 = $3531;
                                    break;
                                case 'Maybe.none':
                                    var $3532 = Parser$Reply$error$($3528);
                                    var $3529 = $3532;
                                    break;
                            };
                            var $3527 = $3529;
                            break;
                        case 'Parser.Reply.value':
                            var $3533 = self.pst;
                            var self = $3533;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3535 = self.err;
                                    var $3536 = self.nam;
                                    var $3537 = self.ini;
                                    var $3538 = self.idx;
                                    var $3539 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3526, $3535), $3536, $3537, $3538, $3539);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3541 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3543 = self.err;
                                                    var self = $3541;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3545 = self.value;
                                                            var $3546 = Parser$Reply$error$(Parser$Error$combine$($3545, $3543));
                                                            var $3544 = $3546;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3547 = Parser$Reply$error$($3543);
                                                            var $3544 = $3547;
                                                            break;
                                                    };
                                                    var $3542 = $3544;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3548 = self.pst;
                                                    var $3549 = self.val;
                                                    var self = $3548;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3551 = self.err;
                                                            var $3552 = self.nam;
                                                            var $3553 = self.ini;
                                                            var $3554 = self.idx;
                                                            var $3555 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3541, $3551), $3552, $3553, $3554, $3555);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3557 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3559 = self.err;
                                                                            var self = $3557;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3561 = self.value;
                                                                                    var $3562 = Parser$Reply$error$(Parser$Error$combine$($3561, $3559));
                                                                                    var $3560 = $3562;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3563 = Parser$Reply$error$($3559);
                                                                                    var $3560 = $3563;
                                                                                    break;
                                                                            };
                                                                            var $3558 = $3560;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3564 = self.pst;
                                                                            var self = $3564;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3566 = self.err;
                                                                                    var $3567 = self.nam;
                                                                                    var $3568 = self.ini;
                                                                                    var $3569 = self.idx;
                                                                                    var $3570 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3557, $3566), $3567, $3568, $3569, $3570);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3572 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$("while ", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3574 = self.err;
                                                                                                    var self = $3572;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3576 = self.value;
                                                                                                            var $3577 = Parser$Reply$error$(Parser$Error$combine$($3576, $3574));
                                                                                                            var $3575 = $3577;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3578 = Parser$Reply$error$($3574);
                                                                                                            var $3575 = $3578;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3573 = $3575;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3579 = self.pst;
                                                                                                    var self = $3579;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3581 = self.err;
                                                                                                            var $3582 = self.nam;
                                                                                                            var $3583 = self.ini;
                                                                                                            var $3584 = self.idx;
                                                                                                            var $3585 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3572, $3581), $3582, $3583, $3584, $3585);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3587 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$term(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3589 = self.err;
                                                                                                                            var self = $3587;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3591 = self.value;
                                                                                                                                    var $3592 = Parser$Reply$error$(Parser$Error$combine$($3591, $3589));
                                                                                                                                    var $3590 = $3592;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3593 = Parser$Reply$error$($3589);
                                                                                                                                    var $3590 = $3593;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3588 = $3590;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3594 = self.pst;
                                                                                                                            var $3595 = self.val;
                                                                                                                            var self = $3594;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3597 = self.err;
                                                                                                                                    var $3598 = self.nam;
                                                                                                                                    var $3599 = self.ini;
                                                                                                                                    var $3600 = self.idx;
                                                                                                                                    var $3601 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3587, $3597), $3598, $3599, $3600, $3601);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3603 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$(":", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3605 = self.err;
                                                                                                                                                    var self = $3603;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3607 = self.value;
                                                                                                                                                            var $3608 = Parser$Reply$error$(Parser$Error$combine$($3607, $3605));
                                                                                                                                                            var $3606 = $3608;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3609 = Parser$Reply$error$($3605);
                                                                                                                                                            var $3606 = $3609;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3604 = $3606;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3610 = self.pst;
                                                                                                                                                    var self = $3610;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3612 = self.err;
                                                                                                                                                            var $3613 = self.nam;
                                                                                                                                                            var $3614 = self.ini;
                                                                                                                                                            var $3615 = self.idx;
                                                                                                                                                            var $3616 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3603, $3612), $3613, $3614, $3615, $3616);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3618 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3620 = self.err;
                                                                                                                                                                            var self = $3618;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3622 = self.value;
                                                                                                                                                                                    var $3623 = Parser$Reply$error$(Parser$Error$combine$($3622, $3620));
                                                                                                                                                                                    var $3621 = $3623;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3624 = Parser$Reply$error$($3620);
                                                                                                                                                                                    var $3621 = $3624;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3619 = $3621;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3625 = self.pst;
                                                                                                                                                                            var $3626 = self.val;
                                                                                                                                                                            var self = $3625;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3628 = self.err;
                                                                                                                                                                                    var $3629 = self.nam;
                                                                                                                                                                                    var $3630 = self.ini;
                                                                                                                                                                                    var $3631 = self.idx;
                                                                                                                                                                                    var $3632 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3618, $3628), $3629, $3630, $3631, $3632);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3634 = self.err;
                                                                                                                                                                                            var _reply$106 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3636 = self.err;
                                                                                                                                                                                                    var self = $3634;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3638 = self.value;
                                                                                                                                                                                                            var $3639 = Parser$Reply$error$(Parser$Error$combine$($3638, $3636));
                                                                                                                                                                                                            var $3637 = $3639;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3640 = Parser$Reply$error$($3636);
                                                                                                                                                                                                            var $3637 = $3640;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3635 = $3637;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3641 = self.pst;
                                                                                                                                                                                                    var self = $3641;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3643 = self.err;
                                                                                                                                                                                                            var $3644 = self.nam;
                                                                                                                                                                                                            var $3645 = self.ini;
                                                                                                                                                                                                            var $3646 = self.idx;
                                                                                                                                                                                                            var $3647 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3634, $3643), $3644, $3645, $3646, $3647);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $3649 = self.err;
                                                                                                                                                                                                                    var _reply$120 = _body$1(Unit$new)(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $3651 = self.err;
                                                                                                                                                                                                                            var self = $3649;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3653 = self.value;
                                                                                                                                                                                                                                    var $3654 = Parser$Reply$error$(Parser$Error$combine$($3653, $3651));
                                                                                                                                                                                                                                    var $3652 = $3654;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3655 = Parser$Reply$error$($3651);
                                                                                                                                                                                                                                    var $3652 = $3655;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3650 = $3652;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3656 = self.pst;
                                                                                                                                                                                                                            var $3657 = self.val;
                                                                                                                                                                                                                            var self = $3656;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3659 = self.err;
                                                                                                                                                                                                                                    var $3660 = self.nam;
                                                                                                                                                                                                                                    var $3661 = self.ini;
                                                                                                                                                                                                                                    var $3662 = self.idx;
                                                                                                                                                                                                                                    var $3663 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($3649, $3659), $3660, $3661, $3662, $3663);
                                                                                                                                                                                                                                    var _term$129 = Kind$Term$ref$("Function.while");
                                                                                                                                                                                                                                    var _term$130 = Kind$Term$app$(_term$129, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                    var _term$131 = Kind$Term$app$(_term$130, Kind$Term$ref$($3549));
                                                                                                                                                                                                                                    var _term$132 = Kind$Term$app$(_term$131, Kind$Term$lam$($3549, (_s$132 => {
                                                                                                                                                                                                                                        var $3665 = $3595;
                                                                                                                                                                                                                                        return $3665;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var _term$133 = Kind$Term$app$(_term$132, Kind$Term$lam$($3549, (_s$133 => {
                                                                                                                                                                                                                                        var $3666 = $3626;
                                                                                                                                                                                                                                        return $3666;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var _term$134 = Kind$Term$let$($3549, _term$133, (_x$134 => {
                                                                                                                                                                                                                                        var $3667 = $3657;
                                                                                                                                                                                                                                        return $3667;
                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                    var $3664 = Parser$Reply$value$(_reply$pst$128, _term$134);
                                                                                                                                                                                                                                    var $3658 = $3664;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3650 = $3658;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $3648 = $3650;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $3642 = $3648;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3635 = $3642;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3633 = $3635;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3627 = $3633;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3619 = $3627;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3617 = $3619;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3611 = $3617;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3604 = $3611;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3602 = $3604;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3596 = $3602;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3588 = $3596;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3586 = $3588;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3580 = $3586;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3573 = $3580;
                                                                                                    break;
                                                                                            };
                                                                                            var $3571 = $3573;
                                                                                            break;
                                                                                    };
                                                                                    var $3565 = $3571;
                                                                                    break;
                                                                            };
                                                                            var $3558 = $3565;
                                                                            break;
                                                                    };
                                                                    var $3556 = $3558;
                                                                    break;
                                                            };
                                                            var $3550 = $3556;
                                                            break;
                                                    };
                                                    var $3542 = $3550;
                                                    break;
                                            };
                                            var $3540 = $3542;
                                            break;
                                    };
                                    var $3534 = $3540;
                                    break;
                            };
                            var $3527 = $3534;
                            break;
                    };
                    var $3525 = $3527;
                    break;
            };
            return $3525;
        }));
        return $3524;
    };
    const Kind$Parser$letwhile = x0 => Kind$Parser$letwhile$(x0);

    function Kind$Parser$letwhile$with$(_body$1) {
        var $3668 = Kind$Parser$block("let-while")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3670 = self.err;
                    var _reply$8 = Kind$Parser$text$("while ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3672 = self.err;
                            var self = $3670;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3674 = self.value;
                                    var $3675 = Parser$Reply$error$(Parser$Error$combine$($3674, $3672));
                                    var $3673 = $3675;
                                    break;
                                case 'Maybe.none':
                                    var $3676 = Parser$Reply$error$($3672);
                                    var $3673 = $3676;
                                    break;
                            };
                            var $3671 = $3673;
                            break;
                        case 'Parser.Reply.value':
                            var $3677 = self.pst;
                            var self = $3677;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3679 = self.err;
                                    var $3680 = self.nam;
                                    var $3681 = self.ini;
                                    var $3682 = self.idx;
                                    var $3683 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3670, $3679), $3680, $3681, $3682, $3683);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3685 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3687 = self.err;
                                                    var self = $3685;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3689 = self.value;
                                                            var $3690 = Parser$Reply$error$(Parser$Error$combine$($3689, $3687));
                                                            var $3688 = $3690;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3691 = Parser$Reply$error$($3687);
                                                            var $3688 = $3691;
                                                            break;
                                                    };
                                                    var $3686 = $3688;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3692 = self.pst;
                                                    var $3693 = self.val;
                                                    var self = $3692;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3695 = self.err;
                                                            var $3696 = self.nam;
                                                            var $3697 = self.ini;
                                                            var $3698 = self.idx;
                                                            var $3699 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3685, $3695), $3696, $3697, $3698, $3699);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3701 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("with ", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3703 = self.err;
                                                                            var self = $3701;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3705 = self.value;
                                                                                    var $3706 = Parser$Reply$error$(Parser$Error$combine$($3705, $3703));
                                                                                    var $3704 = $3706;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3707 = Parser$Reply$error$($3703);
                                                                                    var $3704 = $3707;
                                                                                    break;
                                                                            };
                                                                            var $3702 = $3704;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3708 = self.pst;
                                                                            var self = $3708;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3710 = self.err;
                                                                                    var $3711 = self.nam;
                                                                                    var $3712 = self.ini;
                                                                                    var $3713 = self.idx;
                                                                                    var $3714 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3701, $3710), $3711, $3712, $3713, $3714);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3716 = self.err;
                                                                                            var _reply$50 = Kind$Parser$name1$(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3718 = self.err;
                                                                                                    var self = $3716;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3720 = self.value;
                                                                                                            var $3721 = Parser$Reply$error$(Parser$Error$combine$($3720, $3718));
                                                                                                            var $3719 = $3721;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3722 = Parser$Reply$error$($3718);
                                                                                                            var $3719 = $3722;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3717 = $3719;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3723 = self.pst;
                                                                                                    var $3724 = self.val;
                                                                                                    var self = $3723;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3726 = self.err;
                                                                                                            var $3727 = self.nam;
                                                                                                            var $3728 = self.ini;
                                                                                                            var $3729 = self.idx;
                                                                                                            var $3730 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3716, $3726), $3727, $3728, $3729, $3730);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3732 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$(":", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3734 = self.err;
                                                                                                                            var self = $3732;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3736 = self.value;
                                                                                                                                    var $3737 = Parser$Reply$error$(Parser$Error$combine$($3736, $3734));
                                                                                                                                    var $3735 = $3737;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3738 = Parser$Reply$error$($3734);
                                                                                                                                    var $3735 = $3738;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3733 = $3735;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3739 = self.pst;
                                                                                                                            var self = $3739;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3741 = self.err;
                                                                                                                                    var $3742 = self.nam;
                                                                                                                                    var $3743 = self.ini;
                                                                                                                                    var $3744 = self.idx;
                                                                                                                                    var $3745 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3732, $3741), $3742, $3743, $3744, $3745);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3747 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$term(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3749 = self.err;
                                                                                                                                                    var self = $3747;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3751 = self.value;
                                                                                                                                                            var $3752 = Parser$Reply$error$(Parser$Error$combine$($3751, $3749));
                                                                                                                                                            var $3750 = $3752;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3753 = Parser$Reply$error$($3749);
                                                                                                                                                            var $3750 = $3753;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3748 = $3750;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3754 = self.pst;
                                                                                                                                                    var $3755 = self.val;
                                                                                                                                                    var self = $3754;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3757 = self.err;
                                                                                                                                                            var $3758 = self.nam;
                                                                                                                                                            var $3759 = self.ini;
                                                                                                                                                            var $3760 = self.idx;
                                                                                                                                                            var $3761 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3747, $3757), $3758, $3759, $3760, $3761);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3763 = self.err;
                                                                                                                                                                    var _reply$92 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3765 = self.err;
                                                                                                                                                                            var self = $3763;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3767 = self.value;
                                                                                                                                                                                    var $3768 = Parser$Reply$error$(Parser$Error$combine$($3767, $3765));
                                                                                                                                                                                    var $3766 = $3768;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3769 = Parser$Reply$error$($3765);
                                                                                                                                                                                    var $3766 = $3769;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3764 = $3766;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3770 = self.pst;
                                                                                                                                                                            var self = $3770;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3772 = self.err;
                                                                                                                                                                                    var $3773 = self.nam;
                                                                                                                                                                                    var $3774 = self.ini;
                                                                                                                                                                                    var $3775 = self.idx;
                                                                                                                                                                                    var $3776 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3763, $3772), $3773, $3774, $3775, $3776);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3778 = self.err;
                                                                                                                                                                                            var _reply$106 = _body$1(Unit$new)(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3780 = self.err;
                                                                                                                                                                                                    var self = $3778;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3782 = self.value;
                                                                                                                                                                                                            var $3783 = Parser$Reply$error$(Parser$Error$combine$($3782, $3780));
                                                                                                                                                                                                            var $3781 = $3783;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3784 = Parser$Reply$error$($3780);
                                                                                                                                                                                                            var $3781 = $3784;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3779 = $3781;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3785 = self.pst;
                                                                                                                                                                                                    var $3786 = self.val;
                                                                                                                                                                                                    var self = $3785;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3788 = self.err;
                                                                                                                                                                                                            var $3789 = self.nam;
                                                                                                                                                                                                            var $3790 = self.ini;
                                                                                                                                                                                                            var $3791 = self.idx;
                                                                                                                                                                                                            var $3792 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3778, $3788), $3789, $3790, $3791, $3792);
                                                                                                                                                                                                            var _term$115 = Kind$Term$ref$("Function.while");
                                                                                                                                                                                                            var _term$116 = Kind$Term$app$(_term$115, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                            var _term$117 = Kind$Term$app$(_term$116, Kind$Term$ref$($3724));
                                                                                                                                                                                                            var _term$118 = Kind$Term$app$(_term$117, Kind$Term$lam$($3724, (_s$118 => {
                                                                                                                                                                                                                var $3794 = $3693;
                                                                                                                                                                                                                return $3794;
                                                                                                                                                                                                            })));
                                                                                                                                                                                                            var _term$119 = Kind$Term$app$(_term$118, Kind$Term$lam$($3724, (_s$119 => {
                                                                                                                                                                                                                var $3795 = $3755;
                                                                                                                                                                                                                return $3795;
                                                                                                                                                                                                            })));
                                                                                                                                                                                                            var _term$120 = Kind$Term$let$($3724, _term$119, (_x$120 => {
                                                                                                                                                                                                                var $3796 = $3786;
                                                                                                                                                                                                                return $3796;
                                                                                                                                                                                                            }));
                                                                                                                                                                                                            var $3793 = Parser$Reply$value$(_reply$pst$114, _term$120);
                                                                                                                                                                                                            var $3787 = $3793;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3779 = $3787;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3777 = $3779;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3771 = $3777;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3764 = $3771;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3762 = $3764;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3756 = $3762;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3748 = $3756;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3746 = $3748;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3740 = $3746;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3733 = $3740;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3731 = $3733;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3725 = $3731;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3717 = $3725;
                                                                                                    break;
                                                                                            };
                                                                                            var $3715 = $3717;
                                                                                            break;
                                                                                    };
                                                                                    var $3709 = $3715;
                                                                                    break;
                                                                            };
                                                                            var $3702 = $3709;
                                                                            break;
                                                                    };
                                                                    var $3700 = $3702;
                                                                    break;
                                                            };
                                                            var $3694 = $3700;
                                                            break;
                                                    };
                                                    var $3686 = $3694;
                                                    break;
                                            };
                                            var $3684 = $3686;
                                            break;
                                    };
                                    var $3678 = $3684;
                                    break;
                            };
                            var $3671 = $3678;
                            break;
                    };
                    var $3669 = $3671;
                    break;
            };
            return $3669;
        }));
        return $3668;
    };
    const Kind$Parser$letwhile$with = x0 => Kind$Parser$letwhile$with$(x0);

    function Kind$Parser$let$(_body$1) {
        var $3797 = Kind$Parser$block("let")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3799 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3801 = self.err;
                            var self = $3799;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3803 = self.value;
                                    var $3804 = Parser$Reply$error$(Parser$Error$combine$($3803, $3801));
                                    var $3802 = $3804;
                                    break;
                                case 'Maybe.none':
                                    var $3805 = Parser$Reply$error$($3801);
                                    var $3802 = $3805;
                                    break;
                            };
                            var $3800 = $3802;
                            break;
                        case 'Parser.Reply.value':
                            var $3806 = self.pst;
                            var self = $3806;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3808 = self.err;
                                    var $3809 = self.nam;
                                    var $3810 = self.ini;
                                    var $3811 = self.idx;
                                    var $3812 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3799, $3808), $3809, $3810, $3811, $3812);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3814 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3816 = self.err;
                                                    var self = $3814;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3818 = self.value;
                                                            var $3819 = Parser$Reply$error$(Parser$Error$combine$($3818, $3816));
                                                            var $3817 = $3819;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3820 = Parser$Reply$error$($3816);
                                                            var $3817 = $3820;
                                                            break;
                                                    };
                                                    var $3815 = $3817;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3821 = self.pst;
                                                    var $3822 = self.val;
                                                    var self = $3821;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3824 = self.err;
                                                            var $3825 = self.nam;
                                                            var $3826 = self.ini;
                                                            var $3827 = self.idx;
                                                            var $3828 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3814, $3824), $3825, $3826, $3827, $3828);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3830 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3832 = self.err;
                                                                            var self = $3830;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3834 = self.value;
                                                                                    var $3835 = Parser$Reply$error$(Parser$Error$combine$($3834, $3832));
                                                                                    var $3833 = $3835;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3836 = Parser$Reply$error$($3832);
                                                                                    var $3833 = $3836;
                                                                                    break;
                                                                            };
                                                                            var $3831 = $3833;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3837 = self.pst;
                                                                            var self = $3837;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3839 = self.err;
                                                                                    var $3840 = self.nam;
                                                                                    var $3841 = self.ini;
                                                                                    var $3842 = self.idx;
                                                                                    var $3843 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3830, $3839), $3840, $3841, $3842, $3843);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3845 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3847 = self.err;
                                                                                                    var self = $3845;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3849 = self.value;
                                                                                                            var $3850 = Parser$Reply$error$(Parser$Error$combine$($3849, $3847));
                                                                                                            var $3848 = $3850;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3851 = Parser$Reply$error$($3847);
                                                                                                            var $3848 = $3851;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3846 = $3848;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3852 = self.pst;
                                                                                                    var $3853 = self.val;
                                                                                                    var self = $3852;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3855 = self.err;
                                                                                                            var $3856 = self.nam;
                                                                                                            var $3857 = self.ini;
                                                                                                            var $3858 = self.idx;
                                                                                                            var $3859 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3845, $3855), $3856, $3857, $3858, $3859);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3861 = self.err;
                                                                                                                    var _reply$64 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3863 = self.err;
                                                                                                                            var self = $3861;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3865 = self.value;
                                                                                                                                    var $3866 = Parser$Reply$error$(Parser$Error$combine$($3865, $3863));
                                                                                                                                    var $3864 = $3866;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3867 = Parser$Reply$error$($3863);
                                                                                                                                    var $3864 = $3867;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3862 = $3864;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3868 = self.pst;
                                                                                                                            var self = $3868;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3870 = self.err;
                                                                                                                                    var $3871 = self.nam;
                                                                                                                                    var $3872 = self.ini;
                                                                                                                                    var $3873 = self.idx;
                                                                                                                                    var $3874 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3861, $3870), $3871, $3872, $3873, $3874);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3876 = self.err;
                                                                                                                                            var _reply$78 = _body$1(Unit$new)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3878 = self.err;
                                                                                                                                                    var self = $3876;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3880 = self.value;
                                                                                                                                                            var $3881 = Parser$Reply$error$(Parser$Error$combine$($3880, $3878));
                                                                                                                                                            var $3879 = $3881;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3882 = Parser$Reply$error$($3878);
                                                                                                                                                            var $3879 = $3882;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3877 = $3879;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3883 = self.pst;
                                                                                                                                                    var $3884 = self.val;
                                                                                                                                                    var self = $3883;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3886 = self.err;
                                                                                                                                                            var $3887 = self.nam;
                                                                                                                                                            var $3888 = self.ini;
                                                                                                                                                            var $3889 = self.idx;
                                                                                                                                                            var $3890 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3876, $3886), $3887, $3888, $3889, $3890);
                                                                                                                                                            var $3891 = Parser$Reply$value$(_reply$pst$86, Kind$Term$let$($3822, $3853, (_x$87 => {
                                                                                                                                                                var $3892 = $3884;
                                                                                                                                                                return $3892;
                                                                                                                                                            })));
                                                                                                                                                            var $3885 = $3891;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3877 = $3885;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3875 = $3877;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3869 = $3875;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3862 = $3869;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3860 = $3862;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3854 = $3860;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3846 = $3854;
                                                                                                    break;
                                                                                            };
                                                                                            var $3844 = $3846;
                                                                                            break;
                                                                                    };
                                                                                    var $3838 = $3844;
                                                                                    break;
                                                                            };
                                                                            var $3831 = $3838;
                                                                            break;
                                                                    };
                                                                    var $3829 = $3831;
                                                                    break;
                                                            };
                                                            var $3823 = $3829;
                                                            break;
                                                    };
                                                    var $3815 = $3823;
                                                    break;
                                            };
                                            var $3813 = $3815;
                                            break;
                                    };
                                    var $3807 = $3813;
                                    break;
                            };
                            var $3800 = $3807;
                            break;
                    };
                    var $3798 = $3800;
                    break;
            };
            return $3798;
        }));
        return $3797;
    };
    const Kind$Parser$let = x0 => Kind$Parser$let$(x0);

    function Kind$Parser$let$omit$(_body$1) {
        var $3893 = Kind$Parser$block("let")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3895 = self.err;
                    var _reply$8 = Kind$Parser$name1$(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3897 = self.err;
                            var self = $3895;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3899 = self.value;
                                    var $3900 = Parser$Reply$error$(Parser$Error$combine$($3899, $3897));
                                    var $3898 = $3900;
                                    break;
                                case 'Maybe.none':
                                    var $3901 = Parser$Reply$error$($3897);
                                    var $3898 = $3901;
                                    break;
                            };
                            var $3896 = $3898;
                            break;
                        case 'Parser.Reply.value':
                            var $3902 = self.pst;
                            var $3903 = self.val;
                            var self = $3902;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3905 = self.err;
                                    var $3906 = self.nam;
                                    var $3907 = self.ini;
                                    var $3908 = self.idx;
                                    var $3909 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3895, $3905), $3906, $3907, $3908, $3909);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3911 = self.err;
                                            var _reply$22 = Kind$Parser$text$("= ", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3913 = self.err;
                                                    var self = $3911;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3915 = self.value;
                                                            var $3916 = Parser$Reply$error$(Parser$Error$combine$($3915, $3913));
                                                            var $3914 = $3916;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3917 = Parser$Reply$error$($3913);
                                                            var $3914 = $3917;
                                                            break;
                                                    };
                                                    var $3912 = $3914;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3918 = self.pst;
                                                    var self = $3918;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3920 = self.err;
                                                            var $3921 = self.nam;
                                                            var $3922 = self.ini;
                                                            var $3923 = self.idx;
                                                            var $3924 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3911, $3920), $3921, $3922, $3923, $3924);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3926 = self.err;
                                                                    var _reply$36 = Kind$Parser$term(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3928 = self.err;
                                                                            var self = $3926;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3930 = self.value;
                                                                                    var $3931 = Parser$Reply$error$(Parser$Error$combine$($3930, $3928));
                                                                                    var $3929 = $3931;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3932 = Parser$Reply$error$($3928);
                                                                                    var $3929 = $3932;
                                                                                    break;
                                                                            };
                                                                            var $3927 = $3929;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3933 = self.pst;
                                                                            var $3934 = self.val;
                                                                            var self = $3933;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3936 = self.err;
                                                                                    var $3937 = self.nam;
                                                                                    var $3938 = self.ini;
                                                                                    var $3939 = self.idx;
                                                                                    var $3940 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3926, $3936), $3937, $3938, $3939, $3940);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3942 = self.err;
                                                                                            var _reply$50 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3944 = self.err;
                                                                                                    var self = $3942;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3946 = self.value;
                                                                                                            var $3947 = Parser$Reply$error$(Parser$Error$combine$($3946, $3944));
                                                                                                            var $3945 = $3947;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3948 = Parser$Reply$error$($3944);
                                                                                                            var $3945 = $3948;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3943 = $3945;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3949 = self.pst;
                                                                                                    var self = $3949;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3951 = self.err;
                                                                                                            var $3952 = self.nam;
                                                                                                            var $3953 = self.ini;
                                                                                                            var $3954 = self.idx;
                                                                                                            var $3955 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3942, $3951), $3952, $3953, $3954, $3955);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3957 = self.err;
                                                                                                                    var _reply$64 = _body$1(Unit$new)(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3959 = self.err;
                                                                                                                            var self = $3957;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3961 = self.value;
                                                                                                                                    var $3962 = Parser$Reply$error$(Parser$Error$combine$($3961, $3959));
                                                                                                                                    var $3960 = $3962;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3963 = Parser$Reply$error$($3959);
                                                                                                                                    var $3960 = $3963;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3958 = $3960;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3964 = self.pst;
                                                                                                                            var $3965 = self.val;
                                                                                                                            var self = $3964;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3967 = self.err;
                                                                                                                                    var $3968 = self.nam;
                                                                                                                                    var $3969 = self.ini;
                                                                                                                                    var $3970 = self.idx;
                                                                                                                                    var $3971 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3957, $3967), $3968, $3969, $3970, $3971);
                                                                                                                                    var $3972 = Parser$Reply$value$(_reply$pst$72, Kind$Term$let$($3903, $3934, (_x$73 => {
                                                                                                                                        var $3973 = $3965;
                                                                                                                                        return $3973;
                                                                                                                                    })));
                                                                                                                                    var $3966 = $3972;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3958 = $3966;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3956 = $3958;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3950 = $3956;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3943 = $3950;
                                                                                                    break;
                                                                                            };
                                                                                            var $3941 = $3943;
                                                                                            break;
                                                                                    };
                                                                                    var $3935 = $3941;
                                                                                    break;
                                                                            };
                                                                            var $3927 = $3935;
                                                                            break;
                                                                    };
                                                                    var $3925 = $3927;
                                                                    break;
                                                            };
                                                            var $3919 = $3925;
                                                            break;
                                                    };
                                                    var $3912 = $3919;
                                                    break;
                                            };
                                            var $3910 = $3912;
                                            break;
                                    };
                                    var $3904 = $3910;
                                    break;
                            };
                            var $3896 = $3904;
                            break;
                    };
                    var $3894 = $3896;
                    break;
            };
            return $3894;
        }));
        return $3893;
    };
    const Kind$Parser$let$omit = x0 => Kind$Parser$let$omit$(x0);

    function Kind$Parser$getwhile$(_body$1) {
        var $3974 = Kind$Parser$block("let-while")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3976 = self.err;
                    var _reply$8 = Parser$maybe$(Kind$Parser$text("let "), _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3978 = self.err;
                            var self = $3976;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3980 = self.value;
                                    var $3981 = Parser$Reply$error$(Parser$Error$combine$($3980, $3978));
                                    var $3979 = $3981;
                                    break;
                                case 'Maybe.none':
                                    var $3982 = Parser$Reply$error$($3978);
                                    var $3979 = $3982;
                                    break;
                            };
                            var $3977 = $3979;
                            break;
                        case 'Parser.Reply.value':
                            var $3983 = self.pst;
                            var self = $3983;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3985 = self.err;
                                    var $3986 = self.nam;
                                    var $3987 = self.ini;
                                    var $3988 = self.idx;
                                    var $3989 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3976, $3985), $3986, $3987, $3988, $3989);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3991 = self.err;
                                            var _reply$22 = Kind$Parser$text$("{", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3993 = self.err;
                                                    var self = $3991;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3995 = self.value;
                                                            var $3996 = Parser$Reply$error$(Parser$Error$combine$($3995, $3993));
                                                            var $3994 = $3996;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3997 = Parser$Reply$error$($3993);
                                                            var $3994 = $3997;
                                                            break;
                                                    };
                                                    var $3992 = $3994;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3998 = self.pst;
                                                    var self = $3998;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $4000 = self.err;
                                                            var $4001 = self.nam;
                                                            var $4002 = self.ini;
                                                            var $4003 = self.idx;
                                                            var $4004 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3991, $4000), $4001, $4002, $4003, $4004);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $4006 = self.err;
                                                                    var _reply$36 = Kind$Parser$name1$(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $4008 = self.err;
                                                                            var self = $4006;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $4010 = self.value;
                                                                                    var $4011 = Parser$Reply$error$(Parser$Error$combine$($4010, $4008));
                                                                                    var $4009 = $4011;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $4012 = Parser$Reply$error$($4008);
                                                                                    var $4009 = $4012;
                                                                                    break;
                                                                            };
                                                                            var $4007 = $4009;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $4013 = self.pst;
                                                                            var $4014 = self.val;
                                                                            var self = $4013;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $4016 = self.err;
                                                                                    var $4017 = self.nam;
                                                                                    var $4018 = self.ini;
                                                                                    var $4019 = self.idx;
                                                                                    var $4020 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4006, $4016), $4017, $4018, $4019, $4020);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $4022 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$(",", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $4024 = self.err;
                                                                                                    var self = $4022;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $4026 = self.value;
                                                                                                            var $4027 = Parser$Reply$error$(Parser$Error$combine$($4026, $4024));
                                                                                                            var $4025 = $4027;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $4028 = Parser$Reply$error$($4024);
                                                                                                            var $4025 = $4028;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4023 = $4025;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $4029 = self.pst;
                                                                                                    var self = $4029;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $4031 = self.err;
                                                                                                            var $4032 = self.nam;
                                                                                                            var $4033 = self.ini;
                                                                                                            var $4034 = self.idx;
                                                                                                            var $4035 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4022, $4031), $4032, $4033, $4034, $4035);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $4037 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $4039 = self.err;
                                                                                                                            var self = $4037;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $4041 = self.value;
                                                                                                                                    var $4042 = Parser$Reply$error$(Parser$Error$combine$($4041, $4039));
                                                                                                                                    var $4040 = $4042;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $4043 = Parser$Reply$error$($4039);
                                                                                                                                    var $4040 = $4043;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4038 = $4040;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $4044 = self.pst;
                                                                                                                            var $4045 = self.val;
                                                                                                                            var self = $4044;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $4047 = self.err;
                                                                                                                                    var $4048 = self.nam;
                                                                                                                                    var $4049 = self.ini;
                                                                                                                                    var $4050 = self.idx;
                                                                                                                                    var $4051 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4037, $4047), $4048, $4049, $4050, $4051);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $4053 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("}", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $4055 = self.err;
                                                                                                                                                    var self = $4053;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $4057 = self.value;
                                                                                                                                                            var $4058 = Parser$Reply$error$(Parser$Error$combine$($4057, $4055));
                                                                                                                                                            var $4056 = $4058;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $4059 = Parser$Reply$error$($4055);
                                                                                                                                                            var $4056 = $4059;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4054 = $4056;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $4060 = self.pst;
                                                                                                                                                    var self = $4060;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $4062 = self.err;
                                                                                                                                                            var $4063 = self.nam;
                                                                                                                                                            var $4064 = self.ini;
                                                                                                                                                            var $4065 = self.idx;
                                                                                                                                                            var $4066 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4053, $4062), $4063, $4064, $4065, $4066);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $4068 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$("=", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $4070 = self.err;
                                                                                                                                                                            var self = $4068;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $4072 = self.value;
                                                                                                                                                                                    var $4073 = Parser$Reply$error$(Parser$Error$combine$($4072, $4070));
                                                                                                                                                                                    var $4071 = $4073;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $4074 = Parser$Reply$error$($4070);
                                                                                                                                                                                    var $4071 = $4074;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4069 = $4071;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $4075 = self.pst;
                                                                                                                                                                            var self = $4075;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $4077 = self.err;
                                                                                                                                                                                    var $4078 = self.nam;
                                                                                                                                                                                    var $4079 = self.ini;
                                                                                                                                                                                    var $4080 = self.idx;
                                                                                                                                                                                    var $4081 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($4068, $4077), $4078, $4079, $4080, $4081);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $4083 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$text$("while ", _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $4085 = self.err;
                                                                                                                                                                                                    var self = $4083;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $4087 = self.value;
                                                                                                                                                                                                            var $4088 = Parser$Reply$error$(Parser$Error$combine$($4087, $4085));
                                                                                                                                                                                                            var $4086 = $4088;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $4089 = Parser$Reply$error$($4085);
                                                                                                                                                                                                            var $4086 = $4089;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4084 = $4086;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $4090 = self.pst;
                                                                                                                                                                                                    var self = $4090;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $4092 = self.err;
                                                                                                                                                                                                            var $4093 = self.nam;
                                                                                                                                                                                                            var $4094 = self.ini;
                                                                                                                                                                                                            var $4095 = self.idx;
                                                                                                                                                                                                            var $4096 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($4083, $4092), $4093, $4094, $4095, $4096);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $4098 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$term(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $4100 = self.err;
                                                                                                                                                                                                                            var self = $4098;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $4102 = self.value;
                                                                                                                                                                                                                                    var $4103 = Parser$Reply$error$(Parser$Error$combine$($4102, $4100));
                                                                                                                                                                                                                                    var $4101 = $4103;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $4104 = Parser$Reply$error$($4100);
                                                                                                                                                                                                                                    var $4101 = $4104;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4099 = $4101;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $4105 = self.pst;
                                                                                                                                                                                                                            var $4106 = self.val;
                                                                                                                                                                                                                            var self = $4105;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $4108 = self.err;
                                                                                                                                                                                                                                    var $4109 = self.nam;
                                                                                                                                                                                                                                    var $4110 = self.ini;
                                                                                                                                                                                                                                    var $4111 = self.idx;
                                                                                                                                                                                                                                    var $4112 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($4098, $4108), $4109, $4110, $4111, $4112);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $4114 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Kind$Parser$text$(":", _reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $4116 = self.err;
                                                                                                                                                                                                                                                    var self = $4114;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $4118 = self.value;
                                                                                                                                                                                                                                                            var $4119 = Parser$Reply$error$(Parser$Error$combine$($4118, $4116));
                                                                                                                                                                                                                                                            var $4117 = $4119;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $4120 = Parser$Reply$error$($4116);
                                                                                                                                                                                                                                                            var $4117 = $4120;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $4115 = $4117;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $4121 = self.pst;
                                                                                                                                                                                                                                                    var self = $4121;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $4123 = self.err;
                                                                                                                                                                                                                                                            var $4124 = self.nam;
                                                                                                                                                                                                                                                            var $4125 = self.ini;
                                                                                                                                                                                                                                                            var $4126 = self.idx;
                                                                                                                                                                                                                                                            var $4127 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($4114, $4123), $4124, $4125, $4126, $4127);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $4129 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = Kind$Parser$term(_reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $4131 = self.err;
                                                                                                                                                                                                                                                                            var self = $4129;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $4133 = self.value;
                                                                                                                                                                                                                                                                                    var $4134 = Parser$Reply$error$(Parser$Error$combine$($4133, $4131));
                                                                                                                                                                                                                                                                                    var $4132 = $4134;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $4135 = Parser$Reply$error$($4131);
                                                                                                                                                                                                                                                                                    var $4132 = $4135;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $4130 = $4132;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $4136 = self.pst;
                                                                                                                                                                                                                                                                            var $4137 = self.val;
                                                                                                                                                                                                                                                                            var self = $4136;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $4139 = self.err;
                                                                                                                                                                                                                                                                                    var $4140 = self.nam;
                                                                                                                                                                                                                                                                                    var $4141 = self.ini;
                                                                                                                                                                                                                                                                                    var $4142 = self.idx;
                                                                                                                                                                                                                                                                                    var $4143 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($4129, $4139), $4140, $4141, $4142, $4143);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $4145 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$162 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$156);
                                                                                                                                                                                                                                                                                            var self = _reply$162;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $4147 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $4145;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $4149 = self.value;
                                                                                                                                                                                                                                                                                                            var $4150 = Parser$Reply$error$(Parser$Error$combine$($4149, $4147));
                                                                                                                                                                                                                                                                                                            var $4148 = $4150;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $4151 = Parser$Reply$error$($4147);
                                                                                                                                                                                                                                                                                                            var $4148 = $4151;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $4146 = $4148;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $4152 = self.pst;
                                                                                                                                                                                                                                                                                                    var self = $4152;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $4154 = self.err;
                                                                                                                                                                                                                                                                                                            var $4155 = self.nam;
                                                                                                                                                                                                                                                                                                            var $4156 = self.ini;
                                                                                                                                                                                                                                                                                                            var $4157 = self.idx;
                                                                                                                                                                                                                                                                                                            var $4158 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($4145, $4154), $4155, $4156, $4157, $4158);
                                                                                                                                                                                                                                                                                                            var self = _reply$pst$170;
                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                    var $4160 = self.err;
                                                                                                                                                                                                                                                                                                                    var _reply$176 = _body$1(Unit$new)(_reply$pst$170);
                                                                                                                                                                                                                                                                                                                    var self = _reply$176;
                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                            var $4162 = self.err;
                                                                                                                                                                                                                                                                                                                            var self = $4160;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                    var $4164 = self.value;
                                                                                                                                                                                                                                                                                                                                    var $4165 = Parser$Reply$error$(Parser$Error$combine$($4164, $4162));
                                                                                                                                                                                                                                                                                                                                    var $4163 = $4165;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                    var $4166 = Parser$Reply$error$($4162);
                                                                                                                                                                                                                                                                                                                                    var $4163 = $4166;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $4161 = $4163;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                            var $4167 = self.pst;
                                                                                                                                                                                                                                                                                                                            var $4168 = self.val;
                                                                                                                                                                                                                                                                                                                            var self = $4167;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                    var $4170 = self.err;
                                                                                                                                                                                                                                                                                                                                    var $4171 = self.nam;
                                                                                                                                                                                                                                                                                                                                    var $4172 = self.ini;
                                                                                                                                                                                                                                                                                                                                    var $4173 = self.idx;
                                                                                                                                                                                                                                                                                                                                    var $4174 = self.str;
                                                                                                                                                                                                                                                                                                                                    var _reply$pst$184 = Parser$State$new$(Parser$Error$maybe_combine$($4160, $4170), $4171, $4172, $4173, $4174);
                                                                                                                                                                                                                                                                                                                                    var _moti$185 = Kind$Term$lam$("", (_x$185 => {
                                                                                                                                                                                                                                                                                                                                        var $4176 = Kind$Term$hol$(Bits$e);
                                                                                                                                                                                                                                                                                                                                        return $4176;
                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                    var _term$186 = Kind$Term$ref$("Function.while");
                                                                                                                                                                                                                                                                                                                                    var _term$187 = Kind$Term$app$(_term$186, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                    var _init$188 = Kind$Term$ref$("Pair.new");
                                                                                                                                                                                                                                                                                                                                    var _init$189 = Kind$Term$app$(_init$188, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                    var _init$190 = Kind$Term$app$(_init$189, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                    var _init$191 = Kind$Term$app$(_init$190, Kind$Term$ref$($4014));
                                                                                                                                                                                                                                                                                                                                    var _init$192 = Kind$Term$app$(_init$191, Kind$Term$ref$($4045));
                                                                                                                                                                                                                                                                                                                                    var _term$193 = Kind$Term$app$(_term$187, _init$192);
                                                                                                                                                                                                                                                                                                                                    var _term$194 = Kind$Term$app$(_term$193, Kind$Term$lam$("s", (_s$194 => {
                                                                                                                                                                                                                                                                                                                                        var $4177 = Kind$Term$app$(Kind$Term$app$(_s$194, _moti$185), Kind$Term$lam$($4014, (_x$195 => {
                                                                                                                                                                                                                                                                                                                                            var $4178 = Kind$Term$lam$($4045, (_y$196 => {
                                                                                                                                                                                                                                                                                                                                                var $4179 = $4106;
                                                                                                                                                                                                                                                                                                                                                return $4179;
                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                            return $4178;
                                                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                                                        return $4177;
                                                                                                                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                                                                                                                    var _term$195 = Kind$Term$app$(_term$194, Kind$Term$lam$("s", (_s$195 => {
                                                                                                                                                                                                                                                                                                                                        var $4180 = Kind$Term$app$(Kind$Term$app$(_s$195, _moti$185), Kind$Term$lam$($4014, (_x$196 => {
                                                                                                                                                                                                                                                                                                                                            var $4181 = Kind$Term$lam$($4045, (_y$197 => {
                                                                                                                                                                                                                                                                                                                                                var $4182 = $4137;
                                                                                                                                                                                                                                                                                                                                                return $4182;
                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                            return $4181;
                                                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                                                        return $4180;
                                                                                                                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                                                                                                                    var _term$196 = Kind$Term$app$(Kind$Term$app$(_term$195, _moti$185), Kind$Term$lam$($4014, (_x$196 => {
                                                                                                                                                                                                                                                                                                                                        var $4183 = Kind$Term$lam$($4045, (_y$197 => {
                                                                                                                                                                                                                                                                                                                                            var $4184 = $4168;
                                                                                                                                                                                                                                                                                                                                            return $4184;
                                                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                                                        return $4183;
                                                                                                                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                                                                                                                    var $4175 = Parser$Reply$value$(_reply$pst$184, _term$196);
                                                                                                                                                                                                                                                                                                                                    var $4169 = $4175;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $4161 = $4169;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                    var $4159 = $4161;
                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                            var $4153 = $4159;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $4146 = $4153;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $4144 = $4146;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $4138 = $4144;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $4130 = $4138;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $4128 = $4130;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $4122 = $4128;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $4115 = $4122;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $4113 = $4115;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $4107 = $4113;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4099 = $4107;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $4097 = $4099;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $4091 = $4097;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4084 = $4091;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $4082 = $4084;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $4076 = $4082;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4069 = $4076;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $4067 = $4069;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $4061 = $4067;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4054 = $4061;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $4052 = $4054;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $4046 = $4052;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4038 = $4046;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $4036 = $4038;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $4030 = $4036;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4023 = $4030;
                                                                                                    break;
                                                                                            };
                                                                                            var $4021 = $4023;
                                                                                            break;
                                                                                    };
                                                                                    var $4015 = $4021;
                                                                                    break;
                                                                            };
                                                                            var $4007 = $4015;
                                                                            break;
                                                                    };
                                                                    var $4005 = $4007;
                                                                    break;
                                                            };
                                                            var $3999 = $4005;
                                                            break;
                                                    };
                                                    var $3992 = $3999;
                                                    break;
                                            };
                                            var $3990 = $3992;
                                            break;
                                    };
                                    var $3984 = $3990;
                                    break;
                            };
                            var $3977 = $3984;
                            break;
                    };
                    var $3975 = $3977;
                    break;
            };
            return $3975;
        }));
        return $3974;
    };
    const Kind$Parser$getwhile = x0 => Kind$Parser$getwhile$(x0);

    function Kind$Parser$getwhile$with$(_body$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $4186 = self.err;
                var _reply$8 = Kind$Parser$text$("while ", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4188 = self.err;
                        var self = $4186;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4190 = self.value;
                                var $4191 = Parser$Reply$error$(Parser$Error$combine$($4190, $4188));
                                var $4189 = $4191;
                                break;
                            case 'Maybe.none':
                                var $4192 = Parser$Reply$error$($4188);
                                var $4189 = $4192;
                                break;
                        };
                        var $4187 = $4189;
                        break;
                    case 'Parser.Reply.value':
                        var $4193 = self.pst;
                        var self = $4193;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4195 = self.err;
                                var $4196 = self.nam;
                                var $4197 = self.ini;
                                var $4198 = self.idx;
                                var $4199 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4186, $4195), $4196, $4197, $4198, $4199);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $4201 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $4203 = self.err;
                                                var self = $4201;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $4205 = self.value;
                                                        var $4206 = Parser$Reply$error$(Parser$Error$combine$($4205, $4203));
                                                        var $4204 = $4206;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $4207 = Parser$Reply$error$($4203);
                                                        var $4204 = $4207;
                                                        break;
                                                };
                                                var $4202 = $4204;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $4208 = self.pst;
                                                var $4209 = self.val;
                                                var self = $4208;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $4211 = self.err;
                                                        var $4212 = self.nam;
                                                        var $4213 = self.ini;
                                                        var $4214 = self.idx;
                                                        var $4215 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4201, $4211), $4212, $4213, $4214, $4215);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $4217 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("with ", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $4219 = self.err;
                                                                        var self = $4217;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4221 = self.value;
                                                                                var $4222 = Parser$Reply$error$(Parser$Error$combine$($4221, $4219));
                                                                                var $4220 = $4222;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4223 = Parser$Reply$error$($4219);
                                                                                var $4220 = $4223;
                                                                                break;
                                                                        };
                                                                        var $4218 = $4220;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $4224 = self.pst;
                                                                        var self = $4224;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $4226 = self.err;
                                                                                var $4227 = self.nam;
                                                                                var $4228 = self.ini;
                                                                                var $4229 = self.idx;
                                                                                var $4230 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4217, $4226), $4227, $4228, $4229, $4230);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $4232 = self.err;
                                                                                        var _reply$50 = Kind$Parser$text$("{", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $4234 = self.err;
                                                                                                var self = $4232;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $4236 = self.value;
                                                                                                        var $4237 = Parser$Reply$error$(Parser$Error$combine$($4236, $4234));
                                                                                                        var $4235 = $4237;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $4238 = Parser$Reply$error$($4234);
                                                                                                        var $4235 = $4238;
                                                                                                        break;
                                                                                                };
                                                                                                var $4233 = $4235;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $4239 = self.pst;
                                                                                                var self = $4239;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $4241 = self.err;
                                                                                                        var $4242 = self.nam;
                                                                                                        var $4243 = self.ini;
                                                                                                        var $4244 = self.idx;
                                                                                                        var $4245 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4232, $4241), $4242, $4243, $4244, $4245);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $4247 = self.err;
                                                                                                                var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $4249 = self.err;
                                                                                                                        var self = $4247;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $4251 = self.value;
                                                                                                                                var $4252 = Parser$Reply$error$(Parser$Error$combine$($4251, $4249));
                                                                                                                                var $4250 = $4252;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $4253 = Parser$Reply$error$($4249);
                                                                                                                                var $4250 = $4253;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4248 = $4250;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $4254 = self.pst;
                                                                                                                        var $4255 = self.val;
                                                                                                                        var self = $4254;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $4257 = self.err;
                                                                                                                                var $4258 = self.nam;
                                                                                                                                var $4259 = self.ini;
                                                                                                                                var $4260 = self.idx;
                                                                                                                                var $4261 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4247, $4257), $4258, $4259, $4260, $4261);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $4263 = self.err;
                                                                                                                                        var _reply$78 = Kind$Parser$text$(",", _reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $4265 = self.err;
                                                                                                                                                var self = $4263;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $4267 = self.value;
                                                                                                                                                        var $4268 = Parser$Reply$error$(Parser$Error$combine$($4267, $4265));
                                                                                                                                                        var $4266 = $4268;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $4269 = Parser$Reply$error$($4265);
                                                                                                                                                        var $4266 = $4269;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4264 = $4266;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $4270 = self.pst;
                                                                                                                                                var self = $4270;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $4272 = self.err;
                                                                                                                                                        var $4273 = self.nam;
                                                                                                                                                        var $4274 = self.ini;
                                                                                                                                                        var $4275 = self.idx;
                                                                                                                                                        var $4276 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4263, $4272), $4273, $4274, $4275, $4276);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $4278 = self.err;
                                                                                                                                                                var _reply$92 = Kind$Parser$name1$(_reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $4280 = self.err;
                                                                                                                                                                        var self = $4278;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $4282 = self.value;
                                                                                                                                                                                var $4283 = Parser$Reply$error$(Parser$Error$combine$($4282, $4280));
                                                                                                                                                                                var $4281 = $4283;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $4284 = Parser$Reply$error$($4280);
                                                                                                                                                                                var $4281 = $4284;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $4279 = $4281;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $4285 = self.pst;
                                                                                                                                                                        var $4286 = self.val;
                                                                                                                                                                        var self = $4285;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $4288 = self.err;
                                                                                                                                                                                var $4289 = self.nam;
                                                                                                                                                                                var $4290 = self.ini;
                                                                                                                                                                                var $4291 = self.idx;
                                                                                                                                                                                var $4292 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($4278, $4288), $4289, $4290, $4291, $4292);
                                                                                                                                                                                var self = _reply$pst$100;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $4294 = self.err;
                                                                                                                                                                                        var _reply$106 = Kind$Parser$text$("}", _reply$pst$100);
                                                                                                                                                                                        var self = _reply$106;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $4296 = self.err;
                                                                                                                                                                                                var self = $4294;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $4298 = self.value;
                                                                                                                                                                                                        var $4299 = Parser$Reply$error$(Parser$Error$combine$($4298, $4296));
                                                                                                                                                                                                        var $4297 = $4299;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $4300 = Parser$Reply$error$($4296);
                                                                                                                                                                                                        var $4297 = $4300;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $4295 = $4297;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $4301 = self.pst;
                                                                                                                                                                                                var self = $4301;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $4303 = self.err;
                                                                                                                                                                                                        var $4304 = self.nam;
                                                                                                                                                                                                        var $4305 = self.ini;
                                                                                                                                                                                                        var $4306 = self.idx;
                                                                                                                                                                                                        var $4307 = self.str;
                                                                                                                                                                                                        var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($4294, $4303), $4304, $4305, $4306, $4307);
                                                                                                                                                                                                        var self = _reply$pst$114;
                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                var $4309 = self.err;
                                                                                                                                                                                                                var _reply$120 = Kind$Parser$text$(":", _reply$pst$114);
                                                                                                                                                                                                                var self = _reply$120;
                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                        var $4311 = self.err;
                                                                                                                                                                                                                        var self = $4309;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                var $4313 = self.value;
                                                                                                                                                                                                                                var $4314 = Parser$Reply$error$(Parser$Error$combine$($4313, $4311));
                                                                                                                                                                                                                                var $4312 = $4314;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                var $4315 = Parser$Reply$error$($4311);
                                                                                                                                                                                                                                var $4312 = $4315;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $4310 = $4312;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                        var $4316 = self.pst;
                                                                                                                                                                                                                        var self = $4316;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                var $4318 = self.err;
                                                                                                                                                                                                                                var $4319 = self.nam;
                                                                                                                                                                                                                                var $4320 = self.ini;
                                                                                                                                                                                                                                var $4321 = self.idx;
                                                                                                                                                                                                                                var $4322 = self.str;
                                                                                                                                                                                                                                var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($4309, $4318), $4319, $4320, $4321, $4322);
                                                                                                                                                                                                                                var self = _reply$pst$128;
                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                        var $4324 = self.err;
                                                                                                                                                                                                                                        var _reply$134 = Kind$Parser$term(_reply$pst$128);
                                                                                                                                                                                                                                        var self = _reply$134;
                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                                                                var $4326 = self.err;
                                                                                                                                                                                                                                                var self = $4324;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                                                                        var $4328 = self.value;
                                                                                                                                                                                                                                                        var $4329 = Parser$Reply$error$(Parser$Error$combine$($4328, $4326));
                                                                                                                                                                                                                                                        var $4327 = $4329;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                                                                        var $4330 = Parser$Reply$error$($4326);
                                                                                                                                                                                                                                                        var $4327 = $4330;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $4325 = $4327;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                                                                var $4331 = self.pst;
                                                                                                                                                                                                                                                var $4332 = self.val;
                                                                                                                                                                                                                                                var self = $4331;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                        var $4334 = self.err;
                                                                                                                                                                                                                                                        var $4335 = self.nam;
                                                                                                                                                                                                                                                        var $4336 = self.ini;
                                                                                                                                                                                                                                                        var $4337 = self.idx;
                                                                                                                                                                                                                                                        var $4338 = self.str;
                                                                                                                                                                                                                                                        var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($4324, $4334), $4335, $4336, $4337, $4338);
                                                                                                                                                                                                                                                        var self = _reply$pst$142;
                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                var $4340 = self.err;
                                                                                                                                                                                                                                                                var _reply$148 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$142);
                                                                                                                                                                                                                                                                var self = _reply$148;
                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                        var $4342 = self.err;
                                                                                                                                                                                                                                                                        var self = $4340;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                                                                var $4344 = self.value;
                                                                                                                                                                                                                                                                                var $4345 = Parser$Reply$error$(Parser$Error$combine$($4344, $4342));
                                                                                                                                                                                                                                                                                var $4343 = $4345;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                                                                var $4346 = Parser$Reply$error$($4342);
                                                                                                                                                                                                                                                                                var $4343 = $4346;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $4341 = $4343;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                        var $4347 = self.pst;
                                                                                                                                                                                                                                                                        var self = $4347;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                                var $4349 = self.err;
                                                                                                                                                                                                                                                                                var $4350 = self.nam;
                                                                                                                                                                                                                                                                                var $4351 = self.ini;
                                                                                                                                                                                                                                                                                var $4352 = self.idx;
                                                                                                                                                                                                                                                                                var $4353 = self.str;
                                                                                                                                                                                                                                                                                var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($4340, $4349), $4350, $4351, $4352, $4353);
                                                                                                                                                                                                                                                                                var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                                                        var $4355 = self.err;
                                                                                                                                                                                                                                                                                        var _reply$162 = _body$1(Unit$new)(_reply$pst$156);
                                                                                                                                                                                                                                                                                        var self = _reply$162;
                                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                var $4357 = self.err;
                                                                                                                                                                                                                                                                                                var self = $4355;
                                                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                                                                                                                        var $4359 = self.value;
                                                                                                                                                                                                                                                                                                        var $4360 = Parser$Reply$error$(Parser$Error$combine$($4359, $4357));
                                                                                                                                                                                                                                                                                                        var $4358 = $4360;
                                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                                                                                                                        var $4361 = Parser$Reply$error$($4357);
                                                                                                                                                                                                                                                                                                        var $4358 = $4361;
                                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                                                var $4356 = $4358;
                                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                var $4362 = self.pst;
                                                                                                                                                                                                                                                                                                var $4363 = self.val;
                                                                                                                                                                                                                                                                                                var self = $4362;
                                                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                        var $4365 = self.err;
                                                                                                                                                                                                                                                                                                        var $4366 = self.nam;
                                                                                                                                                                                                                                                                                                        var $4367 = self.ini;
                                                                                                                                                                                                                                                                                                        var $4368 = self.idx;
                                                                                                                                                                                                                                                                                                        var $4369 = self.str;
                                                                                                                                                                                                                                                                                                        var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($4355, $4365), $4366, $4367, $4368, $4369);
                                                                                                                                                                                                                                                                                                        var _moti$171 = Kind$Term$lam$("", (_x$171 => {
                                                                                                                                                                                                                                                                                                            var $4371 = Kind$Term$hol$(Bits$e);
                                                                                                                                                                                                                                                                                                            return $4371;
                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                        var _term$172 = Kind$Term$ref$("Function.while");
                                                                                                                                                                                                                                                                                                        var _term$173 = Kind$Term$app$(_term$172, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                        var _init$174 = Kind$Term$ref$("Pair.new");
                                                                                                                                                                                                                                                                                                        var _init$175 = Kind$Term$app$(_init$174, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                        var _init$176 = Kind$Term$app$(_init$175, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                        var _init$177 = Kind$Term$app$(_init$176, Kind$Term$ref$($4255));
                                                                                                                                                                                                                                                                                                        var _init$178 = Kind$Term$app$(_init$177, Kind$Term$ref$($4286));
                                                                                                                                                                                                                                                                                                        var _term$179 = Kind$Term$app$(_term$173, _init$178);
                                                                                                                                                                                                                                                                                                        var _term$180 = Kind$Term$app$(_term$179, Kind$Term$lam$("s", (_s$180 => {
                                                                                                                                                                                                                                                                                                            var $4372 = Kind$Term$app$(Kind$Term$app$(_s$180, _moti$171), Kind$Term$lam$($4255, (_x$181 => {
                                                                                                                                                                                                                                                                                                                var $4373 = Kind$Term$lam$($4286, (_y$182 => {
                                                                                                                                                                                                                                                                                                                    var $4374 = $4209;
                                                                                                                                                                                                                                                                                                                    return $4374;
                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                return $4373;
                                                                                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                                                                                            return $4372;
                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                        var _term$181 = Kind$Term$app$(_term$180, Kind$Term$lam$("s", (_s$181 => {
                                                                                                                                                                                                                                                                                                            var $4375 = Kind$Term$app$(Kind$Term$app$(_s$181, _moti$171), Kind$Term$lam$($4255, (_x$182 => {
                                                                                                                                                                                                                                                                                                                var $4376 = Kind$Term$lam$($4286, (_y$183 => {
                                                                                                                                                                                                                                                                                                                    var $4377 = $4332;
                                                                                                                                                                                                                                                                                                                    return $4377;
                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                return $4376;
                                                                                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                                                                                            return $4375;
                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                        var _term$182 = Kind$Term$app$(Kind$Term$app$(_term$181, _moti$171), Kind$Term$lam$($4255, (_x$182 => {
                                                                                                                                                                                                                                                                                                            var $4378 = Kind$Term$lam$($4286, (_y$183 => {
                                                                                                                                                                                                                                                                                                                var $4379 = $4363;
                                                                                                                                                                                                                                                                                                                return $4379;
                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                            return $4378;
                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                        var $4370 = Parser$Reply$value$(_reply$pst$170, _term$182);
                                                                                                                                                                                                                                                                                                        var $4364 = $4370;
                                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                                                var $4356 = $4364;
                                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                                        var $4354 = $4356;
                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                                var $4348 = $4354;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $4341 = $4348;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                var $4339 = $4341;
                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                        var $4333 = $4339;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $4325 = $4333;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                        var $4323 = $4325;
                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                var $4317 = $4323;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $4310 = $4317;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                };
                                                                                                                                                                                                                var $4308 = $4310;
                                                                                                                                                                                                                break;
                                                                                                                                                                                                        };
                                                                                                                                                                                                        var $4302 = $4308;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $4295 = $4302;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $4293 = $4295;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $4287 = $4293;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $4279 = $4287;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $4277 = $4279;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $4271 = $4277;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4264 = $4271;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $4262 = $4264;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $4256 = $4262;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4248 = $4256;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $4246 = $4248;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $4240 = $4246;
                                                                                                        break;
                                                                                                };
                                                                                                var $4233 = $4240;
                                                                                                break;
                                                                                        };
                                                                                        var $4231 = $4233;
                                                                                        break;
                                                                                };
                                                                                var $4225 = $4231;
                                                                                break;
                                                                        };
                                                                        var $4218 = $4225;
                                                                        break;
                                                                };
                                                                var $4216 = $4218;
                                                                break;
                                                        };
                                                        var $4210 = $4216;
                                                        break;
                                                };
                                                var $4202 = $4210;
                                                break;
                                        };
                                        var $4200 = $4202;
                                        break;
                                };
                                var $4194 = $4200;
                                break;
                        };
                        var $4187 = $4194;
                        break;
                };
                var $4185 = $4187;
                break;
        };
        return $4185;
    };
    const Kind$Parser$getwhile$with = x0 => x1 => Kind$Parser$getwhile$with$(x0, x1);

    function Kind$Parser$get$(_body$1) {
        var $4380 = Kind$Parser$block("let")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $4382 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $4384 = self.err;
                            var self = $4382;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $4386 = self.value;
                                    var $4387 = Parser$Reply$error$(Parser$Error$combine$($4386, $4384));
                                    var $4385 = $4387;
                                    break;
                                case 'Maybe.none':
                                    var $4388 = Parser$Reply$error$($4384);
                                    var $4385 = $4388;
                                    break;
                            };
                            var $4383 = $4385;
                            break;
                        case 'Parser.Reply.value':
                            var $4389 = self.pst;
                            var self = $4389;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4391 = self.err;
                                    var $4392 = self.nam;
                                    var $4393 = self.ini;
                                    var $4394 = self.idx;
                                    var $4395 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4382, $4391), $4392, $4393, $4394, $4395);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4397 = self.err;
                                            var _reply$22 = Kind$Parser$text$("{", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $4399 = self.err;
                                                    var self = $4397;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $4401 = self.value;
                                                            var $4402 = Parser$Reply$error$(Parser$Error$combine$($4401, $4399));
                                                            var $4400 = $4402;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $4403 = Parser$Reply$error$($4399);
                                                            var $4400 = $4403;
                                                            break;
                                                    };
                                                    var $4398 = $4400;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $4404 = self.pst;
                                                    var self = $4404;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $4406 = self.err;
                                                            var $4407 = self.nam;
                                                            var $4408 = self.ini;
                                                            var $4409 = self.idx;
                                                            var $4410 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4397, $4406), $4407, $4408, $4409, $4410);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $4412 = self.err;
                                                                    var _reply$36 = Kind$Parser$name1$(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $4414 = self.err;
                                                                            var self = $4412;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $4416 = self.value;
                                                                                    var $4417 = Parser$Reply$error$(Parser$Error$combine$($4416, $4414));
                                                                                    var $4415 = $4417;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $4418 = Parser$Reply$error$($4414);
                                                                                    var $4415 = $4418;
                                                                                    break;
                                                                            };
                                                                            var $4413 = $4415;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $4419 = self.pst;
                                                                            var $4420 = self.val;
                                                                            var self = $4419;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $4422 = self.err;
                                                                                    var $4423 = self.nam;
                                                                                    var $4424 = self.ini;
                                                                                    var $4425 = self.idx;
                                                                                    var $4426 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4412, $4422), $4423, $4424, $4425, $4426);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $4428 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$(",", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $4430 = self.err;
                                                                                                    var self = $4428;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $4432 = self.value;
                                                                                                            var $4433 = Parser$Reply$error$(Parser$Error$combine$($4432, $4430));
                                                                                                            var $4431 = $4433;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $4434 = Parser$Reply$error$($4430);
                                                                                                            var $4431 = $4434;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4429 = $4431;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $4435 = self.pst;
                                                                                                    var self = $4435;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $4437 = self.err;
                                                                                                            var $4438 = self.nam;
                                                                                                            var $4439 = self.ini;
                                                                                                            var $4440 = self.idx;
                                                                                                            var $4441 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4428, $4437), $4438, $4439, $4440, $4441);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $4443 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $4445 = self.err;
                                                                                                                            var self = $4443;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $4447 = self.value;
                                                                                                                                    var $4448 = Parser$Reply$error$(Parser$Error$combine$($4447, $4445));
                                                                                                                                    var $4446 = $4448;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $4449 = Parser$Reply$error$($4445);
                                                                                                                                    var $4446 = $4449;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4444 = $4446;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $4450 = self.pst;
                                                                                                                            var $4451 = self.val;
                                                                                                                            var self = $4450;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $4453 = self.err;
                                                                                                                                    var $4454 = self.nam;
                                                                                                                                    var $4455 = self.ini;
                                                                                                                                    var $4456 = self.idx;
                                                                                                                                    var $4457 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4443, $4453), $4454, $4455, $4456, $4457);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $4459 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("}", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $4461 = self.err;
                                                                                                                                                    var self = $4459;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $4463 = self.value;
                                                                                                                                                            var $4464 = Parser$Reply$error$(Parser$Error$combine$($4463, $4461));
                                                                                                                                                            var $4462 = $4464;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $4465 = Parser$Reply$error$($4461);
                                                                                                                                                            var $4462 = $4465;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4460 = $4462;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $4466 = self.pst;
                                                                                                                                                    var self = $4466;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $4468 = self.err;
                                                                                                                                                            var $4469 = self.nam;
                                                                                                                                                            var $4470 = self.ini;
                                                                                                                                                            var $4471 = self.idx;
                                                                                                                                                            var $4472 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4459, $4468), $4469, $4470, $4471, $4472);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $4474 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$("=", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $4476 = self.err;
                                                                                                                                                                            var self = $4474;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $4478 = self.value;
                                                                                                                                                                                    var $4479 = Parser$Reply$error$(Parser$Error$combine$($4478, $4476));
                                                                                                                                                                                    var $4477 = $4479;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $4480 = Parser$Reply$error$($4476);
                                                                                                                                                                                    var $4477 = $4480;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4475 = $4477;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $4481 = self.pst;
                                                                                                                                                                            var self = $4481;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $4483 = self.err;
                                                                                                                                                                                    var $4484 = self.nam;
                                                                                                                                                                                    var $4485 = self.ini;
                                                                                                                                                                                    var $4486 = self.idx;
                                                                                                                                                                                    var $4487 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($4474, $4483), $4484, $4485, $4486, $4487);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $4489 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$term(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $4491 = self.err;
                                                                                                                                                                                                    var self = $4489;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $4493 = self.value;
                                                                                                                                                                                                            var $4494 = Parser$Reply$error$(Parser$Error$combine$($4493, $4491));
                                                                                                                                                                                                            var $4492 = $4494;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $4495 = Parser$Reply$error$($4491);
                                                                                                                                                                                                            var $4492 = $4495;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4490 = $4492;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $4496 = self.pst;
                                                                                                                                                                                                    var $4497 = self.val;
                                                                                                                                                                                                    var self = $4496;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $4499 = self.err;
                                                                                                                                                                                                            var $4500 = self.nam;
                                                                                                                                                                                                            var $4501 = self.ini;
                                                                                                                                                                                                            var $4502 = self.idx;
                                                                                                                                                                                                            var $4503 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($4489, $4499), $4500, $4501, $4502, $4503);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $4505 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $4507 = self.err;
                                                                                                                                                                                                                            var self = $4505;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $4509 = self.value;
                                                                                                                                                                                                                                    var $4510 = Parser$Reply$error$(Parser$Error$combine$($4509, $4507));
                                                                                                                                                                                                                                    var $4508 = $4510;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $4511 = Parser$Reply$error$($4507);
                                                                                                                                                                                                                                    var $4508 = $4511;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4506 = $4508;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $4512 = self.pst;
                                                                                                                                                                                                                            var self = $4512;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $4514 = self.err;
                                                                                                                                                                                                                                    var $4515 = self.nam;
                                                                                                                                                                                                                                    var $4516 = self.ini;
                                                                                                                                                                                                                                    var $4517 = self.idx;
                                                                                                                                                                                                                                    var $4518 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($4505, $4514), $4515, $4516, $4517, $4518);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $4520 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = _body$1(Unit$new)(_reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $4522 = self.err;
                                                                                                                                                                                                                                                    var self = $4520;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $4524 = self.value;
                                                                                                                                                                                                                                                            var $4525 = Parser$Reply$error$(Parser$Error$combine$($4524, $4522));
                                                                                                                                                                                                                                                            var $4523 = $4525;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $4526 = Parser$Reply$error$($4522);
                                                                                                                                                                                                                                                            var $4523 = $4526;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $4521 = $4523;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $4527 = self.pst;
                                                                                                                                                                                                                                                    var $4528 = self.val;
                                                                                                                                                                                                                                                    var self = $4527;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $4530 = self.err;
                                                                                                                                                                                                                                                            var $4531 = self.nam;
                                                                                                                                                                                                                                                            var $4532 = self.ini;
                                                                                                                                                                                                                                                            var $4533 = self.idx;
                                                                                                                                                                                                                                                            var $4534 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($4520, $4530), $4531, $4532, $4533, $4534);
                                                                                                                                                                                                                                                            var _term$143 = $4497;
                                                                                                                                                                                                                                                            var _term$144 = Kind$Term$app$(_term$143, Kind$Term$lam$("", (_x$144 => {
                                                                                                                                                                                                                                                                var $4536 = Kind$Term$hol$(Bits$e);
                                                                                                                                                                                                                                                                return $4536;
                                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                                            var _term$145 = Kind$Term$app$(_term$144, Kind$Term$lam$($4420, (_x$145 => {
                                                                                                                                                                                                                                                                var $4537 = Kind$Term$lam$($4451, (_y$146 => {
                                                                                                                                                                                                                                                                    var $4538 = $4528;
                                                                                                                                                                                                                                                                    return $4538;
                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                return $4537;
                                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                                            var $4535 = Parser$Reply$value$(_reply$pst$142, _term$145);
                                                                                                                                                                                                                                                            var $4529 = $4535;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $4521 = $4529;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $4519 = $4521;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $4513 = $4519;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4506 = $4513;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $4504 = $4506;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $4498 = $4504;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4490 = $4498;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $4488 = $4490;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $4482 = $4488;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4475 = $4482;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $4473 = $4475;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $4467 = $4473;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4460 = $4467;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $4458 = $4460;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $4452 = $4458;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4444 = $4452;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $4442 = $4444;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $4436 = $4442;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4429 = $4436;
                                                                                                    break;
                                                                                            };
                                                                                            var $4427 = $4429;
                                                                                            break;
                                                                                    };
                                                                                    var $4421 = $4427;
                                                                                    break;
                                                                            };
                                                                            var $4413 = $4421;
                                                                            break;
                                                                    };
                                                                    var $4411 = $4413;
                                                                    break;
                                                            };
                                                            var $4405 = $4411;
                                                            break;
                                                    };
                                                    var $4398 = $4405;
                                                    break;
                                            };
                                            var $4396 = $4398;
                                            break;
                                    };
                                    var $4390 = $4396;
                                    break;
                            };
                            var $4383 = $4390;
                            break;
                    };
                    var $4381 = $4383;
                    break;
            };
            return $4381;
        }));
        return $4380;
    };
    const Kind$Parser$get = x0 => Kind$Parser$get$(x0);

    function Kind$Parser$get$omit$(_body$1) {
        var $4539 = Kind$Parser$block("let")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $4541 = self.err;
                    var _reply$8 = Kind$Parser$text$("{", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $4543 = self.err;
                            var self = $4541;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $4545 = self.value;
                                    var $4546 = Parser$Reply$error$(Parser$Error$combine$($4545, $4543));
                                    var $4544 = $4546;
                                    break;
                                case 'Maybe.none':
                                    var $4547 = Parser$Reply$error$($4543);
                                    var $4544 = $4547;
                                    break;
                            };
                            var $4542 = $4544;
                            break;
                        case 'Parser.Reply.value':
                            var $4548 = self.pst;
                            var self = $4548;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4550 = self.err;
                                    var $4551 = self.nam;
                                    var $4552 = self.ini;
                                    var $4553 = self.idx;
                                    var $4554 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4541, $4550), $4551, $4552, $4553, $4554);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4556 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $4558 = self.err;
                                                    var self = $4556;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $4560 = self.value;
                                                            var $4561 = Parser$Reply$error$(Parser$Error$combine$($4560, $4558));
                                                            var $4559 = $4561;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $4562 = Parser$Reply$error$($4558);
                                                            var $4559 = $4562;
                                                            break;
                                                    };
                                                    var $4557 = $4559;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $4563 = self.pst;
                                                    var $4564 = self.val;
                                                    var self = $4563;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $4566 = self.err;
                                                            var $4567 = self.nam;
                                                            var $4568 = self.ini;
                                                            var $4569 = self.idx;
                                                            var $4570 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4556, $4566), $4567, $4568, $4569, $4570);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $4572 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$(",", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $4574 = self.err;
                                                                            var self = $4572;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $4576 = self.value;
                                                                                    var $4577 = Parser$Reply$error$(Parser$Error$combine$($4576, $4574));
                                                                                    var $4575 = $4577;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $4578 = Parser$Reply$error$($4574);
                                                                                    var $4575 = $4578;
                                                                                    break;
                                                                            };
                                                                            var $4573 = $4575;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $4579 = self.pst;
                                                                            var self = $4579;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $4581 = self.err;
                                                                                    var $4582 = self.nam;
                                                                                    var $4583 = self.ini;
                                                                                    var $4584 = self.idx;
                                                                                    var $4585 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4572, $4581), $4582, $4583, $4584, $4585);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $4587 = self.err;
                                                                                            var _reply$50 = Kind$Parser$name1$(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $4589 = self.err;
                                                                                                    var self = $4587;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $4591 = self.value;
                                                                                                            var $4592 = Parser$Reply$error$(Parser$Error$combine$($4591, $4589));
                                                                                                            var $4590 = $4592;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $4593 = Parser$Reply$error$($4589);
                                                                                                            var $4590 = $4593;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4588 = $4590;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $4594 = self.pst;
                                                                                                    var $4595 = self.val;
                                                                                                    var self = $4594;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $4597 = self.err;
                                                                                                            var $4598 = self.nam;
                                                                                                            var $4599 = self.ini;
                                                                                                            var $4600 = self.idx;
                                                                                                            var $4601 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4587, $4597), $4598, $4599, $4600, $4601);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $4603 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("}", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $4605 = self.err;
                                                                                                                            var self = $4603;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $4607 = self.value;
                                                                                                                                    var $4608 = Parser$Reply$error$(Parser$Error$combine$($4607, $4605));
                                                                                                                                    var $4606 = $4608;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $4609 = Parser$Reply$error$($4605);
                                                                                                                                    var $4606 = $4609;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4604 = $4606;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $4610 = self.pst;
                                                                                                                            var self = $4610;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $4612 = self.err;
                                                                                                                                    var $4613 = self.nam;
                                                                                                                                    var $4614 = self.ini;
                                                                                                                                    var $4615 = self.idx;
                                                                                                                                    var $4616 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4603, $4612), $4613, $4614, $4615, $4616);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $4618 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("= ", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $4620 = self.err;
                                                                                                                                                    var self = $4618;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $4622 = self.value;
                                                                                                                                                            var $4623 = Parser$Reply$error$(Parser$Error$combine$($4622, $4620));
                                                                                                                                                            var $4621 = $4623;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $4624 = Parser$Reply$error$($4620);
                                                                                                                                                            var $4621 = $4624;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4619 = $4621;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $4625 = self.pst;
                                                                                                                                                    var self = $4625;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $4627 = self.err;
                                                                                                                                                            var $4628 = self.nam;
                                                                                                                                                            var $4629 = self.ini;
                                                                                                                                                            var $4630 = self.idx;
                                                                                                                                                            var $4631 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4618, $4627), $4628, $4629, $4630, $4631);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $4633 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $4635 = self.err;
                                                                                                                                                                            var self = $4633;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $4637 = self.value;
                                                                                                                                                                                    var $4638 = Parser$Reply$error$(Parser$Error$combine$($4637, $4635));
                                                                                                                                                                                    var $4636 = $4638;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $4639 = Parser$Reply$error$($4635);
                                                                                                                                                                                    var $4636 = $4639;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4634 = $4636;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $4640 = self.pst;
                                                                                                                                                                            var $4641 = self.val;
                                                                                                                                                                            var self = $4640;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $4643 = self.err;
                                                                                                                                                                                    var $4644 = self.nam;
                                                                                                                                                                                    var $4645 = self.ini;
                                                                                                                                                                                    var $4646 = self.idx;
                                                                                                                                                                                    var $4647 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($4633, $4643), $4644, $4645, $4646, $4647);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $4649 = self.err;
                                                                                                                                                                                            var _reply$106 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $4651 = self.err;
                                                                                                                                                                                                    var self = $4649;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $4653 = self.value;
                                                                                                                                                                                                            var $4654 = Parser$Reply$error$(Parser$Error$combine$($4653, $4651));
                                                                                                                                                                                                            var $4652 = $4654;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $4655 = Parser$Reply$error$($4651);
                                                                                                                                                                                                            var $4652 = $4655;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4650 = $4652;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $4656 = self.pst;
                                                                                                                                                                                                    var self = $4656;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $4658 = self.err;
                                                                                                                                                                                                            var $4659 = self.nam;
                                                                                                                                                                                                            var $4660 = self.ini;
                                                                                                                                                                                                            var $4661 = self.idx;
                                                                                                                                                                                                            var $4662 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($4649, $4658), $4659, $4660, $4661, $4662);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $4664 = self.err;
                                                                                                                                                                                                                    var _reply$120 = _body$1(Unit$new)(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $4666 = self.err;
                                                                                                                                                                                                                            var self = $4664;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $4668 = self.value;
                                                                                                                                                                                                                                    var $4669 = Parser$Reply$error$(Parser$Error$combine$($4668, $4666));
                                                                                                                                                                                                                                    var $4667 = $4669;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $4670 = Parser$Reply$error$($4666);
                                                                                                                                                                                                                                    var $4667 = $4670;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4665 = $4667;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $4671 = self.pst;
                                                                                                                                                                                                                            var $4672 = self.val;
                                                                                                                                                                                                                            var self = $4671;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $4674 = self.err;
                                                                                                                                                                                                                                    var $4675 = self.nam;
                                                                                                                                                                                                                                    var $4676 = self.ini;
                                                                                                                                                                                                                                    var $4677 = self.idx;
                                                                                                                                                                                                                                    var $4678 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($4664, $4674), $4675, $4676, $4677, $4678);
                                                                                                                                                                                                                                    var _term$129 = $4641;
                                                                                                                                                                                                                                    var _term$130 = Kind$Term$app$(_term$129, Kind$Term$lam$("", (_x$130 => {
                                                                                                                                                                                                                                        var $4680 = Kind$Term$hol$(Bits$e);
                                                                                                                                                                                                                                        return $4680;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var _term$131 = Kind$Term$app$(_term$130, Kind$Term$lam$($4564, (_x$131 => {
                                                                                                                                                                                                                                        var $4681 = Kind$Term$lam$($4595, (_y$132 => {
                                                                                                                                                                                                                                            var $4682 = $4672;
                                                                                                                                                                                                                                            return $4682;
                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                        return $4681;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var $4679 = Parser$Reply$value$(_reply$pst$128, _term$131);
                                                                                                                                                                                                                                    var $4673 = $4679;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4665 = $4673;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $4663 = $4665;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $4657 = $4663;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4650 = $4657;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $4648 = $4650;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $4642 = $4648;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4634 = $4642;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $4632 = $4634;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $4626 = $4632;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4619 = $4626;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $4617 = $4619;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $4611 = $4617;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4604 = $4611;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $4602 = $4604;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $4596 = $4602;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4588 = $4596;
                                                                                                    break;
                                                                                            };
                                                                                            var $4586 = $4588;
                                                                                            break;
                                                                                    };
                                                                                    var $4580 = $4586;
                                                                                    break;
                                                                            };
                                                                            var $4573 = $4580;
                                                                            break;
                                                                    };
                                                                    var $4571 = $4573;
                                                                    break;
                                                            };
                                                            var $4565 = $4571;
                                                            break;
                                                    };
                                                    var $4557 = $4565;
                                                    break;
                                            };
                                            var $4555 = $4557;
                                            break;
                                    };
                                    var $4549 = $4555;
                                    break;
                            };
                            var $4542 = $4549;
                            break;
                    };
                    var $4540 = $4542;
                    break;
            };
            return $4540;
        }));
        return $4539;
    };
    const Kind$Parser$get$omit = x0 => Kind$Parser$get$omit$(x0);

    function Kind$Parser$def$(_body$1) {
        var $4683 = Kind$Parser$block("def")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $4685 = self.err;
                    var _reply$8 = Kind$Parser$text$("def ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $4687 = self.err;
                            var self = $4685;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $4689 = self.value;
                                    var $4690 = Parser$Reply$error$(Parser$Error$combine$($4689, $4687));
                                    var $4688 = $4690;
                                    break;
                                case 'Maybe.none':
                                    var $4691 = Parser$Reply$error$($4687);
                                    var $4688 = $4691;
                                    break;
                            };
                            var $4686 = $4688;
                            break;
                        case 'Parser.Reply.value':
                            var $4692 = self.pst;
                            var self = $4692;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4694 = self.err;
                                    var $4695 = self.nam;
                                    var $4696 = self.ini;
                                    var $4697 = self.idx;
                                    var $4698 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4685, $4694), $4695, $4696, $4697, $4698);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4700 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $4702 = self.err;
                                                    var self = $4700;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $4704 = self.value;
                                                            var $4705 = Parser$Reply$error$(Parser$Error$combine$($4704, $4702));
                                                            var $4703 = $4705;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $4706 = Parser$Reply$error$($4702);
                                                            var $4703 = $4706;
                                                            break;
                                                    };
                                                    var $4701 = $4703;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $4707 = self.pst;
                                                    var $4708 = self.val;
                                                    var self = $4707;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $4710 = self.err;
                                                            var $4711 = self.nam;
                                                            var $4712 = self.ini;
                                                            var $4713 = self.idx;
                                                            var $4714 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4700, $4710), $4711, $4712, $4713, $4714);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $4716 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $4718 = self.err;
                                                                            var self = $4716;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $4720 = self.value;
                                                                                    var $4721 = Parser$Reply$error$(Parser$Error$combine$($4720, $4718));
                                                                                    var $4719 = $4721;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $4722 = Parser$Reply$error$($4718);
                                                                                    var $4719 = $4722;
                                                                                    break;
                                                                            };
                                                                            var $4717 = $4719;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $4723 = self.pst;
                                                                            var self = $4723;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $4725 = self.err;
                                                                                    var $4726 = self.nam;
                                                                                    var $4727 = self.ini;
                                                                                    var $4728 = self.idx;
                                                                                    var $4729 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4716, $4725), $4726, $4727, $4728, $4729);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $4731 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $4733 = self.err;
                                                                                                    var self = $4731;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $4735 = self.value;
                                                                                                            var $4736 = Parser$Reply$error$(Parser$Error$combine$($4735, $4733));
                                                                                                            var $4734 = $4736;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $4737 = Parser$Reply$error$($4733);
                                                                                                            var $4734 = $4737;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4732 = $4734;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $4738 = self.pst;
                                                                                                    var $4739 = self.val;
                                                                                                    var self = $4738;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $4741 = self.err;
                                                                                                            var $4742 = self.nam;
                                                                                                            var $4743 = self.ini;
                                                                                                            var $4744 = self.idx;
                                                                                                            var $4745 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4731, $4741), $4742, $4743, $4744, $4745);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $4747 = self.err;
                                                                                                                    var _reply$64 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $4749 = self.err;
                                                                                                                            var self = $4747;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $4751 = self.value;
                                                                                                                                    var $4752 = Parser$Reply$error$(Parser$Error$combine$($4751, $4749));
                                                                                                                                    var $4750 = $4752;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $4753 = Parser$Reply$error$($4749);
                                                                                                                                    var $4750 = $4753;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4748 = $4750;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $4754 = self.pst;
                                                                                                                            var self = $4754;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $4756 = self.err;
                                                                                                                                    var $4757 = self.nam;
                                                                                                                                    var $4758 = self.ini;
                                                                                                                                    var $4759 = self.idx;
                                                                                                                                    var $4760 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4747, $4756), $4757, $4758, $4759, $4760);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $4762 = self.err;
                                                                                                                                            var _reply$78 = _body$1(Unit$new)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $4764 = self.err;
                                                                                                                                                    var self = $4762;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $4766 = self.value;
                                                                                                                                                            var $4767 = Parser$Reply$error$(Parser$Error$combine$($4766, $4764));
                                                                                                                                                            var $4765 = $4767;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $4768 = Parser$Reply$error$($4764);
                                                                                                                                                            var $4765 = $4768;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4763 = $4765;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $4769 = self.pst;
                                                                                                                                                    var $4770 = self.val;
                                                                                                                                                    var self = $4769;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $4772 = self.err;
                                                                                                                                                            var $4773 = self.nam;
                                                                                                                                                            var $4774 = self.ini;
                                                                                                                                                            var $4775 = self.idx;
                                                                                                                                                            var $4776 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4762, $4772), $4773, $4774, $4775, $4776);
                                                                                                                                                            var $4777 = Parser$Reply$value$(_reply$pst$86, Kind$Term$def$($4708, $4739, (_x$87 => {
                                                                                                                                                                var $4778 = $4770;
                                                                                                                                                                return $4778;
                                                                                                                                                            })));
                                                                                                                                                            var $4771 = $4777;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4763 = $4771;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $4761 = $4763;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $4755 = $4761;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4748 = $4755;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $4746 = $4748;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $4740 = $4746;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4732 = $4740;
                                                                                                    break;
                                                                                            };
                                                                                            var $4730 = $4732;
                                                                                            break;
                                                                                    };
                                                                                    var $4724 = $4730;
                                                                                    break;
                                                                            };
                                                                            var $4717 = $4724;
                                                                            break;
                                                                    };
                                                                    var $4715 = $4717;
                                                                    break;
                                                            };
                                                            var $4709 = $4715;
                                                            break;
                                                    };
                                                    var $4701 = $4709;
                                                    break;
                                            };
                                            var $4699 = $4701;
                                            break;
                                    };
                                    var $4693 = $4699;
                                    break;
                            };
                            var $4686 = $4693;
                            break;
                    };
                    var $4684 = $4686;
                    break;
            };
            return $4684;
        }));
        return $4683;
    };
    const Kind$Parser$def = x0 => Kind$Parser$def$(x0);
    const Kind$Parser$goal_rewrite = Kind$Parser$block("goal-rewrite")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $4780 = self.err;
                var _reply$7 = Kind$Parser$text$("rewrite ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4782 = self.err;
                        var self = $4780;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4784 = self.value;
                                var $4785 = Parser$Reply$error$(Parser$Error$combine$($4784, $4782));
                                var $4783 = $4785;
                                break;
                            case 'Maybe.none':
                                var $4786 = Parser$Reply$error$($4782);
                                var $4783 = $4786;
                                break;
                        };
                        var $4781 = $4783;
                        break;
                    case 'Parser.Reply.value':
                        var $4787 = self.pst;
                        var self = $4787;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4789 = self.err;
                                var $4790 = self.nam;
                                var $4791 = self.ini;
                                var $4792 = self.idx;
                                var $4793 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($4780, $4789), $4790, $4791, $4792, $4793);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $4795 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $4797 = self.err;
                                                var self = $4795;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $4799 = self.value;
                                                        var $4800 = Parser$Reply$error$(Parser$Error$combine$($4799, $4797));
                                                        var $4798 = $4800;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $4801 = Parser$Reply$error$($4797);
                                                        var $4798 = $4801;
                                                        break;
                                                };
                                                var $4796 = $4798;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $4802 = self.pst;
                                                var $4803 = self.val;
                                                var self = $4802;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $4805 = self.err;
                                                        var $4806 = self.nam;
                                                        var $4807 = self.ini;
                                                        var $4808 = self.idx;
                                                        var $4809 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($4795, $4805), $4806, $4807, $4808, $4809);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $4811 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("in", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $4813 = self.err;
                                                                        var self = $4811;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4815 = self.value;
                                                                                var $4816 = Parser$Reply$error$(Parser$Error$combine$($4815, $4813));
                                                                                var $4814 = $4816;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4817 = Parser$Reply$error$($4813);
                                                                                var $4814 = $4817;
                                                                                break;
                                                                        };
                                                                        var $4812 = $4814;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $4818 = self.pst;
                                                                        var self = $4818;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $4820 = self.err;
                                                                                var $4821 = self.nam;
                                                                                var $4822 = self.ini;
                                                                                var $4823 = self.idx;
                                                                                var $4824 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($4811, $4820), $4821, $4822, $4823, $4824);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $4826 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $4828 = self.err;
                                                                                                var self = $4826;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $4830 = self.value;
                                                                                                        var $4831 = Parser$Reply$error$(Parser$Error$combine$($4830, $4828));
                                                                                                        var $4829 = $4831;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $4832 = Parser$Reply$error$($4828);
                                                                                                        var $4829 = $4832;
                                                                                                        break;
                                                                                                };
                                                                                                var $4827 = $4829;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $4833 = self.pst;
                                                                                                var $4834 = self.val;
                                                                                                var self = $4833;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $4836 = self.err;
                                                                                                        var $4837 = self.nam;
                                                                                                        var $4838 = self.ini;
                                                                                                        var $4839 = self.idx;
                                                                                                        var $4840 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($4826, $4836), $4837, $4838, $4839, $4840);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $4842 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$("with", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $4844 = self.err;
                                                                                                                        var self = $4842;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $4846 = self.value;
                                                                                                                                var $4847 = Parser$Reply$error$(Parser$Error$combine$($4846, $4844));
                                                                                                                                var $4845 = $4847;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $4848 = Parser$Reply$error$($4844);
                                                                                                                                var $4845 = $4848;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4843 = $4845;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $4849 = self.pst;
                                                                                                                        var self = $4849;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $4851 = self.err;
                                                                                                                                var $4852 = self.nam;
                                                                                                                                var $4853 = self.ini;
                                                                                                                                var $4854 = self.idx;
                                                                                                                                var $4855 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($4842, $4851), $4852, $4853, $4854, $4855);
                                                                                                                                var self = _reply$pst$71;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $4857 = self.err;
                                                                                                                                        var _reply$77 = Kind$Parser$term(_reply$pst$71);
                                                                                                                                        var self = _reply$77;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $4859 = self.err;
                                                                                                                                                var self = $4857;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $4861 = self.value;
                                                                                                                                                        var $4862 = Parser$Reply$error$(Parser$Error$combine$($4861, $4859));
                                                                                                                                                        var $4860 = $4862;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $4863 = Parser$Reply$error$($4859);
                                                                                                                                                        var $4860 = $4863;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4858 = $4860;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $4864 = self.pst;
                                                                                                                                                var $4865 = self.val;
                                                                                                                                                var self = $4864;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $4867 = self.err;
                                                                                                                                                        var $4868 = self.nam;
                                                                                                                                                        var $4869 = self.ini;
                                                                                                                                                        var $4870 = self.idx;
                                                                                                                                                        var $4871 = self.str;
                                                                                                                                                        var _reply$pst$85 = Parser$State$new$(Parser$Error$maybe_combine$($4857, $4867), $4868, $4869, $4870, $4871);
                                                                                                                                                        var self = _reply$pst$85;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $4873 = self.err;
                                                                                                                                                                var _reply$91 = Kind$Parser$term(_reply$pst$85);
                                                                                                                                                                var self = _reply$91;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $4875 = self.err;
                                                                                                                                                                        var self = $4873;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $4877 = self.value;
                                                                                                                                                                                var $4878 = Parser$Reply$error$(Parser$Error$combine$($4877, $4875));
                                                                                                                                                                                var $4876 = $4878;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $4879 = Parser$Reply$error$($4875);
                                                                                                                                                                                var $4876 = $4879;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $4874 = $4876;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $4880 = self.pst;
                                                                                                                                                                        var $4881 = self.val;
                                                                                                                                                                        var self = $4880;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $4883 = self.err;
                                                                                                                                                                                var $4884 = self.nam;
                                                                                                                                                                                var $4885 = self.ini;
                                                                                                                                                                                var $4886 = self.idx;
                                                                                                                                                                                var $4887 = self.str;
                                                                                                                                                                                var _reply$pst$99 = Parser$State$new$(Parser$Error$maybe_combine$($4873, $4883), $4884, $4885, $4886, $4887);
                                                                                                                                                                                var _moti$100 = Kind$Term$lam$($4803, (_s$100 => {
                                                                                                                                                                                    var $4889 = Kind$Term$lam$("", (_x$101 => {
                                                                                                                                                                                        var $4890 = $4834;
                                                                                                                                                                                        return $4890;
                                                                                                                                                                                    }));
                                                                                                                                                                                    return $4889;
                                                                                                                                                                                }));
                                                                                                                                                                                var _term$101 = Kind$Term$ref$("Equal.mirror");
                                                                                                                                                                                var _term$102 = Kind$Term$app$(_term$101, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$103 = Kind$Term$app$(_term$102, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$104 = Kind$Term$app$(_term$103, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$105 = Kind$Term$app$(_term$104, $4865);
                                                                                                                                                                                var _term$106 = Kind$Term$app$(_term$105, _moti$100);
                                                                                                                                                                                var _term$107 = Kind$Term$app$(_term$106, $4881);
                                                                                                                                                                                var $4888 = Parser$Reply$value$(_reply$pst$99, _term$107);
                                                                                                                                                                                var $4882 = $4888;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $4874 = $4882;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $4872 = $4874;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $4866 = $4872;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4858 = $4866;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $4856 = $4858;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $4850 = $4856;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4843 = $4850;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $4841 = $4843;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $4835 = $4841;
                                                                                                        break;
                                                                                                };
                                                                                                var $4827 = $4835;
                                                                                                break;
                                                                                        };
                                                                                        var $4825 = $4827;
                                                                                        break;
                                                                                };
                                                                                var $4819 = $4825;
                                                                                break;
                                                                        };
                                                                        var $4812 = $4819;
                                                                        break;
                                                                };
                                                                var $4810 = $4812;
                                                                break;
                                                        };
                                                        var $4804 = $4810;
                                                        break;
                                                };
                                                var $4796 = $4804;
                                                break;
                                        };
                                        var $4794 = $4796;
                                        break;
                                };
                                var $4788 = $4794;
                                break;
                        };
                        var $4781 = $4788;
                        break;
                };
                var $4779 = $4781;
                break;
        };
        return $4779;
    }));
    const Kind$Parser$if = Kind$Parser$block("if")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $4892 = self.err;
                var _reply$7 = Kind$Parser$text$("if ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4894 = self.err;
                        var self = $4892;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4896 = self.value;
                                var $4897 = Parser$Reply$error$(Parser$Error$combine$($4896, $4894));
                                var $4895 = $4897;
                                break;
                            case 'Maybe.none':
                                var $4898 = Parser$Reply$error$($4894);
                                var $4895 = $4898;
                                break;
                        };
                        var $4893 = $4895;
                        break;
                    case 'Parser.Reply.value':
                        var $4899 = self.pst;
                        var self = $4899;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4901 = self.err;
                                var $4902 = self.nam;
                                var $4903 = self.ini;
                                var $4904 = self.idx;
                                var $4905 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($4892, $4901), $4902, $4903, $4904, $4905);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $4907 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $4909 = self.err;
                                                var self = $4907;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $4911 = self.value;
                                                        var $4912 = Parser$Reply$error$(Parser$Error$combine$($4911, $4909));
                                                        var $4910 = $4912;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $4913 = Parser$Reply$error$($4909);
                                                        var $4910 = $4913;
                                                        break;
                                                };
                                                var $4908 = $4910;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $4914 = self.pst;
                                                var $4915 = self.val;
                                                var self = $4914;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $4917 = self.err;
                                                        var $4918 = self.nam;
                                                        var $4919 = self.ini;
                                                        var $4920 = self.idx;
                                                        var $4921 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($4907, $4917), $4918, $4919, $4920, $4921);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $4923 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("then", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $4925 = self.err;
                                                                        var self = $4923;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4927 = self.value;
                                                                                var $4928 = Parser$Reply$error$(Parser$Error$combine$($4927, $4925));
                                                                                var $4926 = $4928;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4929 = Parser$Reply$error$($4925);
                                                                                var $4926 = $4929;
                                                                                break;
                                                                        };
                                                                        var $4924 = $4926;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $4930 = self.pst;
                                                                        var self = $4930;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $4932 = self.err;
                                                                                var $4933 = self.nam;
                                                                                var $4934 = self.ini;
                                                                                var $4935 = self.idx;
                                                                                var $4936 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($4923, $4932), $4933, $4934, $4935, $4936);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $4938 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $4940 = self.err;
                                                                                                var self = $4938;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $4942 = self.value;
                                                                                                        var $4943 = Parser$Reply$error$(Parser$Error$combine$($4942, $4940));
                                                                                                        var $4941 = $4943;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $4944 = Parser$Reply$error$($4940);
                                                                                                        var $4941 = $4944;
                                                                                                        break;
                                                                                                };
                                                                                                var $4939 = $4941;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $4945 = self.pst;
                                                                                                var $4946 = self.val;
                                                                                                var self = $4945;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $4948 = self.err;
                                                                                                        var $4949 = self.nam;
                                                                                                        var $4950 = self.ini;
                                                                                                        var $4951 = self.idx;
                                                                                                        var $4952 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($4938, $4948), $4949, $4950, $4951, $4952);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $4954 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$("else", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $4956 = self.err;
                                                                                                                        var self = $4954;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $4958 = self.value;
                                                                                                                                var $4959 = Parser$Reply$error$(Parser$Error$combine$($4958, $4956));
                                                                                                                                var $4957 = $4959;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $4960 = Parser$Reply$error$($4956);
                                                                                                                                var $4957 = $4960;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4955 = $4957;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $4961 = self.pst;
                                                                                                                        var self = $4961;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $4963 = self.err;
                                                                                                                                var $4964 = self.nam;
                                                                                                                                var $4965 = self.ini;
                                                                                                                                var $4966 = self.idx;
                                                                                                                                var $4967 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($4954, $4963), $4964, $4965, $4966, $4967);
                                                                                                                                var self = _reply$pst$71;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $4969 = self.err;
                                                                                                                                        var _reply$77 = Kind$Parser$term(_reply$pst$71);
                                                                                                                                        var self = _reply$77;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $4971 = self.err;
                                                                                                                                                var self = $4969;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $4973 = self.value;
                                                                                                                                                        var $4974 = Parser$Reply$error$(Parser$Error$combine$($4973, $4971));
                                                                                                                                                        var $4972 = $4974;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $4975 = Parser$Reply$error$($4971);
                                                                                                                                                        var $4972 = $4975;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4970 = $4972;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $4976 = self.pst;
                                                                                                                                                var $4977 = self.val;
                                                                                                                                                var self = $4976;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $4979 = self.err;
                                                                                                                                                        var $4980 = self.nam;
                                                                                                                                                        var $4981 = self.ini;
                                                                                                                                                        var $4982 = self.idx;
                                                                                                                                                        var $4983 = self.str;
                                                                                                                                                        var _reply$pst$85 = Parser$State$new$(Parser$Error$maybe_combine$($4969, $4979), $4980, $4981, $4982, $4983);
                                                                                                                                                        var _term$86 = $4915;
                                                                                                                                                        var _term$87 = Kind$Term$app$(_term$86, Kind$Term$lam$("", (_x$87 => {
                                                                                                                                                            var $4985 = Kind$Term$hol$(Bits$e);
                                                                                                                                                            return $4985;
                                                                                                                                                        })));
                                                                                                                                                        var _term$88 = Kind$Term$app$(_term$87, $4946);
                                                                                                                                                        var _term$89 = Kind$Term$app$(_term$88, $4977);
                                                                                                                                                        var $4984 = Parser$Reply$value$(_reply$pst$85, _term$89);
                                                                                                                                                        var $4978 = $4984;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4970 = $4978;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $4968 = $4970;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $4962 = $4968;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4955 = $4962;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $4953 = $4955;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $4947 = $4953;
                                                                                                        break;
                                                                                                };
                                                                                                var $4939 = $4947;
                                                                                                break;
                                                                                        };
                                                                                        var $4937 = $4939;
                                                                                        break;
                                                                                };
                                                                                var $4931 = $4937;
                                                                                break;
                                                                        };
                                                                        var $4924 = $4931;
                                                                        break;
                                                                };
                                                                var $4922 = $4924;
                                                                break;
                                                        };
                                                        var $4916 = $4922;
                                                        break;
                                                };
                                                var $4908 = $4916;
                                                break;
                                        };
                                        var $4906 = $4908;
                                        break;
                                };
                                var $4900 = $4906;
                                break;
                        };
                        var $4893 = $4900;
                        break;
                };
                var $4891 = $4893;
                break;
        };
        return $4891;
    }));
    const Kind$Code$backslash = 92;
    const Kind$Code$escapes = List$cons$(Pair$new$("\\b", 8), List$cons$(Pair$new$("\\f", 12), List$cons$(Pair$new$("\\n", 10), List$cons$(Pair$new$("\\r", 13), List$cons$(Pair$new$("\\t", 9), List$cons$(Pair$new$("\\v", 11), List$cons$(Pair$new$(String$cons$(Kind$Code$backslash, String$cons$(Kind$Code$backslash, String$nil)), Kind$Code$backslash), List$cons$(Pair$new$("\\\"", 34), List$cons$(Pair$new$("\\0", 0), List$cons$(Pair$new$("\\\'", 39), List$nil))))))))));
    const Kind$Parser$char$single = Parser$choice(List$cons$(Parser$choice(List$mapped$(Kind$Code$escapes, (_esc$1 => {
        var self = _esc$1;
        switch (self._) {
            case 'Pair.new':
                var $4987 = self.fst;
                var $4988 = self.snd;
                var $4989 = (_pst$4 => {
                    var self = _pst$4;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $4991 = self.err;
                            var _reply$10 = Parser$text$($4987, _pst$4);
                            var self = _reply$10;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $4993 = self.err;
                                    var self = $4991;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $4995 = self.value;
                                            var $4996 = Parser$Reply$error$(Parser$Error$combine$($4995, $4993));
                                            var $4994 = $4996;
                                            break;
                                        case 'Maybe.none':
                                            var $4997 = Parser$Reply$error$($4993);
                                            var $4994 = $4997;
                                            break;
                                    };
                                    var $4992 = $4994;
                                    break;
                                case 'Parser.Reply.value':
                                    var $4998 = self.pst;
                                    var self = $4998;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5000 = self.err;
                                            var $5001 = self.nam;
                                            var $5002 = self.ini;
                                            var $5003 = self.idx;
                                            var $5004 = self.str;
                                            var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($4991, $5000), $5001, $5002, $5003, $5004);
                                            var $5005 = Parser$Reply$value$(_reply$pst$18, $4988);
                                            var $4999 = $5005;
                                            break;
                                    };
                                    var $4992 = $4999;
                                    break;
                            };
                            var $4990 = $4992;
                            break;
                    };
                    return $4990;
                });
                var $4986 = $4989;
                break;
        };
        return $4986;
    }))), List$cons$(Parser$one, List$nil)));
    const Kind$Parser$char = Kind$Parser$block("char")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5007 = self.err;
                var _reply$7 = Kind$Parser$text$("\'", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5009 = self.err;
                        var self = $5007;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5011 = self.value;
                                var $5012 = Parser$Reply$error$(Parser$Error$combine$($5011, $5009));
                                var $5010 = $5012;
                                break;
                            case 'Maybe.none':
                                var $5013 = Parser$Reply$error$($5009);
                                var $5010 = $5013;
                                break;
                        };
                        var $5008 = $5010;
                        break;
                    case 'Parser.Reply.value':
                        var $5014 = self.pst;
                        var self = $5014;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5016 = self.err;
                                var $5017 = self.nam;
                                var $5018 = self.ini;
                                var $5019 = self.idx;
                                var $5020 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5007, $5016), $5017, $5018, $5019, $5020);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5022 = self.err;
                                        var _reply$21 = Kind$Parser$char$single(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5024 = self.err;
                                                var self = $5022;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5026 = self.value;
                                                        var $5027 = Parser$Reply$error$(Parser$Error$combine$($5026, $5024));
                                                        var $5025 = $5027;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5028 = Parser$Reply$error$($5024);
                                                        var $5025 = $5028;
                                                        break;
                                                };
                                                var $5023 = $5025;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5029 = self.pst;
                                                var $5030 = self.val;
                                                var self = $5029;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5032 = self.err;
                                                        var $5033 = self.nam;
                                                        var $5034 = self.ini;
                                                        var $5035 = self.idx;
                                                        var $5036 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5022, $5032), $5033, $5034, $5035, $5036);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5038 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("\'", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5040 = self.err;
                                                                        var self = $5038;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5042 = self.value;
                                                                                var $5043 = Parser$Reply$error$(Parser$Error$combine$($5042, $5040));
                                                                                var $5041 = $5043;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5044 = Parser$Reply$error$($5040);
                                                                                var $5041 = $5044;
                                                                                break;
                                                                        };
                                                                        var $5039 = $5041;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5045 = self.pst;
                                                                        var self = $5045;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5047 = self.err;
                                                                                var $5048 = self.nam;
                                                                                var $5049 = self.ini;
                                                                                var $5050 = self.idx;
                                                                                var $5051 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5038, $5047), $5048, $5049, $5050, $5051);
                                                                                var $5052 = Parser$Reply$value$(_reply$pst$43, Kind$Term$chr$($5030));
                                                                                var $5046 = $5052;
                                                                                break;
                                                                        };
                                                                        var $5039 = $5046;
                                                                        break;
                                                                };
                                                                var $5037 = $5039;
                                                                break;
                                                        };
                                                        var $5031 = $5037;
                                                        break;
                                                };
                                                var $5023 = $5031;
                                                break;
                                        };
                                        var $5021 = $5023;
                                        break;
                                };
                                var $5015 = $5021;
                                break;
                        };
                        var $5008 = $5015;
                        break;
                };
                var $5006 = $5008;
                break;
        };
        return $5006;
    }));

    function String$reverse$go$(_xs$1, _res$2) {
        var String$reverse$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$reverse$go = _xs$1 => _res$2 => String$reverse$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $5053 = _res$2;
                    return $5053;
                } else {
                    var $5054 = self.charCodeAt(0);
                    var $5055 = self.slice(1);
                    var $5056 = String$reverse$go$($5055, String$cons$($5054, _res$2));
                    return $5056;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$reverse$go = x0 => x1 => String$reverse$go$(x0, x1);

    function String$reverse$(_xs$1) {
        var $5057 = String$reverse$go$(_xs$1, String$nil);
        return $5057;
    };
    const String$reverse = x0 => String$reverse$(x0);

    function Kind$Parser$string$go$(_delim$1, _str$2, _pst$3) {
        var Kind$Parser$string$go$ = (_delim$1, _str$2, _pst$3) => ({
            ctr: 'TCO',
            arg: [_delim$1, _str$2, _pst$3]
        });
        var Kind$Parser$string$go = _delim$1 => _str$2 => _pst$3 => Kind$Parser$string$go$(_delim$1, _str$2, _pst$3);
        var arg = [_delim$1, _str$2, _pst$3];
        while (true) {
            let [_delim$1, _str$2, _pst$3] = arg;
            var R = (() => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $5058 = self.err;
                        var $5059 = self.nam;
                        var $5060 = self.ini;
                        var $5061 = self.idx;
                        var $5062 = self.str;
                        var self = $5062;
                        if (self.length === 0) {
                            var $5064 = Parser$Reply$fail$($5059, $5060, $5061, "Non-terminating string.");
                            var $5063 = $5064;
                        } else {
                            var $5065 = self.charCodeAt(0);
                            var $5066 = self.slice(1);
                            var self = ($5065 === _delim$1);
                            if (self) {
                                var _pst$11 = Parser$State$new$($5058, $5059, $5060, Nat$succ$($5061), $5066);
                                var $5068 = Parser$Reply$value$(_pst$11, String$reverse$(_str$2));
                                var $5067 = $5068;
                            } else {
                                var self = Kind$Parser$char$single(_pst$3);
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $5070 = self.err;
                                        var $5071 = Parser$Reply$error$($5070);
                                        var $5069 = $5071;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $5072 = self.pst;
                                        var $5073 = self.val;
                                        var $5074 = Kind$Parser$string$go$(_delim$1, String$cons$($5073, _str$2), $5072);
                                        var $5069 = $5074;
                                        break;
                                };
                                var $5067 = $5069;
                            };
                            var $5063 = $5067;
                        };
                        return $5063;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Parser$string$go = x0 => x1 => x2 => Kind$Parser$string$go$(x0, x1, x2);

    function Kind$Parser$string$(_delim$1) {
        var $5075 = Kind$Parser$block("string")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5077 = self.err;
                    var _reply$8 = Kind$Parser$text$(String$cons$(_delim$1, String$nil), _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5079 = self.err;
                            var self = $5077;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5081 = self.value;
                                    var $5082 = Parser$Reply$error$(Parser$Error$combine$($5081, $5079));
                                    var $5080 = $5082;
                                    break;
                                case 'Maybe.none':
                                    var $5083 = Parser$Reply$error$($5079);
                                    var $5080 = $5083;
                                    break;
                            };
                            var $5078 = $5080;
                            break;
                        case 'Parser.Reply.value':
                            var $5084 = self.pst;
                            var self = $5084;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5086 = self.err;
                                    var $5087 = self.nam;
                                    var $5088 = self.ini;
                                    var $5089 = self.idx;
                                    var $5090 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5077, $5086), $5087, $5088, $5089, $5090);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5092 = self.err;
                                            var _reply$22 = Kind$Parser$string$go$(_delim$1, "", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5094 = self.err;
                                                    var self = $5092;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5096 = self.value;
                                                            var $5097 = Parser$Reply$error$(Parser$Error$combine$($5096, $5094));
                                                            var $5095 = $5097;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5098 = Parser$Reply$error$($5094);
                                                            var $5095 = $5098;
                                                            break;
                                                    };
                                                    var $5093 = $5095;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5099 = self.pst;
                                                    var $5100 = self.val;
                                                    var self = $5099;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5102 = self.err;
                                                            var $5103 = self.nam;
                                                            var $5104 = self.ini;
                                                            var $5105 = self.idx;
                                                            var $5106 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5092, $5102), $5103, $5104, $5105, $5106);
                                                            var $5107 = Parser$Reply$value$(_reply$pst$30, Kind$Term$str$($5100));
                                                            var $5101 = $5107;
                                                            break;
                                                    };
                                                    var $5093 = $5101;
                                                    break;
                                            };
                                            var $5091 = $5093;
                                            break;
                                    };
                                    var $5085 = $5091;
                                    break;
                            };
                            var $5078 = $5085;
                            break;
                    };
                    var $5076 = $5078;
                    break;
            };
            return $5076;
        }));
        return $5075;
    };
    const Kind$Parser$string = x0 => Kind$Parser$string$(x0);

    function Kind$Term$new$(_args$1) {
        var $5108 = ({
            _: 'Kind.Term.new',
            'args': _args$1
        });
        return $5108;
    };
    const Kind$Term$new = x0 => Kind$Term$new$(x0);
    const Kind$Parser$new = Kind$Parser$block("new-struct")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5110 = self.err;
                var _reply$7 = Kind$Parser$items1$("{", Kind$Parser$term, "}")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5112 = self.err;
                        var self = $5110;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5114 = self.value;
                                var $5115 = Parser$Reply$error$(Parser$Error$combine$($5114, $5112));
                                var $5113 = $5115;
                                break;
                            case 'Maybe.none':
                                var $5116 = Parser$Reply$error$($5112);
                                var $5113 = $5116;
                                break;
                        };
                        var $5111 = $5113;
                        break;
                    case 'Parser.Reply.value':
                        var $5117 = self.pst;
                        var $5118 = self.val;
                        var self = $5117;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5120 = self.err;
                                var $5121 = self.nam;
                                var $5122 = self.ini;
                                var $5123 = self.idx;
                                var $5124 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5110, $5120), $5121, $5122, $5123, $5124);
                                var $5125 = Parser$Reply$value$(_reply$pst$15, Kind$Term$new$($5118));
                                var $5119 = $5125;
                                break;
                        };
                        var $5111 = $5119;
                        break;
                };
                var $5109 = $5111;
                break;
        };
        return $5109;
    }));
    const Kind$Parser$sigma$type = Kind$Parser$block("sigma")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5127 = self.err;
                var _reply$7 = Kind$Parser$text$("[", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5129 = self.err;
                        var self = $5127;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5131 = self.value;
                                var $5132 = Parser$Reply$error$(Parser$Error$combine$($5131, $5129));
                                var $5130 = $5132;
                                break;
                            case 'Maybe.none':
                                var $5133 = Parser$Reply$error$($5129);
                                var $5130 = $5133;
                                break;
                        };
                        var $5128 = $5130;
                        break;
                    case 'Parser.Reply.value':
                        var $5134 = self.pst;
                        var self = $5134;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5136 = self.err;
                                var $5137 = self.nam;
                                var $5138 = self.ini;
                                var $5139 = self.idx;
                                var $5140 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5127, $5136), $5137, $5138, $5139, $5140);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5142 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5144 = self.err;
                                                var self = $5142;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5146 = self.value;
                                                        var $5147 = Parser$Reply$error$(Parser$Error$combine$($5146, $5144));
                                                        var $5145 = $5147;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5148 = Parser$Reply$error$($5144);
                                                        var $5145 = $5148;
                                                        break;
                                                };
                                                var $5143 = $5145;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5149 = self.pst;
                                                var $5150 = self.val;
                                                var self = $5149;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5152 = self.err;
                                                        var $5153 = self.nam;
                                                        var $5154 = self.ini;
                                                        var $5155 = self.idx;
                                                        var $5156 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5142, $5152), $5153, $5154, $5155, $5156);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5158 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(":", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5160 = self.err;
                                                                        var self = $5158;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5162 = self.value;
                                                                                var $5163 = Parser$Reply$error$(Parser$Error$combine$($5162, $5160));
                                                                                var $5161 = $5163;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5164 = Parser$Reply$error$($5160);
                                                                                var $5161 = $5164;
                                                                                break;
                                                                        };
                                                                        var $5159 = $5161;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5165 = self.pst;
                                                                        var self = $5165;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5167 = self.err;
                                                                                var $5168 = self.nam;
                                                                                var $5169 = self.ini;
                                                                                var $5170 = self.idx;
                                                                                var $5171 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5158, $5167), $5168, $5169, $5170, $5171);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $5173 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $5175 = self.err;
                                                                                                var self = $5173;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $5177 = self.value;
                                                                                                        var $5178 = Parser$Reply$error$(Parser$Error$combine$($5177, $5175));
                                                                                                        var $5176 = $5178;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $5179 = Parser$Reply$error$($5175);
                                                                                                        var $5176 = $5179;
                                                                                                        break;
                                                                                                };
                                                                                                var $5174 = $5176;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $5180 = self.pst;
                                                                                                var $5181 = self.val;
                                                                                                var self = $5180;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $5183 = self.err;
                                                                                                        var $5184 = self.nam;
                                                                                                        var $5185 = self.ini;
                                                                                                        var $5186 = self.idx;
                                                                                                        var $5187 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($5173, $5183), $5184, $5185, $5186, $5187);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $5189 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$("]", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $5191 = self.err;
                                                                                                                        var self = $5189;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $5193 = self.value;
                                                                                                                                var $5194 = Parser$Reply$error$(Parser$Error$combine$($5193, $5191));
                                                                                                                                var $5192 = $5194;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $5195 = Parser$Reply$error$($5191);
                                                                                                                                var $5192 = $5195;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5190 = $5192;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $5196 = self.pst;
                                                                                                                        var self = $5196;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $5198 = self.err;
                                                                                                                                var $5199 = self.nam;
                                                                                                                                var $5200 = self.ini;
                                                                                                                                var $5201 = self.idx;
                                                                                                                                var $5202 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($5189, $5198), $5199, $5200, $5201, $5202);
                                                                                                                                var self = _reply$pst$71;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $5204 = self.err;
                                                                                                                                        var _reply$77 = Kind$Parser$term(_reply$pst$71);
                                                                                                                                        var self = _reply$77;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $5206 = self.err;
                                                                                                                                                var self = $5204;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $5208 = self.value;
                                                                                                                                                        var $5209 = Parser$Reply$error$(Parser$Error$combine$($5208, $5206));
                                                                                                                                                        var $5207 = $5209;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $5210 = Parser$Reply$error$($5206);
                                                                                                                                                        var $5207 = $5210;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $5205 = $5207;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $5211 = self.pst;
                                                                                                                                                var $5212 = self.val;
                                                                                                                                                var self = $5211;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $5214 = self.err;
                                                                                                                                                        var $5215 = self.nam;
                                                                                                                                                        var $5216 = self.ini;
                                                                                                                                                        var $5217 = self.idx;
                                                                                                                                                        var $5218 = self.str;
                                                                                                                                                        var _reply$pst$85 = Parser$State$new$(Parser$Error$maybe_combine$($5204, $5214), $5215, $5216, $5217, $5218);
                                                                                                                                                        var _term$86 = Kind$Term$ref$("Sigma");
                                                                                                                                                        var _term$87 = Kind$Term$app$(_term$86, $5181);
                                                                                                                                                        var _term$88 = Kind$Term$app$(_term$87, Kind$Term$lam$($5150, (_x$88 => {
                                                                                                                                                            var $5220 = $5212;
                                                                                                                                                            return $5220;
                                                                                                                                                        })));
                                                                                                                                                        var $5219 = Parser$Reply$value$(_reply$pst$85, _term$88);
                                                                                                                                                        var $5213 = $5219;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $5205 = $5213;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $5203 = $5205;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $5197 = $5203;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5190 = $5197;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $5188 = $5190;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $5182 = $5188;
                                                                                                        break;
                                                                                                };
                                                                                                var $5174 = $5182;
                                                                                                break;
                                                                                        };
                                                                                        var $5172 = $5174;
                                                                                        break;
                                                                                };
                                                                                var $5166 = $5172;
                                                                                break;
                                                                        };
                                                                        var $5159 = $5166;
                                                                        break;
                                                                };
                                                                var $5157 = $5159;
                                                                break;
                                                        };
                                                        var $5151 = $5157;
                                                        break;
                                                };
                                                var $5143 = $5151;
                                                break;
                                        };
                                        var $5141 = $5143;
                                        break;
                                };
                                var $5135 = $5141;
                                break;
                        };
                        var $5128 = $5135;
                        break;
                };
                var $5126 = $5128;
                break;
        };
        return $5126;
    }));
    const Kind$Parser$some = Kind$Parser$block("some")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5222 = self.err;
                var _reply$7 = Kind$Parser$text$("some(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5224 = self.err;
                        var self = $5222;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5226 = self.value;
                                var $5227 = Parser$Reply$error$(Parser$Error$combine$($5226, $5224));
                                var $5225 = $5227;
                                break;
                            case 'Maybe.none':
                                var $5228 = Parser$Reply$error$($5224);
                                var $5225 = $5228;
                                break;
                        };
                        var $5223 = $5225;
                        break;
                    case 'Parser.Reply.value':
                        var $5229 = self.pst;
                        var self = $5229;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5231 = self.err;
                                var $5232 = self.nam;
                                var $5233 = self.ini;
                                var $5234 = self.idx;
                                var $5235 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5222, $5231), $5232, $5233, $5234, $5235);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5237 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5239 = self.err;
                                                var self = $5237;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5241 = self.value;
                                                        var $5242 = Parser$Reply$error$(Parser$Error$combine$($5241, $5239));
                                                        var $5240 = $5242;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5243 = Parser$Reply$error$($5239);
                                                        var $5240 = $5243;
                                                        break;
                                                };
                                                var $5238 = $5240;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5244 = self.pst;
                                                var $5245 = self.val;
                                                var self = $5244;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5247 = self.err;
                                                        var $5248 = self.nam;
                                                        var $5249 = self.ini;
                                                        var $5250 = self.idx;
                                                        var $5251 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5237, $5247), $5248, $5249, $5250, $5251);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5253 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5255 = self.err;
                                                                        var self = $5253;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5257 = self.value;
                                                                                var $5258 = Parser$Reply$error$(Parser$Error$combine$($5257, $5255));
                                                                                var $5256 = $5258;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5259 = Parser$Reply$error$($5255);
                                                                                var $5256 = $5259;
                                                                                break;
                                                                        };
                                                                        var $5254 = $5256;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5260 = self.pst;
                                                                        var self = $5260;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5262 = self.err;
                                                                                var $5263 = self.nam;
                                                                                var $5264 = self.ini;
                                                                                var $5265 = self.idx;
                                                                                var $5266 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5253, $5262), $5263, $5264, $5265, $5266);
                                                                                var _term$44 = Kind$Term$ref$("Maybe.some");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$hol$(Bits$e));
                                                                                var _term$46 = Kind$Term$app$(_term$45, $5245);
                                                                                var $5267 = Parser$Reply$value$(_reply$pst$43, _term$46);
                                                                                var $5261 = $5267;
                                                                                break;
                                                                        };
                                                                        var $5254 = $5261;
                                                                        break;
                                                                };
                                                                var $5252 = $5254;
                                                                break;
                                                        };
                                                        var $5246 = $5252;
                                                        break;
                                                };
                                                var $5238 = $5246;
                                                break;
                                        };
                                        var $5236 = $5238;
                                        break;
                                };
                                var $5230 = $5236;
                                break;
                        };
                        var $5223 = $5230;
                        break;
                };
                var $5221 = $5223;
                break;
        };
        return $5221;
    }));
    const Kind$Parser$not = Kind$Parser$block("not")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5269 = self.err;
                var _reply$7 = Kind$Parser$text$("not(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5271 = self.err;
                        var self = $5269;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5273 = self.value;
                                var $5274 = Parser$Reply$error$(Parser$Error$combine$($5273, $5271));
                                var $5272 = $5274;
                                break;
                            case 'Maybe.none':
                                var $5275 = Parser$Reply$error$($5271);
                                var $5272 = $5275;
                                break;
                        };
                        var $5270 = $5272;
                        break;
                    case 'Parser.Reply.value':
                        var $5276 = self.pst;
                        var self = $5276;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5278 = self.err;
                                var $5279 = self.nam;
                                var $5280 = self.ini;
                                var $5281 = self.idx;
                                var $5282 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5269, $5278), $5279, $5280, $5281, $5282);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5284 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5286 = self.err;
                                                var self = $5284;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5288 = self.value;
                                                        var $5289 = Parser$Reply$error$(Parser$Error$combine$($5288, $5286));
                                                        var $5287 = $5289;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5290 = Parser$Reply$error$($5286);
                                                        var $5287 = $5290;
                                                        break;
                                                };
                                                var $5285 = $5287;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5291 = self.pst;
                                                var $5292 = self.val;
                                                var self = $5291;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5294 = self.err;
                                                        var $5295 = self.nam;
                                                        var $5296 = self.ini;
                                                        var $5297 = self.idx;
                                                        var $5298 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5284, $5294), $5295, $5296, $5297, $5298);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5300 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5302 = self.err;
                                                                        var self = $5300;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5304 = self.value;
                                                                                var $5305 = Parser$Reply$error$(Parser$Error$combine$($5304, $5302));
                                                                                var $5303 = $5305;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5306 = Parser$Reply$error$($5302);
                                                                                var $5303 = $5306;
                                                                                break;
                                                                        };
                                                                        var $5301 = $5303;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5307 = self.pst;
                                                                        var self = $5307;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5309 = self.err;
                                                                                var $5310 = self.nam;
                                                                                var $5311 = self.ini;
                                                                                var $5312 = self.idx;
                                                                                var $5313 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5300, $5309), $5310, $5311, $5312, $5313);
                                                                                var _term$44 = Kind$Term$ref$("Bool.not");
                                                                                var _term$45 = Kind$Term$app$(_term$44, $5292);
                                                                                var $5314 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $5308 = $5314;
                                                                                break;
                                                                        };
                                                                        var $5301 = $5308;
                                                                        break;
                                                                };
                                                                var $5299 = $5301;
                                                                break;
                                                        };
                                                        var $5293 = $5299;
                                                        break;
                                                };
                                                var $5285 = $5293;
                                                break;
                                        };
                                        var $5283 = $5285;
                                        break;
                                };
                                var $5277 = $5283;
                                break;
                        };
                        var $5270 = $5277;
                        break;
                };
                var $5268 = $5270;
                break;
        };
        return $5268;
    }));
    const Kind$Parser$left = Kind$Parser$block("left")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5316 = self.err;
                var _reply$7 = Kind$Parser$text$("left(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5318 = self.err;
                        var self = $5316;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5320 = self.value;
                                var $5321 = Parser$Reply$error$(Parser$Error$combine$($5320, $5318));
                                var $5319 = $5321;
                                break;
                            case 'Maybe.none':
                                var $5322 = Parser$Reply$error$($5318);
                                var $5319 = $5322;
                                break;
                        };
                        var $5317 = $5319;
                        break;
                    case 'Parser.Reply.value':
                        var $5323 = self.pst;
                        var self = $5323;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5325 = self.err;
                                var $5326 = self.nam;
                                var $5327 = self.ini;
                                var $5328 = self.idx;
                                var $5329 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5316, $5325), $5326, $5327, $5328, $5329);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5331 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5333 = self.err;
                                                var self = $5331;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5335 = self.value;
                                                        var $5336 = Parser$Reply$error$(Parser$Error$combine$($5335, $5333));
                                                        var $5334 = $5336;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5337 = Parser$Reply$error$($5333);
                                                        var $5334 = $5337;
                                                        break;
                                                };
                                                var $5332 = $5334;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5338 = self.pst;
                                                var $5339 = self.val;
                                                var self = $5338;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5341 = self.err;
                                                        var $5342 = self.nam;
                                                        var $5343 = self.ini;
                                                        var $5344 = self.idx;
                                                        var $5345 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5331, $5341), $5342, $5343, $5344, $5345);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5347 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5349 = self.err;
                                                                        var self = $5347;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5351 = self.value;
                                                                                var $5352 = Parser$Reply$error$(Parser$Error$combine$($5351, $5349));
                                                                                var $5350 = $5352;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5353 = Parser$Reply$error$($5349);
                                                                                var $5350 = $5353;
                                                                                break;
                                                                        };
                                                                        var $5348 = $5350;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5354 = self.pst;
                                                                        var self = $5354;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5356 = self.err;
                                                                                var $5357 = self.nam;
                                                                                var $5358 = self.ini;
                                                                                var $5359 = self.idx;
                                                                                var $5360 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5347, $5356), $5357, $5358, $5359, $5360);
                                                                                var _term$44 = Kind$Term$ref$("Either.left");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$hol$(Bits$e));
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, $5339);
                                                                                var $5361 = Parser$Reply$value$(_reply$pst$43, _term$47);
                                                                                var $5355 = $5361;
                                                                                break;
                                                                        };
                                                                        var $5348 = $5355;
                                                                        break;
                                                                };
                                                                var $5346 = $5348;
                                                                break;
                                                        };
                                                        var $5340 = $5346;
                                                        break;
                                                };
                                                var $5332 = $5340;
                                                break;
                                        };
                                        var $5330 = $5332;
                                        break;
                                };
                                var $5324 = $5330;
                                break;
                        };
                        var $5317 = $5324;
                        break;
                };
                var $5315 = $5317;
                break;
        };
        return $5315;
    }));
    const Kind$Parser$right = Kind$Parser$block("right")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5363 = self.err;
                var _reply$7 = Kind$Parser$text$("right(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5365 = self.err;
                        var self = $5363;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5367 = self.value;
                                var $5368 = Parser$Reply$error$(Parser$Error$combine$($5367, $5365));
                                var $5366 = $5368;
                                break;
                            case 'Maybe.none':
                                var $5369 = Parser$Reply$error$($5365);
                                var $5366 = $5369;
                                break;
                        };
                        var $5364 = $5366;
                        break;
                    case 'Parser.Reply.value':
                        var $5370 = self.pst;
                        var self = $5370;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5372 = self.err;
                                var $5373 = self.nam;
                                var $5374 = self.ini;
                                var $5375 = self.idx;
                                var $5376 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5363, $5372), $5373, $5374, $5375, $5376);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5378 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5380 = self.err;
                                                var self = $5378;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5382 = self.value;
                                                        var $5383 = Parser$Reply$error$(Parser$Error$combine$($5382, $5380));
                                                        var $5381 = $5383;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5384 = Parser$Reply$error$($5380);
                                                        var $5381 = $5384;
                                                        break;
                                                };
                                                var $5379 = $5381;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5385 = self.pst;
                                                var $5386 = self.val;
                                                var self = $5385;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5388 = self.err;
                                                        var $5389 = self.nam;
                                                        var $5390 = self.ini;
                                                        var $5391 = self.idx;
                                                        var $5392 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5378, $5388), $5389, $5390, $5391, $5392);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5394 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5396 = self.err;
                                                                        var self = $5394;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5398 = self.value;
                                                                                var $5399 = Parser$Reply$error$(Parser$Error$combine$($5398, $5396));
                                                                                var $5397 = $5399;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5400 = Parser$Reply$error$($5396);
                                                                                var $5397 = $5400;
                                                                                break;
                                                                        };
                                                                        var $5395 = $5397;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5401 = self.pst;
                                                                        var self = $5401;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5403 = self.err;
                                                                                var $5404 = self.nam;
                                                                                var $5405 = self.ini;
                                                                                var $5406 = self.idx;
                                                                                var $5407 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5394, $5403), $5404, $5405, $5406, $5407);
                                                                                var _term$44 = Kind$Term$ref$("Either.right");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$hol$(Bits$e));
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, $5386);
                                                                                var $5408 = Parser$Reply$value$(_reply$pst$43, _term$47);
                                                                                var $5402 = $5408;
                                                                                break;
                                                                        };
                                                                        var $5395 = $5402;
                                                                        break;
                                                                };
                                                                var $5393 = $5395;
                                                                break;
                                                        };
                                                        var $5387 = $5393;
                                                        break;
                                                };
                                                var $5379 = $5387;
                                                break;
                                        };
                                        var $5377 = $5379;
                                        break;
                                };
                                var $5371 = $5377;
                                break;
                        };
                        var $5364 = $5371;
                        break;
                };
                var $5362 = $5364;
                break;
        };
        return $5362;
    }));
    const Kind$Parser$apply = Kind$Parser$block("apply")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5410 = self.err;
                var _reply$7 = Kind$Parser$text$("apply(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5412 = self.err;
                        var self = $5410;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5414 = self.value;
                                var $5415 = Parser$Reply$error$(Parser$Error$combine$($5414, $5412));
                                var $5413 = $5415;
                                break;
                            case 'Maybe.none':
                                var $5416 = Parser$Reply$error$($5412);
                                var $5413 = $5416;
                                break;
                        };
                        var $5411 = $5413;
                        break;
                    case 'Parser.Reply.value':
                        var $5417 = self.pst;
                        var self = $5417;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5419 = self.err;
                                var $5420 = self.nam;
                                var $5421 = self.ini;
                                var $5422 = self.idx;
                                var $5423 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5410, $5419), $5420, $5421, $5422, $5423);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5425 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5427 = self.err;
                                                var self = $5425;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5429 = self.value;
                                                        var $5430 = Parser$Reply$error$(Parser$Error$combine$($5429, $5427));
                                                        var $5428 = $5430;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5431 = Parser$Reply$error$($5427);
                                                        var $5428 = $5431;
                                                        break;
                                                };
                                                var $5426 = $5428;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5432 = self.pst;
                                                var $5433 = self.val;
                                                var self = $5432;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5435 = self.err;
                                                        var $5436 = self.nam;
                                                        var $5437 = self.ini;
                                                        var $5438 = self.idx;
                                                        var $5439 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5425, $5435), $5436, $5437, $5438, $5439);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5441 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(",", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5443 = self.err;
                                                                        var self = $5441;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5445 = self.value;
                                                                                var $5446 = Parser$Reply$error$(Parser$Error$combine$($5445, $5443));
                                                                                var $5444 = $5446;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5447 = Parser$Reply$error$($5443);
                                                                                var $5444 = $5447;
                                                                                break;
                                                                        };
                                                                        var $5442 = $5444;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5448 = self.pst;
                                                                        var self = $5448;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5450 = self.err;
                                                                                var $5451 = self.nam;
                                                                                var $5452 = self.ini;
                                                                                var $5453 = self.idx;
                                                                                var $5454 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5441, $5450), $5451, $5452, $5453, $5454);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $5456 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $5458 = self.err;
                                                                                                var self = $5456;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $5460 = self.value;
                                                                                                        var $5461 = Parser$Reply$error$(Parser$Error$combine$($5460, $5458));
                                                                                                        var $5459 = $5461;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $5462 = Parser$Reply$error$($5458);
                                                                                                        var $5459 = $5462;
                                                                                                        break;
                                                                                                };
                                                                                                var $5457 = $5459;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $5463 = self.pst;
                                                                                                var $5464 = self.val;
                                                                                                var self = $5463;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $5466 = self.err;
                                                                                                        var $5467 = self.nam;
                                                                                                        var $5468 = self.ini;
                                                                                                        var $5469 = self.idx;
                                                                                                        var $5470 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($5456, $5466), $5467, $5468, $5469, $5470);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $5472 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$(")", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $5474 = self.err;
                                                                                                                        var self = $5472;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $5476 = self.value;
                                                                                                                                var $5477 = Parser$Reply$error$(Parser$Error$combine$($5476, $5474));
                                                                                                                                var $5475 = $5477;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $5478 = Parser$Reply$error$($5474);
                                                                                                                                var $5475 = $5478;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5473 = $5475;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $5479 = self.pst;
                                                                                                                        var self = $5479;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $5481 = self.err;
                                                                                                                                var $5482 = self.nam;
                                                                                                                                var $5483 = self.ini;
                                                                                                                                var $5484 = self.idx;
                                                                                                                                var $5485 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($5472, $5481), $5482, $5483, $5484, $5485);
                                                                                                                                var _term$72 = Kind$Term$ref$("Equal.apply");
                                                                                                                                var _term$73 = Kind$Term$app$(_term$72, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$76 = Kind$Term$app$(_term$75, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$77 = Kind$Term$app$(_term$76, $5433);
                                                                                                                                var _term$78 = Kind$Term$app$(_term$77, $5464);
                                                                                                                                var $5486 = Parser$Reply$value$(_reply$pst$71, _term$78);
                                                                                                                                var $5480 = $5486;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5473 = $5480;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $5471 = $5473;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $5465 = $5471;
                                                                                                        break;
                                                                                                };
                                                                                                var $5457 = $5465;
                                                                                                break;
                                                                                        };
                                                                                        var $5455 = $5457;
                                                                                        break;
                                                                                };
                                                                                var $5449 = $5455;
                                                                                break;
                                                                        };
                                                                        var $5442 = $5449;
                                                                        break;
                                                                };
                                                                var $5440 = $5442;
                                                                break;
                                                        };
                                                        var $5434 = $5440;
                                                        break;
                                                };
                                                var $5426 = $5434;
                                                break;
                                        };
                                        var $5424 = $5426;
                                        break;
                                };
                                var $5418 = $5424;
                                break;
                        };
                        var $5411 = $5418;
                        break;
                };
                var $5409 = $5411;
                break;
        };
        return $5409;
    }));
    const Kind$Parser$chain = Kind$Parser$block("chain")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5488 = self.err;
                var _reply$7 = Kind$Parser$text$("chain(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5490 = self.err;
                        var self = $5488;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5492 = self.value;
                                var $5493 = Parser$Reply$error$(Parser$Error$combine$($5492, $5490));
                                var $5491 = $5493;
                                break;
                            case 'Maybe.none':
                                var $5494 = Parser$Reply$error$($5490);
                                var $5491 = $5494;
                                break;
                        };
                        var $5489 = $5491;
                        break;
                    case 'Parser.Reply.value':
                        var $5495 = self.pst;
                        var self = $5495;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5497 = self.err;
                                var $5498 = self.nam;
                                var $5499 = self.ini;
                                var $5500 = self.idx;
                                var $5501 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5488, $5497), $5498, $5499, $5500, $5501);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5503 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5505 = self.err;
                                                var self = $5503;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5507 = self.value;
                                                        var $5508 = Parser$Reply$error$(Parser$Error$combine$($5507, $5505));
                                                        var $5506 = $5508;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5509 = Parser$Reply$error$($5505);
                                                        var $5506 = $5509;
                                                        break;
                                                };
                                                var $5504 = $5506;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5510 = self.pst;
                                                var $5511 = self.val;
                                                var self = $5510;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5513 = self.err;
                                                        var $5514 = self.nam;
                                                        var $5515 = self.ini;
                                                        var $5516 = self.idx;
                                                        var $5517 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5503, $5513), $5514, $5515, $5516, $5517);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5519 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(",", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5521 = self.err;
                                                                        var self = $5519;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5523 = self.value;
                                                                                var $5524 = Parser$Reply$error$(Parser$Error$combine$($5523, $5521));
                                                                                var $5522 = $5524;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5525 = Parser$Reply$error$($5521);
                                                                                var $5522 = $5525;
                                                                                break;
                                                                        };
                                                                        var $5520 = $5522;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5526 = self.pst;
                                                                        var self = $5526;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5528 = self.err;
                                                                                var $5529 = self.nam;
                                                                                var $5530 = self.ini;
                                                                                var $5531 = self.idx;
                                                                                var $5532 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5519, $5528), $5529, $5530, $5531, $5532);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $5534 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $5536 = self.err;
                                                                                                var self = $5534;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $5538 = self.value;
                                                                                                        var $5539 = Parser$Reply$error$(Parser$Error$combine$($5538, $5536));
                                                                                                        var $5537 = $5539;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $5540 = Parser$Reply$error$($5536);
                                                                                                        var $5537 = $5540;
                                                                                                        break;
                                                                                                };
                                                                                                var $5535 = $5537;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $5541 = self.pst;
                                                                                                var $5542 = self.val;
                                                                                                var self = $5541;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $5544 = self.err;
                                                                                                        var $5545 = self.nam;
                                                                                                        var $5546 = self.ini;
                                                                                                        var $5547 = self.idx;
                                                                                                        var $5548 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($5534, $5544), $5545, $5546, $5547, $5548);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $5550 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$(")", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $5552 = self.err;
                                                                                                                        var self = $5550;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $5554 = self.value;
                                                                                                                                var $5555 = Parser$Reply$error$(Parser$Error$combine$($5554, $5552));
                                                                                                                                var $5553 = $5555;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $5556 = Parser$Reply$error$($5552);
                                                                                                                                var $5553 = $5556;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5551 = $5553;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $5557 = self.pst;
                                                                                                                        var self = $5557;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $5559 = self.err;
                                                                                                                                var $5560 = self.nam;
                                                                                                                                var $5561 = self.ini;
                                                                                                                                var $5562 = self.idx;
                                                                                                                                var $5563 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($5550, $5559), $5560, $5561, $5562, $5563);
                                                                                                                                var _term$72 = Kind$Term$ref$("Equal.chain");
                                                                                                                                var _term$73 = Kind$Term$app$(_term$72, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$76 = Kind$Term$app$(_term$75, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$77 = Kind$Term$app$(_term$76, $5511);
                                                                                                                                var _term$78 = Kind$Term$app$(_term$77, $5542);
                                                                                                                                var $5564 = Parser$Reply$value$(_reply$pst$71, _term$78);
                                                                                                                                var $5558 = $5564;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5551 = $5558;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $5549 = $5551;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $5543 = $5549;
                                                                                                        break;
                                                                                                };
                                                                                                var $5535 = $5543;
                                                                                                break;
                                                                                        };
                                                                                        var $5533 = $5535;
                                                                                        break;
                                                                                };
                                                                                var $5527 = $5533;
                                                                                break;
                                                                        };
                                                                        var $5520 = $5527;
                                                                        break;
                                                                };
                                                                var $5518 = $5520;
                                                                break;
                                                        };
                                                        var $5512 = $5518;
                                                        break;
                                                };
                                                var $5504 = $5512;
                                                break;
                                        };
                                        var $5502 = $5504;
                                        break;
                                };
                                var $5496 = $5502;
                                break;
                        };
                        var $5489 = $5496;
                        break;
                };
                var $5487 = $5489;
                break;
        };
        return $5487;
    }));
    const Kind$Parser$mirror = Kind$Parser$block("mirror")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5566 = self.err;
                var _reply$7 = Kind$Parser$text$("mirror(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5568 = self.err;
                        var self = $5566;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5570 = self.value;
                                var $5571 = Parser$Reply$error$(Parser$Error$combine$($5570, $5568));
                                var $5569 = $5571;
                                break;
                            case 'Maybe.none':
                                var $5572 = Parser$Reply$error$($5568);
                                var $5569 = $5572;
                                break;
                        };
                        var $5567 = $5569;
                        break;
                    case 'Parser.Reply.value':
                        var $5573 = self.pst;
                        var self = $5573;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5575 = self.err;
                                var $5576 = self.nam;
                                var $5577 = self.ini;
                                var $5578 = self.idx;
                                var $5579 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5566, $5575), $5576, $5577, $5578, $5579);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5581 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5583 = self.err;
                                                var self = $5581;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5585 = self.value;
                                                        var $5586 = Parser$Reply$error$(Parser$Error$combine$($5585, $5583));
                                                        var $5584 = $5586;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5587 = Parser$Reply$error$($5583);
                                                        var $5584 = $5587;
                                                        break;
                                                };
                                                var $5582 = $5584;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5588 = self.pst;
                                                var $5589 = self.val;
                                                var self = $5588;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5591 = self.err;
                                                        var $5592 = self.nam;
                                                        var $5593 = self.ini;
                                                        var $5594 = self.idx;
                                                        var $5595 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5581, $5591), $5592, $5593, $5594, $5595);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5597 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5599 = self.err;
                                                                        var self = $5597;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5601 = self.value;
                                                                                var $5602 = Parser$Reply$error$(Parser$Error$combine$($5601, $5599));
                                                                                var $5600 = $5602;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5603 = Parser$Reply$error$($5599);
                                                                                var $5600 = $5603;
                                                                                break;
                                                                        };
                                                                        var $5598 = $5600;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5604 = self.pst;
                                                                        var self = $5604;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5606 = self.err;
                                                                                var $5607 = self.nam;
                                                                                var $5608 = self.ini;
                                                                                var $5609 = self.idx;
                                                                                var $5610 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5597, $5606), $5607, $5608, $5609, $5610);
                                                                                var _term$44 = Kind$Term$ref$("Equal.mirror");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$hol$(Bits$e));
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, Kind$Term$hol$(Bits$e));
                                                                                var _term$48 = Kind$Term$app$(_term$47, $5589);
                                                                                var $5611 = Parser$Reply$value$(_reply$pst$43, _term$48);
                                                                                var $5605 = $5611;
                                                                                break;
                                                                        };
                                                                        var $5598 = $5605;
                                                                        break;
                                                                };
                                                                var $5596 = $5598;
                                                                break;
                                                        };
                                                        var $5590 = $5596;
                                                        break;
                                                };
                                                var $5582 = $5590;
                                                break;
                                        };
                                        var $5580 = $5582;
                                        break;
                                };
                                var $5574 = $5580;
                                break;
                        };
                        var $5567 = $5574;
                        break;
                };
                var $5565 = $5567;
                break;
        };
        return $5565;
    }));

    function Kind$Name$read$(_str$1) {
        var $5612 = _str$1;
        return $5612;
    };
    const Kind$Name$read = x0 => Kind$Name$read$(x0);
    const Kind$Parser$list = Kind$Parser$block("list")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5614 = self.err;
                var _reply$7 = Kind$Parser$items$("[", Kind$Parser$term, "]")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5616 = self.err;
                        var self = $5614;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5618 = self.value;
                                var $5619 = Parser$Reply$error$(Parser$Error$combine$($5618, $5616));
                                var $5617 = $5619;
                                break;
                            case 'Maybe.none':
                                var $5620 = Parser$Reply$error$($5616);
                                var $5617 = $5620;
                                break;
                        };
                        var $5615 = $5617;
                        break;
                    case 'Parser.Reply.value':
                        var $5621 = self.pst;
                        var $5622 = self.val;
                        var self = $5621;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5624 = self.err;
                                var $5625 = self.nam;
                                var $5626 = self.ini;
                                var $5627 = self.idx;
                                var $5628 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5614, $5624), $5625, $5626, $5627, $5628);
                                var $5629 = Parser$Reply$value$(_reply$pst$15, List$fold$($5622, Kind$Term$app$(Kind$Term$ref$(Kind$Name$read$("List.nil")), Kind$Term$hol$(Bits$e)), (_x$16 => _xs$17 => {
                                    var _term$18 = Kind$Term$ref$(Kind$Name$read$("List.cons"));
                                    var _term$19 = Kind$Term$app$(_term$18, Kind$Term$hol$(Bits$e));
                                    var _term$20 = Kind$Term$app$(_term$19, _x$16);
                                    var _term$21 = Kind$Term$app$(_term$20, _xs$17);
                                    var $5630 = _term$21;
                                    return $5630;
                                })));
                                var $5623 = $5629;
                                break;
                        };
                        var $5615 = $5623;
                        break;
                };
                var $5613 = $5615;
                break;
        };
        return $5613;
    }));
    const Kind$Parser$map = Kind$Parser$block("map")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5632 = self.err;
                var _reply$7 = Kind$Parser$items$("{", (_pst$7 => {
                    var self = _pst$7;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $5635 = self.err;
                            var _reply$13 = Kind$Parser$term(_pst$7);
                            var self = _reply$13;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $5637 = self.err;
                                    var self = $5635;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $5639 = self.value;
                                            var $5640 = Parser$Reply$error$(Parser$Error$combine$($5639, $5637));
                                            var $5638 = $5640;
                                            break;
                                        case 'Maybe.none':
                                            var $5641 = Parser$Reply$error$($5637);
                                            var $5638 = $5641;
                                            break;
                                    };
                                    var $5636 = $5638;
                                    break;
                                case 'Parser.Reply.value':
                                    var $5642 = self.pst;
                                    var $5643 = self.val;
                                    var self = $5642;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5645 = self.err;
                                            var $5646 = self.nam;
                                            var $5647 = self.ini;
                                            var $5648 = self.idx;
                                            var $5649 = self.str;
                                            var _reply$pst$21 = Parser$State$new$(Parser$Error$maybe_combine$($5635, $5645), $5646, $5647, $5648, $5649);
                                            var self = _reply$pst$21;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $5651 = self.err;
                                                    var _reply$27 = Kind$Parser$text$(":", _reply$pst$21);
                                                    var self = _reply$27;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $5653 = self.err;
                                                            var self = $5651;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $5655 = self.value;
                                                                    var $5656 = Parser$Reply$error$(Parser$Error$combine$($5655, $5653));
                                                                    var $5654 = $5656;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $5657 = Parser$Reply$error$($5653);
                                                                    var $5654 = $5657;
                                                                    break;
                                                            };
                                                            var $5652 = $5654;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $5658 = self.pst;
                                                            var self = $5658;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5660 = self.err;
                                                                    var $5661 = self.nam;
                                                                    var $5662 = self.ini;
                                                                    var $5663 = self.idx;
                                                                    var $5664 = self.str;
                                                                    var _reply$pst$35 = Parser$State$new$(Parser$Error$maybe_combine$($5651, $5660), $5661, $5662, $5663, $5664);
                                                                    var self = _reply$pst$35;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $5666 = self.err;
                                                                            var _reply$41 = Kind$Parser$term(_reply$pst$35);
                                                                            var self = _reply$41;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $5668 = self.err;
                                                                                    var self = $5666;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $5670 = self.value;
                                                                                            var $5671 = Parser$Reply$error$(Parser$Error$combine$($5670, $5668));
                                                                                            var $5669 = $5671;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $5672 = Parser$Reply$error$($5668);
                                                                                            var $5669 = $5672;
                                                                                            break;
                                                                                    };
                                                                                    var $5667 = $5669;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $5673 = self.pst;
                                                                                    var $5674 = self.val;
                                                                                    var self = $5673;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5676 = self.err;
                                                                                            var $5677 = self.nam;
                                                                                            var $5678 = self.ini;
                                                                                            var $5679 = self.idx;
                                                                                            var $5680 = self.str;
                                                                                            var _reply$pst$49 = Parser$State$new$(Parser$Error$maybe_combine$($5666, $5676), $5677, $5678, $5679, $5680);
                                                                                            var $5681 = Parser$Reply$value$(_reply$pst$49, Pair$new$($5643, $5674));
                                                                                            var $5675 = $5681;
                                                                                            break;
                                                                                    };
                                                                                    var $5667 = $5675;
                                                                                    break;
                                                                            };
                                                                            var $5665 = $5667;
                                                                            break;
                                                                    };
                                                                    var $5659 = $5665;
                                                                    break;
                                                            };
                                                            var $5652 = $5659;
                                                            break;
                                                    };
                                                    var $5650 = $5652;
                                                    break;
                                            };
                                            var $5644 = $5650;
                                            break;
                                    };
                                    var $5636 = $5644;
                                    break;
                            };
                            var $5634 = $5636;
                            break;
                    };
                    return $5634;
                }), "}")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5682 = self.err;
                        var self = $5632;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5684 = self.value;
                                var $5685 = Parser$Reply$error$(Parser$Error$combine$($5684, $5682));
                                var $5683 = $5685;
                                break;
                            case 'Maybe.none':
                                var $5686 = Parser$Reply$error$($5682);
                                var $5683 = $5686;
                                break;
                        };
                        var $5633 = $5683;
                        break;
                    case 'Parser.Reply.value':
                        var $5687 = self.pst;
                        var $5688 = self.val;
                        var self = $5687;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5690 = self.err;
                                var $5691 = self.nam;
                                var $5692 = self.ini;
                                var $5693 = self.idx;
                                var $5694 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5632, $5690), $5691, $5692, $5693, $5694);
                                var _list$16 = List$fold$($5688, Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e)), (_kv$16 => _xs$17 => {
                                    var self = _kv$16;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $5697 = self.fst;
                                            var $5698 = self.snd;
                                            var _pair$20 = Kind$Term$ref$("Pair.new");
                                            var _pair$21 = Kind$Term$app$(_pair$20, Kind$Term$hol$(Bits$e));
                                            var _pair$22 = Kind$Term$app$(_pair$21, Kind$Term$hol$(Bits$e));
                                            var _pair$23 = Kind$Term$app$(_pair$22, $5697);
                                            var _pair$24 = Kind$Term$app$(_pair$23, $5698);
                                            var _term$25 = Kind$Term$ref$("List.cons");
                                            var _term$26 = Kind$Term$app$(_term$25, Kind$Term$hol$(Bits$e));
                                            var _term$27 = Kind$Term$app$(_term$26, _pair$24);
                                            var _term$28 = Kind$Term$app$(_term$27, _xs$17);
                                            var $5699 = _term$28;
                                            var $5696 = $5699;
                                            break;
                                    };
                                    return $5696;
                                }));
                                var _term$17 = Kind$Term$ref$("Map.from_list");
                                var _term$18 = Kind$Term$app$(_term$17, Kind$Term$hol$(Bits$e));
                                var _term$19 = Kind$Term$app$(_term$18, _list$16);
                                var $5695 = Parser$Reply$value$(_reply$pst$15, _term$19);
                                var $5689 = $5695;
                                break;
                        };
                        var $5633 = $5689;
                        break;
                };
                var $5631 = $5633;
                break;
        };
        return $5631;
    }));

    function Kind$Parser$log$(_body$1) {
        var $5700 = Kind$Parser$block("log")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5702 = self.err;
                    var _reply$8 = Kind$Parser$text$("log(", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5704 = self.err;
                            var self = $5702;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5706 = self.value;
                                    var $5707 = Parser$Reply$error$(Parser$Error$combine$($5706, $5704));
                                    var $5705 = $5707;
                                    break;
                                case 'Maybe.none':
                                    var $5708 = Parser$Reply$error$($5704);
                                    var $5705 = $5708;
                                    break;
                            };
                            var $5703 = $5705;
                            break;
                        case 'Parser.Reply.value':
                            var $5709 = self.pst;
                            var self = $5709;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5711 = self.err;
                                    var $5712 = self.nam;
                                    var $5713 = self.ini;
                                    var $5714 = self.idx;
                                    var $5715 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5702, $5711), $5712, $5713, $5714, $5715);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5717 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5719 = self.err;
                                                    var self = $5717;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5721 = self.value;
                                                            var $5722 = Parser$Reply$error$(Parser$Error$combine$($5721, $5719));
                                                            var $5720 = $5722;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5723 = Parser$Reply$error$($5719);
                                                            var $5720 = $5723;
                                                            break;
                                                    };
                                                    var $5718 = $5720;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5724 = self.pst;
                                                    var $5725 = self.val;
                                                    var self = $5724;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5727 = self.err;
                                                            var $5728 = self.nam;
                                                            var $5729 = self.ini;
                                                            var $5730 = self.idx;
                                                            var $5731 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5717, $5727), $5728, $5729, $5730, $5731);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5733 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$(")", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5735 = self.err;
                                                                            var self = $5733;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5737 = self.value;
                                                                                    var $5738 = Parser$Reply$error$(Parser$Error$combine$($5737, $5735));
                                                                                    var $5736 = $5738;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5739 = Parser$Reply$error$($5735);
                                                                                    var $5736 = $5739;
                                                                                    break;
                                                                            };
                                                                            var $5734 = $5736;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5740 = self.pst;
                                                                            var self = $5740;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5742 = self.err;
                                                                                    var $5743 = self.nam;
                                                                                    var $5744 = self.ini;
                                                                                    var $5745 = self.idx;
                                                                                    var $5746 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5733, $5742), $5743, $5744, $5745, $5746);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5748 = self.err;
                                                                                            var _reply$50 = _body$1(Unit$new)(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $5750 = self.err;
                                                                                                    var self = $5748;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $5752 = self.value;
                                                                                                            var $5753 = Parser$Reply$error$(Parser$Error$combine$($5752, $5750));
                                                                                                            var $5751 = $5753;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $5754 = Parser$Reply$error$($5750);
                                                                                                            var $5751 = $5754;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5749 = $5751;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $5755 = self.pst;
                                                                                                    var $5756 = self.val;
                                                                                                    var self = $5755;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $5758 = self.err;
                                                                                                            var $5759 = self.nam;
                                                                                                            var $5760 = self.ini;
                                                                                                            var $5761 = self.idx;
                                                                                                            var $5762 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($5748, $5758), $5759, $5760, $5761, $5762);
                                                                                                            var _term$59 = Kind$Term$ref$("Debug.log");
                                                                                                            var _term$60 = Kind$Term$app$(_term$59, Kind$Term$hol$(Bits$e));
                                                                                                            var _term$61 = Kind$Term$app$(_term$60, $5725);
                                                                                                            var _term$62 = Kind$Term$app$(_term$61, Kind$Term$lam$("", (_x$62 => {
                                                                                                                var $5764 = $5756;
                                                                                                                return $5764;
                                                                                                            })));
                                                                                                            var $5763 = Parser$Reply$value$(_reply$pst$58, _term$62);
                                                                                                            var $5757 = $5763;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5749 = $5757;
                                                                                                    break;
                                                                                            };
                                                                                            var $5747 = $5749;
                                                                                            break;
                                                                                    };
                                                                                    var $5741 = $5747;
                                                                                    break;
                                                                            };
                                                                            var $5734 = $5741;
                                                                            break;
                                                                    };
                                                                    var $5732 = $5734;
                                                                    break;
                                                            };
                                                            var $5726 = $5732;
                                                            break;
                                                    };
                                                    var $5718 = $5726;
                                                    break;
                                            };
                                            var $5716 = $5718;
                                            break;
                                    };
                                    var $5710 = $5716;
                                    break;
                            };
                            var $5703 = $5710;
                            break;
                    };
                    var $5701 = $5703;
                    break;
            };
            return $5701;
        }));
        return $5700;
    };
    const Kind$Parser$log = x0 => Kind$Parser$log$(x0);

    function String$map$(_f$1, _as$2) {
        var self = _as$2;
        if (self.length === 0) {
            var $5766 = String$nil;
            var $5765 = $5766;
        } else {
            var $5767 = self.charCodeAt(0);
            var $5768 = self.slice(1);
            var $5769 = String$cons$(_f$1($5767), String$map$(_f$1, $5768));
            var $5765 = $5769;
        };
        return $5765;
    };
    const String$map = x0 => x1 => String$map$(x0, x1);

    function Char$to_upper$(_char$1) {
        var self = ((_char$1 >= 97) && (_char$1 <= 122));
        if (self) {
            var $5771 = ((_char$1 - 32) & 0xFFFF);
            var $5770 = $5771;
        } else {
            var $5772 = _char$1;
            var $5770 = $5772;
        };
        return $5770;
    };
    const Char$to_upper = x0 => Char$to_upper$(x0);

    function String$to_upper$(_str$1) {
        var $5773 = String$map$(Char$to_upper, _str$1);
        return $5773;
    };
    const String$to_upper = x0 => String$to_upper$(x0);

    function String$is_upper$(_str$1) {
        var $5774 = (String$to_upper$(_str$1) === _str$1);
        return $5774;
    };
    const String$is_upper = x0 => String$is_upper$(x0);

    function String$take$(_n$1, _xs$2) {
        var self = _xs$2;
        if (self.length === 0) {
            var $5776 = String$nil;
            var $5775 = $5776;
        } else {
            var $5777 = self.charCodeAt(0);
            var $5778 = self.slice(1);
            var self = _n$1;
            if (self === 0n) {
                var $5780 = String$nil;
                var $5779 = $5780;
            } else {
                var $5781 = (self - 1n);
                var $5782 = String$cons$($5777, String$take$($5781, $5778));
                var $5779 = $5782;
            };
            var $5775 = $5779;
        };
        return $5775;
    };
    const String$take = x0 => x1 => String$take$(x0, x1);
    const Nat$sub = a0 => a1 => (a0 - a1 <= 0n ? 0n : a0 - a1);

    function String$slice$(_i$1, _j$2, _xs$3) {
        var $5783 = String$take$((_j$2 - _i$1 <= 0n ? 0n : _j$2 - _i$1), String$drop$(_i$1, _xs$3));
        return $5783;
    };
    const String$slice = x0 => x1 => x2 => String$slice$(x0, x1, x2);

    function Kind$Term$unroll_nat$(_natx$1) {
        var self = _natx$1;
        if (self === 0n) {
            var $5785 = Kind$Term$ref$(Kind$Name$read$("Nat.zero"));
            var $5784 = $5785;
        } else {
            var $5786 = (self - 1n);
            var _func$3 = Kind$Term$ref$(Kind$Name$read$("Nat.succ"));
            var _argm$4 = Kind$Term$nat$($5786);
            var $5787 = Kind$Term$app$(_func$3, _argm$4);
            var $5784 = $5787;
        };
        return $5784;
    };
    const Kind$Term$unroll_nat = x0 => Kind$Term$unroll_nat$(x0);

    function Word$to_bits$(_a$2) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $5789 = self.pred;
                var $5790 = (Word$to_bits$($5789) + '0');
                var $5788 = $5790;
                break;
            case 'Word.i':
                var $5791 = self.pred;
                var $5792 = (Word$to_bits$($5791) + '1');
                var $5788 = $5792;
                break;
            case 'Word.e':
                var $5793 = Bits$e;
                var $5788 = $5793;
                break;
        };
        return $5788;
    };
    const Word$to_bits = x0 => Word$to_bits$(x0);
    const U16$to_bits = a0 => (u16_to_bits(a0));

    function Kind$Term$unroll_chr$bits$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $5795 = self.slice(0, -1);
                var $5796 = Kind$Term$app$(Kind$Term$ref$(Kind$Name$read$("Bits.o")), Kind$Term$unroll_chr$bits$($5795));
                var $5794 = $5796;
                break;
            case 'i':
                var $5797 = self.slice(0, -1);
                var $5798 = Kind$Term$app$(Kind$Term$ref$(Kind$Name$read$("Bits.i")), Kind$Term$unroll_chr$bits$($5797));
                var $5794 = $5798;
                break;
            case 'e':
                var $5799 = Kind$Term$ref$(Kind$Name$read$("Bits.e"));
                var $5794 = $5799;
                break;
        };
        return $5794;
    };
    const Kind$Term$unroll_chr$bits = x0 => Kind$Term$unroll_chr$bits$(x0);

    function Kind$Term$unroll_chr$(_chrx$1) {
        var _bits$2 = (u16_to_bits(_chrx$1));
        var _term$3 = Kind$Term$ref$(Kind$Name$read$("Word.from_bits"));
        var _term$4 = Kind$Term$app$(_term$3, Kind$Term$nat$(16n));
        var _term$5 = Kind$Term$app$(_term$4, Kind$Term$unroll_chr$bits$(_bits$2));
        var _term$6 = Kind$Term$app$(Kind$Term$ref$(Kind$Name$read$("U16.new")), _term$5);
        var $5800 = _term$6;
        return $5800;
    };
    const Kind$Term$unroll_chr = x0 => Kind$Term$unroll_chr$(x0);

    function Kind$Term$unroll_str$(_strx$1) {
        var self = _strx$1;
        if (self.length === 0) {
            var $5802 = Kind$Term$ref$(Kind$Name$read$("String.nil"));
            var $5801 = $5802;
        } else {
            var $5803 = self.charCodeAt(0);
            var $5804 = self.slice(1);
            var _char$4 = Kind$Term$chr$($5803);
            var _term$5 = Kind$Term$ref$(Kind$Name$read$("String.cons"));
            var _term$6 = Kind$Term$app$(_term$5, _char$4);
            var _term$7 = Kind$Term$app$(_term$6, Kind$Term$str$($5804));
            var $5805 = _term$7;
            var $5801 = $5805;
        };
        return $5801;
    };
    const Kind$Term$unroll_str = x0 => Kind$Term$unroll_str$(x0);

    function Kind$Term$reduce$(_term$1, _defs$2) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $5807 = self.name;
                var self = Kind$Map$get$($5807, _defs$2);
                switch (self._) {
                    case 'Maybe.some':
                        var $5809 = self.value;
                        var self = $5809;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $5811 = self.term;
                                var $5812 = Kind$Term$reduce$($5811, _defs$2);
                                var $5810 = $5812;
                                break;
                        };
                        var $5808 = $5810;
                        break;
                    case 'Maybe.none':
                        var $5813 = Kind$Term$ref$($5807);
                        var $5808 = $5813;
                        break;
                };
                var $5806 = $5808;
                break;
            case 'Kind.Term.app':
                var $5814 = self.func;
                var $5815 = self.argm;
                var _func$5 = Kind$Term$reduce$($5814, _defs$2);
                var self = _func$5;
                switch (self._) {
                    case 'Kind.Term.lam':
                        var $5817 = self.body;
                        var $5818 = Kind$Term$reduce$($5817($5815), _defs$2);
                        var $5816 = $5818;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $5819 = _term$1;
                        var $5816 = $5819;
                        break;
                };
                var $5806 = $5816;
                break;
            case 'Kind.Term.let':
                var $5820 = self.expr;
                var $5821 = self.body;
                var $5822 = Kind$Term$reduce$($5821($5820), _defs$2);
                var $5806 = $5822;
                break;
            case 'Kind.Term.ann':
                var $5823 = self.term;
                var $5824 = Kind$Term$reduce$($5823, _defs$2);
                var $5806 = $5824;
                break;
            case 'Kind.Term.nat':
                var $5825 = self.natx;
                var $5826 = Kind$Term$reduce$(Kind$Term$unroll_nat$($5825), _defs$2);
                var $5806 = $5826;
                break;
            case 'Kind.Term.chr':
                var $5827 = self.chrx;
                var $5828 = Kind$Term$reduce$(Kind$Term$unroll_chr$($5827), _defs$2);
                var $5806 = $5828;
                break;
            case 'Kind.Term.str':
                var $5829 = self.strx;
                var $5830 = Kind$Term$reduce$(Kind$Term$unroll_str$($5829), _defs$2);
                var $5806 = $5830;
                break;
            case 'Kind.Term.ori':
                var $5831 = self.expr;
                var $5832 = Kind$Term$reduce$($5831, _defs$2);
                var $5806 = $5832;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.def':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $5833 = _term$1;
                var $5806 = $5833;
                break;
        };
        return $5806;
    };
    const Kind$Term$reduce = x0 => x1 => Kind$Term$reduce$(x0, x1);

    function Kind$Term$cse$(_path$1, _expr$2, _name$3, _with$4, _cses$5, _moti$6) {
        var $5834 = ({
            _: 'Kind.Term.cse',
            'path': _path$1,
            'expr': _expr$2,
            'name': _name$3,
            'with': _with$4,
            'cses': _cses$5,
            'moti': _moti$6
        });
        return $5834;
    };
    const Kind$Term$cse = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Term$cse$(x0, x1, x2, x3, x4, x5);

    function Kind$Parser$open$(_body$1) {
        var $5835 = Kind$Parser$block("open")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5837 = self.err;
                    var _reply$8 = Kind$Parser$text$("open ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5839 = self.err;
                            var self = $5837;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5841 = self.value;
                                    var $5842 = Parser$Reply$error$(Parser$Error$combine$($5841, $5839));
                                    var $5840 = $5842;
                                    break;
                                case 'Maybe.none':
                                    var $5843 = Parser$Reply$error$($5839);
                                    var $5840 = $5843;
                                    break;
                            };
                            var $5838 = $5840;
                            break;
                        case 'Parser.Reply.value':
                            var $5844 = self.pst;
                            var self = $5844;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5846 = self.err;
                                    var $5847 = self.nam;
                                    var $5848 = self.ini;
                                    var $5849 = self.idx;
                                    var $5850 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5837, $5846), $5847, $5848, $5849, $5850);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5852 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5854 = self.err;
                                                    var self = $5852;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5856 = self.value;
                                                            var $5857 = Parser$Reply$error$(Parser$Error$combine$($5856, $5854));
                                                            var $5855 = $5857;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5858 = Parser$Reply$error$($5854);
                                                            var $5855 = $5858;
                                                            break;
                                                    };
                                                    var $5853 = $5855;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5859 = self.pst;
                                                    var $5860 = self.val;
                                                    var self = $5859;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5862 = self.err;
                                                            var $5863 = self.nam;
                                                            var $5864 = self.ini;
                                                            var $5865 = self.idx;
                                                            var $5866 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5852, $5862), $5863, $5864, $5865, $5866);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5868 = self.err;
                                                                    var _reply$36 = Parser$maybe$((_pst$36 => {
                                                                        var self = _pst$36;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5871 = self.err;
                                                                                var _reply$42 = Kind$Parser$text$("as", _pst$36);
                                                                                var self = _reply$42;
                                                                                switch (self._) {
                                                                                    case 'Parser.Reply.error':
                                                                                        var $5873 = self.err;
                                                                                        var self = $5871;
                                                                                        switch (self._) {
                                                                                            case 'Maybe.some':
                                                                                                var $5875 = self.value;
                                                                                                var $5876 = Parser$Reply$error$(Parser$Error$combine$($5875, $5873));
                                                                                                var $5874 = $5876;
                                                                                                break;
                                                                                            case 'Maybe.none':
                                                                                                var $5877 = Parser$Reply$error$($5873);
                                                                                                var $5874 = $5877;
                                                                                                break;
                                                                                        };
                                                                                        var $5872 = $5874;
                                                                                        break;
                                                                                    case 'Parser.Reply.value':
                                                                                        var $5878 = self.pst;
                                                                                        var self = $5878;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $5880 = self.err;
                                                                                                var $5881 = self.nam;
                                                                                                var $5882 = self.ini;
                                                                                                var $5883 = self.idx;
                                                                                                var $5884 = self.str;
                                                                                                var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($5871, $5880), $5881, $5882, $5883, $5884);
                                                                                                var $5885 = Kind$Parser$name1$(_reply$pst$50);
                                                                                                var $5879 = $5885;
                                                                                                break;
                                                                                        };
                                                                                        var $5872 = $5879;
                                                                                        break;
                                                                                };
                                                                                var $5870 = $5872;
                                                                                break;
                                                                        };
                                                                        return $5870;
                                                                    }), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5886 = self.err;
                                                                            var self = $5868;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5888 = self.value;
                                                                                    var $5889 = Parser$Reply$error$(Parser$Error$combine$($5888, $5886));
                                                                                    var $5887 = $5889;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5890 = Parser$Reply$error$($5886);
                                                                                    var $5887 = $5890;
                                                                                    break;
                                                                            };
                                                                            var $5869 = $5887;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5891 = self.pst;
                                                                            var $5892 = self.val;
                                                                            var self = $5891;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5894 = self.err;
                                                                                    var $5895 = self.nam;
                                                                                    var $5896 = self.ini;
                                                                                    var $5897 = self.idx;
                                                                                    var $5898 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5868, $5894), $5895, $5896, $5897, $5898);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5900 = self.err;
                                                                                            var _reply$50 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $5902 = self.err;
                                                                                                    var self = $5900;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $5904 = self.value;
                                                                                                            var $5905 = Parser$Reply$error$(Parser$Error$combine$($5904, $5902));
                                                                                                            var $5903 = $5905;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $5906 = Parser$Reply$error$($5902);
                                                                                                            var $5903 = $5906;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5901 = $5903;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $5907 = self.pst;
                                                                                                    var self = $5907;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $5909 = self.err;
                                                                                                            var $5910 = self.nam;
                                                                                                            var $5911 = self.ini;
                                                                                                            var $5912 = self.idx;
                                                                                                            var $5913 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($5900, $5909), $5910, $5911, $5912, $5913);
                                                                                                            var self = $5892;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $5915 = self.value;
                                                                                                                    var $5916 = $5915;
                                                                                                                    var _name$59 = $5916;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var self = Kind$Term$reduce$($5860, Kind$Map$new);
                                                                                                                    switch (self._) {
                                                                                                                        case 'Kind.Term.var':
                                                                                                                            var $5918 = self.name;
                                                                                                                            var $5919 = $5918;
                                                                                                                            var $5917 = $5919;
                                                                                                                            break;
                                                                                                                        case 'Kind.Term.ref':
                                                                                                                            var $5920 = self.name;
                                                                                                                            var $5921 = $5920;
                                                                                                                            var $5917 = $5921;
                                                                                                                            break;
                                                                                                                        case 'Kind.Term.typ':
                                                                                                                        case 'Kind.Term.all':
                                                                                                                        case 'Kind.Term.lam':
                                                                                                                        case 'Kind.Term.app':
                                                                                                                        case 'Kind.Term.let':
                                                                                                                        case 'Kind.Term.def':
                                                                                                                        case 'Kind.Term.ann':
                                                                                                                        case 'Kind.Term.gol':
                                                                                                                        case 'Kind.Term.hol':
                                                                                                                        case 'Kind.Term.nat':
                                                                                                                        case 'Kind.Term.chr':
                                                                                                                        case 'Kind.Term.str':
                                                                                                                        case 'Kind.Term.num':
                                                                                                                        case 'Kind.Term.cse':
                                                                                                                        case 'Kind.Term.new':
                                                                                                                        case 'Kind.Term.get':
                                                                                                                        case 'Kind.Term.set':
                                                                                                                        case 'Kind.Term.ope':
                                                                                                                        case 'Kind.Term.ori':
                                                                                                                            var $5922 = Kind$Name$read$("self");
                                                                                                                            var $5917 = $5922;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var _name$59 = $5917;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var _wyth$60 = List$nil;
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $5923 = self.err;
                                                                                                                    var _reply$66 = _body$1(Unit$new)(_reply$pst$58);
                                                                                                                    var self = _reply$66;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $5925 = self.err;
                                                                                                                            var self = $5923;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $5927 = self.value;
                                                                                                                                    var $5928 = Parser$Reply$error$(Parser$Error$combine$($5927, $5925));
                                                                                                                                    var $5926 = $5928;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $5929 = Parser$Reply$error$($5925);
                                                                                                                                    var $5926 = $5929;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $5924 = $5926;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $5930 = self.pst;
                                                                                                                            var $5931 = self.val;
                                                                                                                            var self = $5930;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $5933 = self.err;
                                                                                                                                    var $5934 = self.nam;
                                                                                                                                    var $5935 = self.ini;
                                                                                                                                    var $5936 = self.idx;
                                                                                                                                    var $5937 = self.str;
                                                                                                                                    var _reply$pst$74 = Parser$State$new$(Parser$Error$maybe_combine$($5923, $5933), $5934, $5935, $5936, $5937);
                                                                                                                                    var _cses$75 = Kind$Map$set$("_", $5931, Kind$Map$new);
                                                                                                                                    var _moti$76 = Maybe$some$(Kind$Term$hol$(Bits$e));
                                                                                                                                    var $5938 = Parser$Reply$value$(_reply$pst$74, Kind$Term$cse$(Bits$e, $5860, _name$59, _wyth$60, _cses$75, _moti$76));
                                                                                                                                    var $5932 = $5938;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $5924 = $5932;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $5914 = $5924;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $5908 = $5914;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5901 = $5908;
                                                                                                    break;
                                                                                            };
                                                                                            var $5899 = $5901;
                                                                                            break;
                                                                                    };
                                                                                    var $5893 = $5899;
                                                                                    break;
                                                                            };
                                                                            var $5869 = $5893;
                                                                            break;
                                                                    };
                                                                    var $5867 = $5869;
                                                                    break;
                                                            };
                                                            var $5861 = $5867;
                                                            break;
                                                    };
                                                    var $5853 = $5861;
                                                    break;
                                            };
                                            var $5851 = $5853;
                                            break;
                                    };
                                    var $5845 = $5851;
                                    break;
                            };
                            var $5838 = $5845;
                            break;
                    };
                    var $5836 = $5838;
                    break;
            };
            return $5836;
        }));
        return $5835;
    };
    const Kind$Parser$open = x0 => Kind$Parser$open$(x0);

    function Kind$Parser$do$statements$(_monad_name$1) {
        var $5939 = Parser$choice(List$cons$(Kind$Parser$block("do-get")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5941 = self.err;
                    var _reply$8 = Parser$choice$(List$cons$(Kind$Parser$text("var "), List$cons$(Kind$Parser$text("get "), List$nil)), _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5943 = self.err;
                            var self = $5941;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5945 = self.value;
                                    var $5946 = Parser$Reply$error$(Parser$Error$combine$($5945, $5943));
                                    var $5944 = $5946;
                                    break;
                                case 'Maybe.none':
                                    var $5947 = Parser$Reply$error$($5943);
                                    var $5944 = $5947;
                                    break;
                            };
                            var $5942 = $5944;
                            break;
                        case 'Parser.Reply.value':
                            var $5948 = self.pst;
                            var self = $5948;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5950 = self.err;
                                    var $5951 = self.nam;
                                    var $5952 = self.ini;
                                    var $5953 = self.idx;
                                    var $5954 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5941, $5950), $5951, $5952, $5953, $5954);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5956 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5958 = self.err;
                                                    var self = $5956;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5960 = self.value;
                                                            var $5961 = Parser$Reply$error$(Parser$Error$combine$($5960, $5958));
                                                            var $5959 = $5961;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5962 = Parser$Reply$error$($5958);
                                                            var $5959 = $5962;
                                                            break;
                                                    };
                                                    var $5957 = $5959;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5963 = self.pst;
                                                    var $5964 = self.val;
                                                    var self = $5963;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5966 = self.err;
                                                            var $5967 = self.nam;
                                                            var $5968 = self.ini;
                                                            var $5969 = self.idx;
                                                            var $5970 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5956, $5966), $5967, $5968, $5969, $5970);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5972 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5974 = self.err;
                                                                            var self = $5972;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5976 = self.value;
                                                                                    var $5977 = Parser$Reply$error$(Parser$Error$combine$($5976, $5974));
                                                                                    var $5975 = $5977;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5978 = Parser$Reply$error$($5974);
                                                                                    var $5975 = $5978;
                                                                                    break;
                                                                            };
                                                                            var $5973 = $5975;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5979 = self.pst;
                                                                            var self = $5979;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5981 = self.err;
                                                                                    var $5982 = self.nam;
                                                                                    var $5983 = self.ini;
                                                                                    var $5984 = self.idx;
                                                                                    var $5985 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5972, $5981), $5982, $5983, $5984, $5985);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5987 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $5989 = self.err;
                                                                                                    var self = $5987;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $5991 = self.value;
                                                                                                            var $5992 = Parser$Reply$error$(Parser$Error$combine$($5991, $5989));
                                                                                                            var $5990 = $5992;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $5993 = Parser$Reply$error$($5989);
                                                                                                            var $5990 = $5993;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5988 = $5990;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $5994 = self.pst;
                                                                                                    var $5995 = self.val;
                                                                                                    var self = $5994;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $5997 = self.err;
                                                                                                            var $5998 = self.nam;
                                                                                                            var $5999 = self.ini;
                                                                                                            var $6000 = self.idx;
                                                                                                            var $6001 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($5987, $5997), $5998, $5999, $6000, $6001);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $6003 = self.err;
                                                                                                                    var _reply$64 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $6005 = self.err;
                                                                                                                            var self = $6003;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $6007 = self.value;
                                                                                                                                    var $6008 = Parser$Reply$error$(Parser$Error$combine$($6007, $6005));
                                                                                                                                    var $6006 = $6008;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $6009 = Parser$Reply$error$($6005);
                                                                                                                                    var $6006 = $6009;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $6004 = $6006;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $6010 = self.pst;
                                                                                                                            var self = $6010;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $6012 = self.err;
                                                                                                                                    var $6013 = self.nam;
                                                                                                                                    var $6014 = self.ini;
                                                                                                                                    var $6015 = self.idx;
                                                                                                                                    var $6016 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($6003, $6012), $6013, $6014, $6015, $6016);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $6018 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$do$statements$(_monad_name$1)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $6020 = self.err;
                                                                                                                                                    var self = $6018;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $6022 = self.value;
                                                                                                                                                            var $6023 = Parser$Reply$error$(Parser$Error$combine$($6022, $6020));
                                                                                                                                                            var $6021 = $6023;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $6024 = Parser$Reply$error$($6020);
                                                                                                                                                            var $6021 = $6024;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $6019 = $6021;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $6025 = self.pst;
                                                                                                                                                    var $6026 = self.val;
                                                                                                                                                    var self = $6025;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $6028 = self.err;
                                                                                                                                                            var $6029 = self.nam;
                                                                                                                                                            var $6030 = self.ini;
                                                                                                                                                            var $6031 = self.idx;
                                                                                                                                                            var $6032 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($6018, $6028), $6029, $6030, $6031, $6032);
                                                                                                                                                            var _term$87 = Kind$Term$app$(Kind$Term$ref$("Monad.bind"), Kind$Term$ref$(_monad_name$1));
                                                                                                                                                            var _term$88 = Kind$Term$app$(_term$87, Kind$Term$ref$((_monad_name$1 + ".monad")));
                                                                                                                                                            var _term$89 = Kind$Term$app$(_term$88, Kind$Term$hol$(Bits$e));
                                                                                                                                                            var _term$90 = Kind$Term$app$(_term$89, Kind$Term$hol$(Bits$e));
                                                                                                                                                            var _term$91 = Kind$Term$app$(_term$90, $5995);
                                                                                                                                                            var _term$92 = Kind$Term$app$(_term$91, Kind$Term$lam$($5964, (_x$92 => {
                                                                                                                                                                var $6034 = $6026;
                                                                                                                                                                return $6034;
                                                                                                                                                            })));
                                                                                                                                                            var $6033 = Parser$Reply$value$(_reply$pst$86, _term$92);
                                                                                                                                                            var $6027 = $6033;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $6019 = $6027;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $6017 = $6019;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $6011 = $6017;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $6004 = $6011;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $6002 = $6004;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $5996 = $6002;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5988 = $5996;
                                                                                                    break;
                                                                                            };
                                                                                            var $5986 = $5988;
                                                                                            break;
                                                                                    };
                                                                                    var $5980 = $5986;
                                                                                    break;
                                                                            };
                                                                            var $5973 = $5980;
                                                                            break;
                                                                    };
                                                                    var $5971 = $5973;
                                                                    break;
                                                            };
                                                            var $5965 = $5971;
                                                            break;
                                                    };
                                                    var $5957 = $5965;
                                                    break;
                                            };
                                            var $5955 = $5957;
                                            break;
                                    };
                                    var $5949 = $5955;
                                    break;
                            };
                            var $5942 = $5949;
                            break;
                    };
                    var $5940 = $5942;
                    break;
            };
            return $5940;
        })), List$cons$(Kind$Parser$block("do-return")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $6036 = self.err;
                    var _reply$8 = Kind$Parser$text$("return ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $6038 = self.err;
                            var self = $6036;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $6040 = self.value;
                                    var $6041 = Parser$Reply$error$(Parser$Error$combine$($6040, $6038));
                                    var $6039 = $6041;
                                    break;
                                case 'Maybe.none':
                                    var $6042 = Parser$Reply$error$($6038);
                                    var $6039 = $6042;
                                    break;
                            };
                            var $6037 = $6039;
                            break;
                        case 'Parser.Reply.value':
                            var $6043 = self.pst;
                            var self = $6043;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $6045 = self.err;
                                    var $6046 = self.nam;
                                    var $6047 = self.ini;
                                    var $6048 = self.idx;
                                    var $6049 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($6036, $6045), $6046, $6047, $6048, $6049);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $6051 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $6053 = self.err;
                                                    var self = $6051;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $6055 = self.value;
                                                            var $6056 = Parser$Reply$error$(Parser$Error$combine$($6055, $6053));
                                                            var $6054 = $6056;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $6057 = Parser$Reply$error$($6053);
                                                            var $6054 = $6057;
                                                            break;
                                                    };
                                                    var $6052 = $6054;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $6058 = self.pst;
                                                    var $6059 = self.val;
                                                    var self = $6058;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $6061 = self.err;
                                                            var $6062 = self.nam;
                                                            var $6063 = self.ini;
                                                            var $6064 = self.idx;
                                                            var $6065 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6051, $6061), $6062, $6063, $6064, $6065);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $6067 = self.err;
                                                                    var _reply$36 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $6069 = self.err;
                                                                            var self = $6067;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $6071 = self.value;
                                                                                    var $6072 = Parser$Reply$error$(Parser$Error$combine$($6071, $6069));
                                                                                    var $6070 = $6072;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $6073 = Parser$Reply$error$($6069);
                                                                                    var $6070 = $6073;
                                                                                    break;
                                                                            };
                                                                            var $6068 = $6070;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $6074 = self.pst;
                                                                            var self = $6074;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $6076 = self.err;
                                                                                    var $6077 = self.nam;
                                                                                    var $6078 = self.ini;
                                                                                    var $6079 = self.idx;
                                                                                    var $6080 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6067, $6076), $6077, $6078, $6079, $6080);
                                                                                    var _term$45 = Kind$Term$app$(Kind$Term$ref$("Monad.pure"), Kind$Term$ref$(_monad_name$1));
                                                                                    var _term$46 = Kind$Term$app$(_term$45, Kind$Term$ref$((_monad_name$1 + ".monad")));
                                                                                    var _term$47 = Kind$Term$app$(_term$46, Kind$Term$hol$(Bits$e));
                                                                                    var _term$48 = Kind$Term$app$(_term$47, $6059);
                                                                                    var $6081 = Parser$Reply$value$(_reply$pst$44, _term$48);
                                                                                    var $6075 = $6081;
                                                                                    break;
                                                                            };
                                                                            var $6068 = $6075;
                                                                            break;
                                                                    };
                                                                    var $6066 = $6068;
                                                                    break;
                                                            };
                                                            var $6060 = $6066;
                                                            break;
                                                    };
                                                    var $6052 = $6060;
                                                    break;
                                            };
                                            var $6050 = $6052;
                                            break;
                                    };
                                    var $6044 = $6050;
                                    break;
                            };
                            var $6037 = $6044;
                            break;
                    };
                    var $6035 = $6037;
                    break;
            };
            return $6035;
        })), List$cons$(Kind$Parser$block("do-for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $6083 = self.err;
                    var _reply$8 = Kind$Parser$text$("for ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $6085 = self.err;
                            var self = $6083;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $6087 = self.value;
                                    var $6088 = Parser$Reply$error$(Parser$Error$combine$($6087, $6085));
                                    var $6086 = $6088;
                                    break;
                                case 'Maybe.none':
                                    var $6089 = Parser$Reply$error$($6085);
                                    var $6086 = $6089;
                                    break;
                            };
                            var $6084 = $6086;
                            break;
                        case 'Parser.Reply.value':
                            var $6090 = self.pst;
                            var self = $6090;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $6092 = self.err;
                                    var $6093 = self.nam;
                                    var $6094 = self.ini;
                                    var $6095 = self.idx;
                                    var $6096 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($6083, $6092), $6093, $6094, $6095, $6096);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $6098 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $6100 = self.err;
                                                    var self = $6098;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $6102 = self.value;
                                                            var $6103 = Parser$Reply$error$(Parser$Error$combine$($6102, $6100));
                                                            var $6101 = $6103;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $6104 = Parser$Reply$error$($6100);
                                                            var $6101 = $6104;
                                                            break;
                                                    };
                                                    var $6099 = $6101;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $6105 = self.pst;
                                                    var $6106 = self.val;
                                                    var self = $6105;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $6108 = self.err;
                                                            var $6109 = self.nam;
                                                            var $6110 = self.ini;
                                                            var $6111 = self.idx;
                                                            var $6112 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6098, $6108), $6109, $6110, $6111, $6112);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $6114 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("from", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $6116 = self.err;
                                                                            var self = $6114;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $6118 = self.value;
                                                                                    var $6119 = Parser$Reply$error$(Parser$Error$combine$($6118, $6116));
                                                                                    var $6117 = $6119;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $6120 = Parser$Reply$error$($6116);
                                                                                    var $6117 = $6120;
                                                                                    break;
                                                                            };
                                                                            var $6115 = $6117;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $6121 = self.pst;
                                                                            var self = $6121;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $6123 = self.err;
                                                                                    var $6124 = self.nam;
                                                                                    var $6125 = self.ini;
                                                                                    var $6126 = self.idx;
                                                                                    var $6127 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6114, $6123), $6124, $6125, $6126, $6127);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $6129 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $6131 = self.err;
                                                                                                    var self = $6129;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $6133 = self.value;
                                                                                                            var $6134 = Parser$Reply$error$(Parser$Error$combine$($6133, $6131));
                                                                                                            var $6132 = $6134;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $6135 = Parser$Reply$error$($6131);
                                                                                                            var $6132 = $6135;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $6130 = $6132;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $6136 = self.pst;
                                                                                                    var $6137 = self.val;
                                                                                                    var self = $6136;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $6139 = self.err;
                                                                                                            var $6140 = self.nam;
                                                                                                            var $6141 = self.ini;
                                                                                                            var $6142 = self.idx;
                                                                                                            var $6143 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($6129, $6139), $6140, $6141, $6142, $6143);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $6145 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("to", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $6147 = self.err;
                                                                                                                            var self = $6145;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $6149 = self.value;
                                                                                                                                    var $6150 = Parser$Reply$error$(Parser$Error$combine$($6149, $6147));
                                                                                                                                    var $6148 = $6150;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $6151 = Parser$Reply$error$($6147);
                                                                                                                                    var $6148 = $6151;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $6146 = $6148;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $6152 = self.pst;
                                                                                                                            var self = $6152;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $6154 = self.err;
                                                                                                                                    var $6155 = self.nam;
                                                                                                                                    var $6156 = self.ini;
                                                                                                                                    var $6157 = self.idx;
                                                                                                                                    var $6158 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($6145, $6154), $6155, $6156, $6157, $6158);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $6160 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$term(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $6162 = self.err;
                                                                                                                                                    var self = $6160;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $6164 = self.value;
                                                                                                                                                            var $6165 = Parser$Reply$error$(Parser$Error$combine$($6164, $6162));
                                                                                                                                                            var $6163 = $6165;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $6166 = Parser$Reply$error$($6162);
                                                                                                                                                            var $6163 = $6166;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $6161 = $6163;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $6167 = self.pst;
                                                                                                                                                    var $6168 = self.val;
                                                                                                                                                    var self = $6167;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $6170 = self.err;
                                                                                                                                                            var $6171 = self.nam;
                                                                                                                                                            var $6172 = self.ini;
                                                                                                                                                            var $6173 = self.idx;
                                                                                                                                                            var $6174 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($6160, $6170), $6171, $6172, $6173, $6174);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $6176 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$(":", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $6178 = self.err;
                                                                                                                                                                            var self = $6176;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $6180 = self.value;
                                                                                                                                                                                    var $6181 = Parser$Reply$error$(Parser$Error$combine$($6180, $6178));
                                                                                                                                                                                    var $6179 = $6181;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $6182 = Parser$Reply$error$($6178);
                                                                                                                                                                                    var $6179 = $6182;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $6177 = $6179;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $6183 = self.pst;
                                                                                                                                                                            var self = $6183;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $6185 = self.err;
                                                                                                                                                                                    var $6186 = self.nam;
                                                                                                                                                                                    var $6187 = self.ini;
                                                                                                                                                                                    var $6188 = self.idx;
                                                                                                                                                                                    var $6189 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($6176, $6185), $6186, $6187, $6188, $6189);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $6191 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$term(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $6193 = self.err;
                                                                                                                                                                                                    var self = $6191;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $6195 = self.value;
                                                                                                                                                                                                            var $6196 = Parser$Reply$error$(Parser$Error$combine$($6195, $6193));
                                                                                                                                                                                                            var $6194 = $6196;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $6197 = Parser$Reply$error$($6193);
                                                                                                                                                                                                            var $6194 = $6197;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $6192 = $6194;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $6198 = self.pst;
                                                                                                                                                                                                    var $6199 = self.val;
                                                                                                                                                                                                    var self = $6198;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $6201 = self.err;
                                                                                                                                                                                                            var $6202 = self.nam;
                                                                                                                                                                                                            var $6203 = self.ini;
                                                                                                                                                                                                            var $6204 = self.idx;
                                                                                                                                                                                                            var $6205 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($6191, $6201), $6202, $6203, $6204, $6205);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $6207 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Parser$maybe$(Kind$Parser$do$statements$(_monad_name$1), _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $6209 = self.err;
                                                                                                                                                                                                                            var self = $6207;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $6211 = self.value;
                                                                                                                                                                                                                                    var $6212 = Parser$Reply$error$(Parser$Error$combine$($6211, $6209));
                                                                                                                                                                                                                                    var $6210 = $6212;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $6213 = Parser$Reply$error$($6209);
                                                                                                                                                                                                                                    var $6210 = $6213;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $6208 = $6210;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $6214 = self.pst;
                                                                                                                                                                                                                            var $6215 = self.val;
                                                                                                                                                                                                                            var self = $6214;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $6217 = self.err;
                                                                                                                                                                                                                                    var $6218 = self.nam;
                                                                                                                                                                                                                                    var $6219 = self.ini;
                                                                                                                                                                                                                                    var $6220 = self.idx;
                                                                                                                                                                                                                                    var $6221 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($6207, $6217), $6218, $6219, $6220, $6221);
                                                                                                                                                                                                                                    var _expr$129 = Kind$Term$ref$("Nat.for.io");
                                                                                                                                                                                                                                    var _expr$130 = Kind$Term$app$(_expr$129, $6137);
                                                                                                                                                                                                                                    var _expr$131 = Kind$Term$app$(_expr$130, $6168);
                                                                                                                                                                                                                                    var _expr$132 = Kind$Term$app$(_expr$131, Kind$Term$lam$($6106, (_x$132 => {
                                                                                                                                                                                                                                        var $6223 = $6199;
                                                                                                                                                                                                                                        return $6223;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var self = $6215;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                            var $6224 = self.value;
                                                                                                                                                                                                                                            var _term$134 = Kind$Term$app$(Kind$Term$ref$("Monad.bind"), Kind$Term$ref$(_monad_name$1));
                                                                                                                                                                                                                                            var _term$135 = Kind$Term$app$(_term$134, Kind$Term$ref$((_monad_name$1 + ".monad")));
                                                                                                                                                                                                                                            var _term$136 = Kind$Term$app$(_term$135, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                            var _term$137 = Kind$Term$app$(_term$136, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                            var _term$138 = Kind$Term$app$(_term$137, _expr$132);
                                                                                                                                                                                                                                            var _term$139 = Kind$Term$app$(_term$138, Kind$Term$lam$("", (_x$139 => {
                                                                                                                                                                                                                                                var $6226 = $6224;
                                                                                                                                                                                                                                                return $6226;
                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                            var $6225 = (_pst$140 => {
                                                                                                                                                                                                                                                var $6227 = Parser$Reply$value$(_pst$140, _term$139);
                                                                                                                                                                                                                                                return $6227;
                                                                                                                                                                                                                                            });
                                                                                                                                                                                                                                            var $6222 = $6225;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                            var $6228 = (_pst$133 => {
                                                                                                                                                                                                                                                var $6229 = Parser$Reply$value$(_pst$133, _expr$132);
                                                                                                                                                                                                                                                return $6229;
                                                                                                                                                                                                                                            });
                                                                                                                                                                                                                                            var $6222 = $6228;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $6222 = $6222(_reply$pst$128);
                                                                                                                                                                                                                                    var $6216 = $6222;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $6208 = $6216;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $6206 = $6208;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $6200 = $6206;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $6192 = $6200;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $6190 = $6192;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6184 = $6190;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $6177 = $6184;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $6175 = $6177;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $6169 = $6175;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $6161 = $6169;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $6159 = $6161;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $6153 = $6159;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $6146 = $6153;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $6144 = $6146;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $6138 = $6144;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $6130 = $6138;
                                                                                                    break;
                                                                                            };
                                                                                            var $6128 = $6130;
                                                                                            break;
                                                                                    };
                                                                                    var $6122 = $6128;
                                                                                    break;
                                                                            };
                                                                            var $6115 = $6122;
                                                                            break;
                                                                    };
                                                                    var $6113 = $6115;
                                                                    break;
                                                            };
                                                            var $6107 = $6113;
                                                            break;
                                                    };
                                                    var $6099 = $6107;
                                                    break;
                                            };
                                            var $6097 = $6099;
                                            break;
                                    };
                                    var $6091 = $6097;
                                    break;
                            };
                            var $6084 = $6091;
                            break;
                    };
                    var $6082 = $6084;
                    break;
            };
            return $6082;
        })), List$cons$(Kind$Parser$letforrange$u32$((_x$2 => {
            var $6230 = Kind$Parser$do$statements$(_monad_name$1);
            return $6230;
        })), List$cons$(Kind$Parser$letforrange$u32$with$((_x$2 => {
            var $6231 = Kind$Parser$do$statements$(_monad_name$1);
            return $6231;
        })), List$cons$(Kind$Parser$letforrange$nat$((_x$2 => {
            var $6232 = Kind$Parser$do$statements$(_monad_name$1);
            return $6232;
        })), List$cons$(Kind$Parser$letforrange$nat$with$((_x$2 => {
            var $6233 = Kind$Parser$do$statements$(_monad_name$1);
            return $6233;
        })), List$cons$(Kind$Parser$letforin$((_x$2 => {
            var $6234 = Kind$Parser$do$statements$(_monad_name$1);
            return $6234;
        })), List$cons$(Kind$Parser$letforin$with$((_x$2 => {
            var $6235 = Kind$Parser$do$statements$(_monad_name$1);
            return $6235;
        })), List$cons$(Kind$Parser$letwhile$((_x$2 => {
            var $6236 = Kind$Parser$do$statements$(_monad_name$1);
            return $6236;
        })), List$cons$(Kind$Parser$letwhile$with$((_x$2 => {
            var $6237 = Kind$Parser$do$statements$(_monad_name$1);
            return $6237;
        })), List$cons$(Kind$Parser$let$((_x$2 => {
            var $6238 = Kind$Parser$do$statements$(_monad_name$1);
            return $6238;
        })), List$cons$(Kind$Parser$getwhile$((_x$2 => {
            var $6239 = Kind$Parser$do$statements$(_monad_name$1);
            return $6239;
        })), List$cons$(Kind$Parser$getwhile$with((_x$2 => {
            var $6240 = Kind$Parser$do$statements$(_monad_name$1);
            return $6240;
        })), List$cons$(Kind$Parser$get$((_x$2 => {
            var $6241 = Kind$Parser$do$statements$(_monad_name$1);
            return $6241;
        })), List$cons$(Kind$Parser$def$((_x$2 => {
            var $6242 = Kind$Parser$do$statements$(_monad_name$1);
            return $6242;
        })), List$cons$(Kind$Parser$log$((_x$2 => {
            var $6243 = Kind$Parser$do$statements$(_monad_name$1);
            return $6243;
        })), List$cons$(Kind$Parser$open$((_x$2 => {
            var $6244 = Kind$Parser$do$statements$(_monad_name$1);
            return $6244;
        })), List$cons$(Kind$Parser$block("do-statement")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $6246 = self.err;
                    var _reply$8 = Kind$Parser$term(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $6248 = self.err;
                            var self = $6246;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $6250 = self.value;
                                    var $6251 = Parser$Reply$error$(Parser$Error$combine$($6250, $6248));
                                    var $6249 = $6251;
                                    break;
                                case 'Maybe.none':
                                    var $6252 = Parser$Reply$error$($6248);
                                    var $6249 = $6252;
                                    break;
                            };
                            var $6247 = $6249;
                            break;
                        case 'Parser.Reply.value':
                            var $6253 = self.pst;
                            var $6254 = self.val;
                            var self = $6253;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $6256 = self.err;
                                    var $6257 = self.nam;
                                    var $6258 = self.ini;
                                    var $6259 = self.idx;
                                    var $6260 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($6246, $6256), $6257, $6258, $6259, $6260);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $6262 = self.err;
                                            var _reply$22 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $6264 = self.err;
                                                    var self = $6262;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $6266 = self.value;
                                                            var $6267 = Parser$Reply$error$(Parser$Error$combine$($6266, $6264));
                                                            var $6265 = $6267;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $6268 = Parser$Reply$error$($6264);
                                                            var $6265 = $6268;
                                                            break;
                                                    };
                                                    var $6263 = $6265;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $6269 = self.pst;
                                                    var self = $6269;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $6271 = self.err;
                                                            var $6272 = self.nam;
                                                            var $6273 = self.ini;
                                                            var $6274 = self.idx;
                                                            var $6275 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6262, $6271), $6272, $6273, $6274, $6275);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $6277 = self.err;
                                                                    var _reply$36 = Kind$Parser$do$statements$(_monad_name$1)(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $6279 = self.err;
                                                                            var self = $6277;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $6281 = self.value;
                                                                                    var $6282 = Parser$Reply$error$(Parser$Error$combine$($6281, $6279));
                                                                                    var $6280 = $6282;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $6283 = Parser$Reply$error$($6279);
                                                                                    var $6280 = $6283;
                                                                                    break;
                                                                            };
                                                                            var $6278 = $6280;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $6284 = self.pst;
                                                                            var $6285 = self.val;
                                                                            var self = $6284;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $6287 = self.err;
                                                                                    var $6288 = self.nam;
                                                                                    var $6289 = self.ini;
                                                                                    var $6290 = self.idx;
                                                                                    var $6291 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6277, $6287), $6288, $6289, $6290, $6291);
                                                                                    var _term$45 = Kind$Term$app$(Kind$Term$ref$("Monad.bind"), Kind$Term$ref$(_monad_name$1));
                                                                                    var _term$46 = Kind$Term$app$(_term$45, Kind$Term$ref$((_monad_name$1 + ".monad")));
                                                                                    var _term$47 = Kind$Term$app$(_term$46, Kind$Term$hol$(Bits$e));
                                                                                    var _term$48 = Kind$Term$app$(_term$47, Kind$Term$hol$(Bits$e));
                                                                                    var _term$49 = Kind$Term$app$(_term$48, $6254);
                                                                                    var _term$50 = Kind$Term$app$(_term$49, Kind$Term$lam$("", (_x$50 => {
                                                                                        var $6293 = $6285;
                                                                                        return $6293;
                                                                                    })));
                                                                                    var $6292 = Parser$Reply$value$(_reply$pst$44, _term$50);
                                                                                    var $6286 = $6292;
                                                                                    break;
                                                                            };
                                                                            var $6278 = $6286;
                                                                            break;
                                                                    };
                                                                    var $6276 = $6278;
                                                                    break;
                                                            };
                                                            var $6270 = $6276;
                                                            break;
                                                    };
                                                    var $6263 = $6270;
                                                    break;
                                            };
                                            var $6261 = $6263;
                                            break;
                                    };
                                    var $6255 = $6261;
                                    break;
                            };
                            var $6247 = $6255;
                            break;
                    };
                    var $6245 = $6247;
                    break;
            };
            return $6245;
        })), List$cons$(Kind$Parser$block("do-end")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $6295 = self.err;
                    var _reply$8 = Kind$Parser$term(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $6297 = self.err;
                            var self = $6295;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $6299 = self.value;
                                    var $6300 = Parser$Reply$error$(Parser$Error$combine$($6299, $6297));
                                    var $6298 = $6300;
                                    break;
                                case 'Maybe.none':
                                    var $6301 = Parser$Reply$error$($6297);
                                    var $6298 = $6301;
                                    break;
                            };
                            var $6296 = $6298;
                            break;
                        case 'Parser.Reply.value':
                            var $6302 = self.pst;
                            var $6303 = self.val;
                            var self = $6302;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $6305 = self.err;
                                    var $6306 = self.nam;
                                    var $6307 = self.ini;
                                    var $6308 = self.idx;
                                    var $6309 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($6295, $6305), $6306, $6307, $6308, $6309);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $6311 = self.err;
                                            var _reply$22 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $6313 = self.err;
                                                    var self = $6311;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $6315 = self.value;
                                                            var $6316 = Parser$Reply$error$(Parser$Error$combine$($6315, $6313));
                                                            var $6314 = $6316;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $6317 = Parser$Reply$error$($6313);
                                                            var $6314 = $6317;
                                                            break;
                                                    };
                                                    var $6312 = $6314;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $6318 = self.pst;
                                                    var self = $6318;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $6320 = self.err;
                                                            var $6321 = self.nam;
                                                            var $6322 = self.ini;
                                                            var $6323 = self.idx;
                                                            var $6324 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6311, $6320), $6321, $6322, $6323, $6324);
                                                            var $6325 = Parser$Reply$value$(_reply$pst$30, $6303);
                                                            var $6319 = $6325;
                                                            break;
                                                    };
                                                    var $6312 = $6319;
                                                    break;
                                            };
                                            var $6310 = $6312;
                                            break;
                                    };
                                    var $6304 = $6310;
                                    break;
                            };
                            var $6296 = $6304;
                            break;
                    };
                    var $6294 = $6296;
                    break;
            };
            return $6294;
        })), List$nil)))))))))))))))))))));
        return $5939;
    };
    const Kind$Parser$do$statements = x0 => Kind$Parser$do$statements$(x0);
    const Kind$Parser$do = Kind$Parser$block("do")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6327 = self.err;
                var _reply$7 = Parser$maybe$(Kind$Parser$text("do "), _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6329 = self.err;
                        var self = $6327;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6331 = self.value;
                                var $6332 = Parser$Reply$error$(Parser$Error$combine$($6331, $6329));
                                var $6330 = $6332;
                                break;
                            case 'Maybe.none':
                                var $6333 = Parser$Reply$error$($6329);
                                var $6330 = $6333;
                                break;
                        };
                        var $6328 = $6330;
                        break;
                    case 'Parser.Reply.value':
                        var $6334 = self.pst;
                        var self = $6334;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6336 = self.err;
                                var $6337 = self.nam;
                                var $6338 = self.ini;
                                var $6339 = self.idx;
                                var $6340 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6327, $6336), $6337, $6338, $6339, $6340);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6342 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6344 = self.err;
                                                var self = $6342;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6346 = self.value;
                                                        var $6347 = Parser$Reply$error$(Parser$Error$combine$($6346, $6344));
                                                        var $6345 = $6347;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6348 = Parser$Reply$error$($6344);
                                                        var $6345 = $6348;
                                                        break;
                                                };
                                                var $6343 = $6345;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6349 = self.pst;
                                                var $6350 = self.val;
                                                var self = $6349;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6352 = self.err;
                                                        var $6353 = self.nam;
                                                        var $6354 = self.ini;
                                                        var $6355 = self.idx;
                                                        var $6356 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6342, $6352), $6353, $6354, $6355, $6356);
                                                        var self = String$is_upper$(String$slice$(0n, 1n, $6350));
                                                        if (self) {
                                                            var $6358 = (_pst$30 => {
                                                                var self = _pst$30;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $6360 = self.err;
                                                                        var _reply$36 = Parser$text$(" {", _pst$30);
                                                                        var self = _reply$36;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $6362 = self.err;
                                                                                var self = $6360;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $6364 = self.value;
                                                                                        var $6365 = Parser$Reply$error$(Parser$Error$combine$($6364, $6362));
                                                                                        var $6363 = $6365;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $6366 = Parser$Reply$error$($6362);
                                                                                        var $6363 = $6366;
                                                                                        break;
                                                                                };
                                                                                var $6361 = $6363;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $6367 = self.pst;
                                                                                var self = $6367;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6369 = self.err;
                                                                                        var $6370 = self.nam;
                                                                                        var $6371 = self.ini;
                                                                                        var $6372 = self.idx;
                                                                                        var $6373 = self.str;
                                                                                        var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6360, $6369), $6370, $6371, $6372, $6373);
                                                                                        var self = _reply$pst$44;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $6375 = self.err;
                                                                                                var _reply$50 = Kind$Parser$do$statements$($6350)(_reply$pst$44);
                                                                                                var self = _reply$50;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.Reply.error':
                                                                                                        var $6377 = self.err;
                                                                                                        var self = $6375;
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $6379 = self.value;
                                                                                                                var $6380 = Parser$Reply$error$(Parser$Error$combine$($6379, $6377));
                                                                                                                var $6378 = $6380;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $6381 = Parser$Reply$error$($6377);
                                                                                                                var $6378 = $6381;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6376 = $6378;
                                                                                                        break;
                                                                                                    case 'Parser.Reply.value':
                                                                                                        var $6382 = self.pst;
                                                                                                        var $6383 = self.val;
                                                                                                        var self = $6382;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6385 = self.err;
                                                                                                                var $6386 = self.nam;
                                                                                                                var $6387 = self.ini;
                                                                                                                var $6388 = self.idx;
                                                                                                                var $6389 = self.str;
                                                                                                                var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($6375, $6385), $6386, $6387, $6388, $6389);
                                                                                                                var self = _reply$pst$58;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.State.new':
                                                                                                                        var $6391 = self.err;
                                                                                                                        var _reply$64 = Kind$Parser$text$("}", _reply$pst$58);
                                                                                                                        var self = _reply$64;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                var $6393 = self.err;
                                                                                                                                var self = $6391;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Maybe.some':
                                                                                                                                        var $6395 = self.value;
                                                                                                                                        var $6396 = Parser$Reply$error$(Parser$Error$combine$($6395, $6393));
                                                                                                                                        var $6394 = $6396;
                                                                                                                                        break;
                                                                                                                                    case 'Maybe.none':
                                                                                                                                        var $6397 = Parser$Reply$error$($6393);
                                                                                                                                        var $6394 = $6397;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6392 = $6394;
                                                                                                                                break;
                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                var $6398 = self.pst;
                                                                                                                                var self = $6398;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $6400 = self.err;
                                                                                                                                        var $6401 = self.nam;
                                                                                                                                        var $6402 = self.ini;
                                                                                                                                        var $6403 = self.idx;
                                                                                                                                        var $6404 = self.str;
                                                                                                                                        var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($6391, $6400), $6401, $6402, $6403, $6404);
                                                                                                                                        var $6405 = Parser$Reply$value$(_reply$pst$72, $6383);
                                                                                                                                        var $6399 = $6405;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6392 = $6399;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6390 = $6392;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6384 = $6390;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6376 = $6384;
                                                                                                        break;
                                                                                                };
                                                                                                var $6374 = $6376;
                                                                                                break;
                                                                                        };
                                                                                        var $6368 = $6374;
                                                                                        break;
                                                                                };
                                                                                var $6361 = $6368;
                                                                                break;
                                                                        };
                                                                        var $6359 = $6361;
                                                                        break;
                                                                };
                                                                return $6359;
                                                            });
                                                            var $6357 = $6358;
                                                        } else {
                                                            var $6406 = Parser$fail("Not a do-block.");
                                                            var $6357 = $6406;
                                                        };
                                                        var $6357 = $6357(_reply$pst$29);
                                                        var $6351 = $6357;
                                                        break;
                                                };
                                                var $6343 = $6351;
                                                break;
                                        };
                                        var $6341 = $6343;
                                        break;
                                };
                                var $6335 = $6341;
                                break;
                        };
                        var $6328 = $6335;
                        break;
                };
                var $6326 = $6328;
                break;
        };
        return $6326;
    }));

    function Parser$try$(_parse$2, _pst$3) {
        var self = _parse$2(_pst$3);
        switch (self._) {
            case 'Parser.Reply.error':
                var $6408 = Parser$Reply$value$(_pst$3, Bool$false);
                var $6407 = $6408;
                break;
            case 'Parser.Reply.value':
                var $6409 = Parser$Reply$value$(_pst$3, Bool$true);
                var $6407 = $6409;
                break;
        };
        return $6407;
    };
    const Parser$try = x0 => x1 => Parser$try$(x0, x1);

    function Parser$avoiding$(_test$2, _parse$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $6411 = self.err;
                var _reply$10 = Parser$try$(_test$2, _pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6413 = self.err;
                        var self = $6411;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6415 = self.value;
                                var $6416 = Parser$Reply$error$(Parser$Error$combine$($6415, $6413));
                                var $6414 = $6416;
                                break;
                            case 'Maybe.none':
                                var $6417 = Parser$Reply$error$($6413);
                                var $6414 = $6417;
                                break;
                        };
                        var $6412 = $6414;
                        break;
                    case 'Parser.Reply.value':
                        var $6418 = self.pst;
                        var $6419 = self.val;
                        var self = $6418;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6421 = self.err;
                                var $6422 = self.nam;
                                var $6423 = self.ini;
                                var $6424 = self.idx;
                                var $6425 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($6411, $6421), $6422, $6423, $6424, $6425);
                                var self = $6419;
                                if (self) {
                                    var $6427 = Parser$fail("Avoided.");
                                    var $6426 = $6427;
                                } else {
                                    var $6428 = _parse$3;
                                    var $6426 = $6428;
                                };
                                var $6426 = $6426(_reply$pst$18);
                                var $6420 = $6426;
                                break;
                        };
                        var $6412 = $6420;
                        break;
                };
                var $6410 = $6412;
                break;
        };
        return $6410;
    };
    const Parser$avoiding = x0 => x1 => x2 => Parser$avoiding$(x0, x1, x2);

    function Kind$Term$extract_name$(_term$1) {
        var _term$2 = Kind$Term$reduce$(_term$1, Kind$Map$new);
        var self = _term$2;
        switch (self._) {
            case 'Kind.Term.var':
                var $6430 = self.name;
                var $6431 = $6430;
                var $6429 = $6431;
                break;
            case 'Kind.Term.ref':
                var $6432 = self.name;
                var $6433 = $6432;
                var $6429 = $6433;
                break;
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $6434 = "self";
                var $6429 = $6434;
                break;
        };
        return $6429;
    };
    const Kind$Term$extract_name = x0 => Kind$Term$extract_name$(x0);

    function Kind$Ann$new$(_name$1, _term$2, _type$3) {
        var $6435 = ({
            _: 'Kind.Ann.new',
            'name': _name$1,
            'term': _term$2,
            'type': _type$3
        });
        return $6435;
    };
    const Kind$Ann$new = x0 => x1 => x2 => Kind$Ann$new$(x0, x1, x2);
    const Kind$Parser$case$with = Parser$choice(List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6437 = self.err;
                var _reply$7 = Kind$Parser$text$("with ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6439 = self.err;
                        var self = $6437;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6441 = self.value;
                                var $6442 = Parser$Reply$error$(Parser$Error$combine$($6441, $6439));
                                var $6440 = $6442;
                                break;
                            case 'Maybe.none':
                                var $6443 = Parser$Reply$error$($6439);
                                var $6440 = $6443;
                                break;
                        };
                        var $6438 = $6440;
                        break;
                    case 'Parser.Reply.value':
                        var $6444 = self.pst;
                        var self = $6444;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6446 = self.err;
                                var $6447 = self.nam;
                                var $6448 = self.ini;
                                var $6449 = self.idx;
                                var $6450 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6437, $6446), $6447, $6448, $6449, $6450);
                                var $6451 = Parser$many$((_pst$16 => {
                                    var self = _pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $6453 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $6455 = self.err;
                                                    var self = $6453;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $6457 = self.value;
                                                            var $6458 = Parser$Reply$error$(Parser$Error$combine$($6457, $6455));
                                                            var $6456 = $6458;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $6459 = Parser$Reply$error$($6455);
                                                            var $6456 = $6459;
                                                            break;
                                                    };
                                                    var $6454 = $6456;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $6460 = self.pst;
                                                    var $6461 = self.val;
                                                    var self = $6460;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $6463 = self.err;
                                                            var $6464 = self.nam;
                                                            var $6465 = self.ini;
                                                            var $6466 = self.idx;
                                                            var $6467 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6453, $6463), $6464, $6465, $6466, $6467);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $6469 = self.err;
                                                                    var _reply$36 = Parser$maybe$((_pst$36 => {
                                                                        var self = _pst$36;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6472 = self.err;
                                                                                var _reply$42 = Kind$Parser$text$(":", _pst$36);
                                                                                var self = _reply$42;
                                                                                switch (self._) {
                                                                                    case 'Parser.Reply.error':
                                                                                        var $6474 = self.err;
                                                                                        var self = $6472;
                                                                                        switch (self._) {
                                                                                            case 'Maybe.some':
                                                                                                var $6476 = self.value;
                                                                                                var $6477 = Parser$Reply$error$(Parser$Error$combine$($6476, $6474));
                                                                                                var $6475 = $6477;
                                                                                                break;
                                                                                            case 'Maybe.none':
                                                                                                var $6478 = Parser$Reply$error$($6474);
                                                                                                var $6475 = $6478;
                                                                                                break;
                                                                                        };
                                                                                        var $6473 = $6475;
                                                                                        break;
                                                                                    case 'Parser.Reply.value':
                                                                                        var $6479 = self.pst;
                                                                                        var self = $6479;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $6481 = self.err;
                                                                                                var $6482 = self.nam;
                                                                                                var $6483 = self.ini;
                                                                                                var $6484 = self.idx;
                                                                                                var $6485 = self.str;
                                                                                                var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($6472, $6481), $6482, $6483, $6484, $6485);
                                                                                                var self = _reply$pst$50;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6487 = self.err;
                                                                                                        var _reply$56 = Kind$Parser$term(_reply$pst$50);
                                                                                                        var self = _reply$56;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.Reply.error':
                                                                                                                var $6489 = self.err;
                                                                                                                var self = $6487;
                                                                                                                switch (self._) {
                                                                                                                    case 'Maybe.some':
                                                                                                                        var $6491 = self.value;
                                                                                                                        var $6492 = Parser$Reply$error$(Parser$Error$combine$($6491, $6489));
                                                                                                                        var $6490 = $6492;
                                                                                                                        break;
                                                                                                                    case 'Maybe.none':
                                                                                                                        var $6493 = Parser$Reply$error$($6489);
                                                                                                                        var $6490 = $6493;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6488 = $6490;
                                                                                                                break;
                                                                                                            case 'Parser.Reply.value':
                                                                                                                var $6494 = self.pst;
                                                                                                                var $6495 = self.val;
                                                                                                                var self = $6494;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.State.new':
                                                                                                                        var $6497 = self.err;
                                                                                                                        var $6498 = self.nam;
                                                                                                                        var $6499 = self.ini;
                                                                                                                        var $6500 = self.idx;
                                                                                                                        var $6501 = self.str;
                                                                                                                        var _reply$pst$64 = Parser$State$new$(Parser$Error$maybe_combine$($6487, $6497), $6498, $6499, $6500, $6501);
                                                                                                                        var self = _reply$pst$64;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6503 = self.err;
                                                                                                                                var _reply$70 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$64);
                                                                                                                                var self = _reply$70;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                        var $6505 = self.err;
                                                                                                                                        var self = $6503;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Maybe.some':
                                                                                                                                                var $6507 = self.value;
                                                                                                                                                var $6508 = Parser$Reply$error$(Parser$Error$combine$($6507, $6505));
                                                                                                                                                var $6506 = $6508;
                                                                                                                                                break;
                                                                                                                                            case 'Maybe.none':
                                                                                                                                                var $6509 = Parser$Reply$error$($6505);
                                                                                                                                                var $6506 = $6509;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $6504 = $6506;
                                                                                                                                        break;
                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                        var $6510 = self.pst;
                                                                                                                                        var self = $6510;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                var $6512 = self.err;
                                                                                                                                                var $6513 = self.nam;
                                                                                                                                                var $6514 = self.ini;
                                                                                                                                                var $6515 = self.idx;
                                                                                                                                                var $6516 = self.str;
                                                                                                                                                var _reply$pst$78 = Parser$State$new$(Parser$Error$maybe_combine$($6503, $6512), $6513, $6514, $6515, $6516);
                                                                                                                                                var $6517 = Parser$Reply$value$(_reply$pst$78, $6495);
                                                                                                                                                var $6511 = $6517;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $6504 = $6511;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6502 = $6504;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6496 = $6502;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6488 = $6496;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6486 = $6488;
                                                                                                        break;
                                                                                                };
                                                                                                var $6480 = $6486;
                                                                                                break;
                                                                                        };
                                                                                        var $6473 = $6480;
                                                                                        break;
                                                                                };
                                                                                var $6471 = $6473;
                                                                                break;
                                                                        };
                                                                        return $6471;
                                                                    }), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $6518 = self.err;
                                                                            var self = $6469;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $6520 = self.value;
                                                                                    var $6521 = Parser$Reply$error$(Parser$Error$combine$($6520, $6518));
                                                                                    var $6519 = $6521;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $6522 = Parser$Reply$error$($6518);
                                                                                    var $6519 = $6522;
                                                                                    break;
                                                                            };
                                                                            var $6470 = $6519;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $6523 = self.pst;
                                                                            var $6524 = self.val;
                                                                            var self = $6523;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $6526 = self.err;
                                                                                    var $6527 = self.nam;
                                                                                    var $6528 = self.ini;
                                                                                    var $6529 = self.idx;
                                                                                    var $6530 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6469, $6526), $6527, $6528, $6529, $6530);
                                                                                    var $6531 = Parser$Reply$value$(_reply$pst$44, Kind$Ann$new$($6461, Kind$Term$ref$($6461), $6524));
                                                                                    var $6525 = $6531;
                                                                                    break;
                                                                            };
                                                                            var $6470 = $6525;
                                                                            break;
                                                                    };
                                                                    var $6468 = $6470;
                                                                    break;
                                                            };
                                                            var $6462 = $6468;
                                                            break;
                                                    };
                                                    var $6454 = $6462;
                                                    break;
                                            };
                                            var $6452 = $6454;
                                            break;
                                    };
                                    return $6452;
                                }))(_reply$pst$15);
                                var $6445 = $6451;
                                break;
                        };
                        var $6438 = $6445;
                        break;
                };
                var $6436 = $6438;
                break;
        };
        return $6436;
    }), List$cons$((_pst$1 => {
        var $6532 = Parser$Reply$value$(_pst$1, List$nil);
        return $6532;
    }), List$nil)));

    function Kind$Parser$case$case$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6534 = self.err;
                var _reply$7 = Parser$try$(Kind$Parser$text(":"), _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6536 = self.err;
                        var self = $6534;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6538 = self.value;
                                var $6539 = Parser$Reply$error$(Parser$Error$combine$($6538, $6536));
                                var $6537 = $6539;
                                break;
                            case 'Maybe.none':
                                var $6540 = Parser$Reply$error$($6536);
                                var $6537 = $6540;
                                break;
                        };
                        var $6535 = $6537;
                        break;
                    case 'Parser.Reply.value':
                        var $6541 = self.pst;
                        var $6542 = self.val;
                        var self = $6541;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6544 = self.err;
                                var $6545 = self.nam;
                                var $6546 = self.ini;
                                var $6547 = self.idx;
                                var $6548 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6534, $6544), $6545, $6546, $6547, $6548);
                                var self = $6542;
                                if (self) {
                                    var $6550 = (_pst$16 => {
                                        var self = _pst$16;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $6552 = self.err;
                                                var _reply$22 = Kind$Parser$spaces(_pst$16);
                                                var self = _reply$22;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $6554 = self.err;
                                                        var self = $6552;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $6556 = self.value;
                                                                var $6557 = Parser$Reply$error$(Parser$Error$combine$($6556, $6554));
                                                                var $6555 = $6557;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $6558 = Parser$Reply$error$($6554);
                                                                var $6555 = $6558;
                                                                break;
                                                        };
                                                        var $6553 = $6555;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $6559 = self.pst;
                                                        var self = $6559;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6561 = self.err;
                                                                var $6562 = self.nam;
                                                                var $6563 = self.ini;
                                                                var $6564 = self.idx;
                                                                var $6565 = self.str;
                                                                var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6552, $6561), $6562, $6563, $6564, $6565);
                                                                var $6566 = Parser$fail$("Expected constructor names.", _reply$pst$30);
                                                                var $6560 = $6566;
                                                                break;
                                                        };
                                                        var $6553 = $6560;
                                                        break;
                                                };
                                                var $6551 = $6553;
                                                break;
                                        };
                                        return $6551;
                                    });
                                    var $6549 = $6550;
                                } else {
                                    var $6567 = (_pst$16 => {
                                        var self = _pst$16;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $6569 = self.err;
                                                var _reply$22 = Parser$until$(Kind$Parser$text(":"), Kind$Parser$name1)(_pst$16);
                                                var self = _reply$22;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $6571 = self.err;
                                                        var self = $6569;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $6573 = self.value;
                                                                var $6574 = Parser$Reply$error$(Parser$Error$combine$($6573, $6571));
                                                                var $6572 = $6574;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $6575 = Parser$Reply$error$($6571);
                                                                var $6572 = $6575;
                                                                break;
                                                        };
                                                        var $6570 = $6572;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $6576 = self.pst;
                                                        var $6577 = self.val;
                                                        var self = $6576;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6579 = self.err;
                                                                var $6580 = self.nam;
                                                                var $6581 = self.ini;
                                                                var $6582 = self.idx;
                                                                var $6583 = self.str;
                                                                var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6569, $6579), $6580, $6581, $6582, $6583);
                                                                var self = _reply$pst$30;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $6585 = self.err;
                                                                        var _reply$36 = Kind$Parser$term(_reply$pst$30);
                                                                        var self = _reply$36;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $6587 = self.err;
                                                                                var self = $6585;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $6589 = self.value;
                                                                                        var $6590 = Parser$Reply$error$(Parser$Error$combine$($6589, $6587));
                                                                                        var $6588 = $6590;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $6591 = Parser$Reply$error$($6587);
                                                                                        var $6588 = $6591;
                                                                                        break;
                                                                                };
                                                                                var $6586 = $6588;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $6592 = self.pst;
                                                                                var $6593 = self.val;
                                                                                var self = $6592;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6595 = self.err;
                                                                                        var $6596 = self.nam;
                                                                                        var $6597 = self.ini;
                                                                                        var $6598 = self.idx;
                                                                                        var $6599 = self.str;
                                                                                        var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6585, $6595), $6596, $6597, $6598, $6599);
                                                                                        var self = _reply$pst$44;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $6601 = self.err;
                                                                                                var _reply$50 = Parser$maybe$(Kind$Parser$text(","), _reply$pst$44);
                                                                                                var self = _reply$50;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.Reply.error':
                                                                                                        var $6603 = self.err;
                                                                                                        var self = $6601;
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $6605 = self.value;
                                                                                                                var $6606 = Parser$Reply$error$(Parser$Error$combine$($6605, $6603));
                                                                                                                var $6604 = $6606;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $6607 = Parser$Reply$error$($6603);
                                                                                                                var $6604 = $6607;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6602 = $6604;
                                                                                                        break;
                                                                                                    case 'Parser.Reply.value':
                                                                                                        var $6608 = self.pst;
                                                                                                        var self = $6608;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6610 = self.err;
                                                                                                                var $6611 = self.nam;
                                                                                                                var $6612 = self.ini;
                                                                                                                var $6613 = self.idx;
                                                                                                                var $6614 = self.str;
                                                                                                                var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($6601, $6610), $6611, $6612, $6613, $6614);
                                                                                                                var $6615 = Parser$Reply$value$(_reply$pst$58, Pair$new$($6577, $6593));
                                                                                                                var $6609 = $6615;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6602 = $6609;
                                                                                                        break;
                                                                                                };
                                                                                                var $6600 = $6602;
                                                                                                break;
                                                                                        };
                                                                                        var $6594 = $6600;
                                                                                        break;
                                                                                };
                                                                                var $6586 = $6594;
                                                                                break;
                                                                        };
                                                                        var $6584 = $6586;
                                                                        break;
                                                                };
                                                                var $6578 = $6584;
                                                                break;
                                                        };
                                                        var $6570 = $6578;
                                                        break;
                                                };
                                                var $6568 = $6570;
                                                break;
                                        };
                                        return $6568;
                                    });
                                    var $6549 = $6567;
                                };
                                var $6549 = $6549(_reply$pst$15);
                                var $6543 = $6549;
                                break;
                        };
                        var $6535 = $6543;
                        break;
                };
                var $6533 = $6535;
                break;
        };
        return $6533;
    };
    const Kind$Parser$case$case = x0 => Kind$Parser$case$case$(x0);

    function Parser$append_error$(_parse$2, _msg$3, _pst$4) {
        var _reply$5 = _parse$2(_pst$4);
        var self = _reply$5;
        switch (self._) {
            case 'Parser.Reply.error':
                var $6617 = self.err;
                var self = $6617;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $6619 = self.nam;
                        var $6620 = self.ini;
                        var $6621 = self.idx;
                        var $6622 = self.msg;
                        var $6623 = Parser$Reply$fail$($6619, $6620, $6621, ($6622 + _msg$3));
                        var $6618 = $6623;
                        break;
                };
                var $6616 = $6618;
                break;
            case 'Parser.Reply.value':
                var $6624 = _reply$5;
                var $6616 = $6624;
                break;
        };
        return $6616;
    };
    const Parser$append_error = x0 => x1 => x2 => Parser$append_error$(x0, x1, x2);

    function Kind$Parser$case$group$(_dflt$1, _cses$2) {
        var self = _cses$2;
        switch (self._) {
            case 'List.cons':
                var $6626 = self.head;
                var $6627 = self.tail;
                var _map$5 = Kind$Parser$case$group$(_dflt$1, $6627);
                var self = $6626;
                switch (self._) {
                    case 'Pair.new':
                        var $6629 = self.fst;
                        var $6630 = self.snd;
                        var self = $6629;
                        switch (self._) {
                            case 'List.cons':
                                var $6632 = self.head;
                                var $6633 = self.tail;
                                var _rest$10 = Maybe$default$(Kind$Map$get$($6632, _map$5), List$nil);
                                var $6634 = Kind$Map$set$($6632, List$cons$(Pair$new$($6633, $6630), _rest$10), _map$5);
                                var $6631 = $6634;
                                break;
                            case 'List.nil':
                                var $6635 = _map$5;
                                var $6631 = $6635;
                                break;
                        };
                        var $6628 = $6631;
                        break;
                };
                var $6625 = $6628;
                break;
            case 'List.nil':
                var self = _dflt$1;
                switch (self._) {
                    case 'Maybe.some':
                        var $6637 = self.value;
                        var $6638 = Kind$Map$set$("_", List$cons$(Pair$new$(List$nil, $6637), List$nil), Kind$Map$new);
                        var $6636 = $6638;
                        break;
                    case 'Maybe.none':
                        var $6639 = Kind$Map$new;
                        var $6636 = $6639;
                        break;
                };
                var $6625 = $6636;
                break;
        };
        return $6625;
    };
    const Kind$Parser$case$group = x0 => x1 => Kind$Parser$case$group$(x0, x1);

    function BitsMap$map$(_fn$3, _map$4) {
        var self = _map$4;
        switch (self._) {
            case 'BitsMap.tie':
                var $6641 = self.val;
                var $6642 = self.lft;
                var $6643 = self.rgt;
                var self = $6641;
                switch (self._) {
                    case 'Maybe.some':
                        var $6645 = self.value;
                        var $6646 = Maybe$some$(_fn$3($6645));
                        var _val$8 = $6646;
                        break;
                    case 'Maybe.none':
                        var $6647 = Maybe$none;
                        var _val$8 = $6647;
                        break;
                };
                var _lft$9 = BitsMap$map$(_fn$3, $6642);
                var _rgt$10 = BitsMap$map$(_fn$3, $6643);
                var $6644 = BitsMap$tie$(_val$8, _lft$9, _rgt$10);
                var $6640 = $6644;
                break;
            case 'BitsMap.new':
                var $6648 = BitsMap$new;
                var $6640 = $6648;
                break;
        };
        return $6640;
    };
    const BitsMap$map = x0 => x1 => BitsMap$map$(x0, x1);

    function Kind$Map$map$(_fn$3, _map$4) {
        var $6649 = BitsMap$map$(_fn$3, _map$4);
        return $6649;
    };
    const Kind$Map$map = x0 => x1 => Kind$Map$map$(x0, x1);

    function Kind$Parser$case$build$(_vals$1, _wyth$2, _cses$3, _dflt$4, _moti$5) {
        var self = _vals$1;
        switch (self._) {
            case 'List.cons':
                var $6651 = self.head;
                var $6652 = self.tail;
                var _group$8 = Kind$Parser$case$group$(_dflt$4, _cses$3);
                var _name$9 = Pair$fst$($6651);
                var _expr$10 = Pair$snd$($6651);
                var _cses$11 = Kind$Map$map$((_cses$11 => {
                    var $6654 = Kind$Parser$case$build$($6652, _wyth$2, _cses$11, _dflt$4, _moti$5);
                    return $6654;
                }), _group$8);
                var $6653 = Kind$Term$cse$(Bits$e, _expr$10, _name$9, _wyth$2, _cses$11, _moti$5);
                var $6650 = $6653;
                break;
            case 'List.nil':
                var self = _cses$3;
                switch (self._) {
                    case 'List.cons':
                        var $6656 = self.head;
                        var $6657 = Pair$snd$($6656);
                        var $6655 = $6657;
                        break;
                    case 'List.nil':
                        var $6658 = Kind$Term$ref$("missing_case");
                        var $6655 = $6658;
                        break;
                };
                var $6650 = $6655;
                break;
        };
        return $6650;
    };
    const Kind$Parser$case$build = x0 => x1 => x2 => x3 => x4 => Kind$Parser$case$build$(x0, x1, x2, x3, x4);
    const Kind$Parser$case = Kind$Parser$block("case")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6660 = self.err;
                var _reply$7 = Kind$Parser$text$("case ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6662 = self.err;
                        var self = $6660;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6664 = self.value;
                                var $6665 = Parser$Reply$error$(Parser$Error$combine$($6664, $6662));
                                var $6663 = $6665;
                                break;
                            case 'Maybe.none':
                                var $6666 = Parser$Reply$error$($6662);
                                var $6663 = $6666;
                                break;
                        };
                        var $6661 = $6663;
                        break;
                    case 'Parser.Reply.value':
                        var $6667 = self.pst;
                        var self = $6667;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6669 = self.err;
                                var $6670 = self.nam;
                                var $6671 = self.ini;
                                var $6672 = self.idx;
                                var $6673 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6660, $6669), $6670, $6671, $6672, $6673);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6675 = self.err;
                                        var _reply$21 = Parser$many1$((_pst$21 => {
                                            var self = _pst$21;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $6678 = self.err;
                                                    var _reply$27 = Parser$avoiding$(Kind$Parser$text("{"), Kind$Parser$term, _pst$21);
                                                    var self = _reply$27;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $6680 = self.err;
                                                            var self = $6678;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $6682 = self.value;
                                                                    var $6683 = Parser$Reply$error$(Parser$Error$combine$($6682, $6680));
                                                                    var $6681 = $6683;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $6684 = Parser$Reply$error$($6680);
                                                                    var $6681 = $6684;
                                                                    break;
                                                            };
                                                            var $6679 = $6681;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $6685 = self.pst;
                                                            var $6686 = self.val;
                                                            var self = $6685;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $6688 = self.err;
                                                                    var $6689 = self.nam;
                                                                    var $6690 = self.ini;
                                                                    var $6691 = self.idx;
                                                                    var $6692 = self.str;
                                                                    var _reply$pst$35 = Parser$State$new$(Parser$Error$maybe_combine$($6678, $6688), $6689, $6690, $6691, $6692);
                                                                    var self = _reply$pst$35;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $6694 = self.err;
                                                                            var _reply$41 = Parser$maybe$((_pst$41 => {
                                                                                var self = _pst$41;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6697 = self.err;
                                                                                        var _reply$47 = Kind$Parser$text$("as", _pst$41);
                                                                                        var self = _reply$47;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $6699 = self.err;
                                                                                                var self = $6697;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $6701 = self.value;
                                                                                                        var $6702 = Parser$Reply$error$(Parser$Error$combine$($6701, $6699));
                                                                                                        var $6700 = $6702;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $6703 = Parser$Reply$error$($6699);
                                                                                                        var $6700 = $6703;
                                                                                                        break;
                                                                                                };
                                                                                                var $6698 = $6700;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $6704 = self.pst;
                                                                                                var self = $6704;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6706 = self.err;
                                                                                                        var $6707 = self.nam;
                                                                                                        var $6708 = self.ini;
                                                                                                        var $6709 = self.idx;
                                                                                                        var $6710 = self.str;
                                                                                                        var _reply$pst$55 = Parser$State$new$(Parser$Error$maybe_combine$($6697, $6706), $6707, $6708, $6709, $6710);
                                                                                                        var self = _reply$pst$55;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6712 = self.err;
                                                                                                                var _reply$61 = Kind$Parser$name1$(_reply$pst$55);
                                                                                                                var self = _reply$61;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $6714 = self.err;
                                                                                                                        var self = $6712;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $6716 = self.value;
                                                                                                                                var $6717 = Parser$Reply$error$(Parser$Error$combine$($6716, $6714));
                                                                                                                                var $6715 = $6717;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $6718 = Parser$Reply$error$($6714);
                                                                                                                                var $6715 = $6718;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6713 = $6715;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $6719 = self.pst;
                                                                                                                        var $6720 = self.val;
                                                                                                                        var self = $6719;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6722 = self.err;
                                                                                                                                var $6723 = self.nam;
                                                                                                                                var $6724 = self.ini;
                                                                                                                                var $6725 = self.idx;
                                                                                                                                var $6726 = self.str;
                                                                                                                                var _reply$pst$69 = Parser$State$new$(Parser$Error$maybe_combine$($6712, $6722), $6723, $6724, $6725, $6726);
                                                                                                                                var self = _reply$pst$69;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $6728 = self.err;
                                                                                                                                        var _reply$75 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$69);
                                                                                                                                        var self = _reply$75;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $6730 = self.err;
                                                                                                                                                var self = $6728;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $6732 = self.value;
                                                                                                                                                        var $6733 = Parser$Reply$error$(Parser$Error$combine$($6732, $6730));
                                                                                                                                                        var $6731 = $6733;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $6734 = Parser$Reply$error$($6730);
                                                                                                                                                        var $6731 = $6734;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $6729 = $6731;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $6735 = self.pst;
                                                                                                                                                var self = $6735;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $6737 = self.err;
                                                                                                                                                        var $6738 = self.nam;
                                                                                                                                                        var $6739 = self.ini;
                                                                                                                                                        var $6740 = self.idx;
                                                                                                                                                        var $6741 = self.str;
                                                                                                                                                        var _reply$pst$83 = Parser$State$new$(Parser$Error$maybe_combine$($6728, $6737), $6738, $6739, $6740, $6741);
                                                                                                                                                        var $6742 = Parser$Reply$value$(_reply$pst$83, $6720);
                                                                                                                                                        var $6736 = $6742;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $6729 = $6736;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $6727 = $6729;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6721 = $6727;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6713 = $6721;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6711 = $6713;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6705 = $6711;
                                                                                                        break;
                                                                                                };
                                                                                                var $6698 = $6705;
                                                                                                break;
                                                                                        };
                                                                                        var $6696 = $6698;
                                                                                        break;
                                                                                };
                                                                                return $6696;
                                                                            }), _reply$pst$35);
                                                                            var self = _reply$41;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $6743 = self.err;
                                                                                    var self = $6694;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $6745 = self.value;
                                                                                            var $6746 = Parser$Reply$error$(Parser$Error$combine$($6745, $6743));
                                                                                            var $6744 = $6746;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $6747 = Parser$Reply$error$($6743);
                                                                                            var $6744 = $6747;
                                                                                            break;
                                                                                    };
                                                                                    var $6695 = $6744;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $6748 = self.pst;
                                                                                    var $6749 = self.val;
                                                                                    var self = $6748;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $6751 = self.err;
                                                                                            var $6752 = self.nam;
                                                                                            var $6753 = self.ini;
                                                                                            var $6754 = self.idx;
                                                                                            var $6755 = self.str;
                                                                                            var _reply$pst$49 = Parser$State$new$(Parser$Error$maybe_combine$($6694, $6751), $6752, $6753, $6754, $6755);
                                                                                            var _name$50 = Maybe$default$($6749, Kind$Term$extract_name$($6686));
                                                                                            var $6756 = Parser$Reply$value$(_reply$pst$49, Pair$new$(_name$50, $6686));
                                                                                            var $6750 = $6756;
                                                                                            break;
                                                                                    };
                                                                                    var $6695 = $6750;
                                                                                    break;
                                                                            };
                                                                            var $6693 = $6695;
                                                                            break;
                                                                    };
                                                                    var $6687 = $6693;
                                                                    break;
                                                            };
                                                            var $6679 = $6687;
                                                            break;
                                                    };
                                                    var $6677 = $6679;
                                                    break;
                                            };
                                            return $6677;
                                        }), _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6757 = self.err;
                                                var self = $6675;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6759 = self.value;
                                                        var $6760 = Parser$Reply$error$(Parser$Error$combine$($6759, $6757));
                                                        var $6758 = $6760;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6761 = Parser$Reply$error$($6757);
                                                        var $6758 = $6761;
                                                        break;
                                                };
                                                var $6676 = $6758;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6762 = self.pst;
                                                var $6763 = self.val;
                                                var self = $6762;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6765 = self.err;
                                                        var $6766 = self.nam;
                                                        var $6767 = self.ini;
                                                        var $6768 = self.idx;
                                                        var $6769 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6675, $6765), $6766, $6767, $6768, $6769);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6771 = self.err;
                                                                var _reply$35 = Kind$Parser$case$with(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $6773 = self.err;
                                                                        var self = $6771;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $6775 = self.value;
                                                                                var $6776 = Parser$Reply$error$(Parser$Error$combine$($6775, $6773));
                                                                                var $6774 = $6776;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $6777 = Parser$Reply$error$($6773);
                                                                                var $6774 = $6777;
                                                                                break;
                                                                        };
                                                                        var $6772 = $6774;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $6778 = self.pst;
                                                                        var $6779 = self.val;
                                                                        var self = $6778;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6781 = self.err;
                                                                                var $6782 = self.nam;
                                                                                var $6783 = self.ini;
                                                                                var $6784 = self.idx;
                                                                                var $6785 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($6771, $6781), $6782, $6783, $6784, $6785);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6787 = self.err;
                                                                                        var _reply$49 = Kind$Parser$items$("{", Kind$Parser$case$case, "}")(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $6789 = self.err;
                                                                                                var self = $6787;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $6791 = self.value;
                                                                                                        var $6792 = Parser$Reply$error$(Parser$Error$combine$($6791, $6789));
                                                                                                        var $6790 = $6792;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $6793 = Parser$Reply$error$($6789);
                                                                                                        var $6790 = $6793;
                                                                                                        break;
                                                                                                };
                                                                                                var $6788 = $6790;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $6794 = self.pst;
                                                                                                var $6795 = self.val;
                                                                                                var self = $6794;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6797 = self.err;
                                                                                                        var $6798 = self.nam;
                                                                                                        var $6799 = self.ini;
                                                                                                        var $6800 = self.idx;
                                                                                                        var $6801 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($6787, $6797), $6798, $6799, $6800, $6801);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6803 = self.err;
                                                                                                                var _reply$63 = Parser$maybe$(Kind$Parser$text("!"), _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $6805 = self.err;
                                                                                                                        var self = $6803;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $6807 = self.value;
                                                                                                                                var $6808 = Parser$Reply$error$(Parser$Error$combine$($6807, $6805));
                                                                                                                                var $6806 = $6808;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $6809 = Parser$Reply$error$($6805);
                                                                                                                                var $6806 = $6809;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6804 = $6806;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $6810 = self.pst;
                                                                                                                        var $6811 = self.val;
                                                                                                                        var self = $6810;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6813 = self.err;
                                                                                                                                var $6814 = self.nam;
                                                                                                                                var $6815 = self.ini;
                                                                                                                                var $6816 = self.idx;
                                                                                                                                var $6817 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($6803, $6813), $6814, $6815, $6816, $6817);
                                                                                                                                var self = _reply$pst$71;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $6819 = self.err;
                                                                                                                                        var _reply$77 = Parser$maybe$((_pst$77 => {
                                                                                                                                            var self = _pst$77;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $6822 = self.err;
                                                                                                                                                    var _reply$83 = Kind$Parser$text$("default", _pst$77);
                                                                                                                                                    var self = _reply$83;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                            var $6824 = self.err;
                                                                                                                                                            var self = $6822;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                    var $6826 = self.value;
                                                                                                                                                                    var $6827 = Parser$Reply$error$(Parser$Error$combine$($6826, $6824));
                                                                                                                                                                    var $6825 = $6827;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                    var $6828 = Parser$Reply$error$($6824);
                                                                                                                                                                    var $6825 = $6828;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $6823 = $6825;
                                                                                                                                                            break;
                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                            var $6829 = self.pst;
                                                                                                                                                            var self = $6829;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $6831 = self.err;
                                                                                                                                                                    var $6832 = self.nam;
                                                                                                                                                                    var $6833 = self.ini;
                                                                                                                                                                    var $6834 = self.idx;
                                                                                                                                                                    var $6835 = self.str;
                                                                                                                                                                    var _reply$pst$91 = Parser$State$new$(Parser$Error$maybe_combine$($6822, $6831), $6832, $6833, $6834, $6835);
                                                                                                                                                                    var self = _reply$pst$91;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                            var $6837 = self.err;
                                                                                                                                                                            var _reply$97 = Kind$Parser$term(_reply$pst$91);
                                                                                                                                                                            var self = _reply$97;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                    var $6839 = self.err;
                                                                                                                                                                                    var self = $6837;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                            var $6841 = self.value;
                                                                                                                                                                                            var $6842 = Parser$Reply$error$(Parser$Error$combine$($6841, $6839));
                                                                                                                                                                                            var $6840 = $6842;
                                                                                                                                                                                            break;
                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                            var $6843 = Parser$Reply$error$($6839);
                                                                                                                                                                                            var $6840 = $6843;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6838 = $6840;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                    var $6844 = self.pst;
                                                                                                                                                                                    var $6845 = self.val;
                                                                                                                                                                                    var self = $6844;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $6847 = self.err;
                                                                                                                                                                                            var $6848 = self.nam;
                                                                                                                                                                                            var $6849 = self.ini;
                                                                                                                                                                                            var $6850 = self.idx;
                                                                                                                                                                                            var $6851 = self.str;
                                                                                                                                                                                            var _reply$pst$105 = Parser$State$new$(Parser$Error$maybe_combine$($6837, $6847), $6848, $6849, $6850, $6851);
                                                                                                                                                                                            var $6852 = Parser$Reply$value$(_reply$pst$105, $6845);
                                                                                                                                                                                            var $6846 = $6852;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6838 = $6846;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $6836 = $6838;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $6830 = $6836;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $6823 = $6830;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $6821 = $6823;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            return $6821;
                                                                                                                                        }), _reply$pst$71);
                                                                                                                                        var self = _reply$77;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $6853 = self.err;
                                                                                                                                                var self = $6819;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $6855 = self.value;
                                                                                                                                                        var $6856 = Parser$Reply$error$(Parser$Error$combine$($6855, $6853));
                                                                                                                                                        var $6854 = $6856;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $6857 = Parser$Reply$error$($6853);
                                                                                                                                                        var $6854 = $6857;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $6820 = $6854;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $6858 = self.pst;
                                                                                                                                                var $6859 = self.val;
                                                                                                                                                var self = $6858;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $6861 = self.err;
                                                                                                                                                        var $6862 = self.nam;
                                                                                                                                                        var $6863 = self.ini;
                                                                                                                                                        var $6864 = self.idx;
                                                                                                                                                        var $6865 = self.str;
                                                                                                                                                        var _reply$pst$85 = Parser$State$new$(Parser$Error$maybe_combine$($6819, $6861), $6862, $6863, $6864, $6865);
                                                                                                                                                        var self = _reply$pst$85;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $6867 = self.err;
                                                                                                                                                                var _reply$91 = Parser$maybe$((_pst$91 => {
                                                                                                                                                                    var self = _pst$91;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                            var $6870 = self.err;
                                                                                                                                                                            var _reply$97 = Kind$Parser$text$(":", _pst$91);
                                                                                                                                                                            var self = _reply$97;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                    var $6872 = self.err;
                                                                                                                                                                                    var self = $6870;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                            var $6874 = self.value;
                                                                                                                                                                                            var $6875 = Parser$Reply$error$(Parser$Error$combine$($6874, $6872));
                                                                                                                                                                                            var $6873 = $6875;
                                                                                                                                                                                            break;
                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                            var $6876 = Parser$Reply$error$($6872);
                                                                                                                                                                                            var $6873 = $6876;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6871 = $6873;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                    var $6877 = self.pst;
                                                                                                                                                                                    var self = $6877;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $6879 = self.err;
                                                                                                                                                                                            var $6880 = self.nam;
                                                                                                                                                                                            var $6881 = self.ini;
                                                                                                                                                                                            var $6882 = self.idx;
                                                                                                                                                                                            var $6883 = self.str;
                                                                                                                                                                                            var _reply$pst$105 = Parser$State$new$(Parser$Error$maybe_combine$($6870, $6879), $6880, $6881, $6882, $6883);
                                                                                                                                                                                            var $6884 = Parser$append_error$(Kind$Parser$term, "\u{a}Inside motive.", _reply$pst$105);
                                                                                                                                                                                            var $6878 = $6884;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6871 = $6878;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $6869 = $6871;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    return $6869;
                                                                                                                                                                }), _reply$pst$85);
                                                                                                                                                                var self = _reply$91;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $6885 = self.err;
                                                                                                                                                                        var self = $6867;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $6887 = self.value;
                                                                                                                                                                                var $6888 = Parser$Reply$error$(Parser$Error$combine$($6887, $6885));
                                                                                                                                                                                var $6886 = $6888;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $6889 = Parser$Reply$error$($6885);
                                                                                                                                                                                var $6886 = $6889;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $6868 = $6886;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $6890 = self.pst;
                                                                                                                                                                        var $6891 = self.val;
                                                                                                                                                                        var self = $6890;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $6893 = self.err;
                                                                                                                                                                                var $6894 = self.nam;
                                                                                                                                                                                var $6895 = self.ini;
                                                                                                                                                                                var $6896 = self.idx;
                                                                                                                                                                                var $6897 = self.str;
                                                                                                                                                                                var _reply$pst$99 = Parser$State$new$(Parser$Error$maybe_combine$($6867, $6893), $6894, $6895, $6896, $6897);
                                                                                                                                                                                var self = $6891;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                        var $6899 = self.value;
                                                                                                                                                                                        var $6900 = Maybe$some$($6899);
                                                                                                                                                                                        var _moti$100 = $6900;
                                                                                                                                                                                        break;
                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                        var self = $6811;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                var $6902 = Maybe$some$(Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                var $6901 = $6902;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                var $6903 = Maybe$none;
                                                                                                                                                                                                var $6901 = $6903;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var _moti$100 = $6901;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $6898 = Parser$Reply$value$(_reply$pst$99, Kind$Parser$case$build$($6763, $6779, $6795, $6859, _moti$100));
                                                                                                                                                                                var $6892 = $6898;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $6868 = $6892;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $6866 = $6868;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $6860 = $6866;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $6820 = $6860;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $6818 = $6820;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6812 = $6818;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6804 = $6812;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6802 = $6804;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6796 = $6802;
                                                                                                        break;
                                                                                                };
                                                                                                var $6788 = $6796;
                                                                                                break;
                                                                                        };
                                                                                        var $6786 = $6788;
                                                                                        break;
                                                                                };
                                                                                var $6780 = $6786;
                                                                                break;
                                                                        };
                                                                        var $6772 = $6780;
                                                                        break;
                                                                };
                                                                var $6770 = $6772;
                                                                break;
                                                        };
                                                        var $6764 = $6770;
                                                        break;
                                                };
                                                var $6676 = $6764;
                                                break;
                                        };
                                        var $6674 = $6676;
                                        break;
                                };
                                var $6668 = $6674;
                                break;
                        };
                        var $6661 = $6668;
                        break;
                };
                var $6659 = $6661;
                break;
        };
        return $6659;
    }));
    const Kind$Parser$without = Kind$Parser$block("without")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6905 = self.err;
                var _reply$7 = Kind$Parser$text$("without ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6907 = self.err;
                        var self = $6905;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6909 = self.value;
                                var $6910 = Parser$Reply$error$(Parser$Error$combine$($6909, $6907));
                                var $6908 = $6910;
                                break;
                            case 'Maybe.none':
                                var $6911 = Parser$Reply$error$($6907);
                                var $6908 = $6911;
                                break;
                        };
                        var $6906 = $6908;
                        break;
                    case 'Parser.Reply.value':
                        var $6912 = self.pst;
                        var self = $6912;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6914 = self.err;
                                var $6915 = self.nam;
                                var $6916 = self.ini;
                                var $6917 = self.idx;
                                var $6918 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6905, $6914), $6915, $6916, $6917, $6918);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6920 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6922 = self.err;
                                                var self = $6920;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6924 = self.value;
                                                        var $6925 = Parser$Reply$error$(Parser$Error$combine$($6924, $6922));
                                                        var $6923 = $6925;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6926 = Parser$Reply$error$($6922);
                                                        var $6923 = $6926;
                                                        break;
                                                };
                                                var $6921 = $6923;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6927 = self.pst;
                                                var $6928 = self.val;
                                                var self = $6927;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6930 = self.err;
                                                        var $6931 = self.nam;
                                                        var $6932 = self.ini;
                                                        var $6933 = self.idx;
                                                        var $6934 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6920, $6930), $6931, $6932, $6933, $6934);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6936 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(":", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $6938 = self.err;
                                                                        var self = $6936;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $6940 = self.value;
                                                                                var $6941 = Parser$Reply$error$(Parser$Error$combine$($6940, $6938));
                                                                                var $6939 = $6941;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $6942 = Parser$Reply$error$($6938);
                                                                                var $6939 = $6942;
                                                                                break;
                                                                        };
                                                                        var $6937 = $6939;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $6943 = self.pst;
                                                                        var self = $6943;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6945 = self.err;
                                                                                var $6946 = self.nam;
                                                                                var $6947 = self.ini;
                                                                                var $6948 = self.idx;
                                                                                var $6949 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($6936, $6945), $6946, $6947, $6948, $6949);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6951 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $6953 = self.err;
                                                                                                var self = $6951;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $6955 = self.value;
                                                                                                        var $6956 = Parser$Reply$error$(Parser$Error$combine$($6955, $6953));
                                                                                                        var $6954 = $6956;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $6957 = Parser$Reply$error$($6953);
                                                                                                        var $6954 = $6957;
                                                                                                        break;
                                                                                                };
                                                                                                var $6952 = $6954;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $6958 = self.pst;
                                                                                                var $6959 = self.val;
                                                                                                var self = $6958;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6961 = self.err;
                                                                                                        var $6962 = self.nam;
                                                                                                        var $6963 = self.ini;
                                                                                                        var $6964 = self.idx;
                                                                                                        var $6965 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($6951, $6961), $6962, $6963, $6964, $6965);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6967 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$term(_reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $6969 = self.err;
                                                                                                                        var self = $6967;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $6971 = self.value;
                                                                                                                                var $6972 = Parser$Reply$error$(Parser$Error$combine$($6971, $6969));
                                                                                                                                var $6970 = $6972;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $6973 = Parser$Reply$error$($6969);
                                                                                                                                var $6970 = $6973;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6968 = $6970;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $6974 = self.pst;
                                                                                                                        var $6975 = self.val;
                                                                                                                        var self = $6974;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6977 = self.err;
                                                                                                                                var $6978 = self.nam;
                                                                                                                                var $6979 = self.ini;
                                                                                                                                var $6980 = self.idx;
                                                                                                                                var $6981 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($6967, $6977), $6978, $6979, $6980, $6981);
                                                                                                                                var _term$72 = Kind$Term$ref$($6928);
                                                                                                                                var _term$73 = Kind$Term$app$(_term$72, Kind$Term$lam$("", (_x$73 => {
                                                                                                                                    var $6983 = Kind$Term$hol$(Bits$e);
                                                                                                                                    return $6983;
                                                                                                                                })));
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, $6959);
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, Kind$Term$lam$($6928, (_x$75 => {
                                                                                                                                    var $6984 = $6975;
                                                                                                                                    return $6984;
                                                                                                                                })));
                                                                                                                                var $6982 = Parser$Reply$value$(_reply$pst$71, _term$75);
                                                                                                                                var $6976 = $6982;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6968 = $6976;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6966 = $6968;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6960 = $6966;
                                                                                                        break;
                                                                                                };
                                                                                                var $6952 = $6960;
                                                                                                break;
                                                                                        };
                                                                                        var $6950 = $6952;
                                                                                        break;
                                                                                };
                                                                                var $6944 = $6950;
                                                                                break;
                                                                        };
                                                                        var $6937 = $6944;
                                                                        break;
                                                                };
                                                                var $6935 = $6937;
                                                                break;
                                                        };
                                                        var $6929 = $6935;
                                                        break;
                                                };
                                                var $6921 = $6929;
                                                break;
                                        };
                                        var $6919 = $6921;
                                        break;
                                };
                                var $6913 = $6919;
                                break;
                        };
                        var $6906 = $6913;
                        break;
                };
                var $6904 = $6906;
                break;
        };
        return $6904;
    }));

    function Kind$Parser$switch$case$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6986 = self.err;
                var _reply$7 = Kind$Parser$term(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6988 = self.err;
                        var self = $6986;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6990 = self.value;
                                var $6991 = Parser$Reply$error$(Parser$Error$combine$($6990, $6988));
                                var $6989 = $6991;
                                break;
                            case 'Maybe.none':
                                var $6992 = Parser$Reply$error$($6988);
                                var $6989 = $6992;
                                break;
                        };
                        var $6987 = $6989;
                        break;
                    case 'Parser.Reply.value':
                        var $6993 = self.pst;
                        var $6994 = self.val;
                        var self = $6993;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6996 = self.err;
                                var $6997 = self.nam;
                                var $6998 = self.ini;
                                var $6999 = self.idx;
                                var $7000 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6986, $6996), $6997, $6998, $6999, $7000);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7002 = self.err;
                                        var _reply$21 = Kind$Parser$text$(":", _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7004 = self.err;
                                                var self = $7002;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7006 = self.value;
                                                        var $7007 = Parser$Reply$error$(Parser$Error$combine$($7006, $7004));
                                                        var $7005 = $7007;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7008 = Parser$Reply$error$($7004);
                                                        var $7005 = $7008;
                                                        break;
                                                };
                                                var $7003 = $7005;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7009 = self.pst;
                                                var self = $7009;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7011 = self.err;
                                                        var $7012 = self.nam;
                                                        var $7013 = self.ini;
                                                        var $7014 = self.idx;
                                                        var $7015 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7002, $7011), $7012, $7013, $7014, $7015);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7017 = self.err;
                                                                var _reply$35 = Kind$Parser$term(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7019 = self.err;
                                                                        var self = $7017;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7021 = self.value;
                                                                                var $7022 = Parser$Reply$error$(Parser$Error$combine$($7021, $7019));
                                                                                var $7020 = $7022;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7023 = Parser$Reply$error$($7019);
                                                                                var $7020 = $7023;
                                                                                break;
                                                                        };
                                                                        var $7018 = $7020;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7024 = self.pst;
                                                                        var $7025 = self.val;
                                                                        var self = $7024;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7027 = self.err;
                                                                                var $7028 = self.nam;
                                                                                var $7029 = self.ini;
                                                                                var $7030 = self.idx;
                                                                                var $7031 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7017, $7027), $7028, $7029, $7030, $7031);
                                                                                var $7032 = Parser$Reply$value$(_reply$pst$43, Pair$new$($6994, $7025));
                                                                                var $7026 = $7032;
                                                                                break;
                                                                        };
                                                                        var $7018 = $7026;
                                                                        break;
                                                                };
                                                                var $7016 = $7018;
                                                                break;
                                                        };
                                                        var $7010 = $7016;
                                                        break;
                                                };
                                                var $7003 = $7010;
                                                break;
                                        };
                                        var $7001 = $7003;
                                        break;
                                };
                                var $6995 = $7001;
                                break;
                        };
                        var $6987 = $6995;
                        break;
                };
                var $6985 = $6987;
                break;
        };
        return $6985;
    };
    const Kind$Parser$switch$case = x0 => Kind$Parser$switch$case$(x0);
    const Kind$Parser$switch = Kind$Parser$block("switch")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7034 = self.err;
                var _reply$7 = Kind$Parser$text$("switch", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7036 = self.err;
                        var self = $7034;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7038 = self.value;
                                var $7039 = Parser$Reply$error$(Parser$Error$combine$($7038, $7036));
                                var $7037 = $7039;
                                break;
                            case 'Maybe.none':
                                var $7040 = Parser$Reply$error$($7036);
                                var $7037 = $7040;
                                break;
                        };
                        var $7035 = $7037;
                        break;
                    case 'Parser.Reply.value':
                        var $7041 = self.pst;
                        var self = $7041;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7043 = self.err;
                                var $7044 = self.nam;
                                var $7045 = self.ini;
                                var $7046 = self.idx;
                                var $7047 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7034, $7043), $7044, $7045, $7046, $7047);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7049 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7051 = self.err;
                                                var self = $7049;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7053 = self.value;
                                                        var $7054 = Parser$Reply$error$(Parser$Error$combine$($7053, $7051));
                                                        var $7052 = $7054;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7055 = Parser$Reply$error$($7051);
                                                        var $7052 = $7055;
                                                        break;
                                                };
                                                var $7050 = $7052;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7056 = self.pst;
                                                var $7057 = self.val;
                                                var self = $7056;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7059 = self.err;
                                                        var $7060 = self.nam;
                                                        var $7061 = self.ini;
                                                        var $7062 = self.idx;
                                                        var $7063 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7049, $7059), $7060, $7061, $7062, $7063);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7065 = self.err;
                                                                var _reply$35 = Kind$Parser$items$("{", Kind$Parser$switch$case, "}")(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7067 = self.err;
                                                                        var self = $7065;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7069 = self.value;
                                                                                var $7070 = Parser$Reply$error$(Parser$Error$combine$($7069, $7067));
                                                                                var $7068 = $7070;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7071 = Parser$Reply$error$($7067);
                                                                                var $7068 = $7071;
                                                                                break;
                                                                        };
                                                                        var $7066 = $7068;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7072 = self.pst;
                                                                        var $7073 = self.val;
                                                                        var self = $7072;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7075 = self.err;
                                                                                var $7076 = self.nam;
                                                                                var $7077 = self.ini;
                                                                                var $7078 = self.idx;
                                                                                var $7079 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7065, $7075), $7076, $7077, $7078, $7079);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7081 = self.err;
                                                                                        var _reply$49 = Kind$Parser$text$("default", _reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $7083 = self.err;
                                                                                                var self = $7081;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $7085 = self.value;
                                                                                                        var $7086 = Parser$Reply$error$(Parser$Error$combine$($7085, $7083));
                                                                                                        var $7084 = $7086;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $7087 = Parser$Reply$error$($7083);
                                                                                                        var $7084 = $7087;
                                                                                                        break;
                                                                                                };
                                                                                                var $7082 = $7084;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $7088 = self.pst;
                                                                                                var self = $7088;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $7090 = self.err;
                                                                                                        var $7091 = self.nam;
                                                                                                        var $7092 = self.ini;
                                                                                                        var $7093 = self.idx;
                                                                                                        var $7094 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($7081, $7090), $7091, $7092, $7093, $7094);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $7096 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$term(_reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $7098 = self.err;
                                                                                                                        var self = $7096;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $7100 = self.value;
                                                                                                                                var $7101 = Parser$Reply$error$(Parser$Error$combine$($7100, $7098));
                                                                                                                                var $7099 = $7101;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $7102 = Parser$Reply$error$($7098);
                                                                                                                                var $7099 = $7102;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7097 = $7099;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $7103 = self.pst;
                                                                                                                        var $7104 = self.val;
                                                                                                                        var self = $7103;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $7106 = self.err;
                                                                                                                                var $7107 = self.nam;
                                                                                                                                var $7108 = self.ini;
                                                                                                                                var $7109 = self.idx;
                                                                                                                                var $7110 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($7096, $7106), $7107, $7108, $7109, $7110);
                                                                                                                                var _term$72 = List$fold$($7073, $7104, (_cse$72 => _rest$73 => {
                                                                                                                                    var self = _cse$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Pair.new':
                                                                                                                                            var $7113 = self.fst;
                                                                                                                                            var $7114 = self.snd;
                                                                                                                                            var _term$76 = Kind$Term$app$($7057, $7113);
                                                                                                                                            var _term$77 = Kind$Term$app$(_term$76, Kind$Term$lam$("", (_x$77 => {
                                                                                                                                                var $7116 = Kind$Term$hol$(Bits$e);
                                                                                                                                                return $7116;
                                                                                                                                            })));
                                                                                                                                            var _term$78 = Kind$Term$app$(_term$77, $7114);
                                                                                                                                            var _term$79 = Kind$Term$app$(_term$78, _rest$73);
                                                                                                                                            var $7115 = _term$79;
                                                                                                                                            var $7112 = $7115;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    return $7112;
                                                                                                                                }));
                                                                                                                                var $7111 = Parser$Reply$value$(_reply$pst$71, _term$72);
                                                                                                                                var $7105 = $7111;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7097 = $7105;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $7095 = $7097;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7089 = $7095;
                                                                                                        break;
                                                                                                };
                                                                                                var $7082 = $7089;
                                                                                                break;
                                                                                        };
                                                                                        var $7080 = $7082;
                                                                                        break;
                                                                                };
                                                                                var $7074 = $7080;
                                                                                break;
                                                                        };
                                                                        var $7066 = $7074;
                                                                        break;
                                                                };
                                                                var $7064 = $7066;
                                                                break;
                                                        };
                                                        var $7058 = $7064;
                                                        break;
                                                };
                                                var $7050 = $7058;
                                                break;
                                        };
                                        var $7048 = $7050;
                                        break;
                                };
                                var $7042 = $7048;
                                break;
                        };
                        var $7035 = $7042;
                        break;
                };
                var $7033 = $7035;
                break;
        };
        return $7033;
    }));

    function Bits$tail$(_a$1) {
        var self = _a$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $7118 = self.slice(0, -1);
                var $7119 = $7118;
                var $7117 = $7119;
                break;
            case 'i':
                var $7120 = self.slice(0, -1);
                var $7121 = $7120;
                var $7117 = $7121;
                break;
            case 'e':
                var $7122 = Bits$e;
                var $7117 = $7122;
                break;
        };
        return $7117;
    };
    const Bits$tail = x0 => Bits$tail$(x0);

    function Bits$inc$(_a$1) {
        var self = _a$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $7124 = self.slice(0, -1);
                var $7125 = ($7124 + '1');
                var $7123 = $7125;
                break;
            case 'i':
                var $7126 = self.slice(0, -1);
                var $7127 = (Bits$inc$($7126) + '0');
                var $7123 = $7127;
                break;
            case 'e':
                var $7128 = (Bits$e + '1');
                var $7123 = $7128;
                break;
        };
        return $7123;
    };
    const Bits$inc = x0 => Bits$inc$(x0);
    const Nat$to_bits = a0 => (nat_to_bits(a0));

    function Maybe$is_some$(_m$2) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.none':
                var $7130 = Bool$false;
                var $7129 = $7130;
                break;
            case 'Maybe.some':
                var $7131 = Bool$true;
                var $7129 = $7131;
                break;
        };
        return $7129;
    };
    const Maybe$is_some = x0 => Maybe$is_some$(x0);

    function Kind$Term$gol$(_name$1, _dref$2, _verb$3) {
        var $7132 = ({
            _: 'Kind.Term.gol',
            'name': _name$1,
            'dref': _dref$2,
            'verb': _verb$3
        });
        return $7132;
    };
    const Kind$Term$gol = x0 => x1 => x2 => Kind$Term$gol$(x0, x1, x2);
    const Kind$Parser$goal = Kind$Parser$block("goal")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7134 = self.err;
                var _reply$7 = Kind$Parser$text$("?", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7136 = self.err;
                        var self = $7134;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7138 = self.value;
                                var $7139 = Parser$Reply$error$(Parser$Error$combine$($7138, $7136));
                                var $7137 = $7139;
                                break;
                            case 'Maybe.none':
                                var $7140 = Parser$Reply$error$($7136);
                                var $7137 = $7140;
                                break;
                        };
                        var $7135 = $7137;
                        break;
                    case 'Parser.Reply.value':
                        var $7141 = self.pst;
                        var self = $7141;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7143 = self.err;
                                var $7144 = self.nam;
                                var $7145 = self.ini;
                                var $7146 = self.idx;
                                var $7147 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7134, $7143), $7144, $7145, $7146, $7147);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7149 = self.err;
                                        var _reply$21 = Kind$Parser$name$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7151 = self.err;
                                                var self = $7149;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7153 = self.value;
                                                        var $7154 = Parser$Reply$error$(Parser$Error$combine$($7153, $7151));
                                                        var $7152 = $7154;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7155 = Parser$Reply$error$($7151);
                                                        var $7152 = $7155;
                                                        break;
                                                };
                                                var $7150 = $7152;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7156 = self.pst;
                                                var $7157 = self.val;
                                                var self = $7156;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7159 = self.err;
                                                        var $7160 = self.nam;
                                                        var $7161 = self.ini;
                                                        var $7162 = self.idx;
                                                        var $7163 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7149, $7159), $7160, $7161, $7162, $7163);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7165 = self.err;
                                                                var _reply$35 = Parser$many$((_pst$35 => {
                                                                    var self = _pst$35;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $7168 = self.err;
                                                                            var _reply$41 = Kind$Parser$text$("-", _pst$35);
                                                                            var self = _reply$41;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $7170 = self.err;
                                                                                    var self = $7168;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $7172 = self.value;
                                                                                            var $7173 = Parser$Reply$error$(Parser$Error$combine$($7172, $7170));
                                                                                            var $7171 = $7173;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $7174 = Parser$Reply$error$($7170);
                                                                                            var $7171 = $7174;
                                                                                            break;
                                                                                    };
                                                                                    var $7169 = $7171;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $7175 = self.pst;
                                                                                    var self = $7175;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $7177 = self.err;
                                                                                            var $7178 = self.nam;
                                                                                            var $7179 = self.ini;
                                                                                            var $7180 = self.idx;
                                                                                            var $7181 = self.str;
                                                                                            var _reply$pst$49 = Parser$State$new$(Parser$Error$maybe_combine$($7168, $7177), $7178, $7179, $7180, $7181);
                                                                                            var self = _reply$pst$49;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $7183 = self.err;
                                                                                                    var _reply$55 = Parser$nat$(_reply$pst$49);
                                                                                                    var self = _reply$55;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $7185 = self.err;
                                                                                                            var self = $7183;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $7187 = self.value;
                                                                                                                    var $7188 = Parser$Reply$error$(Parser$Error$combine$($7187, $7185));
                                                                                                                    var $7186 = $7188;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $7189 = Parser$Reply$error$($7185);
                                                                                                                    var $7186 = $7189;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $7184 = $7186;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $7190 = self.pst;
                                                                                                            var $7191 = self.val;
                                                                                                            var self = $7190;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $7193 = self.err;
                                                                                                                    var $7194 = self.nam;
                                                                                                                    var $7195 = self.ini;
                                                                                                                    var $7196 = self.idx;
                                                                                                                    var $7197 = self.str;
                                                                                                                    var _reply$pst$63 = Parser$State$new$(Parser$Error$maybe_combine$($7183, $7193), $7194, $7195, $7196, $7197);
                                                                                                                    var _bits$64 = Bits$reverse$(Bits$tail$(Bits$reverse$((nat_to_bits($7191)))));
                                                                                                                    var $7198 = Parser$Reply$value$(_reply$pst$63, _bits$64);
                                                                                                                    var $7192 = $7198;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $7184 = $7192;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $7182 = $7184;
                                                                                                    break;
                                                                                            };
                                                                                            var $7176 = $7182;
                                                                                            break;
                                                                                    };
                                                                                    var $7169 = $7176;
                                                                                    break;
                                                                            };
                                                                            var $7167 = $7169;
                                                                            break;
                                                                    };
                                                                    return $7167;
                                                                }))(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7199 = self.err;
                                                                        var self = $7165;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7201 = self.value;
                                                                                var $7202 = Parser$Reply$error$(Parser$Error$combine$($7201, $7199));
                                                                                var $7200 = $7202;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7203 = Parser$Reply$error$($7199);
                                                                                var $7200 = $7203;
                                                                                break;
                                                                        };
                                                                        var $7166 = $7200;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7204 = self.pst;
                                                                        var $7205 = self.val;
                                                                        var self = $7204;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7207 = self.err;
                                                                                var $7208 = self.nam;
                                                                                var $7209 = self.ini;
                                                                                var $7210 = self.idx;
                                                                                var $7211 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7165, $7207), $7208, $7209, $7210, $7211);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7213 = self.err;
                                                                                        var self = _reply$pst$43;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $7215 = self.err;
                                                                                                var _reply$54 = Parser$maybe$(Parser$text("-"), _reply$pst$43);
                                                                                                var self = _reply$54;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.Reply.error':
                                                                                                        var $7217 = self.err;
                                                                                                        var self = $7215;
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $7219 = self.value;
                                                                                                                var $7220 = Parser$Reply$error$(Parser$Error$combine$($7219, $7217));
                                                                                                                var $7218 = $7220;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $7221 = Parser$Reply$error$($7217);
                                                                                                                var $7218 = $7221;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7216 = $7218;
                                                                                                        break;
                                                                                                    case 'Parser.Reply.value':
                                                                                                        var $7222 = self.pst;
                                                                                                        var $7223 = self.val;
                                                                                                        var self = $7222;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $7225 = self.err;
                                                                                                                var $7226 = self.nam;
                                                                                                                var $7227 = self.ini;
                                                                                                                var $7228 = self.idx;
                                                                                                                var $7229 = self.str;
                                                                                                                var _reply$pst$62 = Parser$State$new$(Parser$Error$maybe_combine$($7215, $7225), $7226, $7227, $7228, $7229);
                                                                                                                var $7230 = Parser$Reply$value$(_reply$pst$62, Maybe$is_some$($7223));
                                                                                                                var $7224 = $7230;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7216 = $7224;
                                                                                                        break;
                                                                                                };
                                                                                                var _reply$49 = $7216;
                                                                                                break;
                                                                                        };
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $7231 = self.err;
                                                                                                var self = $7213;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $7233 = self.value;
                                                                                                        var $7234 = Parser$Reply$error$(Parser$Error$combine$($7233, $7231));
                                                                                                        var $7232 = $7234;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $7235 = Parser$Reply$error$($7231);
                                                                                                        var $7232 = $7235;
                                                                                                        break;
                                                                                                };
                                                                                                var $7214 = $7232;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $7236 = self.pst;
                                                                                                var $7237 = self.val;
                                                                                                var self = $7236;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $7239 = self.err;
                                                                                                        var $7240 = self.nam;
                                                                                                        var $7241 = self.ini;
                                                                                                        var $7242 = self.idx;
                                                                                                        var $7243 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($7213, $7239), $7240, $7241, $7242, $7243);
                                                                                                        var $7244 = Parser$Reply$value$(_reply$pst$57, Kind$Term$gol$($7157, $7205, $7237));
                                                                                                        var $7238 = $7244;
                                                                                                        break;
                                                                                                };
                                                                                                var $7214 = $7238;
                                                                                                break;
                                                                                        };
                                                                                        var $7212 = $7214;
                                                                                        break;
                                                                                };
                                                                                var $7206 = $7212;
                                                                                break;
                                                                        };
                                                                        var $7166 = $7206;
                                                                        break;
                                                                };
                                                                var $7164 = $7166;
                                                                break;
                                                        };
                                                        var $7158 = $7164;
                                                        break;
                                                };
                                                var $7150 = $7158;
                                                break;
                                        };
                                        var $7148 = $7150;
                                        break;
                                };
                                var $7142 = $7148;
                                break;
                        };
                        var $7135 = $7142;
                        break;
                };
                var $7133 = $7135;
                break;
        };
        return $7133;
    }));
    const Kind$Parser$hole = Kind$Parser$block("hole")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7246 = self.err;
                var _reply$7 = Kind$Parser$text$("_", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7248 = self.err;
                        var self = $7246;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7250 = self.value;
                                var $7251 = Parser$Reply$error$(Parser$Error$combine$($7250, $7248));
                                var $7249 = $7251;
                                break;
                            case 'Maybe.none':
                                var $7252 = Parser$Reply$error$($7248);
                                var $7249 = $7252;
                                break;
                        };
                        var $7247 = $7249;
                        break;
                    case 'Parser.Reply.value':
                        var $7253 = self.pst;
                        var self = $7253;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7255 = self.err;
                                var $7256 = self.nam;
                                var $7257 = self.ini;
                                var $7258 = self.idx;
                                var $7259 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7246, $7255), $7256, $7257, $7258, $7259);
                                var $7260 = Parser$Reply$value$(_reply$pst$15, Kind$Term$hol$(Bits$e));
                                var $7254 = $7260;
                                break;
                        };
                        var $7247 = $7254;
                        break;
                };
                var $7245 = $7247;
                break;
        };
        return $7245;
    }));

    function Kind$Parser$float$sign$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7262 = self.nam;
                var $7263 = self.ini;
                var $7264 = self.idx;
                var $7265 = self.str;
                var self = $7265;
                if (self.length === 0) {
                    var $7267 = Parser$Reply$fail$($7262, $7263, $7264, "Expected \'+\' or \'-\'.");
                    var $7266 = $7267;
                } else {
                    var $7268 = self.charCodeAt(0);
                    var $7269 = self.slice(1);
                    var self = (($7268 === 43) || ($7268 === 45));
                    if (self) {
                        var $7271 = Parser$Reply$value$(_pst$1, $7268);
                        var $7270 = $7271;
                    } else {
                        var $7272 = Parser$Reply$fail$($7262, $7263, $7264, "Expected \'+\' ou \'-\'.");
                        var $7270 = $7272;
                    };
                    var $7266 = $7270;
                };
                var $7261 = $7266;
                break;
        };
        return $7261;
    };
    const Kind$Parser$float$sign = x0 => Kind$Parser$float$sign$(x0);

    function List$any$(_cond$2, _list$3) {
        var List$any$ = (_cond$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_cond$2, _list$3]
        });
        var List$any = _cond$2 => _list$3 => List$any$(_cond$2, _list$3);
        var arg = [_cond$2, _list$3];
        while (true) {
            let [_cond$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $7273 = self.head;
                        var $7274 = self.tail;
                        var self = _cond$2($7273);
                        if (self) {
                            var $7276 = Bool$true;
                            var $7275 = $7276;
                        } else {
                            var $7277 = List$any$(_cond$2, $7274);
                            var $7275 = $7277;
                        };
                        return $7275;
                    case 'List.nil':
                        var $7278 = Bool$false;
                        return $7278;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$any = x0 => x1 => List$any$(x0, x1);

    function Kind$Parser$float$str_digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7280 = self.err;
                var $7281 = self.nam;
                var $7282 = self.ini;
                var $7283 = self.idx;
                var $7284 = self.str;
                var self = $7284;
                if (self.length === 0) {
                    var $7286 = Parser$Reply$fail$($7281, $7282, $7283, "Not a digit.");
                    var $7285 = $7286;
                } else {
                    var $7287 = self.charCodeAt(0);
                    var $7288 = self.slice(1);
                    var _digits$9 = List$cons$(48, List$cons$(49, List$cons$(50, List$cons$(51, List$cons$(52, List$cons$(52, List$cons$(53, List$cons$(54, List$cons$(55, List$cons$(56, List$cons$(57, List$nil)))))))))));
                    var _pst$10 = Parser$State$new$($7280, $7281, $7282, Nat$succ$($7283), $7288);
                    var self = List$any$(a1 => ($7287 === a1), _digits$9);
                    if (self) {
                        var $7290 = Parser$Reply$value$(_pst$10, $7287);
                        var $7289 = $7290;
                    } else {
                        var $7291 = Parser$Reply$fail$($7281, $7282, $7283, "Not a digit.");
                        var $7289 = $7291;
                    };
                    var $7285 = $7289;
                };
                var $7279 = $7285;
                break;
        };
        return $7279;
    };
    const Kind$Parser$float$str_digit = x0 => Kind$Parser$float$str_digit$(x0);

    function String$from_list$(_xs$1) {
        var self = _xs$1;
        switch (self._) {
            case 'List.cons':
                var $7293 = self.head;
                var $7294 = self.tail;
                var $7295 = String$cons$($7293, String$from_list$($7294));
                var $7292 = $7295;
                break;
            case 'List.nil':
                var $7296 = String$nil;
                var $7292 = $7296;
                break;
        };
        return $7292;
    };
    const String$from_list = x0 => String$from_list$(x0);
    const Kind$Parser$float$64 = Kind$Parser$block("float")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7298 = self.err;
                var _reply$7 = Parser$maybe$(Kind$Parser$float$sign, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7300 = self.err;
                        var self = $7298;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7302 = self.value;
                                var $7303 = Parser$Reply$error$(Parser$Error$combine$($7302, $7300));
                                var $7301 = $7303;
                                break;
                            case 'Maybe.none':
                                var $7304 = Parser$Reply$error$($7300);
                                var $7301 = $7304;
                                break;
                        };
                        var $7299 = $7301;
                        break;
                    case 'Parser.Reply.value':
                        var $7305 = self.pst;
                        var $7306 = self.val;
                        var self = $7305;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7308 = self.err;
                                var $7309 = self.nam;
                                var $7310 = self.ini;
                                var $7311 = self.idx;
                                var $7312 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7298, $7308), $7309, $7310, $7311, $7312);
                                var _sign$16 = Maybe$default$($7306, 43);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7314 = self.err;
                                        var _reply$22 = Parser$many1$(Kind$Parser$float$str_digit, _reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7316 = self.err;
                                                var self = $7314;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7318 = self.value;
                                                        var $7319 = Parser$Reply$error$(Parser$Error$combine$($7318, $7316));
                                                        var $7317 = $7319;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7320 = Parser$Reply$error$($7316);
                                                        var $7317 = $7320;
                                                        break;
                                                };
                                                var $7315 = $7317;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7321 = self.pst;
                                                var $7322 = self.val;
                                                var self = $7321;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7324 = self.err;
                                                        var $7325 = self.nam;
                                                        var $7326 = self.ini;
                                                        var $7327 = self.idx;
                                                        var $7328 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($7314, $7324), $7325, $7326, $7327, $7328);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7330 = self.err;
                                                                var _reply$36 = Parser$text$(".", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7332 = self.err;
                                                                        var self = $7330;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7334 = self.value;
                                                                                var $7335 = Parser$Reply$error$(Parser$Error$combine$($7334, $7332));
                                                                                var $7333 = $7335;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7336 = Parser$Reply$error$($7332);
                                                                                var $7333 = $7336;
                                                                                break;
                                                                        };
                                                                        var $7331 = $7333;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7337 = self.pst;
                                                                        var self = $7337;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7339 = self.err;
                                                                                var $7340 = self.nam;
                                                                                var $7341 = self.ini;
                                                                                var $7342 = self.idx;
                                                                                var $7343 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($7330, $7339), $7340, $7341, $7342, $7343);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7345 = self.err;
                                                                                        var _reply$50 = Parser$many1$(Kind$Parser$float$str_digit, _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $7347 = self.err;
                                                                                                var self = $7345;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $7349 = self.value;
                                                                                                        var $7350 = Parser$Reply$error$(Parser$Error$combine$($7349, $7347));
                                                                                                        var $7348 = $7350;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $7351 = Parser$Reply$error$($7347);
                                                                                                        var $7348 = $7351;
                                                                                                        break;
                                                                                                };
                                                                                                var $7346 = $7348;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $7352 = self.pst;
                                                                                                var $7353 = self.val;
                                                                                                var self = $7352;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $7355 = self.err;
                                                                                                        var $7356 = self.nam;
                                                                                                        var $7357 = self.ini;
                                                                                                        var $7358 = self.idx;
                                                                                                        var $7359 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($7345, $7355), $7356, $7357, $7358, $7359);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $7361 = self.err;
                                                                                                                var _reply$64 = Parser$text$("#64", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $7363 = self.err;
                                                                                                                        var self = $7361;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $7365 = self.value;
                                                                                                                                var $7366 = Parser$Reply$error$(Parser$Error$combine$($7365, $7363));
                                                                                                                                var $7364 = $7366;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $7367 = Parser$Reply$error$($7363);
                                                                                                                                var $7364 = $7367;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7362 = $7364;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $7368 = self.pst;
                                                                                                                        var self = $7368;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $7370 = self.err;
                                                                                                                                var $7371 = self.nam;
                                                                                                                                var $7372 = self.ini;
                                                                                                                                var $7373 = self.idx;
                                                                                                                                var $7374 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($7361, $7370), $7371, $7372, $7373, $7374);
                                                                                                                                var _float_str$73 = Kind$Term$str$((String$cons$(_sign$16, String$from_list$($7322)) + ("." + String$from_list$($7353))));
                                                                                                                                var _conv$74 = Kind$Term$ref$("F64.parse");
                                                                                                                                var _term$75 = Kind$Term$app$(_conv$74, _float_str$73);
                                                                                                                                var $7375 = Parser$Reply$value$(_reply$pst$72, _term$75);
                                                                                                                                var $7369 = $7375;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7362 = $7369;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $7360 = $7362;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7354 = $7360;
                                                                                                        break;
                                                                                                };
                                                                                                var $7346 = $7354;
                                                                                                break;
                                                                                        };
                                                                                        var $7344 = $7346;
                                                                                        break;
                                                                                };
                                                                                var $7338 = $7344;
                                                                                break;
                                                                        };
                                                                        var $7331 = $7338;
                                                                        break;
                                                                };
                                                                var $7329 = $7331;
                                                                break;
                                                        };
                                                        var $7323 = $7329;
                                                        break;
                                                };
                                                var $7315 = $7323;
                                                break;
                                        };
                                        var $7313 = $7315;
                                        break;
                                };
                                var $7307 = $7313;
                                break;
                        };
                        var $7299 = $7307;
                        break;
                };
                var $7297 = $7299;
                break;
        };
        return $7297;
    }));
    const Kind$Parser$float$32 = Kind$Parser$block("float")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7377 = self.err;
                var _reply$7 = Parser$maybe$(Kind$Parser$float$sign, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7379 = self.err;
                        var self = $7377;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7381 = self.value;
                                var $7382 = Parser$Reply$error$(Parser$Error$combine$($7381, $7379));
                                var $7380 = $7382;
                                break;
                            case 'Maybe.none':
                                var $7383 = Parser$Reply$error$($7379);
                                var $7380 = $7383;
                                break;
                        };
                        var $7378 = $7380;
                        break;
                    case 'Parser.Reply.value':
                        var $7384 = self.pst;
                        var $7385 = self.val;
                        var self = $7384;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7387 = self.err;
                                var $7388 = self.nam;
                                var $7389 = self.ini;
                                var $7390 = self.idx;
                                var $7391 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7377, $7387), $7388, $7389, $7390, $7391);
                                var _sign$16 = Maybe$default$($7385, 43);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7393 = self.err;
                                        var _reply$22 = Parser$many1$(Kind$Parser$float$str_digit, _reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7395 = self.err;
                                                var self = $7393;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7397 = self.value;
                                                        var $7398 = Parser$Reply$error$(Parser$Error$combine$($7397, $7395));
                                                        var $7396 = $7398;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7399 = Parser$Reply$error$($7395);
                                                        var $7396 = $7399;
                                                        break;
                                                };
                                                var $7394 = $7396;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7400 = self.pst;
                                                var $7401 = self.val;
                                                var self = $7400;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7403 = self.err;
                                                        var $7404 = self.nam;
                                                        var $7405 = self.ini;
                                                        var $7406 = self.idx;
                                                        var $7407 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($7393, $7403), $7404, $7405, $7406, $7407);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7409 = self.err;
                                                                var _reply$36 = Parser$text$(".", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7411 = self.err;
                                                                        var self = $7409;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7413 = self.value;
                                                                                var $7414 = Parser$Reply$error$(Parser$Error$combine$($7413, $7411));
                                                                                var $7412 = $7414;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7415 = Parser$Reply$error$($7411);
                                                                                var $7412 = $7415;
                                                                                break;
                                                                        };
                                                                        var $7410 = $7412;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7416 = self.pst;
                                                                        var self = $7416;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7418 = self.err;
                                                                                var $7419 = self.nam;
                                                                                var $7420 = self.ini;
                                                                                var $7421 = self.idx;
                                                                                var $7422 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($7409, $7418), $7419, $7420, $7421, $7422);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7424 = self.err;
                                                                                        var _reply$50 = Parser$many1$(Kind$Parser$float$str_digit, _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $7426 = self.err;
                                                                                                var self = $7424;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $7428 = self.value;
                                                                                                        var $7429 = Parser$Reply$error$(Parser$Error$combine$($7428, $7426));
                                                                                                        var $7427 = $7429;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $7430 = Parser$Reply$error$($7426);
                                                                                                        var $7427 = $7430;
                                                                                                        break;
                                                                                                };
                                                                                                var $7425 = $7427;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $7431 = self.pst;
                                                                                                var $7432 = self.val;
                                                                                                var self = $7431;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $7434 = self.err;
                                                                                                        var $7435 = self.nam;
                                                                                                        var $7436 = self.ini;
                                                                                                        var $7437 = self.idx;
                                                                                                        var $7438 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($7424, $7434), $7435, $7436, $7437, $7438);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $7440 = self.err;
                                                                                                                var _reply$64 = Parser$text$("#32", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $7442 = self.err;
                                                                                                                        var self = $7440;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $7444 = self.value;
                                                                                                                                var $7445 = Parser$Reply$error$(Parser$Error$combine$($7444, $7442));
                                                                                                                                var $7443 = $7445;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $7446 = Parser$Reply$error$($7442);
                                                                                                                                var $7443 = $7446;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7441 = $7443;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $7447 = self.pst;
                                                                                                                        var self = $7447;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $7449 = self.err;
                                                                                                                                var $7450 = self.nam;
                                                                                                                                var $7451 = self.ini;
                                                                                                                                var $7452 = self.idx;
                                                                                                                                var $7453 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($7440, $7449), $7450, $7451, $7452, $7453);
                                                                                                                                var _float_str$73 = Kind$Term$str$((String$cons$(_sign$16, String$from_list$($7401)) + ("." + String$from_list$($7432))));
                                                                                                                                var _conv$74 = Kind$Term$ref$("F32.parse");
                                                                                                                                var _term$75 = Kind$Term$app$(_conv$74, _float_str$73);
                                                                                                                                var $7454 = Parser$Reply$value$(_reply$pst$72, _term$75);
                                                                                                                                var $7448 = $7454;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7441 = $7448;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $7439 = $7441;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7433 = $7439;
                                                                                                        break;
                                                                                                };
                                                                                                var $7425 = $7433;
                                                                                                break;
                                                                                        };
                                                                                        var $7423 = $7425;
                                                                                        break;
                                                                                };
                                                                                var $7417 = $7423;
                                                                                break;
                                                                        };
                                                                        var $7410 = $7417;
                                                                        break;
                                                                };
                                                                var $7408 = $7410;
                                                                break;
                                                        };
                                                        var $7402 = $7408;
                                                        break;
                                                };
                                                var $7394 = $7402;
                                                break;
                                        };
                                        var $7392 = $7394;
                                        break;
                                };
                                var $7386 = $7392;
                                break;
                        };
                        var $7378 = $7386;
                        break;
                };
                var $7376 = $7378;
                break;
        };
        return $7376;
    }));

    function Either$(_A$1, _B$2) {
        var $7455 = null;
        return $7455;
    };
    const Either = x0 => x1 => Either$(x0, x1);

    function Either$left$(_value$3) {
        var $7456 = ({
            _: 'Either.left',
            'value': _value$3
        });
        return $7456;
    };
    const Either$left = x0 => Either$left$(x0);

    function Either$right$(_value$3) {
        var $7457 = ({
            _: 'Either.right',
            'value': _value$3
        });
        return $7457;
    };
    const Either$right = x0 => Either$right$(x0);

    function Nat$sub_rem$(_n$1, _m$2) {
        var Nat$sub_rem$ = (_n$1, _m$2) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2]
        });
        var Nat$sub_rem = _n$1 => _m$2 => Nat$sub_rem$(_n$1, _m$2);
        var arg = [_n$1, _m$2];
        while (true) {
            let [_n$1, _m$2] = arg;
            var R = (() => {
                var self = _m$2;
                if (self === 0n) {
                    var $7458 = Either$left$(_n$1);
                    return $7458;
                } else {
                    var $7459 = (self - 1n);
                    var self = _n$1;
                    if (self === 0n) {
                        var $7461 = Either$right$(Nat$succ$($7459));
                        var $7460 = $7461;
                    } else {
                        var $7462 = (self - 1n);
                        var $7463 = Nat$sub_rem$($7462, $7459);
                        var $7460 = $7463;
                    };
                    return $7460;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$sub_rem = x0 => x1 => Nat$sub_rem$(x0, x1);

    function Nat$div_mod$go$(_n$1, _m$2, _d$3) {
        var Nat$div_mod$go$ = (_n$1, _m$2, _d$3) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2, _d$3]
        });
        var Nat$div_mod$go = _n$1 => _m$2 => _d$3 => Nat$div_mod$go$(_n$1, _m$2, _d$3);
        var arg = [_n$1, _m$2, _d$3];
        while (true) {
            let [_n$1, _m$2, _d$3] = arg;
            var R = (() => {
                var self = Nat$sub_rem$(_n$1, _m$2);
                switch (self._) {
                    case 'Either.left':
                        var $7464 = self.value;
                        var $7465 = Nat$div_mod$go$($7464, _m$2, Nat$succ$(_d$3));
                        return $7465;
                    case 'Either.right':
                        var $7466 = Pair$new$(_d$3, _n$1);
                        return $7466;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$div_mod$go = x0 => x1 => x2 => Nat$div_mod$go$(x0, x1, x2);
    const Nat$div_mod = a0 => a1 => (({
        _: 'Pair.new',
        'fst': a0 / a1,
        'snd': a0 % a1
    }));

    function Nat$to_base$go$(_base$1, _nat$2, _res$3) {
        var Nat$to_base$go$ = (_base$1, _nat$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_base$1, _nat$2, _res$3]
        });
        var Nat$to_base$go = _base$1 => _nat$2 => _res$3 => Nat$to_base$go$(_base$1, _nat$2, _res$3);
        var arg = [_base$1, _nat$2, _res$3];
        while (true) {
            let [_base$1, _nat$2, _res$3] = arg;
            var R = (() => {
                var self = (({
                    _: 'Pair.new',
                    'fst': _nat$2 / _base$1,
                    'snd': _nat$2 % _base$1
                }));
                switch (self._) {
                    case 'Pair.new':
                        var $7467 = self.fst;
                        var $7468 = self.snd;
                        var self = $7467;
                        if (self === 0n) {
                            var $7470 = List$cons$($7468, _res$3);
                            var $7469 = $7470;
                        } else {
                            var $7471 = (self - 1n);
                            var $7472 = Nat$to_base$go$(_base$1, $7467, List$cons$($7468, _res$3));
                            var $7469 = $7472;
                        };
                        return $7469;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$to_base$go = x0 => x1 => x2 => Nat$to_base$go$(x0, x1, x2);

    function Nat$to_base$(_base$1, _nat$2) {
        var $7473 = Nat$to_base$go$(_base$1, _nat$2, List$nil);
        return $7473;
    };
    const Nat$to_base = x0 => x1 => Nat$to_base$(x0, x1);

    function Nat$mod$go$(_n$1, _m$2, _r$3) {
        var Nat$mod$go$ = (_n$1, _m$2, _r$3) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2, _r$3]
        });
        var Nat$mod$go = _n$1 => _m$2 => _r$3 => Nat$mod$go$(_n$1, _m$2, _r$3);
        var arg = [_n$1, _m$2, _r$3];
        while (true) {
            let [_n$1, _m$2, _r$3] = arg;
            var R = (() => {
                var self = _m$2;
                if (self === 0n) {
                    var $7474 = Nat$mod$go$(_n$1, _r$3, _m$2);
                    return $7474;
                } else {
                    var $7475 = (self - 1n);
                    var self = _n$1;
                    if (self === 0n) {
                        var $7477 = _r$3;
                        var $7476 = $7477;
                    } else {
                        var $7478 = (self - 1n);
                        var $7479 = Nat$mod$go$($7478, $7475, Nat$succ$(_r$3));
                        var $7476 = $7479;
                    };
                    return $7476;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$mod$go = x0 => x1 => x2 => Nat$mod$go$(x0, x1, x2);
    const Nat$mod = a0 => a1 => (a0 % a1);
    const Nat$lte = a0 => a1 => (a0 <= a1);

    function List$at$(_index$2, _list$3) {
        var List$at$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$at = _index$2 => _list$3 => List$at$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $7480 = self.head;
                        var $7481 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $7483 = Maybe$some$($7480);
                            var $7482 = $7483;
                        } else {
                            var $7484 = (self - 1n);
                            var $7485 = List$at$($7484, $7481);
                            var $7482 = $7485;
                        };
                        return $7482;
                    case 'List.nil':
                        var $7486 = Maybe$none;
                        return $7486;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$at = x0 => x1 => List$at$(x0, x1);

    function Nat$show_digit$(_base$1, _n$2) {
        var _m$3 = (_n$2 % _base$1);
        var _base64$4 = List$cons$(48, List$cons$(49, List$cons$(50, List$cons$(51, List$cons$(52, List$cons$(53, List$cons$(54, List$cons$(55, List$cons$(56, List$cons$(57, List$cons$(97, List$cons$(98, List$cons$(99, List$cons$(100, List$cons$(101, List$cons$(102, List$cons$(103, List$cons$(104, List$cons$(105, List$cons$(106, List$cons$(107, List$cons$(108, List$cons$(109, List$cons$(110, List$cons$(111, List$cons$(112, List$cons$(113, List$cons$(114, List$cons$(115, List$cons$(116, List$cons$(117, List$cons$(118, List$cons$(119, List$cons$(120, List$cons$(121, List$cons$(122, List$cons$(65, List$cons$(66, List$cons$(67, List$cons$(68, List$cons$(69, List$cons$(70, List$cons$(71, List$cons$(72, List$cons$(73, List$cons$(74, List$cons$(75, List$cons$(76, List$cons$(77, List$cons$(78, List$cons$(79, List$cons$(80, List$cons$(81, List$cons$(82, List$cons$(83, List$cons$(84, List$cons$(85, List$cons$(86, List$cons$(87, List$cons$(88, List$cons$(89, List$cons$(90, List$cons$(43, List$cons$(47, List$nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
        var self = ((_base$1 > 0n) && (_base$1 <= 64n));
        if (self) {
            var self = List$at$(_m$3, _base64$4);
            switch (self._) {
                case 'Maybe.some':
                    var $7489 = self.value;
                    var $7490 = $7489;
                    var $7488 = $7490;
                    break;
                case 'Maybe.none':
                    var $7491 = 35;
                    var $7488 = $7491;
                    break;
            };
            var $7487 = $7488;
        } else {
            var $7492 = 35;
            var $7487 = $7492;
        };
        return $7487;
    };
    const Nat$show_digit = x0 => x1 => Nat$show_digit$(x0, x1);

    function Nat$to_string_base$(_base$1, _nat$2) {
        var $7493 = List$fold$(Nat$to_base$(_base$1, _nat$2), String$nil, (_n$3 => _str$4 => {
            var $7494 = String$cons$(Nat$show_digit$(_base$1, _n$3), _str$4);
            return $7494;
        }));
        return $7493;
    };
    const Nat$to_string_base = x0 => x1 => Nat$to_string_base$(x0, x1);

    function Nat$show$(_n$1) {
        var $7495 = Nat$to_string_base$(10n, _n$1);
        return $7495;
    };
    const Nat$show = x0 => Nat$show$(x0);

    function Kind$Parser$int_pos$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7497 = self.err;
                var _reply$7 = Parser$text$("+", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7499 = self.err;
                        var self = $7497;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7501 = self.value;
                                var $7502 = Parser$Reply$error$(Parser$Error$combine$($7501, $7499));
                                var $7500 = $7502;
                                break;
                            case 'Maybe.none':
                                var $7503 = Parser$Reply$error$($7499);
                                var $7500 = $7503;
                                break;
                        };
                        var $7498 = $7500;
                        break;
                    case 'Parser.Reply.value':
                        var $7504 = self.pst;
                        var self = $7504;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7506 = self.err;
                                var $7507 = self.nam;
                                var $7508 = self.ini;
                                var $7509 = self.idx;
                                var $7510 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7497, $7506), $7507, $7508, $7509, $7510);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7512 = self.err;
                                        var _reply$21 = Parser$many1$(Parser$digit, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7514 = self.err;
                                                var self = $7512;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7516 = self.value;
                                                        var $7517 = Parser$Reply$error$(Parser$Error$combine$($7516, $7514));
                                                        var $7515 = $7517;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7518 = Parser$Reply$error$($7514);
                                                        var $7515 = $7518;
                                                        break;
                                                };
                                                var $7513 = $7515;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7519 = self.pst;
                                                var $7520 = self.val;
                                                var self = $7519;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7522 = self.err;
                                                        var $7523 = self.nam;
                                                        var $7524 = self.ini;
                                                        var $7525 = self.idx;
                                                        var $7526 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7512, $7522), $7523, $7524, $7525, $7526);
                                                        var $7527 = Parser$Reply$value$(_reply$pst$29, Pair$new$(Bool$true, Nat$from_base$(10n, $7520)));
                                                        var $7521 = $7527;
                                                        break;
                                                };
                                                var $7513 = $7521;
                                                break;
                                        };
                                        var $7511 = $7513;
                                        break;
                                };
                                var $7505 = $7511;
                                break;
                        };
                        var $7498 = $7505;
                        break;
                };
                var $7496 = $7498;
                break;
        };
        return $7496;
    };
    const Kind$Parser$int_pos = x0 => Kind$Parser$int_pos$(x0);

    function Kind$Parser$int_neg$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7529 = self.err;
                var _reply$7 = Parser$text$("-", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7531 = self.err;
                        var self = $7529;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7533 = self.value;
                                var $7534 = Parser$Reply$error$(Parser$Error$combine$($7533, $7531));
                                var $7532 = $7534;
                                break;
                            case 'Maybe.none':
                                var $7535 = Parser$Reply$error$($7531);
                                var $7532 = $7535;
                                break;
                        };
                        var $7530 = $7532;
                        break;
                    case 'Parser.Reply.value':
                        var $7536 = self.pst;
                        var self = $7536;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7538 = self.err;
                                var $7539 = self.nam;
                                var $7540 = self.ini;
                                var $7541 = self.idx;
                                var $7542 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7529, $7538), $7539, $7540, $7541, $7542);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7544 = self.err;
                                        var _reply$21 = Parser$many1$(Parser$digit, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7546 = self.err;
                                                var self = $7544;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7548 = self.value;
                                                        var $7549 = Parser$Reply$error$(Parser$Error$combine$($7548, $7546));
                                                        var $7547 = $7549;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7550 = Parser$Reply$error$($7546);
                                                        var $7547 = $7550;
                                                        break;
                                                };
                                                var $7545 = $7547;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7551 = self.pst;
                                                var $7552 = self.val;
                                                var self = $7551;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7554 = self.err;
                                                        var $7555 = self.nam;
                                                        var $7556 = self.ini;
                                                        var $7557 = self.idx;
                                                        var $7558 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7544, $7554), $7555, $7556, $7557, $7558);
                                                        var $7559 = Parser$Reply$value$(_reply$pst$29, Pair$new$(Bool$false, Nat$from_base$(10n, $7552)));
                                                        var $7553 = $7559;
                                                        break;
                                                };
                                                var $7545 = $7553;
                                                break;
                                        };
                                        var $7543 = $7545;
                                        break;
                                };
                                var $7537 = $7543;
                                break;
                        };
                        var $7530 = $7537;
                        break;
                };
                var $7528 = $7530;
                break;
        };
        return $7528;
    };
    const Kind$Parser$int_neg = x0 => Kind$Parser$int_neg$(x0);

    function Kind$Parser$machine_integer$signed$(_size$1) {
        var $7560 = Kind$Parser$block("int")((() => {
            var _size_str$2 = Nat$show$(_size$1);
            var $7561 = (_pst$3 => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $7563 = self.err;
                        var _reply$9 = Kind$Parser$spaces(_pst$3);
                        var self = _reply$9;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $7565 = self.err;
                                var self = $7563;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $7567 = self.value;
                                        var $7568 = Parser$Reply$error$(Parser$Error$combine$($7567, $7565));
                                        var $7566 = $7568;
                                        break;
                                    case 'Maybe.none':
                                        var $7569 = Parser$Reply$error$($7565);
                                        var $7566 = $7569;
                                        break;
                                };
                                var $7564 = $7566;
                                break;
                            case 'Parser.Reply.value':
                                var $7570 = self.pst;
                                var self = $7570;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7572 = self.err;
                                        var $7573 = self.nam;
                                        var $7574 = self.ini;
                                        var $7575 = self.idx;
                                        var $7576 = self.str;
                                        var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($7563, $7572), $7573, $7574, $7575, $7576);
                                        var self = _reply$pst$17;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $7578 = self.err;
                                                var _reply$23 = Parser$choice$(List$cons$(Kind$Parser$int_pos, List$cons$(Kind$Parser$int_neg, List$nil)), _reply$pst$17);
                                                var self = _reply$23;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $7580 = self.err;
                                                        var self = $7578;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $7582 = self.value;
                                                                var $7583 = Parser$Reply$error$(Parser$Error$combine$($7582, $7580));
                                                                var $7581 = $7583;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $7584 = Parser$Reply$error$($7580);
                                                                var $7581 = $7584;
                                                                break;
                                                        };
                                                        var $7579 = $7581;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $7585 = self.pst;
                                                        var $7586 = self.val;
                                                        var self = $7585;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7588 = self.err;
                                                                var $7589 = self.nam;
                                                                var $7590 = self.ini;
                                                                var $7591 = self.idx;
                                                                var $7592 = self.str;
                                                                var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($7578, $7588), $7589, $7590, $7591, $7592);
                                                                var self = _reply$pst$31;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $7594 = self.err;
                                                                        var _reply$37 = Parser$text$(("#" + _size_str$2), _reply$pst$31);
                                                                        var self = _reply$37;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $7596 = self.err;
                                                                                var self = $7594;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $7598 = self.value;
                                                                                        var $7599 = Parser$Reply$error$(Parser$Error$combine$($7598, $7596));
                                                                                        var $7597 = $7599;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $7600 = Parser$Reply$error$($7596);
                                                                                        var $7597 = $7600;
                                                                                        break;
                                                                                };
                                                                                var $7595 = $7597;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $7601 = self.pst;
                                                                                var self = $7601;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7603 = self.err;
                                                                                        var $7604 = self.nam;
                                                                                        var $7605 = self.ini;
                                                                                        var $7606 = self.idx;
                                                                                        var $7607 = self.str;
                                                                                        var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($7594, $7603), $7604, $7605, $7606, $7607);
                                                                                        var $7608 = Parser$Reply$value$(_reply$pst$45, (() => {
                                                                                            var self = $7586;
                                                                                            switch (self._) {
                                                                                                case 'Pair.new':
                                                                                                    var $7609 = self.fst;
                                                                                                    var $7610 = self.snd;
                                                                                                    var _term$48 = Kind$Term$ref$(("I" + (_size_str$2 + ".from_nat")));
                                                                                                    var _term$49 = Kind$Term$app$(_term$48, Kind$Term$nat$($7610));
                                                                                                    var self = $7609;
                                                                                                    if (self) {
                                                                                                        var $7612 = _term$49;
                                                                                                        var _term$50 = $7612;
                                                                                                    } else {
                                                                                                        var $7613 = Kind$Term$app$(Kind$Term$ref$(("I" + (_size_str$2 + ".neg"))), _term$49);
                                                                                                        var _term$50 = $7613;
                                                                                                    };
                                                                                                    var $7611 = _term$50;
                                                                                                    return $7611;
                                                                                            };
                                                                                        })());
                                                                                        var $7602 = $7608;
                                                                                        break;
                                                                                };
                                                                                var $7595 = $7602;
                                                                                break;
                                                                        };
                                                                        var $7593 = $7595;
                                                                        break;
                                                                };
                                                                var $7587 = $7593;
                                                                break;
                                                        };
                                                        var $7579 = $7587;
                                                        break;
                                                };
                                                var $7577 = $7579;
                                                break;
                                        };
                                        var $7571 = $7577;
                                        break;
                                };
                                var $7564 = $7571;
                                break;
                        };
                        var $7562 = $7564;
                        break;
                };
                return $7562;
            });
            return $7561;
        })());
        return $7560;
    };
    const Kind$Parser$machine_integer$signed = x0 => Kind$Parser$machine_integer$signed$(x0);

    function Parser$hex_digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7615 = self.err;
                var $7616 = self.nam;
                var $7617 = self.ini;
                var $7618 = self.idx;
                var $7619 = self.str;
                var self = $7619;
                if (self.length === 0) {
                    var $7621 = Parser$Reply$fail$($7616, $7617, $7618, "Not a digit.");
                    var $7620 = $7621;
                } else {
                    var $7622 = self.charCodeAt(0);
                    var $7623 = self.slice(1);
                    var _pst$9 = Parser$State$new$($7615, $7616, $7617, Nat$succ$($7618), $7623);
                    var self = ($7622 === 48);
                    if (self) {
                        var $7625 = Parser$Reply$value$(_pst$9, 0n);
                        var $7624 = $7625;
                    } else {
                        var self = ($7622 === 49);
                        if (self) {
                            var $7627 = Parser$Reply$value$(_pst$9, 1n);
                            var $7626 = $7627;
                        } else {
                            var self = ($7622 === 50);
                            if (self) {
                                var $7629 = Parser$Reply$value$(_pst$9, 2n);
                                var $7628 = $7629;
                            } else {
                                var self = ($7622 === 51);
                                if (self) {
                                    var $7631 = Parser$Reply$value$(_pst$9, 3n);
                                    var $7630 = $7631;
                                } else {
                                    var self = ($7622 === 52);
                                    if (self) {
                                        var $7633 = Parser$Reply$value$(_pst$9, 4n);
                                        var $7632 = $7633;
                                    } else {
                                        var self = ($7622 === 53);
                                        if (self) {
                                            var $7635 = Parser$Reply$value$(_pst$9, 5n);
                                            var $7634 = $7635;
                                        } else {
                                            var self = ($7622 === 54);
                                            if (self) {
                                                var $7637 = Parser$Reply$value$(_pst$9, 6n);
                                                var $7636 = $7637;
                                            } else {
                                                var self = ($7622 === 55);
                                                if (self) {
                                                    var $7639 = Parser$Reply$value$(_pst$9, 7n);
                                                    var $7638 = $7639;
                                                } else {
                                                    var self = ($7622 === 56);
                                                    if (self) {
                                                        var $7641 = Parser$Reply$value$(_pst$9, 8n);
                                                        var $7640 = $7641;
                                                    } else {
                                                        var self = ($7622 === 57);
                                                        if (self) {
                                                            var $7643 = Parser$Reply$value$(_pst$9, 9n);
                                                            var $7642 = $7643;
                                                        } else {
                                                            var self = ($7622 === 97);
                                                            if (self) {
                                                                var $7645 = Parser$Reply$value$(_pst$9, 10n);
                                                                var $7644 = $7645;
                                                            } else {
                                                                var self = ($7622 === 98);
                                                                if (self) {
                                                                    var $7647 = Parser$Reply$value$(_pst$9, 11n);
                                                                    var $7646 = $7647;
                                                                } else {
                                                                    var self = ($7622 === 99);
                                                                    if (self) {
                                                                        var $7649 = Parser$Reply$value$(_pst$9, 12n);
                                                                        var $7648 = $7649;
                                                                    } else {
                                                                        var self = ($7622 === 100);
                                                                        if (self) {
                                                                            var $7651 = Parser$Reply$value$(_pst$9, 13n);
                                                                            var $7650 = $7651;
                                                                        } else {
                                                                            var self = ($7622 === 101);
                                                                            if (self) {
                                                                                var $7653 = Parser$Reply$value$(_pst$9, 14n);
                                                                                var $7652 = $7653;
                                                                            } else {
                                                                                var self = ($7622 === 102);
                                                                                if (self) {
                                                                                    var $7655 = Parser$Reply$value$(_pst$9, 15n);
                                                                                    var $7654 = $7655;
                                                                                } else {
                                                                                    var self = ($7622 === 65);
                                                                                    if (self) {
                                                                                        var $7657 = Parser$Reply$value$(_pst$9, 10n);
                                                                                        var $7656 = $7657;
                                                                                    } else {
                                                                                        var self = ($7622 === 66);
                                                                                        if (self) {
                                                                                            var $7659 = Parser$Reply$value$(_pst$9, 11n);
                                                                                            var $7658 = $7659;
                                                                                        } else {
                                                                                            var self = ($7622 === 67);
                                                                                            if (self) {
                                                                                                var $7661 = Parser$Reply$value$(_pst$9, 12n);
                                                                                                var $7660 = $7661;
                                                                                            } else {
                                                                                                var self = ($7622 === 68);
                                                                                                if (self) {
                                                                                                    var $7663 = Parser$Reply$value$(_pst$9, 13n);
                                                                                                    var $7662 = $7663;
                                                                                                } else {
                                                                                                    var self = ($7622 === 69);
                                                                                                    if (self) {
                                                                                                        var $7665 = Parser$Reply$value$(_pst$9, 14n);
                                                                                                        var $7664 = $7665;
                                                                                                    } else {
                                                                                                        var self = ($7622 === 70);
                                                                                                        if (self) {
                                                                                                            var $7667 = Parser$Reply$value$(_pst$9, 15n);
                                                                                                            var $7666 = $7667;
                                                                                                        } else {
                                                                                                            var $7668 = Parser$Reply$fail$($7616, $7617, $7618, "Not a digit.");
                                                                                                            var $7666 = $7668;
                                                                                                        };
                                                                                                        var $7664 = $7666;
                                                                                                    };
                                                                                                    var $7662 = $7664;
                                                                                                };
                                                                                                var $7660 = $7662;
                                                                                            };
                                                                                            var $7658 = $7660;
                                                                                        };
                                                                                        var $7656 = $7658;
                                                                                    };
                                                                                    var $7654 = $7656;
                                                                                };
                                                                                var $7652 = $7654;
                                                                            };
                                                                            var $7650 = $7652;
                                                                        };
                                                                        var $7648 = $7650;
                                                                    };
                                                                    var $7646 = $7648;
                                                                };
                                                                var $7644 = $7646;
                                                            };
                                                            var $7642 = $7644;
                                                        };
                                                        var $7640 = $7642;
                                                    };
                                                    var $7638 = $7640;
                                                };
                                                var $7636 = $7638;
                                            };
                                            var $7634 = $7636;
                                        };
                                        var $7632 = $7634;
                                    };
                                    var $7630 = $7632;
                                };
                                var $7628 = $7630;
                            };
                            var $7626 = $7628;
                        };
                        var $7624 = $7626;
                    };
                    var $7620 = $7624;
                };
                var $7614 = $7620;
                break;
        };
        return $7614;
    };
    const Parser$hex_digit = x0 => Parser$hex_digit$(x0);

    function Parser$hex_nat$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7670 = self.err;
                var _reply$7 = Parser$text$("0x", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7672 = self.err;
                        var self = $7670;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7674 = self.value;
                                var $7675 = Parser$Reply$error$(Parser$Error$combine$($7674, $7672));
                                var $7673 = $7675;
                                break;
                            case 'Maybe.none':
                                var $7676 = Parser$Reply$error$($7672);
                                var $7673 = $7676;
                                break;
                        };
                        var $7671 = $7673;
                        break;
                    case 'Parser.Reply.value':
                        var $7677 = self.pst;
                        var self = $7677;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7679 = self.err;
                                var $7680 = self.nam;
                                var $7681 = self.ini;
                                var $7682 = self.idx;
                                var $7683 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7670, $7679), $7680, $7681, $7682, $7683);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7685 = self.err;
                                        var _reply$21 = Parser$many1$(Parser$hex_digit, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7687 = self.err;
                                                var self = $7685;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7689 = self.value;
                                                        var $7690 = Parser$Reply$error$(Parser$Error$combine$($7689, $7687));
                                                        var $7688 = $7690;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7691 = Parser$Reply$error$($7687);
                                                        var $7688 = $7691;
                                                        break;
                                                };
                                                var $7686 = $7688;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7692 = self.pst;
                                                var $7693 = self.val;
                                                var self = $7692;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7695 = self.err;
                                                        var $7696 = self.nam;
                                                        var $7697 = self.ini;
                                                        var $7698 = self.idx;
                                                        var $7699 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7685, $7695), $7696, $7697, $7698, $7699);
                                                        var $7700 = Parser$Reply$value$(_reply$pst$29, Nat$from_base$(16n, $7693));
                                                        var $7694 = $7700;
                                                        break;
                                                };
                                                var $7686 = $7694;
                                                break;
                                        };
                                        var $7684 = $7686;
                                        break;
                                };
                                var $7678 = $7684;
                                break;
                        };
                        var $7671 = $7678;
                        break;
                };
                var $7669 = $7671;
                break;
        };
        return $7669;
    };
    const Parser$hex_nat = x0 => Parser$hex_nat$(x0);
    const Kind$Parser$nat = Kind$Parser$block("nat")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7702 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7704 = self.err;
                        var self = $7702;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7706 = self.value;
                                var $7707 = Parser$Reply$error$(Parser$Error$combine$($7706, $7704));
                                var $7705 = $7707;
                                break;
                            case 'Maybe.none':
                                var $7708 = Parser$Reply$error$($7704);
                                var $7705 = $7708;
                                break;
                        };
                        var $7703 = $7705;
                        break;
                    case 'Parser.Reply.value':
                        var $7709 = self.pst;
                        var self = $7709;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7711 = self.err;
                                var $7712 = self.nam;
                                var $7713 = self.ini;
                                var $7714 = self.idx;
                                var $7715 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7702, $7711), $7712, $7713, $7714, $7715);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7717 = self.err;
                                        var _reply$21 = Parser$choice$(List$cons$(Parser$hex_nat, List$cons$(Parser$nat, List$nil)), _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7719 = self.err;
                                                var self = $7717;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7721 = self.value;
                                                        var $7722 = Parser$Reply$error$(Parser$Error$combine$($7721, $7719));
                                                        var $7720 = $7722;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7723 = Parser$Reply$error$($7719);
                                                        var $7720 = $7723;
                                                        break;
                                                };
                                                var $7718 = $7720;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7724 = self.pst;
                                                var $7725 = self.val;
                                                var self = $7724;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7727 = self.err;
                                                        var $7728 = self.nam;
                                                        var $7729 = self.ini;
                                                        var $7730 = self.idx;
                                                        var $7731 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7717, $7727), $7728, $7729, $7730, $7731);
                                                        var $7732 = Parser$Reply$value$(_reply$pst$29, Kind$Term$nat$($7725));
                                                        var $7726 = $7732;
                                                        break;
                                                };
                                                var $7718 = $7726;
                                                break;
                                        };
                                        var $7716 = $7718;
                                        break;
                                };
                                var $7710 = $7716;
                                break;
                        };
                        var $7703 = $7710;
                        break;
                };
                var $7701 = $7703;
                break;
        };
        return $7701;
    }));

    function Kind$Parser$machine_integer$unsigned$(_size$1) {
        var $7733 = Kind$Parser$block("int")((() => {
            var _size_str$2 = Nat$show$(_size$1);
            var $7734 = (_pst$3 => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $7736 = self.err;
                        var _reply$9 = Kind$Parser$spaces(_pst$3);
                        var self = _reply$9;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $7738 = self.err;
                                var self = $7736;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $7740 = self.value;
                                        var $7741 = Parser$Reply$error$(Parser$Error$combine$($7740, $7738));
                                        var $7739 = $7741;
                                        break;
                                    case 'Maybe.none':
                                        var $7742 = Parser$Reply$error$($7738);
                                        var $7739 = $7742;
                                        break;
                                };
                                var $7737 = $7739;
                                break;
                            case 'Parser.Reply.value':
                                var $7743 = self.pst;
                                var self = $7743;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7745 = self.err;
                                        var $7746 = self.nam;
                                        var $7747 = self.ini;
                                        var $7748 = self.idx;
                                        var $7749 = self.str;
                                        var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($7736, $7745), $7746, $7747, $7748, $7749);
                                        var self = _reply$pst$17;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $7751 = self.err;
                                                var _reply$23 = Kind$Parser$nat(_reply$pst$17);
                                                var self = _reply$23;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $7753 = self.err;
                                                        var self = $7751;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $7755 = self.value;
                                                                var $7756 = Parser$Reply$error$(Parser$Error$combine$($7755, $7753));
                                                                var $7754 = $7756;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $7757 = Parser$Reply$error$($7753);
                                                                var $7754 = $7757;
                                                                break;
                                                        };
                                                        var $7752 = $7754;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $7758 = self.pst;
                                                        var $7759 = self.val;
                                                        var self = $7758;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7761 = self.err;
                                                                var $7762 = self.nam;
                                                                var $7763 = self.ini;
                                                                var $7764 = self.idx;
                                                                var $7765 = self.str;
                                                                var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($7751, $7761), $7762, $7763, $7764, $7765);
                                                                var self = _reply$pst$31;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $7767 = self.err;
                                                                        var _reply$37 = Parser$text$(("#" + Nat$show$(_size$1)), _reply$pst$31);
                                                                        var self = _reply$37;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $7769 = self.err;
                                                                                var self = $7767;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $7771 = self.value;
                                                                                        var $7772 = Parser$Reply$error$(Parser$Error$combine$($7771, $7769));
                                                                                        var $7770 = $7772;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $7773 = Parser$Reply$error$($7769);
                                                                                        var $7770 = $7773;
                                                                                        break;
                                                                                };
                                                                                var $7768 = $7770;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $7774 = self.pst;
                                                                                var self = $7774;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7776 = self.err;
                                                                                        var $7777 = self.nam;
                                                                                        var $7778 = self.ini;
                                                                                        var $7779 = self.idx;
                                                                                        var $7780 = self.str;
                                                                                        var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($7767, $7776), $7777, $7778, $7779, $7780);
                                                                                        var _term$46 = Kind$Term$ref$(("Nat.to_u" + Nat$show$(_size$1)));
                                                                                        var _term$47 = Kind$Term$app$(_term$46, $7759);
                                                                                        var $7781 = Parser$Reply$value$(_reply$pst$45, _term$47);
                                                                                        var $7775 = $7781;
                                                                                        break;
                                                                                };
                                                                                var $7768 = $7775;
                                                                                break;
                                                                        };
                                                                        var $7766 = $7768;
                                                                        break;
                                                                };
                                                                var $7760 = $7766;
                                                                break;
                                                        };
                                                        var $7752 = $7760;
                                                        break;
                                                };
                                                var $7750 = $7752;
                                                break;
                                        };
                                        var $7744 = $7750;
                                        break;
                                };
                                var $7737 = $7744;
                                break;
                        };
                        var $7735 = $7737;
                        break;
                };
                return $7735;
            });
            return $7734;
        })());
        return $7733;
    };
    const Kind$Parser$machine_integer$unsigned = x0 => Kind$Parser$machine_integer$unsigned$(x0);
    const Kind$Parser$u64 = Kind$Parser$block("u64")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7783 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7785 = self.err;
                        var self = $7783;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7787 = self.value;
                                var $7788 = Parser$Reply$error$(Parser$Error$combine$($7787, $7785));
                                var $7786 = $7788;
                                break;
                            case 'Maybe.none':
                                var $7789 = Parser$Reply$error$($7785);
                                var $7786 = $7789;
                                break;
                        };
                        var $7784 = $7786;
                        break;
                    case 'Parser.Reply.value':
                        var $7790 = self.pst;
                        var self = $7790;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7792 = self.err;
                                var $7793 = self.nam;
                                var $7794 = self.ini;
                                var $7795 = self.idx;
                                var $7796 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7783, $7792), $7793, $7794, $7795, $7796);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7798 = self.err;
                                        var _reply$21 = Parser$nat$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7800 = self.err;
                                                var self = $7798;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7802 = self.value;
                                                        var $7803 = Parser$Reply$error$(Parser$Error$combine$($7802, $7800));
                                                        var $7801 = $7803;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7804 = Parser$Reply$error$($7800);
                                                        var $7801 = $7804;
                                                        break;
                                                };
                                                var $7799 = $7801;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7805 = self.pst;
                                                var $7806 = self.val;
                                                var self = $7805;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7808 = self.err;
                                                        var $7809 = self.nam;
                                                        var $7810 = self.ini;
                                                        var $7811 = self.idx;
                                                        var $7812 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7798, $7808), $7809, $7810, $7811, $7812);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7814 = self.err;
                                                                var _reply$35 = Parser$text$("l", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7816 = self.err;
                                                                        var self = $7814;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7818 = self.value;
                                                                                var $7819 = Parser$Reply$error$(Parser$Error$combine$($7818, $7816));
                                                                                var $7817 = $7819;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7820 = Parser$Reply$error$($7816);
                                                                                var $7817 = $7820;
                                                                                break;
                                                                        };
                                                                        var $7815 = $7817;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7821 = self.pst;
                                                                        var self = $7821;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7823 = self.err;
                                                                                var $7824 = self.nam;
                                                                                var $7825 = self.ini;
                                                                                var $7826 = self.idx;
                                                                                var $7827 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7814, $7823), $7824, $7825, $7826, $7827);
                                                                                var _term$44 = Kind$Term$ref$("U64.from_nat");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$nat$($7806));
                                                                                var $7828 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $7822 = $7828;
                                                                                break;
                                                                        };
                                                                        var $7815 = $7822;
                                                                        break;
                                                                };
                                                                var $7813 = $7815;
                                                                break;
                                                        };
                                                        var $7807 = $7813;
                                                        break;
                                                };
                                                var $7799 = $7807;
                                                break;
                                        };
                                        var $7797 = $7799;
                                        break;
                                };
                                var $7791 = $7797;
                                break;
                        };
                        var $7784 = $7791;
                        break;
                };
                var $7782 = $7784;
                break;
        };
        return $7782;
    }));
    const Kind$Parser$u32 = Kind$Parser$block("u32")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7830 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7832 = self.err;
                        var self = $7830;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7834 = self.value;
                                var $7835 = Parser$Reply$error$(Parser$Error$combine$($7834, $7832));
                                var $7833 = $7835;
                                break;
                            case 'Maybe.none':
                                var $7836 = Parser$Reply$error$($7832);
                                var $7833 = $7836;
                                break;
                        };
                        var $7831 = $7833;
                        break;
                    case 'Parser.Reply.value':
                        var $7837 = self.pst;
                        var self = $7837;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7839 = self.err;
                                var $7840 = self.nam;
                                var $7841 = self.ini;
                                var $7842 = self.idx;
                                var $7843 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7830, $7839), $7840, $7841, $7842, $7843);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7845 = self.err;
                                        var _reply$21 = Parser$nat$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7847 = self.err;
                                                var self = $7845;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7849 = self.value;
                                                        var $7850 = Parser$Reply$error$(Parser$Error$combine$($7849, $7847));
                                                        var $7848 = $7850;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7851 = Parser$Reply$error$($7847);
                                                        var $7848 = $7851;
                                                        break;
                                                };
                                                var $7846 = $7848;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7852 = self.pst;
                                                var $7853 = self.val;
                                                var self = $7852;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7855 = self.err;
                                                        var $7856 = self.nam;
                                                        var $7857 = self.ini;
                                                        var $7858 = self.idx;
                                                        var $7859 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7845, $7855), $7856, $7857, $7858, $7859);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7861 = self.err;
                                                                var _reply$35 = Parser$text$("u", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7863 = self.err;
                                                                        var self = $7861;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7865 = self.value;
                                                                                var $7866 = Parser$Reply$error$(Parser$Error$combine$($7865, $7863));
                                                                                var $7864 = $7866;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7867 = Parser$Reply$error$($7863);
                                                                                var $7864 = $7867;
                                                                                break;
                                                                        };
                                                                        var $7862 = $7864;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7868 = self.pst;
                                                                        var self = $7868;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7870 = self.err;
                                                                                var $7871 = self.nam;
                                                                                var $7872 = self.ini;
                                                                                var $7873 = self.idx;
                                                                                var $7874 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7861, $7870), $7871, $7872, $7873, $7874);
                                                                                var _term$44 = Kind$Term$ref$("U32.from_nat");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$nat$($7853));
                                                                                var $7875 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $7869 = $7875;
                                                                                break;
                                                                        };
                                                                        var $7862 = $7869;
                                                                        break;
                                                                };
                                                                var $7860 = $7862;
                                                                break;
                                                        };
                                                        var $7854 = $7860;
                                                        break;
                                                };
                                                var $7846 = $7854;
                                                break;
                                        };
                                        var $7844 = $7846;
                                        break;
                                };
                                var $7838 = $7844;
                                break;
                        };
                        var $7831 = $7838;
                        break;
                };
                var $7829 = $7831;
                break;
        };
        return $7829;
    }));
    const Kind$Parser$u16 = Kind$Parser$block("u16")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7877 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7879 = self.err;
                        var self = $7877;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7881 = self.value;
                                var $7882 = Parser$Reply$error$(Parser$Error$combine$($7881, $7879));
                                var $7880 = $7882;
                                break;
                            case 'Maybe.none':
                                var $7883 = Parser$Reply$error$($7879);
                                var $7880 = $7883;
                                break;
                        };
                        var $7878 = $7880;
                        break;
                    case 'Parser.Reply.value':
                        var $7884 = self.pst;
                        var self = $7884;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7886 = self.err;
                                var $7887 = self.nam;
                                var $7888 = self.ini;
                                var $7889 = self.idx;
                                var $7890 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7877, $7886), $7887, $7888, $7889, $7890);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7892 = self.err;
                                        var _reply$21 = Parser$nat$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7894 = self.err;
                                                var self = $7892;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7896 = self.value;
                                                        var $7897 = Parser$Reply$error$(Parser$Error$combine$($7896, $7894));
                                                        var $7895 = $7897;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7898 = Parser$Reply$error$($7894);
                                                        var $7895 = $7898;
                                                        break;
                                                };
                                                var $7893 = $7895;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7899 = self.pst;
                                                var $7900 = self.val;
                                                var self = $7899;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7902 = self.err;
                                                        var $7903 = self.nam;
                                                        var $7904 = self.ini;
                                                        var $7905 = self.idx;
                                                        var $7906 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7892, $7902), $7903, $7904, $7905, $7906);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7908 = self.err;
                                                                var _reply$35 = Parser$text$("s", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7910 = self.err;
                                                                        var self = $7908;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7912 = self.value;
                                                                                var $7913 = Parser$Reply$error$(Parser$Error$combine$($7912, $7910));
                                                                                var $7911 = $7913;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7914 = Parser$Reply$error$($7910);
                                                                                var $7911 = $7914;
                                                                                break;
                                                                        };
                                                                        var $7909 = $7911;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7915 = self.pst;
                                                                        var self = $7915;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7917 = self.err;
                                                                                var $7918 = self.nam;
                                                                                var $7919 = self.ini;
                                                                                var $7920 = self.idx;
                                                                                var $7921 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7908, $7917), $7918, $7919, $7920, $7921);
                                                                                var _term$44 = Kind$Term$ref$("U16.from_nat");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$nat$($7900));
                                                                                var $7922 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $7916 = $7922;
                                                                                break;
                                                                        };
                                                                        var $7909 = $7916;
                                                                        break;
                                                                };
                                                                var $7907 = $7909;
                                                                break;
                                                        };
                                                        var $7901 = $7907;
                                                        break;
                                                };
                                                var $7893 = $7901;
                                                break;
                                        };
                                        var $7891 = $7893;
                                        break;
                                };
                                var $7885 = $7891;
                                break;
                        };
                        var $7878 = $7885;
                        break;
                };
                var $7876 = $7878;
                break;
        };
        return $7876;
    }));
    const Kind$Parser$u8 = Kind$Parser$block("u8")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7924 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7926 = self.err;
                        var self = $7924;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7928 = self.value;
                                var $7929 = Parser$Reply$error$(Parser$Error$combine$($7928, $7926));
                                var $7927 = $7929;
                                break;
                            case 'Maybe.none':
                                var $7930 = Parser$Reply$error$($7926);
                                var $7927 = $7930;
                                break;
                        };
                        var $7925 = $7927;
                        break;
                    case 'Parser.Reply.value':
                        var $7931 = self.pst;
                        var self = $7931;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7933 = self.err;
                                var $7934 = self.nam;
                                var $7935 = self.ini;
                                var $7936 = self.idx;
                                var $7937 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7924, $7933), $7934, $7935, $7936, $7937);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7939 = self.err;
                                        var _reply$21 = Parser$nat$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7941 = self.err;
                                                var self = $7939;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7943 = self.value;
                                                        var $7944 = Parser$Reply$error$(Parser$Error$combine$($7943, $7941));
                                                        var $7942 = $7944;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7945 = Parser$Reply$error$($7941);
                                                        var $7942 = $7945;
                                                        break;
                                                };
                                                var $7940 = $7942;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7946 = self.pst;
                                                var $7947 = self.val;
                                                var self = $7946;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7949 = self.err;
                                                        var $7950 = self.nam;
                                                        var $7951 = self.ini;
                                                        var $7952 = self.idx;
                                                        var $7953 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7939, $7949), $7950, $7951, $7952, $7953);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7955 = self.err;
                                                                var _reply$35 = Parser$text$("b", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7957 = self.err;
                                                                        var self = $7955;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7959 = self.value;
                                                                                var $7960 = Parser$Reply$error$(Parser$Error$combine$($7959, $7957));
                                                                                var $7958 = $7960;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7961 = Parser$Reply$error$($7957);
                                                                                var $7958 = $7961;
                                                                                break;
                                                                        };
                                                                        var $7956 = $7958;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7962 = self.pst;
                                                                        var self = $7962;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7964 = self.err;
                                                                                var $7965 = self.nam;
                                                                                var $7966 = self.ini;
                                                                                var $7967 = self.idx;
                                                                                var $7968 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7955, $7964), $7965, $7966, $7967, $7968);
                                                                                var _term$44 = Kind$Term$ref$("U8.from_nat");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$nat$($7947));
                                                                                var $7969 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $7963 = $7969;
                                                                                break;
                                                                        };
                                                                        var $7956 = $7963;
                                                                        break;
                                                                };
                                                                var $7954 = $7956;
                                                                break;
                                                        };
                                                        var $7948 = $7954;
                                                        break;
                                                };
                                                var $7940 = $7948;
                                                break;
                                        };
                                        var $7938 = $7940;
                                        break;
                                };
                                var $7932 = $7938;
                                break;
                        };
                        var $7925 = $7932;
                        break;
                };
                var $7923 = $7925;
                break;
        };
        return $7923;
    }));

    function Parser$Number$new$(_sign$1, _numb$2, _frac$3) {
        var $7970 = ({
            _: 'Parser.Number.new',
            'sign': _sign$1,
            'numb': _numb$2,
            'frac': _frac$3
        });
        return $7970;
    };
    const Parser$Number$new = x0 => x1 => x2 => Parser$Number$new$(x0, x1, x2);

    function Parser$num$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7972 = self.err;
                var _reply$7 = Parser$choice$(List$cons$((_pst$7 => {
                    var self = _pst$7;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $7975 = self.err;
                            var _reply$13 = Parser$text$("+", _pst$7);
                            var self = _reply$13;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $7977 = self.err;
                                    var self = $7975;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $7979 = self.value;
                                            var $7980 = Parser$Reply$error$(Parser$Error$combine$($7979, $7977));
                                            var $7978 = $7980;
                                            break;
                                        case 'Maybe.none':
                                            var $7981 = Parser$Reply$error$($7977);
                                            var $7978 = $7981;
                                            break;
                                    };
                                    var $7976 = $7978;
                                    break;
                                case 'Parser.Reply.value':
                                    var $7982 = self.pst;
                                    var self = $7982;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $7984 = self.err;
                                            var $7985 = self.nam;
                                            var $7986 = self.ini;
                                            var $7987 = self.idx;
                                            var $7988 = self.str;
                                            var _reply$pst$21 = Parser$State$new$(Parser$Error$maybe_combine$($7975, $7984), $7985, $7986, $7987, $7988);
                                            var $7989 = Parser$Reply$value$(_reply$pst$21, Maybe$some$(Bool$true));
                                            var $7983 = $7989;
                                            break;
                                    };
                                    var $7976 = $7983;
                                    break;
                            };
                            var $7974 = $7976;
                            break;
                    };
                    return $7974;
                }), List$cons$((_pst$7 => {
                    var self = _pst$7;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $7991 = self.err;
                            var _reply$13 = Parser$text$("-", _pst$7);
                            var self = _reply$13;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $7993 = self.err;
                                    var self = $7991;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $7995 = self.value;
                                            var $7996 = Parser$Reply$error$(Parser$Error$combine$($7995, $7993));
                                            var $7994 = $7996;
                                            break;
                                        case 'Maybe.none':
                                            var $7997 = Parser$Reply$error$($7993);
                                            var $7994 = $7997;
                                            break;
                                    };
                                    var $7992 = $7994;
                                    break;
                                case 'Parser.Reply.value':
                                    var $7998 = self.pst;
                                    var self = $7998;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $8000 = self.err;
                                            var $8001 = self.nam;
                                            var $8002 = self.ini;
                                            var $8003 = self.idx;
                                            var $8004 = self.str;
                                            var _reply$pst$21 = Parser$State$new$(Parser$Error$maybe_combine$($7991, $8000), $8001, $8002, $8003, $8004);
                                            var $8005 = Parser$Reply$value$(_reply$pst$21, Maybe$some$(Bool$false));
                                            var $7999 = $8005;
                                            break;
                                    };
                                    var $7992 = $7999;
                                    break;
                            };
                            var $7990 = $7992;
                            break;
                    };
                    return $7990;
                }), List$cons$((_pst$7 => {
                    var $8006 = Parser$Reply$value$(_pst$7, Maybe$none);
                    return $8006;
                }), List$nil))), _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8007 = self.err;
                        var self = $7972;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8009 = self.value;
                                var $8010 = Parser$Reply$error$(Parser$Error$combine$($8009, $8007));
                                var $8008 = $8010;
                                break;
                            case 'Maybe.none':
                                var $8011 = Parser$Reply$error$($8007);
                                var $8008 = $8011;
                                break;
                        };
                        var $7973 = $8008;
                        break;
                    case 'Parser.Reply.value':
                        var $8012 = self.pst;
                        var $8013 = self.val;
                        var self = $8012;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8015 = self.err;
                                var $8016 = self.nam;
                                var $8017 = self.ini;
                                var $8018 = self.idx;
                                var $8019 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7972, $8015), $8016, $8017, $8018, $8019);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8021 = self.err;
                                        var _reply$21 = Parser$choice$(List$cons$(Parser$hex_nat, List$cons$(Parser$nat, List$nil)), _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8023 = self.err;
                                                var self = $8021;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8025 = self.value;
                                                        var $8026 = Parser$Reply$error$(Parser$Error$combine$($8025, $8023));
                                                        var $8024 = $8026;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8027 = Parser$Reply$error$($8023);
                                                        var $8024 = $8027;
                                                        break;
                                                };
                                                var $8022 = $8024;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8028 = self.pst;
                                                var $8029 = self.val;
                                                var self = $8028;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8031 = self.err;
                                                        var $8032 = self.nam;
                                                        var $8033 = self.ini;
                                                        var $8034 = self.idx;
                                                        var $8035 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($8021, $8031), $8032, $8033, $8034, $8035);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8037 = self.err;
                                                                var self = _reply$pst$29;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $8039 = self.err;
                                                                        var _reply$40 = Parser$maybe$(Parser$text("."), _reply$pst$29);
                                                                        var self = _reply$40;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $8041 = self.err;
                                                                                var self = $8039;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $8043 = self.value;
                                                                                        var $8044 = Parser$Reply$error$(Parser$Error$combine$($8043, $8041));
                                                                                        var $8042 = $8044;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $8045 = Parser$Reply$error$($8041);
                                                                                        var $8042 = $8045;
                                                                                        break;
                                                                                };
                                                                                var $8040 = $8042;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $8046 = self.pst;
                                                                                var self = $8046;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8048 = self.err;
                                                                                        var $8049 = self.nam;
                                                                                        var $8050 = self.ini;
                                                                                        var $8051 = self.idx;
                                                                                        var $8052 = self.str;
                                                                                        var _reply$pst$48 = Parser$State$new$(Parser$Error$maybe_combine$($8039, $8048), $8049, $8050, $8051, $8052);
                                                                                        var self = _reply$pst$48;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $8054 = self.err;
                                                                                                var _reply$54 = Parser$maybe$(Parser$nat, _reply$pst$48);
                                                                                                var self = _reply$54;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.Reply.error':
                                                                                                        var $8056 = self.err;
                                                                                                        var self = $8054;
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $8058 = self.value;
                                                                                                                var $8059 = Parser$Reply$error$(Parser$Error$combine$($8058, $8056));
                                                                                                                var $8057 = $8059;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $8060 = Parser$Reply$error$($8056);
                                                                                                                var $8057 = $8060;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $8055 = $8057;
                                                                                                        break;
                                                                                                    case 'Parser.Reply.value':
                                                                                                        var $8061 = self.pst;
                                                                                                        var $8062 = self.val;
                                                                                                        var self = $8061;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $8064 = self.err;
                                                                                                                var $8065 = self.nam;
                                                                                                                var $8066 = self.ini;
                                                                                                                var $8067 = self.idx;
                                                                                                                var $8068 = self.str;
                                                                                                                var _reply$pst$62 = Parser$State$new$(Parser$Error$maybe_combine$($8054, $8064), $8065, $8066, $8067, $8068);
                                                                                                                var $8069 = Parser$Reply$value$(_reply$pst$62, $8062);
                                                                                                                var $8063 = $8069;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $8055 = $8063;
                                                                                                        break;
                                                                                                };
                                                                                                var $8053 = $8055;
                                                                                                break;
                                                                                        };
                                                                                        var $8047 = $8053;
                                                                                        break;
                                                                                };
                                                                                var $8040 = $8047;
                                                                                break;
                                                                        };
                                                                        var _reply$35 = $8040;
                                                                        break;
                                                                };
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8070 = self.err;
                                                                        var self = $8037;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8072 = self.value;
                                                                                var $8073 = Parser$Reply$error$(Parser$Error$combine$($8072, $8070));
                                                                                var $8071 = $8073;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8074 = Parser$Reply$error$($8070);
                                                                                var $8071 = $8074;
                                                                                break;
                                                                        };
                                                                        var $8038 = $8071;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8075 = self.pst;
                                                                        var $8076 = self.val;
                                                                        var self = $8075;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8078 = self.err;
                                                                                var $8079 = self.nam;
                                                                                var $8080 = self.ini;
                                                                                var $8081 = self.idx;
                                                                                var $8082 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($8037, $8078), $8079, $8080, $8081, $8082);
                                                                                var $8083 = Parser$Reply$value$(_reply$pst$43, Parser$Number$new$($8013, $8029, $8076));
                                                                                var $8077 = $8083;
                                                                                break;
                                                                        };
                                                                        var $8038 = $8077;
                                                                        break;
                                                                };
                                                                var $8036 = $8038;
                                                                break;
                                                        };
                                                        var $8030 = $8036;
                                                        break;
                                                };
                                                var $8022 = $8030;
                                                break;
                                        };
                                        var $8020 = $8022;
                                        break;
                                };
                                var $8014 = $8020;
                                break;
                        };
                        var $7973 = $8014;
                        break;
                };
                var $7971 = $7973;
                break;
        };
        return $7971;
    };
    const Parser$num = x0 => Parser$num$(x0);

    function Kind$Term$num$(_sign$1, _numb$2, _frac$3) {
        var $8084 = ({
            _: 'Kind.Term.num',
            'sign': _sign$1,
            'numb': _numb$2,
            'frac': _frac$3
        });
        return $8084;
    };
    const Kind$Term$num = x0 => x1 => x2 => Kind$Term$num$(x0, x1, x2);

    function Kind$Parser$num$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $8086 = self.err;
                var _reply$7 = Parser$num$(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8088 = self.err;
                        var self = $8086;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8090 = self.value;
                                var $8091 = Parser$Reply$error$(Parser$Error$combine$($8090, $8088));
                                var $8089 = $8091;
                                break;
                            case 'Maybe.none':
                                var $8092 = Parser$Reply$error$($8088);
                                var $8089 = $8092;
                                break;
                        };
                        var $8087 = $8089;
                        break;
                    case 'Parser.Reply.value':
                        var $8093 = self.pst;
                        var $8094 = self.val;
                        var self = $8093;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8096 = self.err;
                                var $8097 = self.nam;
                                var $8098 = self.ini;
                                var $8099 = self.idx;
                                var $8100 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($8086, $8096), $8097, $8098, $8099, $8100);
                                var self = $8094;
                                switch (self._) {
                                    case 'Parser.Number.new':
                                        var $8102 = self.sign;
                                        var $8103 = self.numb;
                                        var $8104 = self.frac;
                                        var self = $8102;
                                        switch (self._) {
                                            case 'Maybe.none':
                                                var self = $8104;
                                                switch (self._) {
                                                    case 'Maybe.none':
                                                        var $8107 = (_pst$19 => {
                                                            var $8108 = Parser$Reply$value$(_pst$19, Kind$Term$nat$($8103));
                                                            return $8108;
                                                        });
                                                        var $8106 = $8107;
                                                        break;
                                                    case 'Maybe.some':
                                                        var $8109 = (_pst$20 => {
                                                            var $8110 = Parser$Reply$value$(_pst$20, Kind$Term$num$($8102, $8103, $8104));
                                                            return $8110;
                                                        });
                                                        var $8106 = $8109;
                                                        break;
                                                };
                                                var $8105 = $8106;
                                                break;
                                            case 'Maybe.some':
                                                var $8111 = (_pst$20 => {
                                                    var $8112 = Parser$Reply$value$(_pst$20, Kind$Term$num$($8102, $8103, $8104));
                                                    return $8112;
                                                });
                                                var $8105 = $8111;
                                                break;
                                        };
                                        var $8101 = $8105;
                                        break;
                                };
                                var $8101 = $8101(_reply$pst$15);
                                var $8095 = $8101;
                                break;
                        };
                        var $8087 = $8095;
                        break;
                };
                var $8085 = $8087;
                break;
        };
        return $8085;
    };
    const Kind$Parser$num = x0 => Kind$Parser$num$(x0);
    const Kind$Parser$reference = Kind$Parser$block("reference")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $8114 = self.err;
                var _reply$7 = Kind$Parser$name1$(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8116 = self.err;
                        var self = $8114;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8118 = self.value;
                                var $8119 = Parser$Reply$error$(Parser$Error$combine$($8118, $8116));
                                var $8117 = $8119;
                                break;
                            case 'Maybe.none':
                                var $8120 = Parser$Reply$error$($8116);
                                var $8117 = $8120;
                                break;
                        };
                        var $8115 = $8117;
                        break;
                    case 'Parser.Reply.value':
                        var $8121 = self.pst;
                        var $8122 = self.val;
                        var self = $8121;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8124 = self.err;
                                var $8125 = self.nam;
                                var $8126 = self.ini;
                                var $8127 = self.idx;
                                var $8128 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($8114, $8124), $8125, $8126, $8127, $8128);
                                var self = ($8122 === "Type");
                                if (self) {
                                    var $8130 = (_pst$16 => {
                                        var $8131 = Parser$Reply$value$(_pst$16, Kind$Term$typ);
                                        return $8131;
                                    });
                                    var $8129 = $8130;
                                } else {
                                    var self = ($8122 === "true");
                                    if (self) {
                                        var $8133 = (_pst$16 => {
                                            var $8134 = Parser$Reply$value$(_pst$16, Kind$Term$ref$("Bool.true"));
                                            return $8134;
                                        });
                                        var $8132 = $8133;
                                    } else {
                                        var self = ($8122 === "false");
                                        if (self) {
                                            var $8136 = (_pst$16 => {
                                                var $8137 = Parser$Reply$value$(_pst$16, Kind$Term$ref$("Bool.false"));
                                                return $8137;
                                            });
                                            var $8135 = $8136;
                                        } else {
                                            var self = ($8122 === "unit");
                                            if (self) {
                                                var $8139 = (_pst$16 => {
                                                    var $8140 = Parser$Reply$value$(_pst$16, Kind$Term$ref$("Unit.new"));
                                                    return $8140;
                                                });
                                                var $8138 = $8139;
                                            } else {
                                                var self = ($8122 === "none");
                                                if (self) {
                                                    var _term$16 = Kind$Term$ref$("Maybe.none");
                                                    var _term$17 = Kind$Term$app$(_term$16, Kind$Term$hol$(Bits$e));
                                                    var $8142 = (_pst$18 => {
                                                        var $8143 = Parser$Reply$value$(_pst$18, _term$17);
                                                        return $8143;
                                                    });
                                                    var $8141 = $8142;
                                                } else {
                                                    var self = ($8122 === "refl");
                                                    if (self) {
                                                        var _term$16 = Kind$Term$ref$("Equal.refl");
                                                        var _term$17 = Kind$Term$app$(_term$16, Kind$Term$hol$(Bits$e));
                                                        var _term$18 = Kind$Term$app$(_term$17, Kind$Term$hol$(Bits$e));
                                                        var $8145 = (_pst$19 => {
                                                            var $8146 = Parser$Reply$value$(_pst$19, _term$18);
                                                            return $8146;
                                                        });
                                                        var $8144 = $8145;
                                                    } else {
                                                        var $8147 = (_pst$16 => {
                                                            var $8148 = Parser$Reply$value$(_pst$16, Kind$Term$ref$($8122));
                                                            return $8148;
                                                        });
                                                        var $8144 = $8147;
                                                    };
                                                    var $8141 = $8144;
                                                };
                                                var $8138 = $8141;
                                            };
                                            var $8135 = $8138;
                                        };
                                        var $8132 = $8135;
                                    };
                                    var $8129 = $8132;
                                };
                                var $8129 = $8129(_reply$pst$15);
                                var $8123 = $8129;
                                break;
                        };
                        var $8115 = $8123;
                        break;
                };
                var $8113 = $8115;
                break;
        };
        return $8113;
    }));

    function Kind$Parser$text_now$(_text$1) {
        var $8149 = Parser$text(_text$1);
        return $8149;
    };
    const Kind$Parser$text_now = x0 => Kind$Parser$text_now$(x0);

    function Kind$Parser$items_now$(_ini$2, _parser$3, _end$4) {
        var $8150 = Parser$wrap1(Kind$Parser$text_now$(_ini$2))((_pst$5 => {
            var self = _pst$5;
            switch (self._) {
                case 'Parser.State.new':
                    var $8152 = self.err;
                    var _reply$11 = Kind$Parser$spaces(_pst$5);
                    var self = _reply$11;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $8154 = self.err;
                            var self = $8152;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $8156 = self.value;
                                    var $8157 = Parser$Reply$error$(Parser$Error$combine$($8156, $8154));
                                    var $8155 = $8157;
                                    break;
                                case 'Maybe.none':
                                    var $8158 = Parser$Reply$error$($8154);
                                    var $8155 = $8158;
                                    break;
                            };
                            var $8153 = $8155;
                            break;
                        case 'Parser.Reply.value':
                            var $8159 = self.pst;
                            var self = $8159;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $8161 = self.err;
                                    var $8162 = self.nam;
                                    var $8163 = self.ini;
                                    var $8164 = self.idx;
                                    var $8165 = self.str;
                                    var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($8152, $8161), $8162, $8163, $8164, $8165);
                                    var self = _reply$pst$19;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $8167 = self.err;
                                            var _reply$25 = _parser$3(_reply$pst$19);
                                            var self = _reply$25;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $8169 = self.err;
                                                    var self = $8167;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $8171 = self.value;
                                                            var $8172 = Parser$Reply$error$(Parser$Error$combine$($8171, $8169));
                                                            var $8170 = $8172;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $8173 = Parser$Reply$error$($8169);
                                                            var $8170 = $8173;
                                                            break;
                                                    };
                                                    var $8168 = $8170;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $8174 = self.pst;
                                                    var $8175 = self.val;
                                                    var self = $8174;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $8177 = self.err;
                                                            var $8178 = self.nam;
                                                            var $8179 = self.ini;
                                                            var $8180 = self.idx;
                                                            var $8181 = self.str;
                                                            var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($8167, $8177), $8178, $8179, $8180, $8181);
                                                            var self = _reply$pst$33;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $8183 = self.err;
                                                                    var _reply$39 = Parser$maybe$(Kind$Parser$text(","), _reply$pst$33);
                                                                    var self = _reply$39;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $8185 = self.err;
                                                                            var self = $8183;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $8187 = self.value;
                                                                                    var $8188 = Parser$Reply$error$(Parser$Error$combine$($8187, $8185));
                                                                                    var $8186 = $8188;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $8189 = Parser$Reply$error$($8185);
                                                                                    var $8186 = $8189;
                                                                                    break;
                                                                            };
                                                                            var $8184 = $8186;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $8190 = self.pst;
                                                                            var self = $8190;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $8192 = self.err;
                                                                                    var $8193 = self.nam;
                                                                                    var $8194 = self.ini;
                                                                                    var $8195 = self.idx;
                                                                                    var $8196 = self.str;
                                                                                    var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($8183, $8192), $8193, $8194, $8195, $8196);
                                                                                    var $8197 = Parser$Reply$value$(_reply$pst$47, $8175);
                                                                                    var $8191 = $8197;
                                                                                    break;
                                                                            };
                                                                            var $8184 = $8191;
                                                                            break;
                                                                    };
                                                                    var $8182 = $8184;
                                                                    break;
                                                            };
                                                            var $8176 = $8182;
                                                            break;
                                                    };
                                                    var $8168 = $8176;
                                                    break;
                                            };
                                            var $8166 = $8168;
                                            break;
                                    };
                                    var $8160 = $8166;
                                    break;
                            };
                            var $8153 = $8160;
                            break;
                    };
                    var $8151 = $8153;
                    break;
            };
            return $8151;
        }))(Kind$Parser$text(_end$4));
        return $8150;
    };
    const Kind$Parser$items_now = x0 => x1 => x2 => Kind$Parser$items_now$(x0, x1, x2);
    const List$for = a0 => a1 => a2 => (list_for(a0)(a1)(a2));

    function Kind$Parser$application$(_func$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8199 = self.err;
                var _reply$8 = Kind$Parser$items_now$("(", Kind$Parser$term, ")")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8201 = self.err;
                        var self = $8199;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8203 = self.value;
                                var $8204 = Parser$Reply$error$(Parser$Error$combine$($8203, $8201));
                                var $8202 = $8204;
                                break;
                            case 'Maybe.none':
                                var $8205 = Parser$Reply$error$($8201);
                                var $8202 = $8205;
                                break;
                        };
                        var $8200 = $8202;
                        break;
                    case 'Parser.Reply.value':
                        var $8206 = self.pst;
                        var $8207 = self.val;
                        var self = $8206;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8209 = self.err;
                                var $8210 = self.nam;
                                var $8211 = self.ini;
                                var $8212 = self.idx;
                                var $8213 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8199, $8209), $8210, $8211, $8212, $8213);
                                var _expr$17 = (() => {
                                    var $8216 = _func$1;
                                    var $8217 = $8207;
                                    let _f$18 = $8216;
                                    let _x$17;
                                    while ($8217._ === 'List.cons') {
                                        _x$17 = $8217.head;
                                        var $8216 = Kind$Term$app$(_f$18, _x$17);
                                        _f$18 = $8216;
                                        $8217 = $8217.tail;
                                    }
                                    return _f$18;
                                })();
                                var $8214 = Parser$Reply$value$(_reply$pst$16, _expr$17);
                                var $8208 = $8214;
                                break;
                        };
                        var $8200 = $8208;
                        break;
                };
                var $8198 = $8200;
                break;
        };
        return $8198;
    };
    const Kind$Parser$application = x0 => x1 => Kind$Parser$application$(x0, x1);

    function Kind$Parser$application$erased$(_func$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8219 = self.err;
                var _reply$8 = Kind$Parser$items_now$("<", Kind$Parser$term, ">")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8221 = self.err;
                        var self = $8219;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8223 = self.value;
                                var $8224 = Parser$Reply$error$(Parser$Error$combine$($8223, $8221));
                                var $8222 = $8224;
                                break;
                            case 'Maybe.none':
                                var $8225 = Parser$Reply$error$($8221);
                                var $8222 = $8225;
                                break;
                        };
                        var $8220 = $8222;
                        break;
                    case 'Parser.Reply.value':
                        var $8226 = self.pst;
                        var $8227 = self.val;
                        var self = $8226;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8229 = self.err;
                                var $8230 = self.nam;
                                var $8231 = self.ini;
                                var $8232 = self.idx;
                                var $8233 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8219, $8229), $8230, $8231, $8232, $8233);
                                var _expr$17 = (() => {
                                    var $8236 = _func$1;
                                    var $8237 = $8227;
                                    let _f$18 = $8236;
                                    let _x$17;
                                    while ($8237._ === 'List.cons') {
                                        _x$17 = $8237.head;
                                        var $8236 = Kind$Term$app$(_f$18, _x$17);
                                        _f$18 = $8236;
                                        $8237 = $8237.tail;
                                    }
                                    return _f$18;
                                })();
                                var $8234 = Parser$Reply$value$(_reply$pst$16, _expr$17);
                                var $8228 = $8234;
                                break;
                        };
                        var $8220 = $8228;
                        break;
                };
                var $8218 = $8220;
                break;
        };
        return $8218;
    };
    const Kind$Parser$application$erased = x0 => x1 => Kind$Parser$application$erased$(x0, x1);

    function Kind$Parser$list_set$(_list$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8239 = self.err;
                var _reply$8 = Kind$Parser$text_now$("[")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8241 = self.err;
                        var self = $8239;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8243 = self.value;
                                var $8244 = Parser$Reply$error$(Parser$Error$combine$($8243, $8241));
                                var $8242 = $8244;
                                break;
                            case 'Maybe.none':
                                var $8245 = Parser$Reply$error$($8241);
                                var $8242 = $8245;
                                break;
                        };
                        var $8240 = $8242;
                        break;
                    case 'Parser.Reply.value':
                        var $8246 = self.pst;
                        var self = $8246;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8248 = self.err;
                                var $8249 = self.nam;
                                var $8250 = self.ini;
                                var $8251 = self.idx;
                                var $8252 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8239, $8248), $8249, $8250, $8251, $8252);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8254 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8256 = self.err;
                                                var self = $8254;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8258 = self.value;
                                                        var $8259 = Parser$Reply$error$(Parser$Error$combine$($8258, $8256));
                                                        var $8257 = $8259;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8260 = Parser$Reply$error$($8256);
                                                        var $8257 = $8260;
                                                        break;
                                                };
                                                var $8255 = $8257;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8261 = self.pst;
                                                var $8262 = self.val;
                                                var self = $8261;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8264 = self.err;
                                                        var $8265 = self.nam;
                                                        var $8266 = self.ini;
                                                        var $8267 = self.idx;
                                                        var $8268 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8254, $8264), $8265, $8266, $8267, $8268);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8270 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("]", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8272 = self.err;
                                                                        var self = $8270;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8274 = self.value;
                                                                                var $8275 = Parser$Reply$error$(Parser$Error$combine$($8274, $8272));
                                                                                var $8273 = $8275;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8276 = Parser$Reply$error$($8272);
                                                                                var $8273 = $8276;
                                                                                break;
                                                                        };
                                                                        var $8271 = $8273;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8277 = self.pst;
                                                                        var self = $8277;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8279 = self.err;
                                                                                var $8280 = self.nam;
                                                                                var $8281 = self.ini;
                                                                                var $8282 = self.idx;
                                                                                var $8283 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8270, $8279), $8280, $8281, $8282, $8283);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8285 = self.err;
                                                                                        var _reply$50 = Kind$Parser$text$("<-", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $8287 = self.err;
                                                                                                var self = $8285;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $8289 = self.value;
                                                                                                        var $8290 = Parser$Reply$error$(Parser$Error$combine$($8289, $8287));
                                                                                                        var $8288 = $8290;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $8291 = Parser$Reply$error$($8287);
                                                                                                        var $8288 = $8291;
                                                                                                        break;
                                                                                                };
                                                                                                var $8286 = $8288;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $8292 = self.pst;
                                                                                                var self = $8292;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $8294 = self.err;
                                                                                                        var $8295 = self.nam;
                                                                                                        var $8296 = self.ini;
                                                                                                        var $8297 = self.idx;
                                                                                                        var $8298 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($8285, $8294), $8295, $8296, $8297, $8298);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $8300 = self.err;
                                                                                                                var _reply$64 = Kind$Parser$term(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $8302 = self.err;
                                                                                                                        var self = $8300;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $8304 = self.value;
                                                                                                                                var $8305 = Parser$Reply$error$(Parser$Error$combine$($8304, $8302));
                                                                                                                                var $8303 = $8305;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $8306 = Parser$Reply$error$($8302);
                                                                                                                                var $8303 = $8306;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8301 = $8303;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $8307 = self.pst;
                                                                                                                        var $8308 = self.val;
                                                                                                                        var self = $8307;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $8310 = self.err;
                                                                                                                                var $8311 = self.nam;
                                                                                                                                var $8312 = self.ini;
                                                                                                                                var $8313 = self.idx;
                                                                                                                                var $8314 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($8300, $8310), $8311, $8312, $8313, $8314);
                                                                                                                                var _term$73 = Kind$Term$ref$("List.set");
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, $8262);
                                                                                                                                var _term$76 = Kind$Term$app$(_term$75, $8308);
                                                                                                                                var _term$77 = Kind$Term$app$(_term$76, _list$1);
                                                                                                                                var $8315 = Parser$Reply$value$(_reply$pst$72, _term$77);
                                                                                                                                var $8309 = $8315;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8301 = $8309;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $8299 = $8301;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $8293 = $8299;
                                                                                                        break;
                                                                                                };
                                                                                                var $8286 = $8293;
                                                                                                break;
                                                                                        };
                                                                                        var $8284 = $8286;
                                                                                        break;
                                                                                };
                                                                                var $8278 = $8284;
                                                                                break;
                                                                        };
                                                                        var $8271 = $8278;
                                                                        break;
                                                                };
                                                                var $8269 = $8271;
                                                                break;
                                                        };
                                                        var $8263 = $8269;
                                                        break;
                                                };
                                                var $8255 = $8263;
                                                break;
                                        };
                                        var $8253 = $8255;
                                        break;
                                };
                                var $8247 = $8253;
                                break;
                        };
                        var $8240 = $8247;
                        break;
                };
                var $8238 = $8240;
                break;
        };
        return $8238;
    };
    const Kind$Parser$list_set = x0 => x1 => Kind$Parser$list_set$(x0, x1);

    function Kind$Parser$list_get$(_list$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8317 = self.err;
                var _reply$8 = Kind$Parser$text_now$("[")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8319 = self.err;
                        var self = $8317;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8321 = self.value;
                                var $8322 = Parser$Reply$error$(Parser$Error$combine$($8321, $8319));
                                var $8320 = $8322;
                                break;
                            case 'Maybe.none':
                                var $8323 = Parser$Reply$error$($8319);
                                var $8320 = $8323;
                                break;
                        };
                        var $8318 = $8320;
                        break;
                    case 'Parser.Reply.value':
                        var $8324 = self.pst;
                        var self = $8324;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8326 = self.err;
                                var $8327 = self.nam;
                                var $8328 = self.ini;
                                var $8329 = self.idx;
                                var $8330 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8317, $8326), $8327, $8328, $8329, $8330);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8332 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8334 = self.err;
                                                var self = $8332;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8336 = self.value;
                                                        var $8337 = Parser$Reply$error$(Parser$Error$combine$($8336, $8334));
                                                        var $8335 = $8337;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8338 = Parser$Reply$error$($8334);
                                                        var $8335 = $8338;
                                                        break;
                                                };
                                                var $8333 = $8335;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8339 = self.pst;
                                                var $8340 = self.val;
                                                var self = $8339;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8342 = self.err;
                                                        var $8343 = self.nam;
                                                        var $8344 = self.ini;
                                                        var $8345 = self.idx;
                                                        var $8346 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8332, $8342), $8343, $8344, $8345, $8346);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8348 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("]", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8350 = self.err;
                                                                        var self = $8348;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8352 = self.value;
                                                                                var $8353 = Parser$Reply$error$(Parser$Error$combine$($8352, $8350));
                                                                                var $8351 = $8353;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8354 = Parser$Reply$error$($8350);
                                                                                var $8351 = $8354;
                                                                                break;
                                                                        };
                                                                        var $8349 = $8351;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8355 = self.pst;
                                                                        var self = $8355;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8357 = self.err;
                                                                                var $8358 = self.nam;
                                                                                var $8359 = self.ini;
                                                                                var $8360 = self.idx;
                                                                                var $8361 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8348, $8357), $8358, $8359, $8360, $8361);
                                                                                var _term$45 = Kind$Term$ref$("List.get");
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, $8340);
                                                                                var _term$48 = Kind$Term$app$(_term$47, _list$1);
                                                                                var $8362 = Parser$Reply$value$(_reply$pst$44, _term$48);
                                                                                var $8356 = $8362;
                                                                                break;
                                                                        };
                                                                        var $8349 = $8356;
                                                                        break;
                                                                };
                                                                var $8347 = $8349;
                                                                break;
                                                        };
                                                        var $8341 = $8347;
                                                        break;
                                                };
                                                var $8333 = $8341;
                                                break;
                                        };
                                        var $8331 = $8333;
                                        break;
                                };
                                var $8325 = $8331;
                                break;
                        };
                        var $8318 = $8325;
                        break;
                };
                var $8316 = $8318;
                break;
        };
        return $8316;
    };
    const Kind$Parser$list_get = x0 => x1 => Kind$Parser$list_get$(x0, x1);

    function Kind$Parser$map_set$(_map$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8364 = self.err;
                var _reply$8 = Kind$Parser$text_now$("{")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8366 = self.err;
                        var self = $8364;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8368 = self.value;
                                var $8369 = Parser$Reply$error$(Parser$Error$combine$($8368, $8366));
                                var $8367 = $8369;
                                break;
                            case 'Maybe.none':
                                var $8370 = Parser$Reply$error$($8366);
                                var $8367 = $8370;
                                break;
                        };
                        var $8365 = $8367;
                        break;
                    case 'Parser.Reply.value':
                        var $8371 = self.pst;
                        var self = $8371;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8373 = self.err;
                                var $8374 = self.nam;
                                var $8375 = self.ini;
                                var $8376 = self.idx;
                                var $8377 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8364, $8373), $8374, $8375, $8376, $8377);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8379 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8381 = self.err;
                                                var self = $8379;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8383 = self.value;
                                                        var $8384 = Parser$Reply$error$(Parser$Error$combine$($8383, $8381));
                                                        var $8382 = $8384;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8385 = Parser$Reply$error$($8381);
                                                        var $8382 = $8385;
                                                        break;
                                                };
                                                var $8380 = $8382;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8386 = self.pst;
                                                var $8387 = self.val;
                                                var self = $8386;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8389 = self.err;
                                                        var $8390 = self.nam;
                                                        var $8391 = self.ini;
                                                        var $8392 = self.idx;
                                                        var $8393 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8379, $8389), $8390, $8391, $8392, $8393);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8395 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("}", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8397 = self.err;
                                                                        var self = $8395;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8399 = self.value;
                                                                                var $8400 = Parser$Reply$error$(Parser$Error$combine$($8399, $8397));
                                                                                var $8398 = $8400;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8401 = Parser$Reply$error$($8397);
                                                                                var $8398 = $8401;
                                                                                break;
                                                                        };
                                                                        var $8396 = $8398;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8402 = self.pst;
                                                                        var self = $8402;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8404 = self.err;
                                                                                var $8405 = self.nam;
                                                                                var $8406 = self.ini;
                                                                                var $8407 = self.idx;
                                                                                var $8408 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8395, $8404), $8405, $8406, $8407, $8408);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8410 = self.err;
                                                                                        var _reply$50 = Kind$Parser$text$("<-", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $8412 = self.err;
                                                                                                var self = $8410;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $8414 = self.value;
                                                                                                        var $8415 = Parser$Reply$error$(Parser$Error$combine$($8414, $8412));
                                                                                                        var $8413 = $8415;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $8416 = Parser$Reply$error$($8412);
                                                                                                        var $8413 = $8416;
                                                                                                        break;
                                                                                                };
                                                                                                var $8411 = $8413;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $8417 = self.pst;
                                                                                                var self = $8417;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $8419 = self.err;
                                                                                                        var $8420 = self.nam;
                                                                                                        var $8421 = self.ini;
                                                                                                        var $8422 = self.idx;
                                                                                                        var $8423 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($8410, $8419), $8420, $8421, $8422, $8423);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $8425 = self.err;
                                                                                                                var _reply$64 = Kind$Parser$term(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $8427 = self.err;
                                                                                                                        var self = $8425;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $8429 = self.value;
                                                                                                                                var $8430 = Parser$Reply$error$(Parser$Error$combine$($8429, $8427));
                                                                                                                                var $8428 = $8430;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $8431 = Parser$Reply$error$($8427);
                                                                                                                                var $8428 = $8431;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8426 = $8428;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $8432 = self.pst;
                                                                                                                        var $8433 = self.val;
                                                                                                                        var self = $8432;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $8435 = self.err;
                                                                                                                                var $8436 = self.nam;
                                                                                                                                var $8437 = self.ini;
                                                                                                                                var $8438 = self.idx;
                                                                                                                                var $8439 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($8425, $8435), $8436, $8437, $8438, $8439);
                                                                                                                                var _term$73 = Kind$Term$ref$("Map.set");
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, $8387);
                                                                                                                                var _term$76 = Kind$Term$app$(_term$75, $8433);
                                                                                                                                var _term$77 = Kind$Term$app$(_term$76, _map$1);
                                                                                                                                var $8440 = Parser$Reply$value$(_reply$pst$72, _term$77);
                                                                                                                                var $8434 = $8440;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8426 = $8434;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $8424 = $8426;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $8418 = $8424;
                                                                                                        break;
                                                                                                };
                                                                                                var $8411 = $8418;
                                                                                                break;
                                                                                        };
                                                                                        var $8409 = $8411;
                                                                                        break;
                                                                                };
                                                                                var $8403 = $8409;
                                                                                break;
                                                                        };
                                                                        var $8396 = $8403;
                                                                        break;
                                                                };
                                                                var $8394 = $8396;
                                                                break;
                                                        };
                                                        var $8388 = $8394;
                                                        break;
                                                };
                                                var $8380 = $8388;
                                                break;
                                        };
                                        var $8378 = $8380;
                                        break;
                                };
                                var $8372 = $8378;
                                break;
                        };
                        var $8365 = $8372;
                        break;
                };
                var $8363 = $8365;
                break;
        };
        return $8363;
    };
    const Kind$Parser$map_set = x0 => x1 => Kind$Parser$map_set$(x0, x1);

    function Kind$Parser$map_get$(_map$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8442 = self.err;
                var _reply$8 = Kind$Parser$text_now$("{")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8444 = self.err;
                        var self = $8442;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8446 = self.value;
                                var $8447 = Parser$Reply$error$(Parser$Error$combine$($8446, $8444));
                                var $8445 = $8447;
                                break;
                            case 'Maybe.none':
                                var $8448 = Parser$Reply$error$($8444);
                                var $8445 = $8448;
                                break;
                        };
                        var $8443 = $8445;
                        break;
                    case 'Parser.Reply.value':
                        var $8449 = self.pst;
                        var self = $8449;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8451 = self.err;
                                var $8452 = self.nam;
                                var $8453 = self.ini;
                                var $8454 = self.idx;
                                var $8455 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8442, $8451), $8452, $8453, $8454, $8455);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8457 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8459 = self.err;
                                                var self = $8457;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8461 = self.value;
                                                        var $8462 = Parser$Reply$error$(Parser$Error$combine$($8461, $8459));
                                                        var $8460 = $8462;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8463 = Parser$Reply$error$($8459);
                                                        var $8460 = $8463;
                                                        break;
                                                };
                                                var $8458 = $8460;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8464 = self.pst;
                                                var $8465 = self.val;
                                                var self = $8464;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8467 = self.err;
                                                        var $8468 = self.nam;
                                                        var $8469 = self.ini;
                                                        var $8470 = self.idx;
                                                        var $8471 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8457, $8467), $8468, $8469, $8470, $8471);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8473 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("}", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8475 = self.err;
                                                                        var self = $8473;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8477 = self.value;
                                                                                var $8478 = Parser$Reply$error$(Parser$Error$combine$($8477, $8475));
                                                                                var $8476 = $8478;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8479 = Parser$Reply$error$($8475);
                                                                                var $8476 = $8479;
                                                                                break;
                                                                        };
                                                                        var $8474 = $8476;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8480 = self.pst;
                                                                        var self = $8480;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8482 = self.err;
                                                                                var $8483 = self.nam;
                                                                                var $8484 = self.ini;
                                                                                var $8485 = self.idx;
                                                                                var $8486 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8473, $8482), $8483, $8484, $8485, $8486);
                                                                                var _term$45 = Kind$Term$ref$("Map.get");
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, $8465);
                                                                                var _term$48 = Kind$Term$app$(_term$47, _map$1);
                                                                                var $8487 = Parser$Reply$value$(_reply$pst$44, _term$48);
                                                                                var $8481 = $8487;
                                                                                break;
                                                                        };
                                                                        var $8474 = $8481;
                                                                        break;
                                                                };
                                                                var $8472 = $8474;
                                                                break;
                                                        };
                                                        var $8466 = $8472;
                                                        break;
                                                };
                                                var $8458 = $8466;
                                                break;
                                        };
                                        var $8456 = $8458;
                                        break;
                                };
                                var $8450 = $8456;
                                break;
                        };
                        var $8443 = $8450;
                        break;
                };
                var $8441 = $8443;
                break;
        };
        return $8441;
    };
    const Kind$Parser$map_get = x0 => x1 => Kind$Parser$map_get$(x0, x1);

    function Kind$Term$set$(_expr$1, _fkey$2, _fval$3) {
        var $8488 = ({
            _: 'Kind.Term.set',
            'expr': _expr$1,
            'fkey': _fkey$2,
            'fval': _fval$3
        });
        return $8488;
    };
    const Kind$Term$set = x0 => x1 => x2 => Kind$Term$set$(x0, x1, x2);

    function Kind$Parser$field_set$(_term$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8490 = self.err;
                var _reply$8 = Kind$Parser$text$("@", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8492 = self.err;
                        var self = $8490;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8494 = self.value;
                                var $8495 = Parser$Reply$error$(Parser$Error$combine$($8494, $8492));
                                var $8493 = $8495;
                                break;
                            case 'Maybe.none':
                                var $8496 = Parser$Reply$error$($8492);
                                var $8493 = $8496;
                                break;
                        };
                        var $8491 = $8493;
                        break;
                    case 'Parser.Reply.value':
                        var $8497 = self.pst;
                        var self = $8497;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8499 = self.err;
                                var $8500 = self.nam;
                                var $8501 = self.ini;
                                var $8502 = self.idx;
                                var $8503 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8490, $8499), $8500, $8501, $8502, $8503);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8505 = self.err;
                                        var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8507 = self.err;
                                                var self = $8505;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8509 = self.value;
                                                        var $8510 = Parser$Reply$error$(Parser$Error$combine$($8509, $8507));
                                                        var $8508 = $8510;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8511 = Parser$Reply$error$($8507);
                                                        var $8508 = $8511;
                                                        break;
                                                };
                                                var $8506 = $8508;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8512 = self.pst;
                                                var $8513 = self.val;
                                                var self = $8512;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8515 = self.err;
                                                        var $8516 = self.nam;
                                                        var $8517 = self.ini;
                                                        var $8518 = self.idx;
                                                        var $8519 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8505, $8515), $8516, $8517, $8518, $8519);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8521 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("<-", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8523 = self.err;
                                                                        var self = $8521;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8525 = self.value;
                                                                                var $8526 = Parser$Reply$error$(Parser$Error$combine$($8525, $8523));
                                                                                var $8524 = $8526;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8527 = Parser$Reply$error$($8523);
                                                                                var $8524 = $8527;
                                                                                break;
                                                                        };
                                                                        var $8522 = $8524;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8528 = self.pst;
                                                                        var self = $8528;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8530 = self.err;
                                                                                var $8531 = self.nam;
                                                                                var $8532 = self.ini;
                                                                                var $8533 = self.idx;
                                                                                var $8534 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8521, $8530), $8531, $8532, $8533, $8534);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8536 = self.err;
                                                                                        var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $8538 = self.err;
                                                                                                var self = $8536;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $8540 = self.value;
                                                                                                        var $8541 = Parser$Reply$error$(Parser$Error$combine$($8540, $8538));
                                                                                                        var $8539 = $8541;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $8542 = Parser$Reply$error$($8538);
                                                                                                        var $8539 = $8542;
                                                                                                        break;
                                                                                                };
                                                                                                var $8537 = $8539;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $8543 = self.pst;
                                                                                                var $8544 = self.val;
                                                                                                var self = $8543;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $8546 = self.err;
                                                                                                        var $8547 = self.nam;
                                                                                                        var $8548 = self.ini;
                                                                                                        var $8549 = self.idx;
                                                                                                        var $8550 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($8536, $8546), $8547, $8548, $8549, $8550);
                                                                                                        var $8551 = Parser$Reply$value$(_reply$pst$58, Kind$Term$set$(_term$1, $8513, $8544));
                                                                                                        var $8545 = $8551;
                                                                                                        break;
                                                                                                };
                                                                                                var $8537 = $8545;
                                                                                                break;
                                                                                        };
                                                                                        var $8535 = $8537;
                                                                                        break;
                                                                                };
                                                                                var $8529 = $8535;
                                                                                break;
                                                                        };
                                                                        var $8522 = $8529;
                                                                        break;
                                                                };
                                                                var $8520 = $8522;
                                                                break;
                                                        };
                                                        var $8514 = $8520;
                                                        break;
                                                };
                                                var $8506 = $8514;
                                                break;
                                        };
                                        var $8504 = $8506;
                                        break;
                                };
                                var $8498 = $8504;
                                break;
                        };
                        var $8491 = $8498;
                        break;
                };
                var $8489 = $8491;
                break;
        };
        return $8489;
    };
    const Kind$Parser$field_set = x0 => x1 => Kind$Parser$field_set$(x0, x1);

    function Kind$Term$get$(_expr$1, _fkey$2) {
        var $8552 = ({
            _: 'Kind.Term.get',
            'expr': _expr$1,
            'fkey': _fkey$2
        });
        return $8552;
    };
    const Kind$Term$get = x0 => x1 => Kind$Term$get$(x0, x1);

    function Kind$Parser$field_get$(_term$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8554 = self.err;
                var _reply$8 = Kind$Parser$text$("@", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8556 = self.err;
                        var self = $8554;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8558 = self.value;
                                var $8559 = Parser$Reply$error$(Parser$Error$combine$($8558, $8556));
                                var $8557 = $8559;
                                break;
                            case 'Maybe.none':
                                var $8560 = Parser$Reply$error$($8556);
                                var $8557 = $8560;
                                break;
                        };
                        var $8555 = $8557;
                        break;
                    case 'Parser.Reply.value':
                        var $8561 = self.pst;
                        var self = $8561;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8563 = self.err;
                                var $8564 = self.nam;
                                var $8565 = self.ini;
                                var $8566 = self.idx;
                                var $8567 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8554, $8563), $8564, $8565, $8566, $8567);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8569 = self.err;
                                        var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8571 = self.err;
                                                var self = $8569;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8573 = self.value;
                                                        var $8574 = Parser$Reply$error$(Parser$Error$combine$($8573, $8571));
                                                        var $8572 = $8574;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8575 = Parser$Reply$error$($8571);
                                                        var $8572 = $8575;
                                                        break;
                                                };
                                                var $8570 = $8572;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8576 = self.pst;
                                                var $8577 = self.val;
                                                var self = $8576;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8579 = self.err;
                                                        var $8580 = self.nam;
                                                        var $8581 = self.ini;
                                                        var $8582 = self.idx;
                                                        var $8583 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8569, $8579), $8580, $8581, $8582, $8583);
                                                        var $8584 = Parser$Reply$value$(_reply$pst$30, Kind$Term$get$(_term$1, $8577));
                                                        var $8578 = $8584;
                                                        break;
                                                };
                                                var $8570 = $8578;
                                                break;
                                        };
                                        var $8568 = $8570;
                                        break;
                                };
                                var $8562 = $8568;
                                break;
                        };
                        var $8555 = $8562;
                        break;
                };
                var $8553 = $8555;
                break;
        };
        return $8553;
    };
    const Kind$Parser$field_get = x0 => x1 => Kind$Parser$field_get$(x0, x1);

    function Kind$Parser$arrow$(_xtyp$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8586 = self.err;
                var _reply$8 = Kind$Parser$text$("->", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8588 = self.err;
                        var self = $8586;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8590 = self.value;
                                var $8591 = Parser$Reply$error$(Parser$Error$combine$($8590, $8588));
                                var $8589 = $8591;
                                break;
                            case 'Maybe.none':
                                var $8592 = Parser$Reply$error$($8588);
                                var $8589 = $8592;
                                break;
                        };
                        var $8587 = $8589;
                        break;
                    case 'Parser.Reply.value':
                        var $8593 = self.pst;
                        var self = $8593;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8595 = self.err;
                                var $8596 = self.nam;
                                var $8597 = self.ini;
                                var $8598 = self.idx;
                                var $8599 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8586, $8595), $8596, $8597, $8598, $8599);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8601 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8603 = self.err;
                                                var self = $8601;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8605 = self.value;
                                                        var $8606 = Parser$Reply$error$(Parser$Error$combine$($8605, $8603));
                                                        var $8604 = $8606;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8607 = Parser$Reply$error$($8603);
                                                        var $8604 = $8607;
                                                        break;
                                                };
                                                var $8602 = $8604;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8608 = self.pst;
                                                var $8609 = self.val;
                                                var self = $8608;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8611 = self.err;
                                                        var $8612 = self.nam;
                                                        var $8613 = self.ini;
                                                        var $8614 = self.idx;
                                                        var $8615 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8601, $8611), $8612, $8613, $8614, $8615);
                                                        var $8616 = Parser$Reply$value$(_reply$pst$30, Kind$Term$all$(Bool$false, "", "", _xtyp$1, (_s$31 => _x$32 => {
                                                            var $8617 = $8609;
                                                            return $8617;
                                                        })));
                                                        var $8610 = $8616;
                                                        break;
                                                };
                                                var $8602 = $8610;
                                                break;
                                        };
                                        var $8600 = $8602;
                                        break;
                                };
                                var $8594 = $8600;
                                break;
                        };
                        var $8587 = $8594;
                        break;
                };
                var $8585 = $8587;
                break;
        };
        return $8585;
    };
    const Kind$Parser$arrow = x0 => x1 => Kind$Parser$arrow$(x0, x1);

    function Kind$Parser$concat$(_lst0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8619 = self.err;
                var _reply$8 = Kind$Parser$text$("++", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8621 = self.err;
                        var self = $8619;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8623 = self.value;
                                var $8624 = Parser$Reply$error$(Parser$Error$combine$($8623, $8621));
                                var $8622 = $8624;
                                break;
                            case 'Maybe.none':
                                var $8625 = Parser$Reply$error$($8621);
                                var $8622 = $8625;
                                break;
                        };
                        var $8620 = $8622;
                        break;
                    case 'Parser.Reply.value':
                        var $8626 = self.pst;
                        var self = $8626;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8628 = self.err;
                                var $8629 = self.nam;
                                var $8630 = self.ini;
                                var $8631 = self.idx;
                                var $8632 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8619, $8628), $8629, $8630, $8631, $8632);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8634 = self.err;
                                        var _reply$22 = Parser$text$(" ", _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8636 = self.err;
                                                var self = $8634;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8638 = self.value;
                                                        var $8639 = Parser$Reply$error$(Parser$Error$combine$($8638, $8636));
                                                        var $8637 = $8639;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8640 = Parser$Reply$error$($8636);
                                                        var $8637 = $8640;
                                                        break;
                                                };
                                                var $8635 = $8637;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8641 = self.pst;
                                                var self = $8641;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8643 = self.err;
                                                        var $8644 = self.nam;
                                                        var $8645 = self.ini;
                                                        var $8646 = self.idx;
                                                        var $8647 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8634, $8643), $8644, $8645, $8646, $8647);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8649 = self.err;
                                                                var _reply$36 = Kind$Parser$term(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8651 = self.err;
                                                                        var self = $8649;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8653 = self.value;
                                                                                var $8654 = Parser$Reply$error$(Parser$Error$combine$($8653, $8651));
                                                                                var $8652 = $8654;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8655 = Parser$Reply$error$($8651);
                                                                                var $8652 = $8655;
                                                                                break;
                                                                        };
                                                                        var $8650 = $8652;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8656 = self.pst;
                                                                        var $8657 = self.val;
                                                                        var self = $8656;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8659 = self.err;
                                                                                var $8660 = self.nam;
                                                                                var $8661 = self.ini;
                                                                                var $8662 = self.idx;
                                                                                var $8663 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8649, $8659), $8660, $8661, $8662, $8663);
                                                                                var _term$45 = Kind$Term$ref$("List.concat");
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, _lst0$1);
                                                                                var _term$48 = Kind$Term$app$(_term$47, $8657);
                                                                                var $8664 = Parser$Reply$value$(_reply$pst$44, _term$48);
                                                                                var $8658 = $8664;
                                                                                break;
                                                                        };
                                                                        var $8650 = $8658;
                                                                        break;
                                                                };
                                                                var $8648 = $8650;
                                                                break;
                                                        };
                                                        var $8642 = $8648;
                                                        break;
                                                };
                                                var $8635 = $8642;
                                                break;
                                        };
                                        var $8633 = $8635;
                                        break;
                                };
                                var $8627 = $8633;
                                break;
                        };
                        var $8620 = $8627;
                        break;
                };
                var $8618 = $8620;
                break;
        };
        return $8618;
    };
    const Kind$Parser$concat = x0 => x1 => Kind$Parser$concat$(x0, x1);

    function Kind$Parser$equality$(_val0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8666 = self.err;
                var _reply$8 = Kind$Parser$text$("==", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8668 = self.err;
                        var self = $8666;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8670 = self.value;
                                var $8671 = Parser$Reply$error$(Parser$Error$combine$($8670, $8668));
                                var $8669 = $8671;
                                break;
                            case 'Maybe.none':
                                var $8672 = Parser$Reply$error$($8668);
                                var $8669 = $8672;
                                break;
                        };
                        var $8667 = $8669;
                        break;
                    case 'Parser.Reply.value':
                        var $8673 = self.pst;
                        var self = $8673;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8675 = self.err;
                                var $8676 = self.nam;
                                var $8677 = self.ini;
                                var $8678 = self.idx;
                                var $8679 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8666, $8675), $8676, $8677, $8678, $8679);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8681 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8683 = self.err;
                                                var self = $8681;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8685 = self.value;
                                                        var $8686 = Parser$Reply$error$(Parser$Error$combine$($8685, $8683));
                                                        var $8684 = $8686;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8687 = Parser$Reply$error$($8683);
                                                        var $8684 = $8687;
                                                        break;
                                                };
                                                var $8682 = $8684;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8688 = self.pst;
                                                var $8689 = self.val;
                                                var self = $8688;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8691 = self.err;
                                                        var $8692 = self.nam;
                                                        var $8693 = self.ini;
                                                        var $8694 = self.idx;
                                                        var $8695 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8681, $8691), $8692, $8693, $8694, $8695);
                                                        var _term$31 = Kind$Term$ref$("Equal");
                                                        var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                        var _term$33 = Kind$Term$app$(_term$32, _val0$1);
                                                        var _term$34 = Kind$Term$app$(_term$33, $8689);
                                                        var $8696 = Parser$Reply$value$(_reply$pst$30, _term$34);
                                                        var $8690 = $8696;
                                                        break;
                                                };
                                                var $8682 = $8690;
                                                break;
                                        };
                                        var $8680 = $8682;
                                        break;
                                };
                                var $8674 = $8680;
                                break;
                        };
                        var $8667 = $8674;
                        break;
                };
                var $8665 = $8667;
                break;
        };
        return $8665;
    };
    const Kind$Parser$equality = x0 => x1 => Kind$Parser$equality$(x0, x1);

    function Kind$Term$ope$(_name$1, _arg0$2, _arg1$3) {
        var $8697 = ({
            _: 'Kind.Term.ope',
            'name': _name$1,
            'arg0': _arg0$2,
            'arg1': _arg1$3
        });
        return $8697;
    };
    const Kind$Term$ope = x0 => x1 => x2 => Kind$Term$ope$(x0, x1, x2);

    function Kind$Parser$op$(_sym$1, _ref$2, _val0$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $8699 = self.err;
                var _reply$10 = Kind$Parser$text$(_sym$1, _pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8701 = self.err;
                        var self = $8699;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8703 = self.value;
                                var $8704 = Parser$Reply$error$(Parser$Error$combine$($8703, $8701));
                                var $8702 = $8704;
                                break;
                            case 'Maybe.none':
                                var $8705 = Parser$Reply$error$($8701);
                                var $8702 = $8705;
                                break;
                        };
                        var $8700 = $8702;
                        break;
                    case 'Parser.Reply.value':
                        var $8706 = self.pst;
                        var self = $8706;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8708 = self.err;
                                var $8709 = self.nam;
                                var $8710 = self.ini;
                                var $8711 = self.idx;
                                var $8712 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($8699, $8708), $8709, $8710, $8711, $8712);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8714 = self.err;
                                        var _reply$24 = Kind$Parser$term(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8716 = self.err;
                                                var self = $8714;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8718 = self.value;
                                                        var $8719 = Parser$Reply$error$(Parser$Error$combine$($8718, $8716));
                                                        var $8717 = $8719;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8720 = Parser$Reply$error$($8716);
                                                        var $8717 = $8720;
                                                        break;
                                                };
                                                var $8715 = $8717;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8721 = self.pst;
                                                var $8722 = self.val;
                                                var self = $8721;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8724 = self.err;
                                                        var $8725 = self.nam;
                                                        var $8726 = self.ini;
                                                        var $8727 = self.idx;
                                                        var $8728 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($8714, $8724), $8725, $8726, $8727, $8728);
                                                        var $8729 = Parser$Reply$value$(_reply$pst$32, Kind$Term$ope$(_sym$1, _val0$3, $8722));
                                                        var $8723 = $8729;
                                                        break;
                                                };
                                                var $8715 = $8723;
                                                break;
                                        };
                                        var $8713 = $8715;
                                        break;
                                };
                                var $8707 = $8713;
                                break;
                        };
                        var $8700 = $8707;
                        break;
                };
                var $8698 = $8700;
                break;
        };
        return $8698;
    };
    const Kind$Parser$op = x0 => x1 => x2 => x3 => Kind$Parser$op$(x0, x1, x2, x3);
    const Kind$Parser$add = Kind$Parser$op("+")("Nat.add");
    const Kind$Parser$sub = Kind$Parser$op("-")("Nat.sub");
    const Kind$Parser$mul = Kind$Parser$op("*")("Nat.mul");
    const Kind$Parser$div = Kind$Parser$op("/")("Nat.div");
    const Kind$Parser$mod = Kind$Parser$op("%")("Nat.mod");
    const Kind$Parser$ltn = Kind$Parser$op("<?")("Nat.ltn");
    const Kind$Parser$lte = Kind$Parser$op("<=?")("Nat.lte");
    const Kind$Parser$eql = Kind$Parser$op("=?")("Nat.eql");
    const Kind$Parser$gte = Kind$Parser$op(">=?")("Nat.gte");
    const Kind$Parser$gtn = Kind$Parser$op(">?")("Nat.gtn");
    const Kind$Parser$and = Kind$Parser$op("&&")("Bool.and");
    const Kind$Parser$or = Kind$Parser$op("||")("Bool.or");

    function Kind$Parser$default$(_val0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8731 = self.err;
                var _reply$8 = Kind$Parser$text$("<>", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8733 = self.err;
                        var self = $8731;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8735 = self.value;
                                var $8736 = Parser$Reply$error$(Parser$Error$combine$($8735, $8733));
                                var $8734 = $8736;
                                break;
                            case 'Maybe.none':
                                var $8737 = Parser$Reply$error$($8733);
                                var $8734 = $8737;
                                break;
                        };
                        var $8732 = $8734;
                        break;
                    case 'Parser.Reply.value':
                        var $8738 = self.pst;
                        var self = $8738;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8740 = self.err;
                                var $8741 = self.nam;
                                var $8742 = self.ini;
                                var $8743 = self.idx;
                                var $8744 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8731, $8740), $8741, $8742, $8743, $8744);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8746 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8748 = self.err;
                                                var self = $8746;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8750 = self.value;
                                                        var $8751 = Parser$Reply$error$(Parser$Error$combine$($8750, $8748));
                                                        var $8749 = $8751;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8752 = Parser$Reply$error$($8748);
                                                        var $8749 = $8752;
                                                        break;
                                                };
                                                var $8747 = $8749;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8753 = self.pst;
                                                var $8754 = self.val;
                                                var self = $8753;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8756 = self.err;
                                                        var $8757 = self.nam;
                                                        var $8758 = self.ini;
                                                        var $8759 = self.idx;
                                                        var $8760 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8746, $8756), $8757, $8758, $8759, $8760);
                                                        var _term$31 = Kind$Term$ref$("Maybe.default");
                                                        var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                        var _term$33 = Kind$Term$app$(_term$32, _val0$1);
                                                        var _term$34 = Kind$Term$app$(_term$33, $8754);
                                                        var $8761 = Parser$Reply$value$(_reply$pst$30, _term$34);
                                                        var $8755 = $8761;
                                                        break;
                                                };
                                                var $8747 = $8755;
                                                break;
                                        };
                                        var $8745 = $8747;
                                        break;
                                };
                                var $8739 = $8745;
                                break;
                        };
                        var $8732 = $8739;
                        break;
                };
                var $8730 = $8732;
                break;
        };
        return $8730;
    };
    const Kind$Parser$default = x0 => x1 => Kind$Parser$default$(x0, x1);

    function Kind$Parser$cons$(_head$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8763 = self.err;
                var _reply$8 = Kind$Parser$text$("&", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8765 = self.err;
                        var self = $8763;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8767 = self.value;
                                var $8768 = Parser$Reply$error$(Parser$Error$combine$($8767, $8765));
                                var $8766 = $8768;
                                break;
                            case 'Maybe.none':
                                var $8769 = Parser$Reply$error$($8765);
                                var $8766 = $8769;
                                break;
                        };
                        var $8764 = $8766;
                        break;
                    case 'Parser.Reply.value':
                        var $8770 = self.pst;
                        var self = $8770;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8772 = self.err;
                                var $8773 = self.nam;
                                var $8774 = self.ini;
                                var $8775 = self.idx;
                                var $8776 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8763, $8772), $8773, $8774, $8775, $8776);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8778 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8780 = self.err;
                                                var self = $8778;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8782 = self.value;
                                                        var $8783 = Parser$Reply$error$(Parser$Error$combine$($8782, $8780));
                                                        var $8781 = $8783;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8784 = Parser$Reply$error$($8780);
                                                        var $8781 = $8784;
                                                        break;
                                                };
                                                var $8779 = $8781;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8785 = self.pst;
                                                var $8786 = self.val;
                                                var self = $8785;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8788 = self.err;
                                                        var $8789 = self.nam;
                                                        var $8790 = self.ini;
                                                        var $8791 = self.idx;
                                                        var $8792 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8778, $8788), $8789, $8790, $8791, $8792);
                                                        var _term$31 = Kind$Term$ref$("List.cons");
                                                        var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                        var _term$33 = Kind$Term$app$(_term$32, _head$1);
                                                        var _term$34 = Kind$Term$app$(_term$33, $8786);
                                                        var $8793 = Parser$Reply$value$(_reply$pst$30, _term$34);
                                                        var $8787 = $8793;
                                                        break;
                                                };
                                                var $8779 = $8787;
                                                break;
                                        };
                                        var $8777 = $8779;
                                        break;
                                };
                                var $8771 = $8777;
                                break;
                        };
                        var $8764 = $8771;
                        break;
                };
                var $8762 = $8764;
                break;
        };
        return $8762;
    };
    const Kind$Parser$cons = x0 => x1 => Kind$Parser$cons$(x0, x1);

    function Kind$Parser$string_concat$(_str0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8795 = self.err;
                var _reply$8 = Kind$Parser$text$("|", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8797 = self.err;
                        var self = $8795;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8799 = self.value;
                                var $8800 = Parser$Reply$error$(Parser$Error$combine$($8799, $8797));
                                var $8798 = $8800;
                                break;
                            case 'Maybe.none':
                                var $8801 = Parser$Reply$error$($8797);
                                var $8798 = $8801;
                                break;
                        };
                        var $8796 = $8798;
                        break;
                    case 'Parser.Reply.value':
                        var $8802 = self.pst;
                        var self = $8802;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8804 = self.err;
                                var $8805 = self.nam;
                                var $8806 = self.ini;
                                var $8807 = self.idx;
                                var $8808 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8795, $8804), $8805, $8806, $8807, $8808);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8810 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8812 = self.err;
                                                var self = $8810;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8814 = self.value;
                                                        var $8815 = Parser$Reply$error$(Parser$Error$combine$($8814, $8812));
                                                        var $8813 = $8815;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8816 = Parser$Reply$error$($8812);
                                                        var $8813 = $8816;
                                                        break;
                                                };
                                                var $8811 = $8813;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8817 = self.pst;
                                                var $8818 = self.val;
                                                var self = $8817;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8820 = self.err;
                                                        var $8821 = self.nam;
                                                        var $8822 = self.ini;
                                                        var $8823 = self.idx;
                                                        var $8824 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8810, $8820), $8821, $8822, $8823, $8824);
                                                        var _term$31 = Kind$Term$ref$("String.concat");
                                                        var _term$32 = Kind$Term$app$(_term$31, _str0$1);
                                                        var _term$33 = Kind$Term$app$(_term$32, $8818);
                                                        var $8825 = Parser$Reply$value$(_reply$pst$30, _term$33);
                                                        var $8819 = $8825;
                                                        break;
                                                };
                                                var $8811 = $8819;
                                                break;
                                        };
                                        var $8809 = $8811;
                                        break;
                                };
                                var $8803 = $8809;
                                break;
                        };
                        var $8796 = $8803;
                        break;
                };
                var $8794 = $8796;
                break;
        };
        return $8794;
    };
    const Kind$Parser$string_concat = x0 => x1 => Kind$Parser$string_concat$(x0, x1);

    function Kind$Parser$sigma$(_val0$1) {
        var $8826 = Kind$Parser$block("sigma")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $8828 = self.err;
                    var _reply$8 = Kind$Parser$text$("~", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $8830 = self.err;
                            var self = $8828;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $8832 = self.value;
                                    var $8833 = Parser$Reply$error$(Parser$Error$combine$($8832, $8830));
                                    var $8831 = $8833;
                                    break;
                                case 'Maybe.none':
                                    var $8834 = Parser$Reply$error$($8830);
                                    var $8831 = $8834;
                                    break;
                            };
                            var $8829 = $8831;
                            break;
                        case 'Parser.Reply.value':
                            var $8835 = self.pst;
                            var self = $8835;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $8837 = self.err;
                                    var $8838 = self.nam;
                                    var $8839 = self.ini;
                                    var $8840 = self.idx;
                                    var $8841 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8828, $8837), $8838, $8839, $8840, $8841);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $8843 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $8845 = self.err;
                                                    var self = $8843;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $8847 = self.value;
                                                            var $8848 = Parser$Reply$error$(Parser$Error$combine$($8847, $8845));
                                                            var $8846 = $8848;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $8849 = Parser$Reply$error$($8845);
                                                            var $8846 = $8849;
                                                            break;
                                                    };
                                                    var $8844 = $8846;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $8850 = self.pst;
                                                    var $8851 = self.val;
                                                    var self = $8850;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $8853 = self.err;
                                                            var $8854 = self.nam;
                                                            var $8855 = self.ini;
                                                            var $8856 = self.idx;
                                                            var $8857 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8843, $8853), $8854, $8855, $8856, $8857);
                                                            var _term$31 = Kind$Term$ref$("Sigma.new");
                                                            var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                            var _term$33 = Kind$Term$app$(_term$32, Kind$Term$hol$(Bits$e));
                                                            var _term$34 = Kind$Term$app$(_term$33, _val0$1);
                                                            var _term$35 = Kind$Term$app$(_term$34, $8851);
                                                            var $8858 = Parser$Reply$value$(_reply$pst$30, _term$35);
                                                            var $8852 = $8858;
                                                            break;
                                                    };
                                                    var $8844 = $8852;
                                                    break;
                                            };
                                            var $8842 = $8844;
                                            break;
                                    };
                                    var $8836 = $8842;
                                    break;
                            };
                            var $8829 = $8836;
                            break;
                    };
                    var $8827 = $8829;
                    break;
            };
            return $8827;
        }));
        return $8826;
    };
    const Kind$Parser$sigma = x0 => Kind$Parser$sigma$(x0);

    function Kind$Parser$inequality$(_val0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8860 = self.err;
                var _reply$8 = Kind$Parser$text$("!=", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8862 = self.err;
                        var self = $8860;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8864 = self.value;
                                var $8865 = Parser$Reply$error$(Parser$Error$combine$($8864, $8862));
                                var $8863 = $8865;
                                break;
                            case 'Maybe.none':
                                var $8866 = Parser$Reply$error$($8862);
                                var $8863 = $8866;
                                break;
                        };
                        var $8861 = $8863;
                        break;
                    case 'Parser.Reply.value':
                        var $8867 = self.pst;
                        var self = $8867;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8869 = self.err;
                                var $8870 = self.nam;
                                var $8871 = self.ini;
                                var $8872 = self.idx;
                                var $8873 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8860, $8869), $8870, $8871, $8872, $8873);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8875 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8877 = self.err;
                                                var self = $8875;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8879 = self.value;
                                                        var $8880 = Parser$Reply$error$(Parser$Error$combine$($8879, $8877));
                                                        var $8878 = $8880;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8881 = Parser$Reply$error$($8877);
                                                        var $8878 = $8881;
                                                        break;
                                                };
                                                var $8876 = $8878;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8882 = self.pst;
                                                var $8883 = self.val;
                                                var self = $8882;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8885 = self.err;
                                                        var $8886 = self.nam;
                                                        var $8887 = self.ini;
                                                        var $8888 = self.idx;
                                                        var $8889 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8875, $8885), $8886, $8887, $8888, $8889);
                                                        var _term$31 = Kind$Term$ref$("Equal");
                                                        var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                        var _term$33 = Kind$Term$app$(_term$32, _val0$1);
                                                        var _term$34 = Kind$Term$app$(_term$33, $8883);
                                                        var _term$35 = Kind$Term$app$(Kind$Term$ref$("Not"), _term$34);
                                                        var $8890 = Parser$Reply$value$(_reply$pst$30, _term$35);
                                                        var $8884 = $8890;
                                                        break;
                                                };
                                                var $8876 = $8884;
                                                break;
                                        };
                                        var $8874 = $8876;
                                        break;
                                };
                                var $8868 = $8874;
                                break;
                        };
                        var $8861 = $8868;
                        break;
                };
                var $8859 = $8861;
                break;
        };
        return $8859;
    };
    const Kind$Parser$inequality = x0 => x1 => Kind$Parser$inequality$(x0, x1);

    function Kind$Parser$rewrite$(_subt$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8892 = self.err;
                var _reply$8 = Kind$Parser$text$("::", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8894 = self.err;
                        var self = $8892;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8896 = self.value;
                                var $8897 = Parser$Reply$error$(Parser$Error$combine$($8896, $8894));
                                var $8895 = $8897;
                                break;
                            case 'Maybe.none':
                                var $8898 = Parser$Reply$error$($8894);
                                var $8895 = $8898;
                                break;
                        };
                        var $8893 = $8895;
                        break;
                    case 'Parser.Reply.value':
                        var $8899 = self.pst;
                        var self = $8899;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8901 = self.err;
                                var $8902 = self.nam;
                                var $8903 = self.ini;
                                var $8904 = self.idx;
                                var $8905 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8892, $8901), $8902, $8903, $8904, $8905);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8907 = self.err;
                                        var _reply$22 = Kind$Parser$text$("rewrite", _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8909 = self.err;
                                                var self = $8907;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8911 = self.value;
                                                        var $8912 = Parser$Reply$error$(Parser$Error$combine$($8911, $8909));
                                                        var $8910 = $8912;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8913 = Parser$Reply$error$($8909);
                                                        var $8910 = $8913;
                                                        break;
                                                };
                                                var $8908 = $8910;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8914 = self.pst;
                                                var self = $8914;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8916 = self.err;
                                                        var $8917 = self.nam;
                                                        var $8918 = self.ini;
                                                        var $8919 = self.idx;
                                                        var $8920 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8907, $8916), $8917, $8918, $8919, $8920);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8922 = self.err;
                                                                var _reply$36 = Kind$Parser$name1$(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8924 = self.err;
                                                                        var self = $8922;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8926 = self.value;
                                                                                var $8927 = Parser$Reply$error$(Parser$Error$combine$($8926, $8924));
                                                                                var $8925 = $8927;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8928 = Parser$Reply$error$($8924);
                                                                                var $8925 = $8928;
                                                                                break;
                                                                        };
                                                                        var $8923 = $8925;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8929 = self.pst;
                                                                        var $8930 = self.val;
                                                                        var self = $8929;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8932 = self.err;
                                                                                var $8933 = self.nam;
                                                                                var $8934 = self.ini;
                                                                                var $8935 = self.idx;
                                                                                var $8936 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8922, $8932), $8933, $8934, $8935, $8936);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8938 = self.err;
                                                                                        var _reply$50 = Kind$Parser$text$("in", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $8940 = self.err;
                                                                                                var self = $8938;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $8942 = self.value;
                                                                                                        var $8943 = Parser$Reply$error$(Parser$Error$combine$($8942, $8940));
                                                                                                        var $8941 = $8943;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $8944 = Parser$Reply$error$($8940);
                                                                                                        var $8941 = $8944;
                                                                                                        break;
                                                                                                };
                                                                                                var $8939 = $8941;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $8945 = self.pst;
                                                                                                var self = $8945;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $8947 = self.err;
                                                                                                        var $8948 = self.nam;
                                                                                                        var $8949 = self.ini;
                                                                                                        var $8950 = self.idx;
                                                                                                        var $8951 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($8938, $8947), $8948, $8949, $8950, $8951);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $8953 = self.err;
                                                                                                                var _reply$64 = Kind$Parser$term(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $8955 = self.err;
                                                                                                                        var self = $8953;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $8957 = self.value;
                                                                                                                                var $8958 = Parser$Reply$error$(Parser$Error$combine$($8957, $8955));
                                                                                                                                var $8956 = $8958;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $8959 = Parser$Reply$error$($8955);
                                                                                                                                var $8956 = $8959;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8954 = $8956;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $8960 = self.pst;
                                                                                                                        var $8961 = self.val;
                                                                                                                        var self = $8960;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $8963 = self.err;
                                                                                                                                var $8964 = self.nam;
                                                                                                                                var $8965 = self.ini;
                                                                                                                                var $8966 = self.idx;
                                                                                                                                var $8967 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($8953, $8963), $8964, $8965, $8966, $8967);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $8969 = self.err;
                                                                                                                                        var _reply$78 = Kind$Parser$text$("with", _reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $8971 = self.err;
                                                                                                                                                var self = $8969;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $8973 = self.value;
                                                                                                                                                        var $8974 = Parser$Reply$error$(Parser$Error$combine$($8973, $8971));
                                                                                                                                                        var $8972 = $8974;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $8975 = Parser$Reply$error$($8971);
                                                                                                                                                        var $8972 = $8975;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $8970 = $8972;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $8976 = self.pst;
                                                                                                                                                var self = $8976;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $8978 = self.err;
                                                                                                                                                        var $8979 = self.nam;
                                                                                                                                                        var $8980 = self.ini;
                                                                                                                                                        var $8981 = self.idx;
                                                                                                                                                        var $8982 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($8969, $8978), $8979, $8980, $8981, $8982);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $8984 = self.err;
                                                                                                                                                                var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $8986 = self.err;
                                                                                                                                                                        var self = $8984;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $8988 = self.value;
                                                                                                                                                                                var $8989 = Parser$Reply$error$(Parser$Error$combine$($8988, $8986));
                                                                                                                                                                                var $8987 = $8989;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $8990 = Parser$Reply$error$($8986);
                                                                                                                                                                                var $8987 = $8990;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $8985 = $8987;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $8991 = self.pst;
                                                                                                                                                                        var $8992 = self.val;
                                                                                                                                                                        var self = $8991;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $8994 = self.err;
                                                                                                                                                                                var $8995 = self.nam;
                                                                                                                                                                                var $8996 = self.ini;
                                                                                                                                                                                var $8997 = self.idx;
                                                                                                                                                                                var $8998 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($8984, $8994), $8995, $8996, $8997, $8998);
                                                                                                                                                                                var _term$101 = Kind$Term$ref$("Equal.rewrite");
                                                                                                                                                                                var _term$102 = Kind$Term$app$(_term$101, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$103 = Kind$Term$app$(_term$102, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$104 = Kind$Term$app$(_term$103, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$105 = Kind$Term$app$(_term$104, $8992);
                                                                                                                                                                                var _term$106 = Kind$Term$app$(_term$105, Kind$Term$lam$($8930, (_x$106 => {
                                                                                                                                                                                    var $9000 = $8961;
                                                                                                                                                                                    return $9000;
                                                                                                                                                                                })));
                                                                                                                                                                                var _term$107 = Kind$Term$app$(_term$106, _subt$1);
                                                                                                                                                                                var $8999 = Parser$Reply$value$(_reply$pst$100, _term$107);
                                                                                                                                                                                var $8993 = $8999;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $8985 = $8993;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $8983 = $8985;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $8977 = $8983;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $8970 = $8977;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $8968 = $8970;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $8962 = $8968;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8954 = $8962;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $8952 = $8954;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $8946 = $8952;
                                                                                                        break;
                                                                                                };
                                                                                                var $8939 = $8946;
                                                                                                break;
                                                                                        };
                                                                                        var $8937 = $8939;
                                                                                        break;
                                                                                };
                                                                                var $8931 = $8937;
                                                                                break;
                                                                        };
                                                                        var $8923 = $8931;
                                                                        break;
                                                                };
                                                                var $8921 = $8923;
                                                                break;
                                                        };
                                                        var $8915 = $8921;
                                                        break;
                                                };
                                                var $8908 = $8915;
                                                break;
                                        };
                                        var $8906 = $8908;
                                        break;
                                };
                                var $8900 = $8906;
                                break;
                        };
                        var $8893 = $8900;
                        break;
                };
                var $8891 = $8893;
                break;
        };
        return $8891;
    };
    const Kind$Parser$rewrite = x0 => x1 => Kind$Parser$rewrite$(x0, x1);

    function Kind$Parser$annotation$(_term$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $9002 = self.err;
                var _reply$8 = Kind$Parser$text$("::", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9004 = self.err;
                        var self = $9002;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9006 = self.value;
                                var $9007 = Parser$Reply$error$(Parser$Error$combine$($9006, $9004));
                                var $9005 = $9007;
                                break;
                            case 'Maybe.none':
                                var $9008 = Parser$Reply$error$($9004);
                                var $9005 = $9008;
                                break;
                        };
                        var $9003 = $9005;
                        break;
                    case 'Parser.Reply.value':
                        var $9009 = self.pst;
                        var self = $9009;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9011 = self.err;
                                var $9012 = self.nam;
                                var $9013 = self.ini;
                                var $9014 = self.idx;
                                var $9015 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($9002, $9011), $9012, $9013, $9014, $9015);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9017 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9019 = self.err;
                                                var self = $9017;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9021 = self.value;
                                                        var $9022 = Parser$Reply$error$(Parser$Error$combine$($9021, $9019));
                                                        var $9020 = $9022;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9023 = Parser$Reply$error$($9019);
                                                        var $9020 = $9023;
                                                        break;
                                                };
                                                var $9018 = $9020;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9024 = self.pst;
                                                var $9025 = self.val;
                                                var self = $9024;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9027 = self.err;
                                                        var $9028 = self.nam;
                                                        var $9029 = self.ini;
                                                        var $9030 = self.idx;
                                                        var $9031 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($9017, $9027), $9028, $9029, $9030, $9031);
                                                        var $9032 = Parser$Reply$value$(_reply$pst$30, Kind$Term$ann$(Bool$false, _term$1, $9025));
                                                        var $9026 = $9032;
                                                        break;
                                                };
                                                var $9018 = $9026;
                                                break;
                                        };
                                        var $9016 = $9018;
                                        break;
                                };
                                var $9010 = $9016;
                                break;
                        };
                        var $9003 = $9010;
                        break;
                };
                var $9001 = $9003;
                break;
        };
        return $9001;
    };
    const Kind$Parser$annotation = x0 => x1 => Kind$Parser$annotation$(x0, x1);

    function Kind$Parser$application$hole$(_term$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $9034 = self.err;
                var _reply$8 = Kind$Parser$text_now$("!")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9036 = self.err;
                        var self = $9034;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9038 = self.value;
                                var $9039 = Parser$Reply$error$(Parser$Error$combine$($9038, $9036));
                                var $9037 = $9039;
                                break;
                            case 'Maybe.none':
                                var $9040 = Parser$Reply$error$($9036);
                                var $9037 = $9040;
                                break;
                        };
                        var $9035 = $9037;
                        break;
                    case 'Parser.Reply.value':
                        var $9041 = self.pst;
                        var self = $9041;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9043 = self.err;
                                var $9044 = self.nam;
                                var $9045 = self.ini;
                                var $9046 = self.idx;
                                var $9047 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($9034, $9043), $9044, $9045, $9046, $9047);
                                var $9048 = Parser$Reply$value$(_reply$pst$16, Kind$Term$app$(_term$1, Kind$Term$hol$(Bits$e)));
                                var $9042 = $9048;
                                break;
                        };
                        var $9035 = $9042;
                        break;
                };
                var $9033 = $9035;
                break;
        };
        return $9033;
    };
    const Kind$Parser$application$hole = x0 => x1 => Kind$Parser$application$hole$(x0, x1);

    function Kind$Parser$term$suffix$(_term$1, _pst$2) {
        var Kind$Parser$term$suffix$ = (_term$1, _pst$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _pst$2]
        });
        var Kind$Parser$term$suffix = _term$1 => _pst$2 => Kind$Parser$term$suffix$(_term$1, _pst$2);
        var arg = [_term$1, _pst$2];
        while (true) {
            let [_term$1, _pst$2] = arg;
            var R = (() => {
                var self = _pst$2;
                switch (self._) {
                    case 'Parser.State.new':
                        var $9049 = self.err;
                        var $9050 = self.nam;
                        var $9051 = self.ini;
                        var $9052 = self.idx;
                        var $9053 = self.str;
                        var _suffix_parser$8 = Parser$choice(List$cons$(Kind$Parser$application(_term$1), List$cons$(Kind$Parser$application$erased(_term$1), List$cons$(Kind$Parser$list_set(_term$1), List$cons$(Kind$Parser$list_get(_term$1), List$cons$(Kind$Parser$map_set(_term$1), List$cons$(Kind$Parser$map_get(_term$1), List$cons$(Kind$Parser$field_set(_term$1), List$cons$(Kind$Parser$field_get(_term$1), List$cons$(Kind$Parser$arrow(_term$1), List$cons$(Kind$Parser$concat(_term$1), List$cons$(Kind$Parser$equality(_term$1), List$cons$(Kind$Parser$add(_term$1), List$cons$(Kind$Parser$sub(_term$1), List$cons$(Kind$Parser$mul(_term$1), List$cons$(Kind$Parser$div(_term$1), List$cons$(Kind$Parser$mod(_term$1), List$cons$(Kind$Parser$ltn(_term$1), List$cons$(Kind$Parser$lte(_term$1), List$cons$(Kind$Parser$eql(_term$1), List$cons$(Kind$Parser$gte(_term$1), List$cons$(Kind$Parser$gtn(_term$1), List$cons$(Kind$Parser$and(_term$1), List$cons$(Kind$Parser$or(_term$1), List$cons$(Kind$Parser$default(_term$1), List$cons$(Kind$Parser$cons(_term$1), List$cons$(Kind$Parser$string_concat(_term$1), List$cons$(Kind$Parser$sigma$(_term$1), List$cons$(Kind$Parser$inequality(_term$1), List$cons$(Kind$Parser$rewrite(_term$1), List$cons$(Kind$Parser$annotation(_term$1), List$cons$(Kind$Parser$application$hole(_term$1), List$nil))))))))))))))))))))))))))))))));
                        var self = _suffix_parser$8(_pst$2);
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $9055 = self.err;
                                var self = $9055;
                                switch (self._) {
                                    case 'Parser.Error.new':
                                        var _err$14 = Parser$Error$maybe_combine$($9049, Maybe$some$($9055));
                                        var _pst$15 = Parser$State$new$(_err$14, $9050, $9051, $9052, $9053);
                                        var $9057 = Parser$Reply$value$(_pst$15, _term$1);
                                        var $9056 = $9057;
                                        break;
                                };
                                var $9054 = $9056;
                                break;
                            case 'Parser.Reply.value':
                                var $9058 = self.pst;
                                var $9059 = self.val;
                                var $9060 = Kind$Parser$term$suffix$($9059, $9058);
                                var $9054 = $9060;
                                break;
                        };
                        return $9054;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Parser$term$suffix = x0 => x1 => Kind$Parser$term$suffix$(x0, x1);
    const Kind$Parser$term = Kind$Parser$block("term")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $9062 = self.err;
                var _reply$7 = Parser$choice$(List$cons$(Kind$Parser$dom, List$cons$(Kind$Parser$forall, List$cons$(Kind$Parser$lambda, List$cons$(Kind$Parser$lambda$erased, List$cons$(Kind$Parser$parenthesis, List$cons$(Kind$Parser$letforrange$u32$((_x$7 => {
                    var $9064 = Kind$Parser$term;
                    return $9064;
                })), List$cons$(Kind$Parser$letforrange$u32$with$((_x$7 => {
                    var $9065 = Kind$Parser$term;
                    return $9065;
                })), List$cons$(Kind$Parser$letforrange$i32$((_x$7 => {
                    var $9066 = Kind$Parser$term;
                    return $9066;
                })), List$cons$(Kind$Parser$letforrange$i32$with$((_x$7 => {
                    var $9067 = Kind$Parser$term;
                    return $9067;
                })), List$cons$(Kind$Parser$letforrange$nat$((_x$7 => {
                    var $9068 = Kind$Parser$term;
                    return $9068;
                })), List$cons$(Kind$Parser$letforrange$nat$with$((_x$7 => {
                    var $9069 = Kind$Parser$term;
                    return $9069;
                })), List$cons$(Kind$Parser$letforin$((_x$7 => {
                    var $9070 = Kind$Parser$term;
                    return $9070;
                })), List$cons$(Kind$Parser$letforin$with$((_x$7 => {
                    var $9071 = Kind$Parser$term;
                    return $9071;
                })), List$cons$(Kind$Parser$letwhile$((_x$7 => {
                    var $9072 = Kind$Parser$term;
                    return $9072;
                })), List$cons$(Kind$Parser$letwhile$with$((_x$7 => {
                    var $9073 = Kind$Parser$term;
                    return $9073;
                })), List$cons$(Kind$Parser$let$((_x$7 => {
                    var $9074 = Kind$Parser$term;
                    return $9074;
                })), List$cons$(Kind$Parser$let$omit$((_x$7 => {
                    var $9075 = Kind$Parser$term;
                    return $9075;
                })), List$cons$(Kind$Parser$getwhile$((_x$7 => {
                    var $9076 = Kind$Parser$term;
                    return $9076;
                })), List$cons$(Kind$Parser$getwhile$with((_x$7 => {
                    var $9077 = Kind$Parser$term;
                    return $9077;
                })), List$cons$(Kind$Parser$get$((_x$7 => {
                    var $9078 = Kind$Parser$term;
                    return $9078;
                })), List$cons$(Kind$Parser$get$omit$((_x$7 => {
                    var $9079 = Kind$Parser$term;
                    return $9079;
                })), List$cons$(Kind$Parser$def$((_x$7 => {
                    var $9080 = Kind$Parser$term;
                    return $9080;
                })), List$cons$(Kind$Parser$goal_rewrite, List$cons$(Kind$Parser$if, List$cons$(Kind$Parser$char, List$cons$(Kind$Parser$string$(34), List$cons$(Kind$Parser$string$(96), List$cons$(Kind$Parser$new, List$cons$(Kind$Parser$sigma$type, List$cons$(Kind$Parser$some, List$cons$(Kind$Parser$not, List$cons$(Kind$Parser$left, List$cons$(Kind$Parser$right, List$cons$(Kind$Parser$apply, List$cons$(Kind$Parser$chain, List$cons$(Kind$Parser$mirror, List$cons$(Kind$Parser$list, List$cons$(Kind$Parser$map, List$cons$(Kind$Parser$log$((_x$7 => {
                    var $9081 = Kind$Parser$term;
                    return $9081;
                })), List$cons$(Kind$Parser$do, List$cons$(Kind$Parser$case, List$cons$(Kind$Parser$open$((_x$7 => {
                    var $9082 = Kind$Parser$term;
                    return $9082;
                })), List$cons$(Kind$Parser$without, List$cons$(Kind$Parser$switch, List$cons$(Kind$Parser$goal, List$cons$(Kind$Parser$hole, List$cons$(Kind$Parser$float$64, List$cons$(Kind$Parser$float$32, List$cons$(Kind$Parser$machine_integer$signed$(256n), List$cons$(Kind$Parser$machine_integer$signed$(128n), List$cons$(Kind$Parser$machine_integer$signed$(64n), List$cons$(Kind$Parser$machine_integer$signed$(32n), List$cons$(Kind$Parser$machine_integer$signed$(16n), List$cons$(Kind$Parser$machine_integer$signed$(8n), List$cons$(Kind$Parser$machine_integer$unsigned$(256n), List$cons$(Kind$Parser$machine_integer$unsigned$(128n), List$cons$(Kind$Parser$machine_integer$unsigned$(64n), List$cons$(Kind$Parser$machine_integer$unsigned$(32n), List$cons$(Kind$Parser$machine_integer$unsigned$(16n), List$cons$(Kind$Parser$machine_integer$unsigned$(8n), List$cons$(Kind$Parser$u64, List$cons$(Kind$Parser$u32, List$cons$(Kind$Parser$u16, List$cons$(Kind$Parser$u8, List$cons$(Kind$Parser$num, List$cons$(Kind$Parser$reference, List$cons$((_pst$7 => {
                    var self = _pst$7;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $9084 = self.err;
                            var _reply$13 = Kind$Parser$spaces(_pst$7);
                            var self = _reply$13;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $9086 = self.err;
                                    var self = $9084;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $9088 = self.value;
                                            var $9089 = Parser$Reply$error$(Parser$Error$combine$($9088, $9086));
                                            var $9087 = $9089;
                                            break;
                                        case 'Maybe.none':
                                            var $9090 = Parser$Reply$error$($9086);
                                            var $9087 = $9090;
                                            break;
                                    };
                                    var $9085 = $9087;
                                    break;
                                case 'Parser.Reply.value':
                                    var $9091 = self.pst;
                                    var self = $9091;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $9093 = self.err;
                                            var $9094 = self.nam;
                                            var $9095 = self.ini;
                                            var $9096 = self.idx;
                                            var $9097 = self.str;
                                            var _reply$pst$21 = Parser$State$new$(Parser$Error$maybe_combine$($9084, $9093), $9094, $9095, $9096, $9097);
                                            var $9098 = Parser$fail$("Expected a term.", _reply$pst$21);
                                            var $9092 = $9098;
                                            break;
                                    };
                                    var $9085 = $9092;
                                    break;
                            };
                            var $9083 = $9085;
                            break;
                    };
                    return $9083;
                }), List$nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9099 = self.err;
                        var self = $9062;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9101 = self.value;
                                var $9102 = Parser$Reply$error$(Parser$Error$combine$($9101, $9099));
                                var $9100 = $9102;
                                break;
                            case 'Maybe.none':
                                var $9103 = Parser$Reply$error$($9099);
                                var $9100 = $9103;
                                break;
                        };
                        var $9063 = $9100;
                        break;
                    case 'Parser.Reply.value':
                        var $9104 = self.pst;
                        var $9105 = self.val;
                        var self = $9104;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9107 = self.err;
                                var $9108 = self.nam;
                                var $9109 = self.ini;
                                var $9110 = self.idx;
                                var $9111 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($9062, $9107), $9108, $9109, $9110, $9111);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9113 = self.err;
                                        var _reply$21 = Kind$Parser$term$suffix$($9105, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9115 = self.err;
                                                var self = $9113;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9117 = self.value;
                                                        var $9118 = Parser$Reply$error$(Parser$Error$combine$($9117, $9115));
                                                        var $9116 = $9118;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9119 = Parser$Reply$error$($9115);
                                                        var $9116 = $9119;
                                                        break;
                                                };
                                                var $9114 = $9116;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9120 = self.pst;
                                                var $9121 = self.val;
                                                var self = $9120;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9123 = self.err;
                                                        var $9124 = self.nam;
                                                        var $9125 = self.ini;
                                                        var $9126 = self.idx;
                                                        var $9127 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($9113, $9123), $9124, $9125, $9126, $9127);
                                                        var $9128 = Parser$Reply$value$(_reply$pst$29, $9121);
                                                        var $9122 = $9128;
                                                        break;
                                                };
                                                var $9114 = $9122;
                                                break;
                                        };
                                        var $9112 = $9114;
                                        break;
                                };
                                var $9106 = $9112;
                                break;
                        };
                        var $9063 = $9106;
                        break;
                };
                var $9061 = $9063;
                break;
        };
        return $9061;
    }));

    function Kind$Parser$name_term$(_sep$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $9130 = self.err;
                var _reply$8 = Kind$Parser$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9132 = self.err;
                        var self = $9130;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9134 = self.value;
                                var $9135 = Parser$Reply$error$(Parser$Error$combine$($9134, $9132));
                                var $9133 = $9135;
                                break;
                            case 'Maybe.none':
                                var $9136 = Parser$Reply$error$($9132);
                                var $9133 = $9136;
                                break;
                        };
                        var $9131 = $9133;
                        break;
                    case 'Parser.Reply.value':
                        var $9137 = self.pst;
                        var $9138 = self.val;
                        var self = $9137;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9140 = self.err;
                                var $9141 = self.nam;
                                var $9142 = self.ini;
                                var $9143 = self.idx;
                                var $9144 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($9130, $9140), $9141, $9142, $9143, $9144);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9146 = self.err;
                                        var _reply$22 = Kind$Parser$text$(_sep$1, _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9148 = self.err;
                                                var self = $9146;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9150 = self.value;
                                                        var $9151 = Parser$Reply$error$(Parser$Error$combine$($9150, $9148));
                                                        var $9149 = $9151;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9152 = Parser$Reply$error$($9148);
                                                        var $9149 = $9152;
                                                        break;
                                                };
                                                var $9147 = $9149;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9153 = self.pst;
                                                var self = $9153;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9155 = self.err;
                                                        var $9156 = self.nam;
                                                        var $9157 = self.ini;
                                                        var $9158 = self.idx;
                                                        var $9159 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($9146, $9155), $9156, $9157, $9158, $9159);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $9161 = self.err;
                                                                var _reply$36 = Kind$Parser$term(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $9163 = self.err;
                                                                        var self = $9161;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $9165 = self.value;
                                                                                var $9166 = Parser$Reply$error$(Parser$Error$combine$($9165, $9163));
                                                                                var $9164 = $9166;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $9167 = Parser$Reply$error$($9163);
                                                                                var $9164 = $9167;
                                                                                break;
                                                                        };
                                                                        var $9162 = $9164;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $9168 = self.pst;
                                                                        var $9169 = self.val;
                                                                        var self = $9168;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $9171 = self.err;
                                                                                var $9172 = self.nam;
                                                                                var $9173 = self.ini;
                                                                                var $9174 = self.idx;
                                                                                var $9175 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($9161, $9171), $9172, $9173, $9174, $9175);
                                                                                var $9176 = Parser$Reply$value$(_reply$pst$44, Pair$new$($9138, $9169));
                                                                                var $9170 = $9176;
                                                                                break;
                                                                        };
                                                                        var $9162 = $9170;
                                                                        break;
                                                                };
                                                                var $9160 = $9162;
                                                                break;
                                                        };
                                                        var $9154 = $9160;
                                                        break;
                                                };
                                                var $9147 = $9154;
                                                break;
                                        };
                                        var $9145 = $9147;
                                        break;
                                };
                                var $9139 = $9145;
                                break;
                        };
                        var $9131 = $9139;
                        break;
                };
                var $9129 = $9131;
                break;
        };
        return $9129;
    };
    const Kind$Parser$name_term = x0 => x1 => Kind$Parser$name_term$(x0, x1);

    function Kind$Binder$new$(_eras$1, _name$2, _term$3) {
        var $9177 = ({
            _: 'Kind.Binder.new',
            'eras': _eras$1,
            'name': _name$2,
            'term': _term$3
        });
        return $9177;
    };
    const Kind$Binder$new = x0 => x1 => x2 => Kind$Binder$new$(x0, x1, x2);

    function Kind$Parser$binder$homo$(_sep$1, _eras$2) {
        var self = _eras$2;
        if (self) {
            var $9179 = "<";
            var _open$3 = $9179;
        } else {
            var $9180 = "(";
            var _open$3 = $9180;
        };
        var self = _eras$2;
        if (self) {
            var $9181 = ">";
            var _clos$4 = $9181;
        } else {
            var $9182 = ")";
            var _clos$4 = $9182;
        };
        var $9178 = (_pst$5 => {
            var self = _pst$5;
            switch (self._) {
                case 'Parser.State.new':
                    var $9184 = self.err;
                    var _reply$11 = Kind$Parser$items1$(_open$3, Kind$Parser$name_term(_sep$1), _clos$4)(_pst$5);
                    var self = _reply$11;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $9186 = self.err;
                            var self = $9184;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $9188 = self.value;
                                    var $9189 = Parser$Reply$error$(Parser$Error$combine$($9188, $9186));
                                    var $9187 = $9189;
                                    break;
                                case 'Maybe.none':
                                    var $9190 = Parser$Reply$error$($9186);
                                    var $9187 = $9190;
                                    break;
                            };
                            var $9185 = $9187;
                            break;
                        case 'Parser.Reply.value':
                            var $9191 = self.pst;
                            var $9192 = self.val;
                            var self = $9191;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $9194 = self.err;
                                    var $9195 = self.nam;
                                    var $9196 = self.ini;
                                    var $9197 = self.idx;
                                    var $9198 = self.str;
                                    var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($9184, $9194), $9195, $9196, $9197, $9198);
                                    var $9199 = Parser$Reply$value$(_reply$pst$19, List$mapped$($9192, (_pair$20 => {
                                        var self = _pair$20;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $9201 = self.fst;
                                                var $9202 = self.snd;
                                                var $9203 = Kind$Binder$new$(_eras$2, $9201, $9202);
                                                var $9200 = $9203;
                                                break;
                                        };
                                        return $9200;
                                    })));
                                    var $9193 = $9199;
                                    break;
                            };
                            var $9185 = $9193;
                            break;
                    };
                    var $9183 = $9185;
                    break;
            };
            return $9183;
        });
        return $9178;
    };
    const Kind$Parser$binder$homo = x0 => x1 => Kind$Parser$binder$homo$(x0, x1);

    function List$concat$(_as$2, _bs$3) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $9205 = self.head;
                var $9206 = self.tail;
                var $9207 = List$cons$($9205, List$concat$($9206, _bs$3));
                var $9204 = $9207;
                break;
            case 'List.nil':
                var $9208 = _bs$3;
                var $9204 = $9208;
                break;
        };
        return $9204;
    };
    const List$concat = x0 => x1 => List$concat$(x0, x1);

    function List$flatten$(_xs$2) {
        var self = _xs$2;
        switch (self._) {
            case 'List.cons':
                var $9210 = self.head;
                var $9211 = self.tail;
                var $9212 = List$concat$($9210, List$flatten$($9211));
                var $9209 = $9212;
                break;
            case 'List.nil':
                var $9213 = List$nil;
                var $9209 = $9213;
                break;
        };
        return $9209;
    };
    const List$flatten = x0 => List$flatten$(x0);

    function Kind$Parser$binder$(_sep$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $9215 = self.err;
                var _reply$8 = Parser$many1$(Parser$choice(List$cons$(Kind$Parser$binder$homo$(_sep$1, Bool$true), List$cons$(Kind$Parser$binder$homo$(_sep$1, Bool$false), List$nil))), _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9217 = self.err;
                        var self = $9215;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9219 = self.value;
                                var $9220 = Parser$Reply$error$(Parser$Error$combine$($9219, $9217));
                                var $9218 = $9220;
                                break;
                            case 'Maybe.none':
                                var $9221 = Parser$Reply$error$($9217);
                                var $9218 = $9221;
                                break;
                        };
                        var $9216 = $9218;
                        break;
                    case 'Parser.Reply.value':
                        var $9222 = self.pst;
                        var $9223 = self.val;
                        var self = $9222;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9225 = self.err;
                                var $9226 = self.nam;
                                var $9227 = self.ini;
                                var $9228 = self.idx;
                                var $9229 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($9215, $9225), $9226, $9227, $9228, $9229);
                                var $9230 = Parser$Reply$value$(_reply$pst$16, List$flatten$($9223));
                                var $9224 = $9230;
                                break;
                        };
                        var $9216 = $9224;
                        break;
                };
                var $9214 = $9216;
                break;
        };
        return $9214;
    };
    const Kind$Parser$binder = x0 => x1 => Kind$Parser$binder$(x0, x1);
    const List$length = a0 => (list_length(a0));

    function Kind$Parser$forall$make$(_binds$1, _body$2) {
        var self = _binds$1;
        switch (self._) {
            case 'List.cons':
                var $9232 = self.head;
                var $9233 = self.tail;
                var self = $9232;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9235 = self.eras;
                        var $9236 = self.name;
                        var $9237 = self.term;
                        var $9238 = Kind$Term$all$($9235, "", $9236, $9237, (_s$8 => _x$9 => {
                            var $9239 = Kind$Parser$forall$make$($9233, _body$2);
                            return $9239;
                        }));
                        var $9234 = $9238;
                        break;
                };
                var $9231 = $9234;
                break;
            case 'List.nil':
                var $9240 = _body$2;
                var $9231 = $9240;
                break;
        };
        return $9231;
    };
    const Kind$Parser$forall$make = x0 => x1 => Kind$Parser$forall$make$(x0, x1);

    function List$at_last$(_index$2, _list$3) {
        var $9241 = List$at$(_index$2, List$reverse$(_list$3));
        return $9241;
    };
    const List$at_last = x0 => x1 => List$at_last$(x0, x1);

    function Kind$Term$var$(_name$1, _indx$2) {
        var $9242 = ({
            _: 'Kind.Term.var',
            'name': _name$1,
            'indx': _indx$2
        });
        return $9242;
    };
    const Kind$Term$var = x0 => x1 => Kind$Term$var$(x0, x1);

    function Kind$Context$get_name_skips$(_name$1) {
        var self = _name$1;
        if (self.length === 0) {
            var $9244 = Pair$new$("", 0n);
            var $9243 = $9244;
        } else {
            var $9245 = self.charCodeAt(0);
            var $9246 = self.slice(1);
            var _name_skips$4 = Kind$Context$get_name_skips$($9246);
            var self = _name_skips$4;
            switch (self._) {
                case 'Pair.new':
                    var $9248 = self.fst;
                    var $9249 = self.snd;
                    var self = ($9245 === 94);
                    if (self) {
                        var $9251 = Pair$new$($9248, Nat$succ$($9249));
                        var $9250 = $9251;
                    } else {
                        var $9252 = Pair$new$(String$cons$($9245, $9248), $9249);
                        var $9250 = $9252;
                    };
                    var $9247 = $9250;
                    break;
            };
            var $9243 = $9247;
        };
        return $9243;
    };
    const Kind$Context$get_name_skips = x0 => Kind$Context$get_name_skips$(x0);

    function Kind$Name$eql$(_a$1, _b$2) {
        var $9253 = (_a$1 === _b$2);
        return $9253;
    };
    const Kind$Name$eql = x0 => x1 => Kind$Name$eql$(x0, x1);

    function Kind$Context$find$go$(_name$1, _skip$2, _ctx$3) {
        var Kind$Context$find$go$ = (_name$1, _skip$2, _ctx$3) => ({
            ctr: 'TCO',
            arg: [_name$1, _skip$2, _ctx$3]
        });
        var Kind$Context$find$go = _name$1 => _skip$2 => _ctx$3 => Kind$Context$find$go$(_name$1, _skip$2, _ctx$3);
        var arg = [_name$1, _skip$2, _ctx$3];
        while (true) {
            let [_name$1, _skip$2, _ctx$3] = arg;
            var R = (() => {
                var self = _ctx$3;
                switch (self._) {
                    case 'List.cons':
                        var $9254 = self.head;
                        var $9255 = self.tail;
                        var self = $9254;
                        switch (self._) {
                            case 'Pair.new':
                                var $9257 = self.fst;
                                var $9258 = self.snd;
                                var self = Kind$Name$eql$(_name$1, $9257);
                                if (self) {
                                    var self = _skip$2;
                                    if (self === 0n) {
                                        var $9261 = Maybe$some$($9258);
                                        var $9260 = $9261;
                                    } else {
                                        var $9262 = (self - 1n);
                                        var $9263 = Kind$Context$find$go$(_name$1, $9262, $9255);
                                        var $9260 = $9263;
                                    };
                                    var $9259 = $9260;
                                } else {
                                    var $9264 = Kind$Context$find$go$(_name$1, _skip$2, $9255);
                                    var $9259 = $9264;
                                };
                                var $9256 = $9259;
                                break;
                        };
                        return $9256;
                    case 'List.nil':
                        var $9265 = Maybe$none;
                        return $9265;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Context$find$go = x0 => x1 => x2 => Kind$Context$find$go$(x0, x1, x2);

    function Kind$Context$find$(_name$1, _ctx$2) {
        var self = Kind$Context$get_name_skips$(_name$1);
        switch (self._) {
            case 'Pair.new':
                var $9267 = self.fst;
                var $9268 = self.snd;
                var $9269 = Kind$Context$find$go$($9267, $9268, _ctx$2);
                var $9266 = $9269;
                break;
        };
        return $9266;
    };
    const Kind$Context$find = x0 => x1 => Kind$Context$find$(x0, x1);

    function Kind$Path$Builder$o$(_path$1, _x$2) {
        var $9270 = _path$1((_x$2 + '0'));
        return $9270;
    };
    const Kind$Path$Builder$o = x0 => x1 => Kind$Path$Builder$o$(x0, x1);

    function Kind$Path$Builder$i$(_path$1, _x$2) {
        var $9271 = _path$1((_x$2 + '1'));
        return $9271;
    };
    const Kind$Path$Builder$i = x0 => x1 => Kind$Path$Builder$i$(x0, x1);

    function Kind$Path$Builder$to_bits$(_path$1) {
        var $9272 = _path$1(Bits$e);
        return $9272;
    };
    const Kind$Path$Builder$to_bits = x0 => Kind$Path$Builder$to_bits$(x0);

    function List$imapped$(_as$2, _f$4) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $9274 = self.head;
                var $9275 = self.tail;
                var $9276 = List$cons$(_f$4(0n)($9274), List$imapped$($9275, (_n$7 => {
                    var $9277 = _f$4(Nat$succ$(_n$7));
                    return $9277;
                })));
                var $9273 = $9276;
                break;
            case 'List.nil':
                var $9278 = List$nil;
                var $9273 = $9278;
                break;
        };
        return $9273;
    };
    const List$imapped = x0 => x1 => List$imapped$(x0, x1);

    function Kind$Path$Builder$nat$(_n$1, _b$2) {
        var self = _n$1;
        if (self === 0n) {
            var $9280 = Kind$Path$Builder$o(_b$2);
            var $9279 = $9280;
        } else {
            var $9281 = (self - 1n);
            var $9282 = Kind$Path$Builder$i(Kind$Path$Builder$nat$($9281, _b$2));
            var $9279 = $9282;
        };
        return $9279;
    };
    const Kind$Path$Builder$nat = x0 => x1 => Kind$Path$Builder$nat$(x0, x1);

    function BitsMap$kmap$go$(_fn$3, _map$4, _path$5) {
        var self = _map$4;
        switch (self._) {
            case 'BitsMap.tie':
                var $9284 = self.val;
                var $9285 = self.lft;
                var $9286 = self.rgt;
                var self = $9284;
                switch (self._) {
                    case 'Maybe.some':
                        var $9288 = self.value;
                        var $9289 = Maybe$some$(_fn$3(Bits$reverse$(_path$5))($9288));
                        var _val$9 = $9289;
                        break;
                    case 'Maybe.none':
                        var $9290 = Maybe$none;
                        var _val$9 = $9290;
                        break;
                };
                var _lft$10 = BitsMap$kmap$go$(_fn$3, $9285, (_path$5 + '0'));
                var _rgt$11 = BitsMap$kmap$go$(_fn$3, $9286, (_path$5 + '1'));
                var $9287 = BitsMap$tie$(_val$9, _lft$10, _rgt$11);
                var $9283 = $9287;
                break;
            case 'BitsMap.new':
                var $9291 = BitsMap$new;
                var $9283 = $9291;
                break;
        };
        return $9283;
    };
    const BitsMap$kmap$go = x0 => x1 => x2 => BitsMap$kmap$go$(x0, x1, x2);

    function BitsMap$kmap$(_fn$3, _map$4) {
        var $9292 = BitsMap$kmap$go$(_fn$3, _map$4, Bits$e);
        return $9292;
    };
    const BitsMap$kmap = x0 => x1 => BitsMap$kmap$(x0, x1);

    function Kind$Map$kmapped$(_map$2, _fn$4) {
        var $9293 = BitsMap$kmap$(_fn$4, _map$2);
        return $9293;
    };
    const Kind$Map$kmapped = x0 => x1 => Kind$Map$kmapped$(x0, x1);

    function Kind$Path$Builder$bits$(_bits$1, _b$2) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $9295 = self.slice(0, -1);
                var $9296 = Kind$Path$Builder$i(Kind$Path$Builder$o(Kind$Path$Builder$bits$($9295, _b$2)));
                var $9294 = $9296;
                break;
            case 'i':
                var $9297 = self.slice(0, -1);
                var $9298 = Kind$Path$Builder$i(Kind$Path$Builder$i(Kind$Path$Builder$bits$($9297, _b$2)));
                var $9294 = $9298;
                break;
            case 'e':
                var $9299 = Kind$Path$Builder$o(_b$2);
                var $9294 = $9299;
                break;
        };
        return $9294;
    };
    const Kind$Path$Builder$bits = x0 => x1 => Kind$Path$Builder$bits$(x0, x1);

    function Kind$Term$bind$(_vars$1, _path$2, _term$3) {
        var self = _term$3;
        switch (self._) {
            case 'Kind.Term.var':
                var $9301 = self.name;
                var $9302 = self.indx;
                var self = List$at_last$($9302, _vars$1);
                switch (self._) {
                    case 'Maybe.some':
                        var $9304 = self.value;
                        var $9305 = Pair$snd$($9304);
                        var $9303 = $9305;
                        break;
                    case 'Maybe.none':
                        var $9306 = Kind$Term$var$($9301, $9302);
                        var $9303 = $9306;
                        break;
                };
                var $9300 = $9303;
                break;
            case 'Kind.Term.ref':
                var $9307 = self.name;
                var self = Kind$Context$find$($9307, _vars$1);
                switch (self._) {
                    case 'Maybe.some':
                        var $9309 = self.value;
                        var $9310 = $9309;
                        var $9308 = $9310;
                        break;
                    case 'Maybe.none':
                        var $9311 = Kind$Term$ref$($9307);
                        var $9308 = $9311;
                        break;
                };
                var $9300 = $9308;
                break;
            case 'Kind.Term.all':
                var $9312 = self.eras;
                var $9313 = self.self;
                var $9314 = self.name;
                var $9315 = self.xtyp;
                var $9316 = self.body;
                var _vlen$9 = (list_length(_vars$1));
                var $9317 = Kind$Term$all$($9312, $9313, $9314, Kind$Term$bind$(_vars$1, Kind$Path$Builder$o(_path$2), $9315), (_s$10 => _x$11 => {
                    var $9318 = Kind$Term$bind$(List$cons$(Pair$new$($9314, _x$11), List$cons$(Pair$new$($9313, _s$10), _vars$1)), Kind$Path$Builder$i(_path$2), $9316(Kind$Term$var$($9313, _vlen$9))(Kind$Term$var$($9314, Nat$succ$(_vlen$9))));
                    return $9318;
                }));
                var $9300 = $9317;
                break;
            case 'Kind.Term.lam':
                var $9319 = self.name;
                var $9320 = self.body;
                var _vlen$6 = (list_length(_vars$1));
                var $9321 = Kind$Term$lam$($9319, (_x$7 => {
                    var $9322 = Kind$Term$bind$(List$cons$(Pair$new$($9319, _x$7), _vars$1), Kind$Path$Builder$o(_path$2), $9320(Kind$Term$var$($9319, _vlen$6)));
                    return $9322;
                }));
                var $9300 = $9321;
                break;
            case 'Kind.Term.app':
                var $9323 = self.func;
                var $9324 = self.argm;
                var $9325 = Kind$Term$app$(Kind$Term$bind$(_vars$1, Kind$Path$Builder$o(_path$2), $9323), Kind$Term$bind$(_vars$1, Kind$Path$Builder$i(_path$2), $9324));
                var $9300 = $9325;
                break;
            case 'Kind.Term.let':
                var $9326 = self.name;
                var $9327 = self.expr;
                var $9328 = self.body;
                var _vlen$7 = (list_length(_vars$1));
                var $9329 = Kind$Term$let$($9326, Kind$Term$bind$(_vars$1, Kind$Path$Builder$o(_path$2), $9327), (_x$8 => {
                    var $9330 = Kind$Term$bind$(List$cons$(Pair$new$($9326, _x$8), _vars$1), Kind$Path$Builder$i(_path$2), $9328(Kind$Term$var$($9326, _vlen$7)));
                    return $9330;
                }));
                var $9300 = $9329;
                break;
            case 'Kind.Term.def':
                var $9331 = self.name;
                var $9332 = self.expr;
                var $9333 = self.body;
                var _vlen$7 = (list_length(_vars$1));
                var $9334 = Kind$Term$bind$(List$cons$(Pair$new$($9331, $9332), _vars$1), _path$2, Kind$Term$bind$(List$cons$(Pair$new$($9331, $9332), _vars$1), _path$2, $9333(Kind$Term$var$($9331, _vlen$7))));
                var $9300 = $9334;
                break;
            case 'Kind.Term.ann':
                var $9335 = self.done;
                var $9336 = self.term;
                var $9337 = self.type;
                var $9338 = Kind$Term$ann$($9335, Kind$Term$bind$(_vars$1, Kind$Path$Builder$o(_path$2), $9336), Kind$Term$bind$(_vars$1, Kind$Path$Builder$i(_path$2), $9337));
                var $9300 = $9338;
                break;
            case 'Kind.Term.gol':
                var $9339 = self.name;
                var $9340 = self.dref;
                var $9341 = self.verb;
                var $9342 = Kind$Term$gol$($9339, $9340, $9341);
                var $9300 = $9342;
                break;
            case 'Kind.Term.nat':
                var $9343 = self.natx;
                var $9344 = Kind$Term$nat$($9343);
                var $9300 = $9344;
                break;
            case 'Kind.Term.chr':
                var $9345 = self.chrx;
                var $9346 = Kind$Term$chr$($9345);
                var $9300 = $9346;
                break;
            case 'Kind.Term.str':
                var $9347 = self.strx;
                var $9348 = Kind$Term$str$($9347);
                var $9300 = $9348;
                break;
            case 'Kind.Term.num':
                var $9349 = self.sign;
                var $9350 = self.numb;
                var $9351 = self.frac;
                var $9352 = Kind$Term$num$($9349, $9350, $9351);
                var $9300 = $9352;
                break;
            case 'Kind.Term.cse':
                var $9353 = self.expr;
                var $9354 = self.name;
                var $9355 = self.with;
                var $9356 = self.cses;
                var $9357 = self.moti;
                var _expr$10 = Kind$Term$bind$(_vars$1, Kind$Path$Builder$o(Kind$Path$Builder$o(_path$2)), $9353);
                var _name$11 = $9354;
                var _wyth$12 = List$imapped$($9355, (_idx$12 => _with_var$13 => {
                    var self = _with_var$13;
                    switch (self._) {
                        case 'Kind.Ann.new':
                            var $9360 = self.name;
                            var $9361 = self.term;
                            var $9362 = self.type;
                            var _with_var_path$17 = Kind$Path$Builder$o(Kind$Path$Builder$i(Kind$Path$Builder$nat$(_idx$12, _path$2)));
                            var _with_var_term$18 = Kind$Term$bind$(_vars$1, Kind$Path$Builder$o(_with_var_path$17), $9361);
                            var self = $9362;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $9364 = self.value;
                                    var $9365 = Maybe$some$(Kind$Term$bind$(_vars$1, Kind$Path$Builder$i(_with_var_path$17), $9364));
                                    var _with_var_type$19 = $9365;
                                    break;
                                case 'Maybe.none':
                                    var $9366 = Maybe$none;
                                    var _with_var_type$19 = $9366;
                                    break;
                            };
                            var $9363 = Kind$Ann$new$($9360, _with_var_term$18, _with_var_type$19);
                            var $9359 = $9363;
                            break;
                    };
                    return $9359;
                }));
                var _cses$13 = Kind$Map$kmapped$($9356, (_cse_bits$13 => _cse_body$14 => {
                    var _cse_path$15 = Kind$Path$Builder$i(Kind$Path$Builder$o(Kind$Path$Builder$bits$(_cse_bits$13, _path$2)));
                    var $9367 = Kind$Term$bind$(_vars$1, _cse_path$15, _cse_body$14);
                    return $9367;
                }));
                var self = $9357;
                switch (self._) {
                    case 'Maybe.some':
                        var $9368 = self.value;
                        var _moti_path$15 = Kind$Path$Builder$i(Kind$Path$Builder$i(_path$2));
                        var $9369 = Maybe$some$(Kind$Term$bind$(_vars$1, _moti_path$15, $9368));
                        var _moti$14 = $9369;
                        break;
                    case 'Maybe.none':
                        var $9370 = Maybe$none;
                        var _moti$14 = $9370;
                        break;
                };
                var $9358 = Kind$Term$cse$(Kind$Path$Builder$to_bits$(_path$2), _expr$10, _name$11, _wyth$12, _cses$13, _moti$14);
                var $9300 = $9358;
                break;
            case 'Kind.Term.new':
                var $9371 = self.args;
                var _args$5 = List$imapped$($9371, (_idx$5 => _arg$6 => {
                    var $9373 = Kind$Term$bind$(_vars$1, Kind$Path$Builder$nat$(_idx$5, _path$2), _arg$6);
                    return $9373;
                }));
                var $9372 = Kind$Term$new$(_args$5);
                var $9300 = $9372;
                break;
            case 'Kind.Term.get':
                var $9374 = self.expr;
                var $9375 = self.fkey;
                var _expr$6 = Kind$Term$bind$(_vars$1, Kind$Path$Builder$o(_path$2), $9374);
                var $9376 = Kind$Term$get$(_expr$6, $9375);
                var $9300 = $9376;
                break;
            case 'Kind.Term.set':
                var $9377 = self.expr;
                var $9378 = self.fkey;
                var $9379 = self.fval;
                var _expr$7 = Kind$Term$bind$(_vars$1, Kind$Path$Builder$o(_path$2), $9377);
                var _fval$8 = Kind$Term$bind$(_vars$1, Kind$Path$Builder$i(_path$2), $9379);
                var $9380 = Kind$Term$set$(_expr$7, $9378, _fval$8);
                var $9300 = $9380;
                break;
            case 'Kind.Term.ope':
                var $9381 = self.name;
                var $9382 = self.arg0;
                var $9383 = self.arg1;
                var _arg0$7 = Kind$Term$bind$(_vars$1, Kind$Path$Builder$o(_path$2), $9382);
                var _arg1$8 = Kind$Term$bind$(_vars$1, Kind$Path$Builder$i(_path$2), $9383);
                var $9384 = Kind$Term$ope$($9381, _arg0$7, _arg1$8);
                var $9300 = $9384;
                break;
            case 'Kind.Term.ori':
                var $9385 = self.orig;
                var $9386 = self.expr;
                var $9387 = Kind$Term$ori$($9385, Kind$Term$bind$(_vars$1, _path$2, $9386));
                var $9300 = $9387;
                break;
            case 'Kind.Term.typ':
                var $9388 = Kind$Term$typ;
                var $9300 = $9388;
                break;
            case 'Kind.Term.hol':
                var $9389 = Kind$Term$hol$(Kind$Path$Builder$to_bits$(_path$2));
                var $9300 = $9389;
                break;
        };
        return $9300;
    };
    const Kind$Term$bind = x0 => x1 => x2 => Kind$Term$bind$(x0, x1, x2);

    function Trampoline$call$(_t$2) {
        var Trampoline$call$ = (_t$2) => ({
            ctr: 'TCO',
            arg: [_t$2]
        });
        var Trampoline$call = _t$2 => Trampoline$call$(_t$2);
        var arg = [_t$2];
        while (true) {
            let [_t$2] = arg;
            var R = (() => {
                var self = _t$2;
                switch (self._) {
                    case 'Trampoline.done':
                        var $9390 = self.value;
                        var $9391 = $9390;
                        return $9391;
                    case 'Trampoline.wrap':
                        var $9392 = self.value;
                        var $9393 = Trampoline$call$($9392(Unit$new));
                        return $9393;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Trampoline$call = x0 => Trampoline$call$(x0);

    function Trampoline$(_A$1) {
        var $9394 = null;
        return $9394;
    };
    const Trampoline = x0 => Trampoline$(x0);

    function Trampoline$wrap$(_value$2) {
        var $9395 = ({
            _: 'Trampoline.wrap',
            'value': _value$2
        });
        return $9395;
    };
    const Trampoline$wrap = x0 => Trampoline$wrap$(x0);

    function BitsMap$set_if_empty$cps$go$(_bits$2, _val$3, _map$4, _cont$5) {
        var BitsMap$set_if_empty$cps$go$ = (_bits$2, _val$3, _map$4, _cont$5) => ({
            ctr: 'TCO',
            arg: [_bits$2, _val$3, _map$4, _cont$5]
        });
        var BitsMap$set_if_empty$cps$go = _bits$2 => _val$3 => _map$4 => _cont$5 => BitsMap$set_if_empty$cps$go$(_bits$2, _val$3, _map$4, _cont$5);
        var arg = [_bits$2, _val$3, _map$4, _cont$5];
        while (true) {
            let [_bits$2, _val$3, _map$4, _cont$5] = arg;
            var R = (() => {
                var self = _bits$2;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $9396 = self.slice(0, -1);
                        var self = _map$4;
                        switch (self._) {
                            case 'BitsMap.tie':
                                var $9398 = self.val;
                                var $9399 = self.lft;
                                var $9400 = self.rgt;
                                var $9401 = BitsMap$set_if_empty$cps$go$($9396, _val$3, $9399, (_lft$10 => {
                                    var $9402 = Trampoline$wrap$((_$11 => {
                                        var $9403 = _cont$5(BitsMap$tie$($9398, _lft$10, $9400));
                                        return $9403;
                                    }));
                                    return $9402;
                                }));
                                var $9397 = $9401;
                                break;
                            case 'BitsMap.new':
                                var $9404 = BitsMap$set_if_empty$cps$go$($9396, _val$3, BitsMap$new, (_lft$7 => {
                                    var $9405 = Trampoline$wrap$((_$8 => {
                                        var $9406 = _cont$5(BitsMap$tie$(Maybe$none, _lft$7, BitsMap$new));
                                        return $9406;
                                    }));
                                    return $9405;
                                }));
                                var $9397 = $9404;
                                break;
                        };
                        return $9397;
                    case 'i':
                        var $9407 = self.slice(0, -1);
                        var self = _map$4;
                        switch (self._) {
                            case 'BitsMap.tie':
                                var $9409 = self.val;
                                var $9410 = self.lft;
                                var $9411 = self.rgt;
                                var $9412 = BitsMap$set_if_empty$cps$go$($9407, _val$3, $9411, (_rgt$10 => {
                                    var $9413 = Trampoline$wrap$((_$11 => {
                                        var $9414 = _cont$5(BitsMap$tie$($9409, $9410, _rgt$10));
                                        return $9414;
                                    }));
                                    return $9413;
                                }));
                                var $9408 = $9412;
                                break;
                            case 'BitsMap.new':
                                var $9415 = BitsMap$set_if_empty$cps$go$($9407, _val$3, BitsMap$new, (_rgt$7 => {
                                    var $9416 = Trampoline$wrap$((_$8 => {
                                        var $9417 = _cont$5(BitsMap$tie$(Maybe$none, BitsMap$new, _rgt$7));
                                        return $9417;
                                    }));
                                    return $9416;
                                }));
                                var $9408 = $9415;
                                break;
                        };
                        return $9408;
                    case 'e':
                        var self = _map$4;
                        switch (self._) {
                            case 'BitsMap.tie':
                                var $9419 = self.val;
                                var $9420 = self.lft;
                                var $9421 = self.rgt;
                                var $9422 = _cont$5(BitsMap$tie$((() => {
                                    var self = $9419;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $9423 = self.value;
                                            var $9424 = Maybe$some$($9423);
                                            return $9424;
                                        case 'Maybe.none':
                                            var $9425 = Maybe$some$(_val$3);
                                            return $9425;
                                    };
                                })(), $9420, $9421));
                                var $9418 = $9422;
                                break;
                            case 'BitsMap.new':
                                var $9426 = _cont$5(BitsMap$tie$(Maybe$some$(_val$3), BitsMap$new, BitsMap$new));
                                var $9418 = $9426;
                                break;
                        };
                        return $9418;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BitsMap$set_if_empty$cps$go = x0 => x1 => x2 => x3 => BitsMap$set_if_empty$cps$go$(x0, x1, x2, x3);

    function Trampoline$done$(_value$2) {
        var $9427 = ({
            _: 'Trampoline.done',
            'value': _value$2
        });
        return $9427;
    };
    const Trampoline$done = x0 => Trampoline$done$(x0);

    function BitsMap$set_if_empty$cps$(_bits$2, _val$3, _map$4) {
        var $9428 = Trampoline$call$(BitsMap$set_if_empty$cps$go$(_bits$2, _val$3, _map$4, Trampoline$done));
        return $9428;
    };
    const BitsMap$set_if_empty$cps = x0 => x1 => x2 => BitsMap$set_if_empty$cps$(x0, x1, x2);

    function BitsMap$set_if_empty$(_bits$2, _val$3, _map$4) {
        var $9429 = BitsMap$set_if_empty$cps$(_bits$2, _val$3, _map$4);
        return $9429;
    };
    const BitsMap$set_if_empty = x0 => x1 => x2 => BitsMap$set_if_empty$(x0, x1, x2);

    function Kind$Map$set_if_empty$(_name$2, _val$3, _map$4) {
        var $9430 = BitsMap$set_if_empty$((kind_name_to_bits(_name$2)), _val$3, _map$4);
        return $9430;
    };
    const Kind$Map$set_if_empty = x0 => x1 => x2 => Kind$Map$set_if_empty$(x0, x1, x2);
    const Kind$Status$init = ({
        _: 'Kind.Status.init'
    });

    function Kind$Map$def$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _done$9, _defs$10) {
        var _defn$11 = Kind$Def$new(_file$1)(_code$2)(_orig$3)(_name$4)(_term$5)(_type$6)(_isct$7)(_arit$8);
        var self = _done$9;
        if (self) {
            var $9432 = Kind$Map$set$(_name$4, _defn$11(Kind$Status$done$(Bool$false)), _defs$10);
            var $9431 = $9432;
        } else {
            var $9433 = Kind$Map$set_if_empty$(_name$4, _defn$11(Kind$Status$init), _defs$10);
            var $9431 = $9433;
        };
        return $9431;
    };
    const Kind$Map$def = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => x9 => Kind$Map$def$(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9);

    function Kind$Parser$file$def$(_file$1, _code$2, _defs$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $9435 = self.err;
                var _reply$10 = Kind$Parser$spaces(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9437 = self.err;
                        var self = $9435;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9439 = self.value;
                                var $9440 = Parser$Reply$error$(Parser$Error$combine$($9439, $9437));
                                var $9438 = $9440;
                                break;
                            case 'Maybe.none':
                                var $9441 = Parser$Reply$error$($9437);
                                var $9438 = $9441;
                                break;
                        };
                        var $9436 = $9438;
                        break;
                    case 'Parser.Reply.value':
                        var $9442 = self.pst;
                        var self = $9442;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9444 = self.err;
                                var $9445 = self.nam;
                                var $9446 = self.ini;
                                var $9447 = self.idx;
                                var $9448 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($9435, $9444), $9445, $9446, $9447, $9448);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9450 = self.err;
                                        var _reply$24 = Parser$get_idx$(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9452 = self.err;
                                                var self = $9450;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9454 = self.value;
                                                        var $9455 = Parser$Reply$error$(Parser$Error$combine$($9454, $9452));
                                                        var $9453 = $9455;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9456 = Parser$Reply$error$($9452);
                                                        var $9453 = $9456;
                                                        break;
                                                };
                                                var $9451 = $9453;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9457 = self.pst;
                                                var $9458 = self.val;
                                                var self = $9457;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9460 = self.err;
                                                        var $9461 = self.nam;
                                                        var $9462 = self.ini;
                                                        var $9463 = self.idx;
                                                        var $9464 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($9450, $9460), $9461, $9462, $9463, $9464);
                                                        var self = _reply$pst$32;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $9466 = self.err;
                                                                var _reply$38 = Kind$Parser$name1$(_reply$pst$32);
                                                                var self = _reply$38;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $9468 = self.err;
                                                                        var self = $9466;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $9470 = self.value;
                                                                                var $9471 = Parser$Reply$error$(Parser$Error$combine$($9470, $9468));
                                                                                var $9469 = $9471;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $9472 = Parser$Reply$error$($9468);
                                                                                var $9469 = $9472;
                                                                                break;
                                                                        };
                                                                        var $9467 = $9469;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $9473 = self.pst;
                                                                        var $9474 = self.val;
                                                                        var self = $9473;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $9476 = self.err;
                                                                                var $9477 = self.nam;
                                                                                var $9478 = self.ini;
                                                                                var $9479 = self.idx;
                                                                                var $9480 = self.str;
                                                                                var _reply$pst$46 = Parser$State$new$(Parser$Error$maybe_combine$($9466, $9476), $9477, $9478, $9479, $9480);
                                                                                var self = _reply$pst$46;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $9482 = self.err;
                                                                                        var _reply$52 = Parser$many$(Kind$Parser$binder(":"))(_reply$pst$46);
                                                                                        var self = _reply$52;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $9484 = self.err;
                                                                                                var self = $9482;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $9486 = self.value;
                                                                                                        var $9487 = Parser$Reply$error$(Parser$Error$combine$($9486, $9484));
                                                                                                        var $9485 = $9487;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $9488 = Parser$Reply$error$($9484);
                                                                                                        var $9485 = $9488;
                                                                                                        break;
                                                                                                };
                                                                                                var $9483 = $9485;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $9489 = self.pst;
                                                                                                var $9490 = self.val;
                                                                                                var self = $9489;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $9492 = self.err;
                                                                                                        var $9493 = self.nam;
                                                                                                        var $9494 = self.ini;
                                                                                                        var $9495 = self.idx;
                                                                                                        var $9496 = self.str;
                                                                                                        var _reply$pst$60 = Parser$State$new$(Parser$Error$maybe_combine$($9482, $9492), $9493, $9494, $9495, $9496);
                                                                                                        var _args$61 = List$flatten$($9490);
                                                                                                        var self = _reply$pst$60;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $9498 = self.err;
                                                                                                                var _reply$67 = Kind$Parser$text$(":", _reply$pst$60);
                                                                                                                var self = _reply$67;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $9500 = self.err;
                                                                                                                        var self = $9498;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $9502 = self.value;
                                                                                                                                var $9503 = Parser$Reply$error$(Parser$Error$combine$($9502, $9500));
                                                                                                                                var $9501 = $9503;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $9504 = Parser$Reply$error$($9500);
                                                                                                                                var $9501 = $9504;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $9499 = $9501;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $9505 = self.pst;
                                                                                                                        var self = $9505;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $9507 = self.err;
                                                                                                                                var $9508 = self.nam;
                                                                                                                                var $9509 = self.ini;
                                                                                                                                var $9510 = self.idx;
                                                                                                                                var $9511 = self.str;
                                                                                                                                var _reply$pst$75 = Parser$State$new$(Parser$Error$maybe_combine$($9498, $9507), $9508, $9509, $9510, $9511);
                                                                                                                                var self = _reply$pst$75;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $9513 = self.err;
                                                                                                                                        var _reply$81 = Kind$Parser$term(_reply$pst$75);
                                                                                                                                        var self = _reply$81;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $9515 = self.err;
                                                                                                                                                var self = $9513;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $9517 = self.value;
                                                                                                                                                        var $9518 = Parser$Reply$error$(Parser$Error$combine$($9517, $9515));
                                                                                                                                                        var $9516 = $9518;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $9519 = Parser$Reply$error$($9515);
                                                                                                                                                        var $9516 = $9519;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $9514 = $9516;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $9520 = self.pst;
                                                                                                                                                var $9521 = self.val;
                                                                                                                                                var self = $9520;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $9523 = self.err;
                                                                                                                                                        var $9524 = self.nam;
                                                                                                                                                        var $9525 = self.ini;
                                                                                                                                                        var $9526 = self.idx;
                                                                                                                                                        var $9527 = self.str;
                                                                                                                                                        var _reply$pst$89 = Parser$State$new$(Parser$Error$maybe_combine$($9513, $9523), $9524, $9525, $9526, $9527);
                                                                                                                                                        var self = _reply$pst$89;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $9529 = self.err;
                                                                                                                                                                var _reply$95 = Kind$Parser$term(_reply$pst$89);
                                                                                                                                                                var self = _reply$95;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $9531 = self.err;
                                                                                                                                                                        var self = $9529;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $9533 = self.value;
                                                                                                                                                                                var $9534 = Parser$Reply$error$(Parser$Error$combine$($9533, $9531));
                                                                                                                                                                                var $9532 = $9534;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $9535 = Parser$Reply$error$($9531);
                                                                                                                                                                                var $9532 = $9535;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $9530 = $9532;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $9536 = self.pst;
                                                                                                                                                                        var $9537 = self.val;
                                                                                                                                                                        var self = $9536;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $9539 = self.err;
                                                                                                                                                                                var $9540 = self.nam;
                                                                                                                                                                                var $9541 = self.ini;
                                                                                                                                                                                var $9542 = self.idx;
                                                                                                                                                                                var $9543 = self.str;
                                                                                                                                                                                var _reply$pst$103 = Parser$State$new$(Parser$Error$maybe_combine$($9529, $9539), $9540, $9541, $9542, $9543);
                                                                                                                                                                                var self = _reply$pst$103;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $9545 = self.err;
                                                                                                                                                                                        var _reply$109 = Parser$get_idx$(_reply$pst$103);
                                                                                                                                                                                        var self = _reply$109;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $9547 = self.err;
                                                                                                                                                                                                var self = $9545;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $9549 = self.value;
                                                                                                                                                                                                        var $9550 = Parser$Reply$error$(Parser$Error$combine$($9549, $9547));
                                                                                                                                                                                                        var $9548 = $9550;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $9551 = Parser$Reply$error$($9547);
                                                                                                                                                                                                        var $9548 = $9551;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $9546 = $9548;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $9552 = self.pst;
                                                                                                                                                                                                var $9553 = self.val;
                                                                                                                                                                                                var self = $9552;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $9555 = self.err;
                                                                                                                                                                                                        var $9556 = self.nam;
                                                                                                                                                                                                        var $9557 = self.ini;
                                                                                                                                                                                                        var $9558 = self.idx;
                                                                                                                                                                                                        var $9559 = self.str;
                                                                                                                                                                                                        var _reply$pst$117 = Parser$State$new$(Parser$Error$maybe_combine$($9545, $9555), $9556, $9557, $9558, $9559);
                                                                                                                                                                                                        var _orig$118 = Pair$new$($9458, $9553);
                                                                                                                                                                                                        var _arit$119 = (list_length(_args$61));
                                                                                                                                                                                                        var _type$120 = Kind$Parser$forall$make$(_args$61, $9521);
                                                                                                                                                                                                        var _term$121 = Kind$Parser$lambda$make$(List$mapped$(_args$61, (_x$121 => {
                                                                                                                                                                                                            var self = _x$121;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Kind.Binder.new':
                                                                                                                                                                                                                    var $9562 = self.name;
                                                                                                                                                                                                                    var $9563 = $9562;
                                                                                                                                                                                                                    var $9561 = $9563;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            return $9561;
                                                                                                                                                                                                        })), $9537);
                                                                                                                                                                                                        var _type$122 = Kind$Term$bind$(List$nil, (_x$122 => {
                                                                                                                                                                                                            var $9564 = (_x$122 + '1');
                                                                                                                                                                                                            return $9564;
                                                                                                                                                                                                        }), _type$120);
                                                                                                                                                                                                        var _term$123 = Kind$Term$bind$(List$nil, (_x$123 => {
                                                                                                                                                                                                            var $9565 = (_x$123 + '0');
                                                                                                                                                                                                            return $9565;
                                                                                                                                                                                                        }), _term$121);
                                                                                                                                                                                                        var _defs$124 = Kind$Map$def$(_file$1, _code$2, _orig$118, $9474, _term$123, _type$122, Bool$false, _arit$119, Bool$false, _defs$3);
                                                                                                                                                                                                        var $9560 = Parser$Reply$value$(_reply$pst$117, _defs$124);
                                                                                                                                                                                                        var $9554 = $9560;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $9546 = $9554;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $9544 = $9546;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $9538 = $9544;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $9530 = $9538;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $9528 = $9530;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $9522 = $9528;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $9514 = $9522;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $9512 = $9514;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $9506 = $9512;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $9499 = $9506;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $9497 = $9499;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $9491 = $9497;
                                                                                                        break;
                                                                                                };
                                                                                                var $9483 = $9491;
                                                                                                break;
                                                                                        };
                                                                                        var $9481 = $9483;
                                                                                        break;
                                                                                };
                                                                                var $9475 = $9481;
                                                                                break;
                                                                        };
                                                                        var $9467 = $9475;
                                                                        break;
                                                                };
                                                                var $9465 = $9467;
                                                                break;
                                                        };
                                                        var $9459 = $9465;
                                                        break;
                                                };
                                                var $9451 = $9459;
                                                break;
                                        };
                                        var $9449 = $9451;
                                        break;
                                };
                                var $9443 = $9449;
                                break;
                        };
                        var $9436 = $9443;
                        break;
                };
                var $9434 = $9436;
                break;
        };
        return $9434;
    };
    const Kind$Parser$file$def = x0 => x1 => x2 => x3 => Kind$Parser$file$def$(x0, x1, x2, x3);

    function Kind$Parser$ADT$Constructor$new$(_name$1, _args$2, _inds$3) {
        var $9566 = ({
            _: 'Kind.Parser.ADT.Constructor.new',
            'name': _name$1,
            'args': _args$2,
            'inds': _inds$3
        });
        return $9566;
    };
    const Kind$Parser$ADT$Constructor$new = x0 => x1 => x2 => Kind$Parser$ADT$Constructor$new$(x0, x1, x2);

    function Kind$Parser$ADT$ctor$(_namespace$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $9568 = self.err;
                var _reply$8 = Kind$Parser$name1$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9570 = self.err;
                        var self = $9568;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9572 = self.value;
                                var $9573 = Parser$Reply$error$(Parser$Error$combine$($9572, $9570));
                                var $9571 = $9573;
                                break;
                            case 'Maybe.none':
                                var $9574 = Parser$Reply$error$($9570);
                                var $9571 = $9574;
                                break;
                        };
                        var $9569 = $9571;
                        break;
                    case 'Parser.Reply.value':
                        var $9575 = self.pst;
                        var $9576 = self.val;
                        var self = $9575;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9578 = self.err;
                                var $9579 = self.nam;
                                var $9580 = self.ini;
                                var $9581 = self.idx;
                                var $9582 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($9568, $9578), $9579, $9580, $9581, $9582);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9584 = self.err;
                                        var _reply$22 = Parser$maybe$(Kind$Parser$binder(":"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9586 = self.err;
                                                var self = $9584;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9588 = self.value;
                                                        var $9589 = Parser$Reply$error$(Parser$Error$combine$($9588, $9586));
                                                        var $9587 = $9589;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9590 = Parser$Reply$error$($9586);
                                                        var $9587 = $9590;
                                                        break;
                                                };
                                                var $9585 = $9587;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9591 = self.pst;
                                                var $9592 = self.val;
                                                var self = $9591;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9594 = self.err;
                                                        var $9595 = self.nam;
                                                        var $9596 = self.ini;
                                                        var $9597 = self.idx;
                                                        var $9598 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($9584, $9594), $9595, $9596, $9597, $9598);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $9600 = self.err;
                                                                var _reply$36 = Parser$maybe$((_pst$36 => {
                                                                    var self = _pst$36;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $9603 = self.err;
                                                                            var _reply$42 = Kind$Parser$text$("~", _pst$36);
                                                                            var self = _reply$42;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $9605 = self.err;
                                                                                    var self = $9603;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $9607 = self.value;
                                                                                            var $9608 = Parser$Reply$error$(Parser$Error$combine$($9607, $9605));
                                                                                            var $9606 = $9608;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $9609 = Parser$Reply$error$($9605);
                                                                                            var $9606 = $9609;
                                                                                            break;
                                                                                    };
                                                                                    var $9604 = $9606;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $9610 = self.pst;
                                                                                    var self = $9610;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $9612 = self.err;
                                                                                            var $9613 = self.nam;
                                                                                            var $9614 = self.ini;
                                                                                            var $9615 = self.idx;
                                                                                            var $9616 = self.str;
                                                                                            var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($9603, $9612), $9613, $9614, $9615, $9616);
                                                                                            var $9617 = Kind$Parser$binder$("=", _reply$pst$50);
                                                                                            var $9611 = $9617;
                                                                                            break;
                                                                                    };
                                                                                    var $9604 = $9611;
                                                                                    break;
                                                                            };
                                                                            var $9602 = $9604;
                                                                            break;
                                                                    };
                                                                    return $9602;
                                                                }), _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $9618 = self.err;
                                                                        var self = $9600;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $9620 = self.value;
                                                                                var $9621 = Parser$Reply$error$(Parser$Error$combine$($9620, $9618));
                                                                                var $9619 = $9621;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $9622 = Parser$Reply$error$($9618);
                                                                                var $9619 = $9622;
                                                                                break;
                                                                        };
                                                                        var $9601 = $9619;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $9623 = self.pst;
                                                                        var $9624 = self.val;
                                                                        var self = $9623;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $9626 = self.err;
                                                                                var $9627 = self.nam;
                                                                                var $9628 = self.ini;
                                                                                var $9629 = self.idx;
                                                                                var $9630 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($9600, $9626), $9627, $9628, $9629, $9630);
                                                                                var _args$45 = Maybe$default$($9592, List$nil);
                                                                                var _inds$46 = Maybe$default$($9624, List$nil);
                                                                                var $9631 = Parser$Reply$value$(_reply$pst$44, Kind$Parser$ADT$Constructor$new$($9576, _args$45, _inds$46));
                                                                                var $9625 = $9631;
                                                                                break;
                                                                        };
                                                                        var $9601 = $9625;
                                                                        break;
                                                                };
                                                                var $9599 = $9601;
                                                                break;
                                                        };
                                                        var $9593 = $9599;
                                                        break;
                                                };
                                                var $9585 = $9593;
                                                break;
                                        };
                                        var $9583 = $9585;
                                        break;
                                };
                                var $9577 = $9583;
                                break;
                        };
                        var $9569 = $9577;
                        break;
                };
                var $9567 = $9569;
                break;
        };
        return $9567;
    };
    const Kind$Parser$ADT$ctor = x0 => x1 => Kind$Parser$ADT$ctor$(x0, x1);

    function Kind$Parser$ADT$Datatype$new$(_name$1, _pars$2, _inds$3, _ctrs$4, _deri$5) {
        var $9632 = ({
            _: 'Kind.Parser.ADT.Datatype.new',
            'name': _name$1,
            'pars': _pars$2,
            'inds': _inds$3,
            'ctrs': _ctrs$4,
            'deri': _deri$5
        });
        return $9632;
    };
    const Kind$Parser$ADT$Datatype$new = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Datatype$new$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$adt$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $9634 = self.err;
                var _reply$7 = Kind$Parser$text$("type ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9636 = self.err;
                        var self = $9634;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9638 = self.value;
                                var $9639 = Parser$Reply$error$(Parser$Error$combine$($9638, $9636));
                                var $9637 = $9639;
                                break;
                            case 'Maybe.none':
                                var $9640 = Parser$Reply$error$($9636);
                                var $9637 = $9640;
                                break;
                        };
                        var $9635 = $9637;
                        break;
                    case 'Parser.Reply.value':
                        var $9641 = self.pst;
                        var self = $9641;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9643 = self.err;
                                var $9644 = self.nam;
                                var $9645 = self.ini;
                                var $9646 = self.idx;
                                var $9647 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($9634, $9643), $9644, $9645, $9646, $9647);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9649 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9651 = self.err;
                                                var self = $9649;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9653 = self.value;
                                                        var $9654 = Parser$Reply$error$(Parser$Error$combine$($9653, $9651));
                                                        var $9652 = $9654;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9655 = Parser$Reply$error$($9651);
                                                        var $9652 = $9655;
                                                        break;
                                                };
                                                var $9650 = $9652;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9656 = self.pst;
                                                var $9657 = self.val;
                                                var self = $9656;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9659 = self.err;
                                                        var $9660 = self.nam;
                                                        var $9661 = self.ini;
                                                        var $9662 = self.idx;
                                                        var $9663 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($9649, $9659), $9660, $9661, $9662, $9663);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $9665 = self.err;
                                                                var _reply$35 = Parser$maybe$(Kind$Parser$binder(":"), _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $9667 = self.err;
                                                                        var self = $9665;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $9669 = self.value;
                                                                                var $9670 = Parser$Reply$error$(Parser$Error$combine$($9669, $9667));
                                                                                var $9668 = $9670;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $9671 = Parser$Reply$error$($9667);
                                                                                var $9668 = $9671;
                                                                                break;
                                                                        };
                                                                        var $9666 = $9668;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $9672 = self.pst;
                                                                        var $9673 = self.val;
                                                                        var self = $9672;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $9675 = self.err;
                                                                                var $9676 = self.nam;
                                                                                var $9677 = self.ini;
                                                                                var $9678 = self.idx;
                                                                                var $9679 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($9665, $9675), $9676, $9677, $9678, $9679);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $9681 = self.err;
                                                                                        var _reply$49 = Parser$maybe$((_pst$49 => {
                                                                                            var self = _pst$49;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $9684 = self.err;
                                                                                                    var _reply$55 = Kind$Parser$text$("~", _pst$49);
                                                                                                    var self = _reply$55;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $9686 = self.err;
                                                                                                            var self = $9684;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $9688 = self.value;
                                                                                                                    var $9689 = Parser$Reply$error$(Parser$Error$combine$($9688, $9686));
                                                                                                                    var $9687 = $9689;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $9690 = Parser$Reply$error$($9686);
                                                                                                                    var $9687 = $9690;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $9685 = $9687;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $9691 = self.pst;
                                                                                                            var self = $9691;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $9693 = self.err;
                                                                                                                    var $9694 = self.nam;
                                                                                                                    var $9695 = self.ini;
                                                                                                                    var $9696 = self.idx;
                                                                                                                    var $9697 = self.str;
                                                                                                                    var _reply$pst$63 = Parser$State$new$(Parser$Error$maybe_combine$($9684, $9693), $9694, $9695, $9696, $9697);
                                                                                                                    var $9698 = Kind$Parser$binder$(":", _reply$pst$63);
                                                                                                                    var $9692 = $9698;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $9685 = $9692;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $9683 = $9685;
                                                                                                    break;
                                                                                            };
                                                                                            return $9683;
                                                                                        }), _reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $9699 = self.err;
                                                                                                var self = $9681;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $9701 = self.value;
                                                                                                        var $9702 = Parser$Reply$error$(Parser$Error$combine$($9701, $9699));
                                                                                                        var $9700 = $9702;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $9703 = Parser$Reply$error$($9699);
                                                                                                        var $9700 = $9703;
                                                                                                        break;
                                                                                                };
                                                                                                var $9682 = $9700;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $9704 = self.pst;
                                                                                                var $9705 = self.val;
                                                                                                var self = $9704;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $9707 = self.err;
                                                                                                        var $9708 = self.nam;
                                                                                                        var $9709 = self.ini;
                                                                                                        var $9710 = self.idx;
                                                                                                        var $9711 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($9681, $9707), $9708, $9709, $9710, $9711);
                                                                                                        var _pars$58 = Maybe$default$($9673, List$nil);
                                                                                                        var _inds$59 = Maybe$default$($9705, List$nil);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $9713 = self.err;
                                                                                                                var _reply$65 = Kind$Parser$items$("{", Kind$Parser$ADT$ctor($9657), "}")(_reply$pst$57);
                                                                                                                var self = _reply$65;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $9715 = self.err;
                                                                                                                        var self = $9713;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $9717 = self.value;
                                                                                                                                var $9718 = Parser$Reply$error$(Parser$Error$combine$($9717, $9715));
                                                                                                                                var $9716 = $9718;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $9719 = Parser$Reply$error$($9715);
                                                                                                                                var $9716 = $9719;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $9714 = $9716;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $9720 = self.pst;
                                                                                                                        var $9721 = self.val;
                                                                                                                        var self = $9720;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $9723 = self.err;
                                                                                                                                var $9724 = self.nam;
                                                                                                                                var $9725 = self.ini;
                                                                                                                                var $9726 = self.idx;
                                                                                                                                var $9727 = self.str;
                                                                                                                                var _reply$pst$73 = Parser$State$new$(Parser$Error$maybe_combine$($9713, $9723), $9724, $9725, $9726, $9727);
                                                                                                                                var self = _reply$pst$73;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $9729 = self.err;
                                                                                                                                        var _reply$79 = Parser$maybe$((_pst$79 => {
                                                                                                                                            var self = _pst$79;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $9732 = self.err;
                                                                                                                                                    var _reply$85 = Kind$Parser$text$("deriving", _pst$79);
                                                                                                                                                    var self = _reply$85;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                            var $9734 = self.err;
                                                                                                                                                            var self = $9732;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                    var $9736 = self.value;
                                                                                                                                                                    var $9737 = Parser$Reply$error$(Parser$Error$combine$($9736, $9734));
                                                                                                                                                                    var $9735 = $9737;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                    var $9738 = Parser$Reply$error$($9734);
                                                                                                                                                                    var $9735 = $9738;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $9733 = $9735;
                                                                                                                                                            break;
                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                            var $9739 = self.pst;
                                                                                                                                                            var self = $9739;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $9741 = self.err;
                                                                                                                                                                    var $9742 = self.nam;
                                                                                                                                                                    var $9743 = self.ini;
                                                                                                                                                                    var $9744 = self.idx;
                                                                                                                                                                    var $9745 = self.str;
                                                                                                                                                                    var _reply$pst$93 = Parser$State$new$(Parser$Error$maybe_combine$($9732, $9741), $9742, $9743, $9744, $9745);
                                                                                                                                                                    var $9746 = Kind$Parser$items$("(", Kind$Parser$name1, ")")(_reply$pst$93);
                                                                                                                                                                    var $9740 = $9746;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $9733 = $9740;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $9731 = $9733;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            return $9731;
                                                                                                                                        }), _reply$pst$73);
                                                                                                                                        var self = _reply$79;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $9747 = self.err;
                                                                                                                                                var self = $9729;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $9749 = self.value;
                                                                                                                                                        var $9750 = Parser$Reply$error$(Parser$Error$combine$($9749, $9747));
                                                                                                                                                        var $9748 = $9750;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $9751 = Parser$Reply$error$($9747);
                                                                                                                                                        var $9748 = $9751;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $9730 = $9748;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $9752 = self.pst;
                                                                                                                                                var $9753 = self.val;
                                                                                                                                                var self = $9752;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $9755 = self.err;
                                                                                                                                                        var $9756 = self.nam;
                                                                                                                                                        var $9757 = self.ini;
                                                                                                                                                        var $9758 = self.idx;
                                                                                                                                                        var $9759 = self.str;
                                                                                                                                                        var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($9729, $9755), $9756, $9757, $9758, $9759);
                                                                                                                                                        var self = $9753;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                var $9761 = self.value;
                                                                                                                                                                var $9762 = $9761;
                                                                                                                                                                var _deri$88 = $9762;
                                                                                                                                                                break;
                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                var $9763 = List$nil;
                                                                                                                                                                var _deri$88 = $9763;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $9760 = Parser$Reply$value$(_reply$pst$87, Kind$Parser$ADT$Datatype$new$($9657, _pars$58, _inds$59, $9721, _deri$88));
                                                                                                                                                        var $9754 = $9760;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $9730 = $9754;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $9728 = $9730;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $9722 = $9728;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $9714 = $9722;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $9712 = $9714;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $9706 = $9712;
                                                                                                        break;
                                                                                                };
                                                                                                var $9682 = $9706;
                                                                                                break;
                                                                                        };
                                                                                        var $9680 = $9682;
                                                                                        break;
                                                                                };
                                                                                var $9674 = $9680;
                                                                                break;
                                                                        };
                                                                        var $9666 = $9674;
                                                                        break;
                                                                };
                                                                var $9664 = $9666;
                                                                break;
                                                        };
                                                        var $9658 = $9664;
                                                        break;
                                                };
                                                var $9650 = $9658;
                                                break;
                                        };
                                        var $9648 = $9650;
                                        break;
                                };
                                var $9642 = $9648;
                                break;
                        };
                        var $9635 = $9642;
                        break;
                };
                var $9633 = $9635;
                break;
        };
        return $9633;
    };
    const Kind$Parser$ADT$adt = x0 => Kind$Parser$ADT$adt$(x0);

    function Kind$Parser$ADT$Datatype$build_term$motive$go$(_type$1, _name$2, _inds$3) {
        var self = _inds$3;
        switch (self._) {
            case 'List.cons':
                var $9765 = self.head;
                var $9766 = self.tail;
                var self = $9765;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9768 = self.eras;
                        var $9769 = self.name;
                        var $9770 = self.term;
                        var $9771 = Kind$Term$all$($9768, "", $9769, $9770, (_s$9 => _x$10 => {
                            var $9772 = Kind$Parser$ADT$Datatype$build_term$motive$go$(_type$1, _name$2, $9766);
                            return $9772;
                        }));
                        var $9767 = $9771;
                        break;
                };
                var $9764 = $9767;
                break;
            case 'List.nil':
                var self = _type$1;
                switch (self._) {
                    case 'Kind.Parser.ADT.Datatype.new':
                        var $9774 = self.pars;
                        var $9775 = self.inds;
                        var _slf$9 = Kind$Term$ref$(_name$2);
                        var _slf$10 = (() => {
                            var $9778 = _slf$9;
                            var $9779 = $9774;
                            let _slf$11 = $9778;
                            let _v$10;
                            while ($9779._ === 'List.cons') {
                                _v$10 = $9779.head;
                                var $9778 = Kind$Term$app$(_slf$11, Kind$Term$ref$((() => {
                                    var self = _v$10;
                                    switch (self._) {
                                        case 'Kind.Binder.new':
                                            var $9780 = self.name;
                                            var $9781 = $9780;
                                            return $9781;
                                    };
                                })()));
                                _slf$11 = $9778;
                                $9779 = $9779.tail;
                            }
                            return _slf$11;
                        })();
                        var _slf$11 = (() => {
                            var $9783 = _slf$10;
                            var $9784 = $9775;
                            let _slf$12 = $9783;
                            let _v$11;
                            while ($9784._ === 'List.cons') {
                                _v$11 = $9784.head;
                                var $9783 = Kind$Term$app$(_slf$12, Kind$Term$ref$((() => {
                                    var self = _v$11;
                                    switch (self._) {
                                        case 'Kind.Binder.new':
                                            var $9785 = self.name;
                                            var $9786 = $9785;
                                            return $9786;
                                    };
                                })()));
                                _slf$12 = $9783;
                                $9784 = $9784.tail;
                            }
                            return _slf$12;
                        })();
                        var $9776 = Kind$Term$all$(Bool$false, "", "", _slf$11, (_s$12 => _x$13 => {
                            var $9787 = Kind$Term$typ;
                            return $9787;
                        }));
                        var $9773 = $9776;
                        break;
                };
                var $9764 = $9773;
                break;
        };
        return $9764;
    };
    const Kind$Parser$ADT$Datatype$build_term$motive$go = x0 => x1 => x2 => Kind$Parser$ADT$Datatype$build_term$motive$go$(x0, x1, x2);

    function Kind$Parser$ADT$Datatype$build_term$motive$(_type$1) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9789 = self.name;
                var $9790 = self.inds;
                var $9791 = Kind$Parser$ADT$Datatype$build_term$motive$go$(_type$1, $9789, $9790);
                var $9788 = $9791;
                break;
        };
        return $9788;
    };
    const Kind$Parser$ADT$Datatype$build_term$motive = x0 => Kind$Parser$ADT$Datatype$build_term$motive$(x0);

    function String$flatten$go$(_xs$1, _res$2) {
        var String$flatten$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$flatten$go = _xs$1 => _res$2 => String$flatten$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                switch (self._) {
                    case 'List.cons':
                        var $9792 = self.head;
                        var $9793 = self.tail;
                        var $9794 = String$flatten$go$($9793, (_res$2 + $9792));
                        return $9794;
                    case 'List.nil':
                        var $9795 = _res$2;
                        return $9795;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$flatten$go = x0 => x1 => String$flatten$go$(x0, x1);

    function String$flatten$(_xs$1) {
        var $9796 = String$flatten$go$(_xs$1, "");
        return $9796;
    };
    const String$flatten = x0 => String$flatten$(x0);

    function Kind$Parser$ADT$Datatype$build_term$constructor$go$(_type$1, _ctor$2, _args$3) {
        var self = _args$3;
        switch (self._) {
            case 'List.cons':
                var $9798 = self.head;
                var $9799 = self.tail;
                var self = $9798;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9801 = self.eras;
                        var $9802 = self.name;
                        var $9803 = self.term;
                        var _eras$9 = $9801;
                        var _name$10 = $9802;
                        var _xtyp$11 = $9803;
                        var _body$12 = Kind$Parser$ADT$Datatype$build_term$constructor$go$(_type$1, _ctor$2, $9799);
                        var $9804 = Kind$Term$all$(_eras$9, "", _name$10, _xtyp$11, (_s$13 => _x$14 => {
                            var $9805 = _body$12;
                            return $9805;
                        }));
                        var $9800 = $9804;
                        break;
                };
                var $9797 = $9800;
                break;
            case 'List.nil':
                var self = _type$1;
                switch (self._) {
                    case 'Kind.Parser.ADT.Datatype.new':
                        var $9807 = self.name;
                        var $9808 = self.pars;
                        var self = _ctor$2;
                        switch (self._) {
                            case 'Kind.Parser.ADT.Constructor.new':
                                var $9810 = self.name;
                                var $9811 = self.args;
                                var $9812 = self.inds;
                                var _ret$12 = Kind$Term$ref$(Kind$Name$read$("P"));
                                var _ret$13 = (() => {
                                    var $9815 = _ret$12;
                                    var $9816 = $9812;
                                    let _ret$14 = $9815;
                                    let _v$13;
                                    while ($9816._ === 'List.cons') {
                                        _v$13 = $9816.head;
                                        var $9815 = Kind$Term$app$(_ret$14, (() => {
                                            var self = _v$13;
                                            switch (self._) {
                                                case 'Kind.Binder.new':
                                                    var $9817 = self.term;
                                                    var $9818 = $9817;
                                                    return $9818;
                                            };
                                        })());
                                        _ret$14 = $9815;
                                        $9816 = $9816.tail;
                                    }
                                    return _ret$14;
                                })();
                                var _ctr$14 = String$flatten$(List$cons$($9807, List$cons$(Kind$Name$read$("."), List$cons$($9810, List$nil))));
                                var _slf$15 = Kind$Term$ref$(_ctr$14);
                                var _slf$16 = (() => {
                                    var $9820 = _slf$15;
                                    var $9821 = $9808;
                                    let _slf$17 = $9820;
                                    let _v$16;
                                    while ($9821._ === 'List.cons') {
                                        _v$16 = $9821.head;
                                        var $9820 = Kind$Term$app$(_slf$17, Kind$Term$ref$((() => {
                                            var self = _v$16;
                                            switch (self._) {
                                                case 'Kind.Binder.new':
                                                    var $9822 = self.name;
                                                    var $9823 = $9822;
                                                    return $9823;
                                            };
                                        })()));
                                        _slf$17 = $9820;
                                        $9821 = $9821.tail;
                                    }
                                    return _slf$17;
                                })();
                                var _slf$17 = (() => {
                                    var $9825 = _slf$16;
                                    var $9826 = $9811;
                                    let _slf$18 = $9825;
                                    let _v$17;
                                    while ($9826._ === 'List.cons') {
                                        _v$17 = $9826.head;
                                        var $9825 = Kind$Term$app$(_slf$18, Kind$Term$ref$((() => {
                                            var self = _v$17;
                                            switch (self._) {
                                                case 'Kind.Binder.new':
                                                    var $9827 = self.name;
                                                    var $9828 = $9827;
                                                    return $9828;
                                            };
                                        })()));
                                        _slf$18 = $9825;
                                        $9826 = $9826.tail;
                                    }
                                    return _slf$18;
                                })();
                                var $9813 = Kind$Term$app$(_ret$13, _slf$17);
                                var $9809 = $9813;
                                break;
                        };
                        var $9806 = $9809;
                        break;
                };
                var $9797 = $9806;
                break;
        };
        return $9797;
    };
    const Kind$Parser$ADT$Datatype$build_term$constructor$go = x0 => x1 => x2 => Kind$Parser$ADT$Datatype$build_term$constructor$go$(x0, x1, x2);

    function Kind$Parser$ADT$Datatype$build_term$constructor$(_type$1, _ctor$2) {
        var self = _ctor$2;
        switch (self._) {
            case 'Kind.Parser.ADT.Constructor.new':
                var $9830 = self.args;
                var $9831 = Kind$Parser$ADT$Datatype$build_term$constructor$go$(_type$1, _ctor$2, $9830);
                var $9829 = $9831;
                break;
        };
        return $9829;
    };
    const Kind$Parser$ADT$Datatype$build_term$constructor = x0 => x1 => Kind$Parser$ADT$Datatype$build_term$constructor$(x0, x1);

    function Kind$Parser$ADT$Datatype$build_term$constructors$go$(_type$1, _name$2, _ctrs$3) {
        var self = _ctrs$3;
        switch (self._) {
            case 'List.cons':
                var $9833 = self.head;
                var $9834 = self.tail;
                var self = $9833;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9836 = self.name;
                        var $9837 = Kind$Term$all$(Bool$false, "", $9836, Kind$Parser$ADT$Datatype$build_term$constructor$(_type$1, $9833), (_s$9 => _x$10 => {
                            var $9838 = Kind$Parser$ADT$Datatype$build_term$constructors$go$(_type$1, _name$2, $9834);
                            return $9838;
                        }));
                        var $9835 = $9837;
                        break;
                };
                var $9832 = $9835;
                break;
            case 'List.nil':
                var self = _type$1;
                switch (self._) {
                    case 'Kind.Parser.ADT.Datatype.new':
                        var $9840 = self.inds;
                        var _ret$9 = Kind$Term$ref$(Kind$Name$read$("P"));
                        var _ret$10 = (() => {
                            var $9843 = _ret$9;
                            var $9844 = $9840;
                            let _ret$11 = $9843;
                            let _v$10;
                            while ($9844._ === 'List.cons') {
                                _v$10 = $9844.head;
                                var $9843 = Kind$Term$app$(_ret$11, Kind$Term$ref$((() => {
                                    var self = _v$10;
                                    switch (self._) {
                                        case 'Kind.Binder.new':
                                            var $9845 = self.name;
                                            var $9846 = $9845;
                                            return $9846;
                                    };
                                })()));
                                _ret$11 = $9843;
                                $9844 = $9844.tail;
                            }
                            return _ret$11;
                        })();
                        var $9841 = Kind$Term$app$(_ret$10, Kind$Term$ref$((_name$2 + ".Self")));
                        var $9839 = $9841;
                        break;
                };
                var $9832 = $9839;
                break;
        };
        return $9832;
    };
    const Kind$Parser$ADT$Datatype$build_term$constructors$go = x0 => x1 => x2 => Kind$Parser$ADT$Datatype$build_term$constructors$go$(x0, x1, x2);

    function Kind$Parser$ADT$Datatype$build_term$constructors$(_type$1) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9848 = self.name;
                var $9849 = self.ctrs;
                var $9850 = Kind$Parser$ADT$Datatype$build_term$constructors$go$(_type$1, $9848, $9849);
                var $9847 = $9850;
                break;
        };
        return $9847;
    };
    const Kind$Parser$ADT$Datatype$build_term$constructors = x0 => Kind$Parser$ADT$Datatype$build_term$constructors$(x0);

    function Kind$Parser$ADT$Datatype$build_term$go$(_type$1, _name$2, _pars$3, _inds$4) {
        var self = _pars$3;
        switch (self._) {
            case 'List.cons':
                var $9852 = self.head;
                var $9853 = self.tail;
                var self = $9852;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9855 = self.name;
                        var $9856 = Kind$Term$lam$($9855, (_x$10 => {
                            var $9857 = Kind$Parser$ADT$Datatype$build_term$go$(_type$1, _name$2, $9853, _inds$4);
                            return $9857;
                        }));
                        var $9854 = $9856;
                        break;
                };
                var $9851 = $9854;
                break;
            case 'List.nil':
                var self = _inds$4;
                switch (self._) {
                    case 'List.cons':
                        var $9859 = self.head;
                        var $9860 = self.tail;
                        var self = $9859;
                        switch (self._) {
                            case 'Kind.Binder.new':
                                var $9862 = self.name;
                                var $9863 = Kind$Term$lam$($9862, (_x$10 => {
                                    var $9864 = Kind$Parser$ADT$Datatype$build_term$go$(_type$1, _name$2, _pars$3, $9860);
                                    return $9864;
                                }));
                                var $9861 = $9863;
                                break;
                        };
                        var $9858 = $9861;
                        break;
                    case 'List.nil':
                        var $9865 = Kind$Term$all$(Bool$true, (_name$2 + ".Self"), Kind$Name$read$("P"), Kind$Parser$ADT$Datatype$build_term$motive$(_type$1), (_s$5 => _x$6 => {
                            var $9866 = Kind$Parser$ADT$Datatype$build_term$constructors$(_type$1);
                            return $9866;
                        }));
                        var $9858 = $9865;
                        break;
                };
                var $9851 = $9858;
                break;
        };
        return $9851;
    };
    const Kind$Parser$ADT$Datatype$build_term$go = x0 => x1 => x2 => x3 => Kind$Parser$ADT$Datatype$build_term$go$(x0, x1, x2, x3);

    function Kind$Parser$ADT$Datatype$build_term$(_type$1) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9868 = self.name;
                var $9869 = self.pars;
                var $9870 = self.inds;
                var $9871 = Kind$Parser$ADT$Datatype$build_term$go$(_type$1, $9868, $9869, $9870);
                var $9867 = $9871;
                break;
        };
        return $9867;
    };
    const Kind$Parser$ADT$Datatype$build_term = x0 => Kind$Parser$ADT$Datatype$build_term$(x0);

    function Kind$Parser$ADT$Datatype$build_type$go$(_type$1, _name$2, _pars$3, _inds$4) {
        var self = _pars$3;
        switch (self._) {
            case 'List.cons':
                var $9873 = self.head;
                var $9874 = self.tail;
                var self = $9873;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9876 = self.name;
                        var $9877 = self.term;
                        var $9878 = Kind$Term$all$(Bool$false, "", $9876, $9877, (_s$10 => _x$11 => {
                            var $9879 = Kind$Parser$ADT$Datatype$build_type$go$(_type$1, _name$2, $9874, _inds$4);
                            return $9879;
                        }));
                        var $9875 = $9878;
                        break;
                };
                var $9872 = $9875;
                break;
            case 'List.nil':
                var self = _inds$4;
                switch (self._) {
                    case 'List.cons':
                        var $9881 = self.head;
                        var $9882 = self.tail;
                        var self = $9881;
                        switch (self._) {
                            case 'Kind.Binder.new':
                                var $9884 = self.name;
                                var $9885 = self.term;
                                var $9886 = Kind$Term$all$(Bool$false, "", $9884, $9885, (_s$10 => _x$11 => {
                                    var $9887 = Kind$Parser$ADT$Datatype$build_type$go$(_type$1, _name$2, _pars$3, $9882);
                                    return $9887;
                                }));
                                var $9883 = $9886;
                                break;
                        };
                        var $9880 = $9883;
                        break;
                    case 'List.nil':
                        var $9888 = Kind$Term$typ;
                        var $9880 = $9888;
                        break;
                };
                var $9872 = $9880;
                break;
        };
        return $9872;
    };
    const Kind$Parser$ADT$Datatype$build_type$go = x0 => x1 => x2 => x3 => Kind$Parser$ADT$Datatype$build_type$go$(x0, x1, x2, x3);

    function Kind$Parser$ADT$Datatype$build_type$(_type$1) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9890 = self.name;
                var $9891 = self.pars;
                var $9892 = self.inds;
                var $9893 = Kind$Parser$ADT$Datatype$build_type$go$(_type$1, $9890, $9891, $9892);
                var $9889 = $9893;
                break;
        };
        return $9889;
    };
    const Kind$Parser$ADT$Datatype$build_type = x0 => Kind$Parser$ADT$Datatype$build_type$(x0);

    function Kind$Parser$ADT$Constructor$build_term$opt$go$(_type$1, _ctor$2, _ctrs$3) {
        var self = _ctrs$3;
        switch (self._) {
            case 'List.cons':
                var $9895 = self.head;
                var $9896 = self.tail;
                var self = $9895;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9898 = self.name;
                        var $9899 = Kind$Term$lam$($9898, (_x$9 => {
                            var $9900 = Kind$Parser$ADT$Constructor$build_term$opt$go$(_type$1, _ctor$2, $9896);
                            return $9900;
                        }));
                        var $9897 = $9899;
                        break;
                };
                var $9894 = $9897;
                break;
            case 'List.nil':
                var self = _ctor$2;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9902 = self.name;
                        var $9903 = self.args;
                        var _ret$7 = Kind$Term$ref$($9902);
                        var _ret$8 = (() => {
                            var $9906 = _ret$7;
                            var $9907 = $9903;
                            let _ret$9 = $9906;
                            let _arg$8;
                            while ($9907._ === 'List.cons') {
                                _arg$8 = $9907.head;
                                var $9906 = Kind$Term$app$(_ret$9, Kind$Term$ref$((() => {
                                    var self = _arg$8;
                                    switch (self._) {
                                        case 'Kind.Binder.new':
                                            var $9908 = self.name;
                                            var $9909 = $9908;
                                            return $9909;
                                    };
                                })()));
                                _ret$9 = $9906;
                                $9907 = $9907.tail;
                            }
                            return _ret$9;
                        })();
                        var $9904 = _ret$8;
                        var $9901 = $9904;
                        break;
                };
                var $9894 = $9901;
                break;
        };
        return $9894;
    };
    const Kind$Parser$ADT$Constructor$build_term$opt$go = x0 => x1 => x2 => Kind$Parser$ADT$Constructor$build_term$opt$go$(x0, x1, x2);

    function Kind$Parser$ADT$Constructor$build_term$opt$(_type$1, _ctor$2) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9911 = self.ctrs;
                var $9912 = Kind$Parser$ADT$Constructor$build_term$opt$go$(_type$1, _ctor$2, $9911);
                var $9910 = $9912;
                break;
        };
        return $9910;
    };
    const Kind$Parser$ADT$Constructor$build_term$opt = x0 => x1 => Kind$Parser$ADT$Constructor$build_term$opt$(x0, x1);

    function Kind$Parser$ADT$Constructor$build_term$go$(_type$1, _ctor$2, _name$3, _pars$4, _args$5) {
        var self = _pars$4;
        switch (self._) {
            case 'List.cons':
                var $9914 = self.head;
                var $9915 = self.tail;
                var self = $9914;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9917 = self.name;
                        var $9918 = Kind$Term$lam$($9917, (_x$11 => {
                            var $9919 = Kind$Parser$ADT$Constructor$build_term$go$(_type$1, _ctor$2, _name$3, $9915, _args$5);
                            return $9919;
                        }));
                        var $9916 = $9918;
                        break;
                };
                var $9913 = $9916;
                break;
            case 'List.nil':
                var self = _args$5;
                switch (self._) {
                    case 'List.cons':
                        var $9921 = self.head;
                        var $9922 = self.tail;
                        var self = $9921;
                        switch (self._) {
                            case 'Kind.Binder.new':
                                var $9924 = self.name;
                                var $9925 = Kind$Term$lam$($9924, (_x$11 => {
                                    var $9926 = Kind$Parser$ADT$Constructor$build_term$go$(_type$1, _ctor$2, _name$3, _pars$4, $9922);
                                    return $9926;
                                }));
                                var $9923 = $9925;
                                break;
                        };
                        var $9920 = $9923;
                        break;
                    case 'List.nil':
                        var $9927 = Kind$Term$lam$(Kind$Name$read$("P"), (_x$6 => {
                            var $9928 = Kind$Parser$ADT$Constructor$build_term$opt$(_type$1, _ctor$2);
                            return $9928;
                        }));
                        var $9920 = $9927;
                        break;
                };
                var $9913 = $9920;
                break;
        };
        return $9913;
    };
    const Kind$Parser$ADT$Constructor$build_term$go = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Constructor$build_term$go$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$Constructor$build_term$(_type$1, _ctor$2) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9930 = self.name;
                var $9931 = self.pars;
                var self = _ctor$2;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9933 = self.args;
                        var $9934 = Kind$Parser$ADT$Constructor$build_term$go$(_type$1, _ctor$2, $9930, $9931, $9933);
                        var $9932 = $9934;
                        break;
                };
                var $9929 = $9932;
                break;
        };
        return $9929;
    };
    const Kind$Parser$ADT$Constructor$build_term = x0 => x1 => Kind$Parser$ADT$Constructor$build_term$(x0, x1);

    function Kind$Parser$ADT$Constructor$build_type$go$(_type$1, _ctor$2, _name$3, _pars$4, _args$5) {
        var self = _pars$4;
        switch (self._) {
            case 'List.cons':
                var $9936 = self.head;
                var $9937 = self.tail;
                var self = $9936;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9939 = self.eras;
                        var $9940 = self.name;
                        var $9941 = self.term;
                        var $9942 = Kind$Term$all$($9939, "", $9940, $9941, (_s$11 => _x$12 => {
                            var $9943 = Kind$Parser$ADT$Constructor$build_type$go$(_type$1, _ctor$2, _name$3, $9937, _args$5);
                            return $9943;
                        }));
                        var $9938 = $9942;
                        break;
                };
                var $9935 = $9938;
                break;
            case 'List.nil':
                var self = _args$5;
                switch (self._) {
                    case 'List.cons':
                        var $9945 = self.head;
                        var $9946 = self.tail;
                        var self = $9945;
                        switch (self._) {
                            case 'Kind.Binder.new':
                                var $9948 = self.eras;
                                var $9949 = self.name;
                                var $9950 = self.term;
                                var $9951 = Kind$Term$all$($9948, "", $9949, $9950, (_s$11 => _x$12 => {
                                    var $9952 = Kind$Parser$ADT$Constructor$build_type$go$(_type$1, _ctor$2, _name$3, _pars$4, $9946);
                                    return $9952;
                                }));
                                var $9947 = $9951;
                                break;
                        };
                        var $9944 = $9947;
                        break;
                    case 'List.nil':
                        var self = _type$1;
                        switch (self._) {
                            case 'Kind.Parser.ADT.Datatype.new':
                                var $9954 = self.pars;
                                var self = _ctor$2;
                                switch (self._) {
                                    case 'Kind.Parser.ADT.Constructor.new':
                                        var $9956 = self.inds;
                                        var _type$14 = Kind$Term$ref$(_name$3);
                                        var _type$15 = (() => {
                                            var $9959 = _type$14;
                                            var $9960 = $9954;
                                            let _type$16 = $9959;
                                            let _v$15;
                                            while ($9960._ === 'List.cons') {
                                                _v$15 = $9960.head;
                                                var $9959 = Kind$Term$app$(_type$16, Kind$Term$ref$((() => {
                                                    var self = _v$15;
                                                    switch (self._) {
                                                        case 'Kind.Binder.new':
                                                            var $9961 = self.name;
                                                            var $9962 = $9961;
                                                            return $9962;
                                                    };
                                                })()));
                                                _type$16 = $9959;
                                                $9960 = $9960.tail;
                                            }
                                            return _type$16;
                                        })();
                                        var _type$16 = (() => {
                                            var $9964 = _type$15;
                                            var $9965 = $9956;
                                            let _type$17 = $9964;
                                            let _v$16;
                                            while ($9965._ === 'List.cons') {
                                                _v$16 = $9965.head;
                                                var $9964 = Kind$Term$app$(_type$17, (() => {
                                                    var self = _v$16;
                                                    switch (self._) {
                                                        case 'Kind.Binder.new':
                                                            var $9966 = self.term;
                                                            var $9967 = $9966;
                                                            return $9967;
                                                    };
                                                })());
                                                _type$17 = $9964;
                                                $9965 = $9965.tail;
                                            }
                                            return _type$17;
                                        })();
                                        var $9957 = _type$16;
                                        var $9955 = $9957;
                                        break;
                                };
                                var $9953 = $9955;
                                break;
                        };
                        var $9944 = $9953;
                        break;
                };
                var $9935 = $9944;
                break;
        };
        return $9935;
    };
    const Kind$Parser$ADT$Constructor$build_type$go = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Constructor$build_type$go$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$Constructor$build_type$(_type$1, _ctor$2) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9969 = self.name;
                var $9970 = self.pars;
                var self = _ctor$2;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9972 = self.args;
                        var $9973 = Kind$Parser$ADT$Constructor$build_type$go$(_type$1, _ctor$2, $9969, $9970, $9972);
                        var $9971 = $9973;
                        break;
                };
                var $9968 = $9971;
                break;
        };
        return $9968;
    };
    const Kind$Parser$ADT$Constructor$build_type = x0 => x1 => Kind$Parser$ADT$Constructor$build_type$(x0, x1);

    function List$is_empty$(_list$2) {
        var self = _list$2;
        switch (self._) {
            case 'List.nil':
                var $9975 = Bool$true;
                var $9974 = $9975;
                break;
            case 'List.cons':
                var $9976 = Bool$false;
                var $9974 = $9976;
                break;
        };
        return $9974;
    };
    const List$is_empty = x0 => List$is_empty$(x0);

    function Kind$Term$get_args$go$(_term$1, _args$2) {
        var Kind$Term$get_args$go$ = (_term$1, _args$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _args$2]
        });
        var Kind$Term$get_args$go = _term$1 => _args$2 => Kind$Term$get_args$go$(_term$1, _args$2);
        var arg = [_term$1, _args$2];
        while (true) {
            let [_term$1, _args$2] = arg;
            var R = (() => {
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.app':
                        var $9977 = self.func;
                        var $9978 = self.argm;
                        var $9979 = Kind$Term$get_args$go$($9977, List$cons$($9978, _args$2));
                        return $9979;
                    case 'Kind.Term.ori':
                        var $9980 = self.expr;
                        var $9981 = Kind$Term$get_args$go$($9980, _args$2);
                        return $9981;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $9982 = Pair$new$(_term$1, _args$2);
                        return $9982;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$get_args$go = x0 => x1 => Kind$Term$get_args$go$(x0, x1);

    function Kind$Term$get_args$(_term$1) {
        var $9983 = Kind$Term$get_args$go$(_term$1, List$nil);
        return $9983;
    };
    const Kind$Term$get_args = x0 => Kind$Term$get_args$(x0);

    function Kind$Parser$ADT$Derive$stringifier$term$cont$(_call$1, _rest$2) {
        var self = Kind$Term$get_args$(_call$1);
        switch (self._) {
            case 'Pair.new':
                var $9985 = self.fst;
                var $9986 = self.snd;
                var _term$5 = Kind$Term$ref$((Kind$Term$extract_name$($9985) + ".stringifier"));
                var _term$6 = (() => {
                    var $9989 = _term$5;
                    var $9990 = $9986;
                    let _term$7 = $9989;
                    let _par$6;
                    while ($9990._ === 'List.cons') {
                        _par$6 = $9990.head;
                        var $9989 = Kind$Term$app$(_term$7, Kind$Term$hol$(Bits$e));
                        _term$7 = $9989;
                        $9990 = $9990.tail;
                    }
                    return _term$7;
                })();
                var _term$7 = (() => {
                    var $9992 = _term$6;
                    var $9993 = $9986;
                    let _term$8 = $9992;
                    let _par$7;
                    while ($9993._ === 'List.cons') {
                        _par$7 = $9993.head;
                        var $9992 = Kind$Term$app$(_term$8, Kind$Parser$ADT$Derive$stringifier$term$cont$(_par$7, Maybe$none));
                        _term$8 = $9992;
                        $9993 = $9993.tail;
                    }
                    return _term$8;
                })();
                var self = _rest$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $9994 = self.value;
                        var self = $9994;
                        switch (self._) {
                            case 'Pair.new':
                                var $9996 = self.fst;
                                var $9997 = self.snd;
                                var _term$11 = Kind$Term$app$(_term$7, Kind$Term$ref$($9996));
                                var _term$12 = Kind$Term$app$(_term$11, $9997);
                                var $9998 = _term$12;
                                var $9995 = $9998;
                                break;
                        };
                        var $9987 = $9995;
                        break;
                    case 'Maybe.none':
                        var $9999 = _term$7;
                        var $9987 = $9999;
                        break;
                };
                var $9984 = $9987;
                break;
        };
        return $9984;
    };
    const Kind$Parser$ADT$Derive$stringifier$term$cont = x0 => x1 => Kind$Parser$ADT$Derive$stringifier$term$cont$(x0, x1);

    function Kind$Parser$ADT$Derive$stringifier$term$args$(_args$1, _fst$2) {
        var self = _args$1;
        switch (self._) {
            case 'List.cons':
                var $10001 = self.head;
                var $10002 = self.tail;
                var self = $10001;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $10004 = self.name;
                        var $10005 = self.term;
                        var self = Kind$Term$get_args$($10005);
                        switch (self._) {
                            case 'Pair.new':
                                var _rest$10 = Kind$Parser$ADT$Derive$stringifier$term$args$($10002, Bool$false);
                                var _term$11 = Kind$Parser$ADT$Derive$stringifier$term$cont$($10005, Maybe$some$(Pair$new$(("x." + $10004), _rest$10)));
                                var _term$12 = Kind$Term$app$(Kind$Term$app$(Kind$Term$ref$("Stringifier.text"), Kind$Term$str$((() => {
                                    var self = _fst$2;
                                    if (self) {
                                        var $10008 = "(";
                                        return $10008;
                                    } else {
                                        var $10009 = ",";
                                        return $10009;
                                    };
                                })())), _term$11);
                                var $10007 = _term$12;
                                var $10006 = $10007;
                                break;
                        };
                        var $10003 = $10006;
                        break;
                };
                var $10000 = $10003;
                break;
            case 'List.nil':
                var _term$3 = Kind$Term$ref$("str");
                var self = _fst$2;
                if (self) {
                    var $10011 = _term$3;
                    var _term$4 = $10011;
                } else {
                    var $10012 = Kind$Term$app$(Kind$Term$app$(Kind$Term$ref$("Stringifier.text"), Kind$Term$str$(")")), _term$3);
                    var _term$4 = $10012;
                };
                var $10010 = _term$4;
                var $10000 = $10010;
                break;
        };
        return $10000;
    };
    const Kind$Parser$ADT$Derive$stringifier$term$args = x0 => x1 => Kind$Parser$ADT$Derive$stringifier$term$args$(x0, x1);

    function Kind$Parser$ADT$Derive$stringifier$ctr$(_adt_name$1, _ctr$2) {
        var self = _ctr$2;
        switch (self._) {
            case 'Kind.Parser.ADT.Constructor.new':
                var $10014 = self.name;
                var $10015 = self.args;
                var _term$6 = Kind$Term$ref$("Stringifier.text");
                var _term$7 = Kind$Term$app$(_term$6, Kind$Term$str$((_adt_name$1 + ("." + $10014))));
                var _term$8 = Kind$Term$app$(_term$7, Kind$Parser$ADT$Derive$stringifier$term$args$($10015, Bool$true));
                var $10016 = Pair$new$($10014, _term$8);
                var $10013 = $10016;
                break;
        };
        return $10013;
    };
    const Kind$Parser$ADT$Derive$stringifier$ctr = x0 => x1 => Kind$Parser$ADT$Derive$stringifier$ctr$(x0, x1);

    function Kind$Parser$ADT$Derive$stringifier$term$ctrs$(_adt_name$1, _ctrs$2) {
        var self = _ctrs$2;
        switch (self._) {
            case 'List.cons':
                var $10018 = self.head;
                var $10019 = self.tail;
                var $10020 = List$cons$(Kind$Parser$ADT$Derive$stringifier$ctr$(_adt_name$1, $10018), Kind$Parser$ADT$Derive$stringifier$term$ctrs$(_adt_name$1, $10019));
                var $10017 = $10020;
                break;
            case 'List.nil':
                var $10021 = List$nil;
                var $10017 = $10021;
                break;
        };
        return $10017;
    };
    const Kind$Parser$ADT$Derive$stringifier$term$ctrs = x0 => x1 => Kind$Parser$ADT$Derive$stringifier$term$ctrs$(x0, x1);

    function Kind$Parser$ADT$Derive$stringifier$term$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10023 = self.name;
                var $10024 = self.pars;
                var $10025 = self.inds;
                var $10026 = self.ctrs;
                var self = (List$is_empty$($10024) && List$is_empty$($10025));
                if (self) {
                    var _term$7 = Kind$Term$lam$("x", (_x$7 => {
                        var $10029 = Kind$Term$lam$("str", (_str$8 => {
                            var _ctrs$9 = Kind$Parser$ADT$Derive$stringifier$term$ctrs$($10023, $10026);
                            var _cses$10 = Kind$Map$new;
                            var _cses$11 = (() => {
                                var $10032 = _cses$10;
                                var $10033 = _ctrs$9;
                                let _cses$12 = $10032;
                                let _ctr$11;
                                while ($10033._ === 'List.cons') {
                                    _ctr$11 = $10033.head;
                                    var self = _ctr$11;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $10034 = self.fst;
                                            var $10035 = self.snd;
                                            var $10036 = Kind$Map$set$($10034, $10035, _cses$12);
                                            var $10032 = $10036;
                                            break;
                                    };
                                    _cses$12 = $10032;
                                    $10033 = $10033.tail;
                                }
                                return _cses$12;
                            })();
                            var $10030 = Kind$Term$cse$(Bits$e, _x$7, "x", List$nil, _cses$11, Maybe$none);
                            return $10030;
                        }));
                        return $10029;
                    }));
                    var $10028 = Maybe$some$(_term$7);
                    var $10027 = $10028;
                } else {
                    var $10037 = Maybe$none;
                    var $10027 = $10037;
                };
                var $10022 = $10027;
                break;
        };
        return $10022;
    };
    const Kind$Parser$ADT$Derive$stringifier$term = x0 => Kind$Parser$ADT$Derive$stringifier$term$(x0);

    function Kind$Parser$ADT$Derive$stringifier$type$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10039 = self.name;
                var $10040 = self.pars;
                var $10041 = self.inds;
                var self = (List$is_empty$($10040) && List$is_empty$($10041));
                if (self) {
                    var $10043 = Maybe$some$(Kind$Term$app$(Kind$Term$ref$("Stringifier"), Kind$Term$ref$($10039)));
                    var $10042 = $10043;
                } else {
                    var $10044 = Maybe$none;
                    var $10042 = $10044;
                };
                var $10038 = $10042;
                break;
        };
        return $10038;
    };
    const Kind$Parser$ADT$Derive$stringifier$type = x0 => Kind$Parser$ADT$Derive$stringifier$type$(x0);

    function Kind$Parser$ADT$Derived$new$(_name$1, _arit$2, _term$3, _type$4) {
        var $10045 = ({
            _: 'Kind.Parser.ADT.Derived.new',
            'name': _name$1,
            'arit': _arit$2,
            'term': _term$3,
            'type': _type$4
        });
        return $10045;
    };
    const Kind$Parser$ADT$Derived$new = x0 => x1 => x2 => x3 => Kind$Parser$ADT$Derived$new$(x0, x1, x2, x3);

    function Kind$Parser$ADT$Derive$parser$term$cont$(_call$1) {
        var self = Kind$Term$get_args$(_call$1);
        switch (self._) {
            case 'Pair.new':
                var $10047 = self.fst;
                var $10048 = self.snd;
                var _term$4 = Kind$Term$ref$((Kind$Term$extract_name$($10047) + ".parser"));
                var _term$5 = (() => {
                    var $10051 = _term$4;
                    var $10052 = $10048;
                    let _term$6 = $10051;
                    let _par$5;
                    while ($10052._ === 'List.cons') {
                        _par$5 = $10052.head;
                        var $10051 = Kind$Term$app$(_term$6, Kind$Term$hol$(Bits$e));
                        _term$6 = $10051;
                        $10052 = $10052.tail;
                    }
                    return _term$6;
                })();
                var _term$6 = (() => {
                    var $10054 = _term$5;
                    var $10055 = $10048;
                    let _term$7 = $10054;
                    let _par$6;
                    while ($10055._ === 'List.cons') {
                        _par$6 = $10055.head;
                        var $10054 = Kind$Term$app$(_term$7, Kind$Parser$ADT$Derive$parser$term$cont$(_par$6));
                        _term$7 = $10054;
                        $10055 = $10055.tail;
                    }
                    return _term$7;
                })();
                var $10049 = _term$6;
                var $10046 = $10049;
                break;
        };
        return $10046;
    };
    const Kind$Parser$ADT$Derive$parser$term$cont = x0 => Kind$Parser$ADT$Derive$parser$term$cont$(x0);

    function Kind$Parser$ADT$Derive$parser$term$args$(_adt$1, _cnam$2, _args$3, _vars$4, _fst$5) {
        var self = _args$3;
        switch (self._) {
            case 'List.cons':
                var $10057 = self.head;
                var $10058 = self.tail;
                var self = $10057;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $10060 = self.name;
                        var $10061 = self.term;
                        var _term$11 = Kind$Term$ref$("Parser.bind");
                        var _term$12 = Kind$Term$app$(_term$11, Kind$Term$hol$(Bits$e));
                        var _term$13 = Kind$Term$app$(_term$12, Kind$Term$hol$(Bits$e));
                        var _cont$14 = Kind$Term$ref$("Parser.prefix");
                        var _cont$15 = Kind$Term$app$(_cont$14, Kind$Term$hol$(Bits$e));
                        var _cont$16 = Kind$Term$app$(_cont$15, Kind$Term$str$((() => {
                            var self = _fst$5;
                            if (self) {
                                var $10063 = "(";
                                return $10063;
                            } else {
                                var $10064 = ",";
                                return $10064;
                            };
                        })()));
                        var _cont$17 = Kind$Term$app$(_cont$16, Kind$Parser$ADT$Derive$parser$term$cont$($10061));
                        var _term$18 = Kind$Term$app$(_term$13, _cont$17);
                        var _term$19 = Kind$Term$app$(_term$18, Kind$Term$lam$($10060, (_x$19 => {
                            var $10065 = Kind$Parser$ADT$Derive$parser$term$args$(_adt$1, _cnam$2, $10058, List$cons$(_x$19, _vars$4), Bool$false);
                            return $10065;
                        })));
                        var $10062 = _term$19;
                        var $10059 = $10062;
                        break;
                };
                var $10056 = $10059;
                break;
            case 'List.nil':
                var _body$6 = Kind$Term$ref$("Parser.pure");
                var _body$7 = Kind$Term$app$(_body$6, Kind$Term$hol$(Bits$e));
                var _func$8 = Kind$Term$ref$(_cnam$2);
                var _func$9 = List$fold$(_vars$4, _func$8, (_var$9 => _func$10 => {
                    var $10067 = Kind$Term$app$(_func$10, _var$9);
                    return $10067;
                }));
                var _body$10 = Kind$Term$app$(_body$7, _func$9);
                var self = _fst$5;
                if (self) {
                    var $10068 = _body$10;
                    var $10066 = $10068;
                } else {
                    var _term$11 = Kind$Term$ref$("Parser.bind");
                    var _term$12 = Kind$Term$app$(_term$11, Kind$Term$hol$(Bits$e));
                    var _term$13 = Kind$Term$app$(_term$12, Kind$Term$hol$(Bits$e));
                    var _term$14 = Kind$Term$app$(_term$13, Kind$Term$app$(Kind$Term$ref$("Parser.text"), Kind$Term$str$(")")));
                    var _term$15 = Kind$Term$app$(_term$14, Kind$Term$lam$("", (_x$15 => {
                        var $10070 = _body$10;
                        return $10070;
                    })));
                    var $10069 = _term$15;
                    var $10066 = $10069;
                };
                var $10056 = $10066;
                break;
        };
        return $10056;
    };
    const Kind$Parser$ADT$Derive$parser$term$args = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Derive$parser$term$args$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$Derive$parser$term$cses$(_adt$1, _cses$2) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10072 = self.name;
                var self = _cses$2;
                switch (self._) {
                    case 'List.cons':
                        var $10074 = self.head;
                        var $10075 = self.tail;
                        var self = $10074;
                        switch (self._) {
                            case 'Kind.Parser.ADT.Constructor.new':
                                var $10077 = self.name;
                                var $10078 = self.args;
                                var _cnam$13 = ($10072 + ("." + $10077));
                                var _term$14 = Kind$Term$ref$("Parser.bind");
                                var _term$15 = Kind$Term$app$(_term$14, Kind$Term$hol$(Bits$e));
                                var _term$16 = Kind$Term$app$(_term$15, Kind$Term$hol$(Bits$e));
                                var _term$17 = Kind$Term$app$(_term$16, Kind$Term$app$(Kind$Term$ref$("Parser.text"), Kind$Term$str$(_cnam$13)));
                                var _term$18 = Kind$Term$app$(_term$17, Kind$Term$lam$("", (_x$18 => {
                                    var $10080 = Kind$Parser$ADT$Derive$parser$term$args$(_adt$1, _cnam$13, $10078, List$nil, Bool$true);
                                    return $10080;
                                })));
                                var _list$19 = Kind$Term$ref$("List.cons");
                                var _list$20 = Kind$Term$app$(_list$19, Kind$Term$hol$(Bits$e));
                                var _list$21 = Kind$Term$app$(_list$20, _term$18);
                                var _list$22 = Kind$Term$app$(_list$21, Kind$Parser$ADT$Derive$parser$term$cses$(_adt$1, $10075));
                                var $10079 = _list$22;
                                var $10076 = $10079;
                                break;
                        };
                        var $10073 = $10076;
                        break;
                    case 'List.nil':
                        var _fail$8 = Kind$Term$ref$("Parser.fail");
                        var _fail$9 = Kind$Term$app$(_fail$8, Kind$Term$hol$(Bits$e));
                        var _fail$10 = Kind$Term$app$(_fail$9, Kind$Term$str$(""));
                        var _term$11 = Kind$Term$ref$("List.cons");
                        var _term$12 = Kind$Term$app$(_term$11, Kind$Term$hol$(Bits$e));
                        var _term$13 = Kind$Term$app$(_term$12, _fail$10);
                        var _term$14 = Kind$Term$app$(_term$13, Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e)));
                        var $10081 = _term$14;
                        var $10073 = $10081;
                        break;
                };
                var $10071 = $10073;
                break;
        };
        return $10071;
    };
    const Kind$Parser$ADT$Derive$parser$term$cses = x0 => x1 => Kind$Parser$ADT$Derive$parser$term$cses$(x0, x1);

    function Kind$Parser$ADT$Derive$parser$term$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10083 = self.pars;
                var $10084 = self.inds;
                var $10085 = self.ctrs;
                var self = (List$is_empty$($10083) && List$is_empty$($10084));
                if (self) {
                    var _term$7 = Kind$Term$ref$("Parser.choice");
                    var _term$8 = Kind$Term$app$(_term$7, Kind$Term$hol$(Bits$e));
                    var _term$9 = Kind$Term$app$(_term$8, Kind$Parser$ADT$Derive$parser$term$cses$(_adt$1, $10085));
                    var $10087 = Maybe$some$(_term$9);
                    var $10086 = $10087;
                } else {
                    var $10088 = Maybe$none;
                    var $10086 = $10088;
                };
                var $10082 = $10086;
                break;
        };
        return $10082;
    };
    const Kind$Parser$ADT$Derive$parser$term = x0 => Kind$Parser$ADT$Derive$parser$term$(x0);

    function Kind$Parser$ADT$Derive$parser$type$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10090 = self.name;
                var $10091 = self.pars;
                var $10092 = self.inds;
                var self = (List$is_empty$($10091) && List$is_empty$($10092));
                if (self) {
                    var $10094 = Maybe$some$(Kind$Term$app$(Kind$Term$ref$("Parser"), Kind$Term$ref$($10090)));
                    var $10093 = $10094;
                } else {
                    var $10095 = Maybe$none;
                    var $10093 = $10095;
                };
                var $10089 = $10093;
                break;
        };
        return $10089;
    };
    const Kind$Parser$ADT$Derive$parser$type = x0 => Kind$Parser$ADT$Derive$parser$type$(x0);

    function Kind$Parser$ADT$Derive$serializer$term$cont$(_call$1, _rest$2) {
        var self = Kind$Term$get_args$(_call$1);
        switch (self._) {
            case 'Pair.new':
                var $10097 = self.fst;
                var $10098 = self.snd;
                var _term$5 = Kind$Term$ref$((Kind$Term$extract_name$($10097) + ".serializer"));
                var _term$6 = (() => {
                    var $10101 = _term$5;
                    var $10102 = $10098;
                    let _term$7 = $10101;
                    let _par$6;
                    while ($10102._ === 'List.cons') {
                        _par$6 = $10102.head;
                        var $10101 = Kind$Term$app$(_term$7, Kind$Term$hol$(Bits$e));
                        _term$7 = $10101;
                        $10102 = $10102.tail;
                    }
                    return _term$7;
                })();
                var _term$7 = (() => {
                    var $10104 = _term$6;
                    var $10105 = $10098;
                    let _term$8 = $10104;
                    let _par$7;
                    while ($10105._ === 'List.cons') {
                        _par$7 = $10105.head;
                        var $10104 = Kind$Term$app$(_term$8, Kind$Parser$ADT$Derive$serializer$term$cont$(_par$7, Maybe$none));
                        _term$8 = $10104;
                        $10105 = $10105.tail;
                    }
                    return _term$8;
                })();
                var self = _rest$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $10106 = self.value;
                        var self = $10106;
                        switch (self._) {
                            case 'Pair.new':
                                var $10108 = self.fst;
                                var $10109 = self.snd;
                                var _term$11 = Kind$Term$app$(_term$7, Kind$Term$ref$($10108));
                                var _term$12 = Kind$Term$app$(_term$11, $10109);
                                var $10110 = _term$12;
                                var $10107 = $10110;
                                break;
                        };
                        var $10099 = $10107;
                        break;
                    case 'Maybe.none':
                        var $10111 = _term$7;
                        var $10099 = $10111;
                        break;
                };
                var $10096 = $10099;
                break;
        };
        return $10096;
    };
    const Kind$Parser$ADT$Derive$serializer$term$cont = x0 => x1 => Kind$Parser$ADT$Derive$serializer$term$cont$(x0, x1);

    function Kind$Parser$ADT$Derive$serializer$term$args$(_args$1) {
        var self = _args$1;
        switch (self._) {
            case 'List.cons':
                var $10113 = self.head;
                var $10114 = self.tail;
                var self = $10113;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $10116 = self.name;
                        var $10117 = self.term;
                        var self = Kind$Term$get_args$($10117);
                        switch (self._) {
                            case 'Pair.new':
                                var _rest$9 = Kind$Parser$ADT$Derive$serializer$term$args$($10114);
                                var _term$10 = Kind$Parser$ADT$Derive$serializer$term$cont$($10117, Maybe$some$(Pair$new$(("x." + $10116), _rest$9)));
                                var $10119 = _term$10;
                                var $10118 = $10119;
                                break;
                        };
                        var $10115 = $10118;
                        break;
                };
                var $10112 = $10115;
                break;
            case 'List.nil':
                var $10120 = Kind$Term$ref$("bs");
                var $10112 = $10120;
                break;
        };
        return $10112;
    };
    const Kind$Parser$ADT$Derive$serializer$term$args = x0 => Kind$Parser$ADT$Derive$serializer$term$args$(x0);

    function Kind$Parser$ADT$Derive$serializer$ctr$bits$(_bs$1, _rest$2) {
        var self = _bs$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $10122 = self.slice(0, -1);
                var $10123 = Kind$Term$app$(Kind$Term$ref$("Bits.o"), Kind$Parser$ADT$Derive$serializer$ctr$bits$($10122, _rest$2));
                var $10121 = $10123;
                break;
            case 'i':
                var $10124 = self.slice(0, -1);
                var $10125 = Kind$Term$app$(Kind$Term$ref$("Bits.i"), Kind$Parser$ADT$Derive$serializer$ctr$bits$($10124, _rest$2));
                var $10121 = $10125;
                break;
            case 'e':
                var $10126 = _rest$2;
                var $10121 = $10126;
                break;
        };
        return $10121;
    };
    const Kind$Parser$ADT$Derive$serializer$ctr$bits = x0 => x1 => Kind$Parser$ADT$Derive$serializer$ctr$bits$(x0, x1);

    function Kind$Parser$ADT$Derive$serializer$ctr$(_adt_name$1, _ctr$2, _header$3) {
        var self = _ctr$2;
        switch (self._) {
            case 'Kind.Parser.ADT.Constructor.new':
                var $10128 = self.name;
                var $10129 = self.args;
                var _term$7 = Kind$Parser$ADT$Derive$serializer$term$args$($10129);
                var _term$8 = Kind$Parser$ADT$Derive$serializer$ctr$bits$(_header$3, _term$7);
                var $10130 = Pair$new$($10128, _term$8);
                var $10127 = $10130;
                break;
        };
        return $10127;
    };
    const Kind$Parser$ADT$Derive$serializer$ctr = x0 => x1 => x2 => Kind$Parser$ADT$Derive$serializer$ctr$(x0, x1, x2);

    function Kind$Parser$ADT$Derive$serializer$term$ctrs$(_adt_name$1, _ctrs$2, _header$3) {
        var self = _ctrs$2;
        switch (self._) {
            case 'List.cons':
                var $10132 = self.head;
                var $10133 = self.tail;
                var $10134 = List$cons$(Kind$Parser$ADT$Derive$serializer$ctr$(_adt_name$1, $10132, _header$3), Kind$Parser$ADT$Derive$serializer$term$ctrs$(_adt_name$1, $10133, Bits$inc$(_header$3)));
                var $10131 = $10134;
                break;
            case 'List.nil':
                var $10135 = List$nil;
                var $10131 = $10135;
                break;
        };
        return $10131;
    };
    const Kind$Parser$ADT$Derive$serializer$term$ctrs = x0 => x1 => x2 => Kind$Parser$ADT$Derive$serializer$term$ctrs$(x0, x1, x2);

    function Bits$zeros$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $10137 = Bits$e;
            var $10136 = $10137;
        } else {
            var $10138 = (self - 1n);
            var $10139 = (Bits$zeros$($10138) + '0');
            var $10136 = $10139;
        };
        return $10136;
    };
    const Bits$zeros = x0 => Bits$zeros$(x0);
    const Nat$div = a0 => a1 => (a0 / a1);

    function Nat$bitlen$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $10141 = 0n;
            var $10140 = $10141;
        } else {
            var $10142 = (self - 1n);
            var $10143 = Nat$succ$(Nat$bitlen$((_n$1 / 2n)));
            var $10140 = $10143;
        };
        return $10140;
    };
    const Nat$bitlen = x0 => Nat$bitlen$(x0);

    function Kind$Parser$ADT$Derive$serializer$term$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10145 = self.name;
                var $10146 = self.pars;
                var $10147 = self.inds;
                var $10148 = self.ctrs;
                var self = (List$is_empty$($10146) && List$is_empty$($10147));
                if (self) {
                    var _term$7 = Kind$Term$lam$("x", (_x$7 => {
                        var $10151 = Kind$Term$lam$("bs", (_bs$8 => {
                            var _ctrs$9 = Kind$Parser$ADT$Derive$serializer$term$ctrs$($10145, $10148, Bits$zeros$(Nat$bitlen$(Nat$pred$((list_length($10148))))));
                            var _cses$10 = Kind$Map$new;
                            var _cses$11 = (() => {
                                var $10154 = _cses$10;
                                var $10155 = _ctrs$9;
                                let _cses$12 = $10154;
                                let _ctr$11;
                                while ($10155._ === 'List.cons') {
                                    _ctr$11 = $10155.head;
                                    var self = _ctr$11;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $10156 = self.fst;
                                            var $10157 = self.snd;
                                            var $10158 = Kind$Map$set$($10156, $10157, _cses$12);
                                            var $10154 = $10158;
                                            break;
                                    };
                                    _cses$12 = $10154;
                                    $10155 = $10155.tail;
                                }
                                return _cses$12;
                            })();
                            var $10152 = Kind$Term$cse$(Bits$e, _x$7, "x", List$nil, _cses$11, Maybe$none);
                            return $10152;
                        }));
                        return $10151;
                    }));
                    var $10150 = Maybe$some$(_term$7);
                    var $10149 = $10150;
                } else {
                    var $10159 = Maybe$none;
                    var $10149 = $10159;
                };
                var $10144 = $10149;
                break;
        };
        return $10144;
    };
    const Kind$Parser$ADT$Derive$serializer$term = x0 => Kind$Parser$ADT$Derive$serializer$term$(x0);

    function Kind$Parser$ADT$Derive$serializer$type$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10161 = self.name;
                var $10162 = self.pars;
                var $10163 = self.inds;
                var self = (List$is_empty$($10162) && List$is_empty$($10163));
                if (self) {
                    var $10165 = Maybe$some$(Kind$Term$app$(Kind$Term$ref$("Serializer"), Kind$Term$ref$($10161)));
                    var $10164 = $10165;
                } else {
                    var $10166 = Maybe$none;
                    var $10164 = $10166;
                };
                var $10160 = $10164;
                break;
        };
        return $10160;
    };
    const Kind$Parser$ADT$Derive$serializer$type = x0 => Kind$Parser$ADT$Derive$serializer$type$(x0);

    function Kind$Parser$ADT$Derive$serializer$term$bits$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $10168 = self.slice(0, -1);
                var $10169 = Kind$Term$app$(Kind$Term$ref$("Bits.o"), Kind$Parser$ADT$Derive$serializer$term$bits$($10168));
                var $10167 = $10169;
                break;
            case 'i':
                var $10170 = self.slice(0, -1);
                var $10171 = Kind$Term$app$(Kind$Term$ref$("Bits.i"), Kind$Parser$ADT$Derive$serializer$term$bits$($10170));
                var $10167 = $10171;
                break;
            case 'e':
                var $10172 = Kind$Term$ref$("Bits.e");
                var $10167 = $10172;
                break;
        };
        return $10167;
    };
    const Kind$Parser$ADT$Derive$serializer$term$bits = x0 => Kind$Parser$ADT$Derive$serializer$term$bits$(x0);

    function Kind$Parser$ADT$Derive$deserializer$term$cont$(_call$1) {
        var self = Kind$Term$get_args$(_call$1);
        switch (self._) {
            case 'Pair.new':
                var $10174 = self.fst;
                var $10175 = self.snd;
                var _term$4 = Kind$Term$ref$((Kind$Term$extract_name$($10174) + ".deserializer"));
                var _term$5 = (() => {
                    var $10178 = _term$4;
                    var $10179 = $10175;
                    let _term$6 = $10178;
                    let _par$5;
                    while ($10179._ === 'List.cons') {
                        _par$5 = $10179.head;
                        var $10178 = Kind$Term$app$(_term$6, Kind$Term$hol$(Bits$e));
                        _term$6 = $10178;
                        $10179 = $10179.tail;
                    }
                    return _term$6;
                })();
                var _term$6 = (() => {
                    var $10181 = _term$5;
                    var $10182 = $10175;
                    let _term$7 = $10181;
                    let _par$6;
                    while ($10182._ === 'List.cons') {
                        _par$6 = $10182.head;
                        var $10181 = Kind$Term$app$(_term$7, Kind$Parser$ADT$Derive$deserializer$term$cont$(_par$6));
                        _term$7 = $10181;
                        $10182 = $10182.tail;
                    }
                    return _term$7;
                })();
                var $10176 = _term$6;
                var $10173 = $10176;
                break;
        };
        return $10173;
    };
    const Kind$Parser$ADT$Derive$deserializer$term$cont = x0 => Kind$Parser$ADT$Derive$deserializer$term$cont$(x0);

    function Kind$Parser$ADT$Derive$deserializer$term$args$(_adt$1, _cnam$2, _args$3, _vars$4, _fst$5) {
        var self = _args$3;
        switch (self._) {
            case 'List.cons':
                var $10184 = self.head;
                var $10185 = self.tail;
                var self = $10184;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $10187 = self.name;
                        var $10188 = self.term;
                        var _term$11 = Kind$Term$ref$("Deserializer.bind");
                        var _term$12 = Kind$Term$app$(_term$11, Kind$Term$hol$(Bits$e));
                        var _term$13 = Kind$Term$app$(_term$12, Kind$Term$hol$(Bits$e));
                        var _term$14 = Kind$Term$app$(_term$13, Kind$Parser$ADT$Derive$deserializer$term$cont$($10188));
                        var _term$15 = Kind$Term$app$(_term$14, Kind$Term$lam$($10187, (_x$15 => {
                            var $10190 = Kind$Parser$ADT$Derive$deserializer$term$args$(_adt$1, _cnam$2, $10185, List$cons$(_x$15, _vars$4), Bool$false);
                            return $10190;
                        })));
                        var $10189 = _term$15;
                        var $10186 = $10189;
                        break;
                };
                var $10183 = $10186;
                break;
            case 'List.nil':
                var _body$6 = Kind$Term$ref$("Deserializer.pure");
                var _body$7 = Kind$Term$app$(_body$6, Kind$Term$hol$(Bits$e));
                var _func$8 = Kind$Term$ref$(_cnam$2);
                var _func$9 = List$fold$(_vars$4, _func$8, (_var$9 => _func$10 => {
                    var $10192 = Kind$Term$app$(_func$10, _var$9);
                    return $10192;
                }));
                var _body$10 = Kind$Term$app$(_body$7, _func$9);
                var $10191 = _body$10;
                var $10183 = $10191;
                break;
        };
        return $10183;
    };
    const Kind$Parser$ADT$Derive$deserializer$term$args = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Derive$deserializer$term$args$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$Derive$deserializer$term$cses$(_adt$1, _cses$2, _header$3) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10194 = self.name;
                var self = _cses$2;
                switch (self._) {
                    case 'List.cons':
                        var $10196 = self.head;
                        var $10197 = self.tail;
                        var self = $10196;
                        switch (self._) {
                            case 'Kind.Parser.ADT.Constructor.new':
                                var $10199 = self.name;
                                var $10200 = self.args;
                                var _cnam$14 = ($10194 + ("." + $10199));
                                var _term$15 = Kind$Term$ref$("Deserializer.bind");
                                var _term$16 = Kind$Term$app$(_term$15, Kind$Term$hol$(Bits$e));
                                var _term$17 = Kind$Term$app$(_term$16, Kind$Term$hol$(Bits$e));
                                var _term$18 = Kind$Term$app$(_term$17, Kind$Term$app$(Kind$Term$ref$("Deserializer.bits"), Kind$Parser$ADT$Derive$serializer$term$bits$(_header$3)));
                                var _term$19 = Kind$Term$app$(_term$18, Kind$Term$lam$("", (_x$19 => {
                                    var $10202 = Kind$Parser$ADT$Derive$deserializer$term$args$(_adt$1, _cnam$14, $10200, List$nil, Bool$true);
                                    return $10202;
                                })));
                                var _list$20 = Kind$Term$ref$("List.cons");
                                var _list$21 = Kind$Term$app$(_list$20, Kind$Term$hol$(Bits$e));
                                var _list$22 = Kind$Term$app$(_list$21, _term$19);
                                var _list$23 = Kind$Term$app$(_list$22, Kind$Parser$ADT$Derive$deserializer$term$cses$(_adt$1, $10197, Bits$inc$(_header$3)));
                                var $10201 = _list$23;
                                var $10198 = $10201;
                                break;
                        };
                        var $10195 = $10198;
                        break;
                    case 'List.nil':
                        var $10203 = Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e));
                        var $10195 = $10203;
                        break;
                };
                var $10193 = $10195;
                break;
        };
        return $10193;
    };
    const Kind$Parser$ADT$Derive$deserializer$term$cses = x0 => x1 => x2 => Kind$Parser$ADT$Derive$deserializer$term$cses$(x0, x1, x2);

    function Kind$Parser$ADT$Derive$deserializer$term$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10205 = self.pars;
                var $10206 = self.inds;
                var $10207 = self.ctrs;
                var self = (List$is_empty$($10205) && List$is_empty$($10206));
                if (self) {
                    var _term$7 = Kind$Term$ref$("Deserializer.choice");
                    var _term$8 = Kind$Term$app$(_term$7, Kind$Term$hol$(Bits$e));
                    var _term$9 = Kind$Term$app$(_term$8, Kind$Parser$ADT$Derive$deserializer$term$cses$(_adt$1, $10207, Bits$zeros$(Nat$bitlen$(Nat$pred$((list_length($10207)))))));
                    var $10209 = Maybe$some$(_term$9);
                    var $10208 = $10209;
                } else {
                    var $10210 = Maybe$none;
                    var $10208 = $10210;
                };
                var $10204 = $10208;
                break;
        };
        return $10204;
    };
    const Kind$Parser$ADT$Derive$deserializer$term = x0 => Kind$Parser$ADT$Derive$deserializer$term$(x0);

    function Kind$Parser$ADT$Derive$deserializer$type$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10212 = self.name;
                var $10213 = self.pars;
                var $10214 = self.inds;
                var self = (List$is_empty$($10213) && List$is_empty$($10214));
                if (self) {
                    var $10216 = Maybe$some$(Kind$Term$app$(Kind$Term$ref$("Deserializer"), Kind$Term$ref$($10212)));
                    var $10215 = $10216;
                } else {
                    var $10217 = Maybe$none;
                    var $10215 = $10217;
                };
                var $10211 = $10215;
                break;
        };
        return $10211;
    };
    const Kind$Parser$ADT$Derive$deserializer$type = x0 => Kind$Parser$ADT$Derive$deserializer$type$(x0);

    function Kind$Parser$ADT$Derive$by_name$(_deri$1, _adt$2) {
        var self = _adt$2;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10219 = self.name;
                var self = (_deri$1 === "stringifier");
                if (self) {
                    var _name$8 = ($10219 + ("." + _deri$1));
                    var $10221 = Maybe$monad$((_m$bind$9 => _m$pure$10 => {
                        var $10222 = _m$bind$9;
                        return $10222;
                    }))(Kind$Parser$ADT$Derive$stringifier$term$(_adt$2))((_term$9 => {
                        var $10223 = Maybe$monad$((_m$bind$10 => _m$pure$11 => {
                            var $10224 = _m$bind$10;
                            return $10224;
                        }))(Kind$Parser$ADT$Derive$stringifier$type$(_adt$2))((_type$10 => {
                            var $10225 = Maybe$monad$((_m$bind$11 => _m$pure$12 => {
                                var $10226 = _m$pure$12;
                                return $10226;
                            }))(Kind$Parser$ADT$Derived$new$(_name$8, 0n, _term$9, _type$10));
                            return $10225;
                        }));
                        return $10223;
                    }));
                    var $10220 = $10221;
                } else {
                    var self = (_deri$1 === "parser");
                    if (self) {
                        var _name$8 = ($10219 + ("." + _deri$1));
                        var $10228 = Maybe$monad$((_m$bind$9 => _m$pure$10 => {
                            var $10229 = _m$bind$9;
                            return $10229;
                        }))(Kind$Parser$ADT$Derive$parser$term$(_adt$2))((_term$9 => {
                            var $10230 = Maybe$monad$((_m$bind$10 => _m$pure$11 => {
                                var $10231 = _m$bind$10;
                                return $10231;
                            }))(Kind$Parser$ADT$Derive$parser$type$(_adt$2))((_type$10 => {
                                var $10232 = Maybe$monad$((_m$bind$11 => _m$pure$12 => {
                                    var $10233 = _m$pure$12;
                                    return $10233;
                                }))(Kind$Parser$ADT$Derived$new$(_name$8, 0n, _term$9, _type$10));
                                return $10232;
                            }));
                            return $10230;
                        }));
                        var $10227 = $10228;
                    } else {
                        var self = (_deri$1 === "serializer");
                        if (self) {
                            var _name$8 = ($10219 + ("." + _deri$1));
                            var $10235 = Maybe$monad$((_m$bind$9 => _m$pure$10 => {
                                var $10236 = _m$bind$9;
                                return $10236;
                            }))(Kind$Parser$ADT$Derive$serializer$term$(_adt$2))((_term$9 => {
                                var $10237 = Maybe$monad$((_m$bind$10 => _m$pure$11 => {
                                    var $10238 = _m$bind$10;
                                    return $10238;
                                }))(Kind$Parser$ADT$Derive$serializer$type$(_adt$2))((_type$10 => {
                                    var $10239 = Maybe$monad$((_m$bind$11 => _m$pure$12 => {
                                        var $10240 = _m$pure$12;
                                        return $10240;
                                    }))(Kind$Parser$ADT$Derived$new$(_name$8, 0n, _term$9, _type$10));
                                    return $10239;
                                }));
                                return $10237;
                            }));
                            var $10234 = $10235;
                        } else {
                            var self = (_deri$1 === "deserializer");
                            if (self) {
                                var _name$8 = ($10219 + ("." + _deri$1));
                                var $10242 = Maybe$monad$((_m$bind$9 => _m$pure$10 => {
                                    var $10243 = _m$bind$9;
                                    return $10243;
                                }))(Kind$Parser$ADT$Derive$deserializer$term$(_adt$2))((_term$9 => {
                                    var $10244 = Maybe$monad$((_m$bind$10 => _m$pure$11 => {
                                        var $10245 = _m$bind$10;
                                        return $10245;
                                    }))(Kind$Parser$ADT$Derive$deserializer$type$(_adt$2))((_type$10 => {
                                        var $10246 = Maybe$monad$((_m$bind$11 => _m$pure$12 => {
                                            var $10247 = _m$pure$12;
                                            return $10247;
                                        }))(Kind$Parser$ADT$Derived$new$(_name$8, 0n, _term$9, _type$10));
                                        return $10246;
                                    }));
                                    return $10244;
                                }));
                                var $10241 = $10242;
                            } else {
                                var $10248 = Maybe$none;
                                var $10241 = $10248;
                            };
                            var $10234 = $10241;
                        };
                        var $10227 = $10234;
                    };
                    var $10220 = $10227;
                };
                var $10218 = $10220;
                break;
        };
        return $10218;
    };
    const Kind$Parser$ADT$Derive$by_name = x0 => x1 => Kind$Parser$ADT$Derive$by_name$(x0, x1);

    function Kind$Parser$file$adt$(_file$1, _code$2, _defs$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $10250 = self.err;
                var _reply$10 = Kind$Parser$spaces(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $10252 = self.err;
                        var self = $10250;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10254 = self.value;
                                var $10255 = Parser$Reply$error$(Parser$Error$combine$($10254, $10252));
                                var $10253 = $10255;
                                break;
                            case 'Maybe.none':
                                var $10256 = Parser$Reply$error$($10252);
                                var $10253 = $10256;
                                break;
                        };
                        var $10251 = $10253;
                        break;
                    case 'Parser.Reply.value':
                        var $10257 = self.pst;
                        var self = $10257;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $10259 = self.err;
                                var $10260 = self.nam;
                                var $10261 = self.ini;
                                var $10262 = self.idx;
                                var $10263 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($10250, $10259), $10260, $10261, $10262, $10263);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $10265 = self.err;
                                        var _reply$24 = Parser$get_idx$(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $10267 = self.err;
                                                var self = $10265;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $10269 = self.value;
                                                        var $10270 = Parser$Reply$error$(Parser$Error$combine$($10269, $10267));
                                                        var $10268 = $10270;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $10271 = Parser$Reply$error$($10267);
                                                        var $10268 = $10271;
                                                        break;
                                                };
                                                var $10266 = $10268;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $10272 = self.pst;
                                                var $10273 = self.val;
                                                var self = $10272;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $10275 = self.err;
                                                        var $10276 = self.nam;
                                                        var $10277 = self.ini;
                                                        var $10278 = self.idx;
                                                        var $10279 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($10265, $10275), $10276, $10277, $10278, $10279);
                                                        var self = _reply$pst$32;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $10281 = self.err;
                                                                var _reply$38 = Kind$Parser$ADT$adt$(_reply$pst$32);
                                                                var self = _reply$38;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $10283 = self.err;
                                                                        var self = $10281;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $10285 = self.value;
                                                                                var $10286 = Parser$Reply$error$(Parser$Error$combine$($10285, $10283));
                                                                                var $10284 = $10286;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $10287 = Parser$Reply$error$($10283);
                                                                                var $10284 = $10287;
                                                                                break;
                                                                        };
                                                                        var $10282 = $10284;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $10288 = self.pst;
                                                                        var $10289 = self.val;
                                                                        var self = $10288;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $10291 = self.err;
                                                                                var $10292 = self.nam;
                                                                                var $10293 = self.ini;
                                                                                var $10294 = self.idx;
                                                                                var $10295 = self.str;
                                                                                var _reply$pst$46 = Parser$State$new$(Parser$Error$maybe_combine$($10281, $10291), $10292, $10293, $10294, $10295);
                                                                                var self = _reply$pst$46;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $10297 = self.err;
                                                                                        var _reply$52 = Parser$get_idx$(_reply$pst$46);
                                                                                        var self = _reply$52;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $10299 = self.err;
                                                                                                var self = $10297;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $10301 = self.value;
                                                                                                        var $10302 = Parser$Reply$error$(Parser$Error$combine$($10301, $10299));
                                                                                                        var $10300 = $10302;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $10303 = Parser$Reply$error$($10299);
                                                                                                        var $10300 = $10303;
                                                                                                        break;
                                                                                                };
                                                                                                var $10298 = $10300;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $10304 = self.pst;
                                                                                                var $10305 = self.val;
                                                                                                var self = $10304;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $10307 = self.err;
                                                                                                        var $10308 = self.nam;
                                                                                                        var $10309 = self.ini;
                                                                                                        var $10310 = self.idx;
                                                                                                        var $10311 = self.str;
                                                                                                        var _reply$pst$60 = Parser$State$new$(Parser$Error$maybe_combine$($10297, $10307), $10308, $10309, $10310, $10311);
                                                                                                        var _orig$61 = Pair$new$($10273, $10305);
                                                                                                        var self = $10289;
                                                                                                        switch (self._) {
                                                                                                            case 'Kind.Parser.ADT.Datatype.new':
                                                                                                                var $10313 = self.name;
                                                                                                                var $10314 = self.pars;
                                                                                                                var $10315 = self.inds;
                                                                                                                var $10316 = self.ctrs;
                                                                                                                var $10317 = self.deri;
                                                                                                                var _term$67 = Kind$Parser$ADT$Datatype$build_term$($10289);
                                                                                                                var _term$68 = Kind$Term$bind$(List$nil, (_x$68 => {
                                                                                                                    var $10319 = (_x$68 + '1');
                                                                                                                    return $10319;
                                                                                                                }), _term$67);
                                                                                                                var _type$69 = Kind$Parser$ADT$Datatype$build_type$($10289);
                                                                                                                var _type$70 = Kind$Term$bind$(List$nil, (_x$70 => {
                                                                                                                    var $10320 = (_x$70 + '0');
                                                                                                                    return $10320;
                                                                                                                }), _type$69);
                                                                                                                var _arit$71 = ((list_length($10314)) + (list_length($10315)));
                                                                                                                var _defs$72 = Kind$Map$def$(_file$1, _code$2, _orig$61, $10313, _term$68, _type$70, Bool$false, _arit$71, Bool$false, _defs$3);
                                                                                                                var _defs$73 = List$fold$($10316, _defs$72, (_ctr$73 => _defs$74 => {
                                                                                                                    var _typ_name$75 = $10313;
                                                                                                                    var _ctr_arit$76 = (_arit$71 + (list_length((() => {
                                                                                                                        var self = _ctr$73;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Kind.Parser.ADT.Constructor.new':
                                                                                                                                var $10322 = self.args;
                                                                                                                                var $10323 = $10322;
                                                                                                                                return $10323;
                                                                                                                        };
                                                                                                                    })())));
                                                                                                                    var _ctr_name$77 = String$flatten$(List$cons$(_typ_name$75, List$cons$(Kind$Name$read$("."), List$cons$((() => {
                                                                                                                        var self = _ctr$73;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Kind.Parser.ADT.Constructor.new':
                                                                                                                                var $10324 = self.name;
                                                                                                                                var $10325 = $10324;
                                                                                                                                return $10325;
                                                                                                                        };
                                                                                                                    })(), List$nil))));
                                                                                                                    var _ctr_term$78 = Kind$Parser$ADT$Constructor$build_term$($10289, _ctr$73);
                                                                                                                    var _ctr_term$79 = Kind$Term$bind$(List$nil, (_x$79 => {
                                                                                                                        var $10326 = (_x$79 + '1');
                                                                                                                        return $10326;
                                                                                                                    }), _ctr_term$78);
                                                                                                                    var _ctr_type$80 = Kind$Parser$ADT$Constructor$build_type$($10289, _ctr$73);
                                                                                                                    var _ctr_type$81 = Kind$Term$bind$(List$nil, (_x$81 => {
                                                                                                                        var $10327 = (_x$81 + '0');
                                                                                                                        return $10327;
                                                                                                                    }), _ctr_type$80);
                                                                                                                    var $10321 = Kind$Map$def$(_file$1, _code$2, _orig$61, _ctr_name$77, _ctr_term$79, _ctr_type$81, Bool$true, _ctr_arit$76, Bool$false, _defs$74);
                                                                                                                    return $10321;
                                                                                                                }));
                                                                                                                var _defs$74 = List$fold$($10317, Either$right$(_defs$73), (_deri$74 => _defs$75 => {
                                                                                                                    var self = _defs$75;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Either.left':
                                                                                                                            var $10329 = self.value;
                                                                                                                            var $10330 = Either$left$($10329);
                                                                                                                            var $10328 = $10330;
                                                                                                                            break;
                                                                                                                        case 'Either.right':
                                                                                                                            var $10331 = self.value;
                                                                                                                            var self = Kind$Parser$ADT$Derive$by_name$(_deri$74, $10289);
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $10333 = self.value;
                                                                                                                                    var self = $10333;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Kind.Parser.ADT.Derived.new':
                                                                                                                                            var $10335 = self.name;
                                                                                                                                            var $10336 = self.arit;
                                                                                                                                            var $10337 = self.term;
                                                                                                                                            var $10338 = self.type;
                                                                                                                                            var _name$82 = $10335;
                                                                                                                                            var _term$83 = $10337;
                                                                                                                                            var _term$84 = Kind$Term$bind$(List$nil, (_x$84 => {
                                                                                                                                                var $10340 = (_x$84 + '1');
                                                                                                                                                return $10340;
                                                                                                                                            }), _term$83);
                                                                                                                                            var _type$85 = $10338;
                                                                                                                                            var _type$86 = Kind$Term$bind$(List$nil, (_x$86 => {
                                                                                                                                                var $10341 = (_x$86 + '0');
                                                                                                                                                return $10341;
                                                                                                                                            }), _type$85);
                                                                                                                                            var _arit$87 = $10336;
                                                                                                                                            var $10339 = Either$right$(Kind$Map$def$(_file$1, _code$2, _orig$61, _name$82, _term$84, _type$86, Bool$false, _arit$87, Bool$false, $10331));
                                                                                                                                            var $10334 = $10339;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $10332 = $10334;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $10342 = Either$left$(("Can\'t derive \'" + (_deri$74 + ("\' for \'" + ($10313 + "\' type.")))));
                                                                                                                                    var $10332 = $10342;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $10328 = $10332;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    return $10328;
                                                                                                                }));
                                                                                                                var self = _defs$74;
                                                                                                                switch (self._) {
                                                                                                                    case 'Either.left':
                                                                                                                        var $10343 = self.value;
                                                                                                                        var $10344 = Parser$fail($10343);
                                                                                                                        var $10318 = $10344;
                                                                                                                        break;
                                                                                                                    case 'Either.right':
                                                                                                                        var $10345 = self.value;
                                                                                                                        var $10346 = (_pst$76 => {
                                                                                                                            var $10347 = Parser$Reply$value$(_pst$76, $10345);
                                                                                                                            return $10347;
                                                                                                                        });
                                                                                                                        var $10318 = $10346;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $10312 = $10318;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $10312 = $10312(_reply$pst$60);
                                                                                                        var $10306 = $10312;
                                                                                                        break;
                                                                                                };
                                                                                                var $10298 = $10306;
                                                                                                break;
                                                                                        };
                                                                                        var $10296 = $10298;
                                                                                        break;
                                                                                };
                                                                                var $10290 = $10296;
                                                                                break;
                                                                        };
                                                                        var $10282 = $10290;
                                                                        break;
                                                                };
                                                                var $10280 = $10282;
                                                                break;
                                                        };
                                                        var $10274 = $10280;
                                                        break;
                                                };
                                                var $10266 = $10274;
                                                break;
                                        };
                                        var $10264 = $10266;
                                        break;
                                };
                                var $10258 = $10264;
                                break;
                        };
                        var $10251 = $10258;
                        break;
                };
                var $10249 = $10251;
                break;
        };
        return $10249;
    };
    const Kind$Parser$file$adt = x0 => x1 => x2 => x3 => Kind$Parser$file$adt$(x0, x1, x2, x3);

    function Kind$Parser$file$end$(_file$1, _code$2, _defs$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $10349 = self.err;
                var _reply$10 = Kind$Parser$spaces(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $10351 = self.err;
                        var self = $10349;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10353 = self.value;
                                var $10354 = Parser$Reply$error$(Parser$Error$combine$($10353, $10351));
                                var $10352 = $10354;
                                break;
                            case 'Maybe.none':
                                var $10355 = Parser$Reply$error$($10351);
                                var $10352 = $10355;
                                break;
                        };
                        var $10350 = $10352;
                        break;
                    case 'Parser.Reply.value':
                        var $10356 = self.pst;
                        var self = $10356;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $10358 = self.err;
                                var $10359 = self.nam;
                                var $10360 = self.ini;
                                var $10361 = self.idx;
                                var $10362 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($10349, $10358), $10359, $10360, $10361, $10362);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $10364 = self.err;
                                        var _reply$24 = Parser$eof$(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $10366 = self.err;
                                                var self = $10364;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $10368 = self.value;
                                                        var $10369 = Parser$Reply$error$(Parser$Error$combine$($10368, $10366));
                                                        var $10367 = $10369;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $10370 = Parser$Reply$error$($10366);
                                                        var $10367 = $10370;
                                                        break;
                                                };
                                                var $10365 = $10367;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $10371 = self.pst;
                                                var self = $10371;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $10373 = self.err;
                                                        var $10374 = self.nam;
                                                        var $10375 = self.ini;
                                                        var $10376 = self.idx;
                                                        var $10377 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($10364, $10373), $10374, $10375, $10376, $10377);
                                                        var $10378 = Parser$Reply$value$(_reply$pst$32, _defs$3);
                                                        var $10372 = $10378;
                                                        break;
                                                };
                                                var $10365 = $10372;
                                                break;
                                        };
                                        var $10363 = $10365;
                                        break;
                                };
                                var $10357 = $10363;
                                break;
                        };
                        var $10350 = $10357;
                        break;
                };
                var $10348 = $10350;
                break;
        };
        return $10348;
    };
    const Kind$Parser$file$end = x0 => x1 => x2 => x3 => Kind$Parser$file$end$(x0, x1, x2, x3);

    function Kind$Parser$file$(_file$1, _code$2, _defs$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $10380 = self.err;
                var _reply$10 = Parser$is_eof$(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $10382 = self.err;
                        var self = $10380;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10384 = self.value;
                                var $10385 = Parser$Reply$error$(Parser$Error$combine$($10384, $10382));
                                var $10383 = $10385;
                                break;
                            case 'Maybe.none':
                                var $10386 = Parser$Reply$error$($10382);
                                var $10383 = $10386;
                                break;
                        };
                        var $10381 = $10383;
                        break;
                    case 'Parser.Reply.value':
                        var $10387 = self.pst;
                        var $10388 = self.val;
                        var self = $10387;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $10390 = self.err;
                                var $10391 = self.nam;
                                var $10392 = self.ini;
                                var $10393 = self.idx;
                                var $10394 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($10380, $10390), $10391, $10392, $10393, $10394);
                                var self = $10388;
                                if (self) {
                                    var $10396 = (_pst$19 => {
                                        var $10397 = Parser$Reply$value$(_pst$19, _defs$3);
                                        return $10397;
                                    });
                                    var $10395 = $10396;
                                } else {
                                    var $10398 = (_pst$19 => {
                                        var self = _pst$19;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $10400 = self.err;
                                                var _reply$25 = Parser$choice$(List$cons$(Kind$Parser$file$def(_file$1)(_code$2)(_defs$3), List$cons$(Kind$Parser$file$adt(_file$1)(_code$2)(_defs$3), List$cons$(Kind$Parser$file$end(_file$1)(_code$2)(_defs$3), List$cons$(Parser$fail("Expected a top-level definition or a type declaration."), List$nil)))), _pst$19);
                                                var self = _reply$25;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $10402 = self.err;
                                                        var self = $10400;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $10404 = self.value;
                                                                var $10405 = Parser$Reply$error$(Parser$Error$combine$($10404, $10402));
                                                                var $10403 = $10405;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $10406 = Parser$Reply$error$($10402);
                                                                var $10403 = $10406;
                                                                break;
                                                        };
                                                        var $10401 = $10403;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $10407 = self.pst;
                                                        var $10408 = self.val;
                                                        var self = $10407;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $10410 = self.err;
                                                                var $10411 = self.nam;
                                                                var $10412 = self.ini;
                                                                var $10413 = self.idx;
                                                                var $10414 = self.str;
                                                                var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($10400, $10410), $10411, $10412, $10413, $10414);
                                                                var self = _reply$pst$33;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $10416 = self.err;
                                                                        var _reply$39 = Kind$Parser$file$(_file$1, _code$2, $10408, _reply$pst$33);
                                                                        var self = _reply$39;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $10418 = self.err;
                                                                                var self = $10416;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $10420 = self.value;
                                                                                        var $10421 = Parser$Reply$error$(Parser$Error$combine$($10420, $10418));
                                                                                        var $10419 = $10421;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $10422 = Parser$Reply$error$($10418);
                                                                                        var $10419 = $10422;
                                                                                        break;
                                                                                };
                                                                                var $10417 = $10419;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $10423 = self.pst;
                                                                                var $10424 = self.val;
                                                                                var self = $10423;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $10426 = self.err;
                                                                                        var $10427 = self.nam;
                                                                                        var $10428 = self.ini;
                                                                                        var $10429 = self.idx;
                                                                                        var $10430 = self.str;
                                                                                        var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($10416, $10426), $10427, $10428, $10429, $10430);
                                                                                        var $10431 = Parser$Reply$value$(_reply$pst$47, $10424);
                                                                                        var $10425 = $10431;
                                                                                        break;
                                                                                };
                                                                                var $10417 = $10425;
                                                                                break;
                                                                        };
                                                                        var $10415 = $10417;
                                                                        break;
                                                                };
                                                                var $10409 = $10415;
                                                                break;
                                                        };
                                                        var $10401 = $10409;
                                                        break;
                                                };
                                                var $10399 = $10401;
                                                break;
                                        };
                                        return $10399;
                                    });
                                    var $10395 = $10398;
                                };
                                var $10395 = $10395(_reply$pst$18);
                                var $10389 = $10395;
                                break;
                        };
                        var $10381 = $10389;
                        break;
                };
                var $10379 = $10381;
                break;
        };
        return $10379;
    };
    const Kind$Parser$file = x0 => x1 => x2 => x3 => Kind$Parser$file$(x0, x1, x2, x3);

    function String$join$go$(_sep$1, _list$2, _fst$3) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $10433 = self.head;
                var $10434 = self.tail;
                var $10435 = String$flatten$(List$cons$((() => {
                    var self = _fst$3;
                    if (self) {
                        var $10436 = "";
                        return $10436;
                    } else {
                        var $10437 = _sep$1;
                        return $10437;
                    };
                })(), List$cons$($10433, List$cons$(String$join$go$(_sep$1, $10434, Bool$false), List$nil))));
                var $10432 = $10435;
                break;
            case 'List.nil':
                var $10438 = "";
                var $10432 = $10438;
                break;
        };
        return $10432;
    };
    const String$join$go = x0 => x1 => x2 => String$join$go$(x0, x1, x2);

    function String$join$(_sep$1, _list$2) {
        var $10439 = String$join$go$(_sep$1, _list$2, Bool$true);
        return $10439;
    };
    const String$join = x0 => x1 => String$join$(x0, x1);

    function Kind$Code$highlight$end$(_col$1, _row$2, _res$3) {
        var $10440 = String$join$("\u{a}", _res$3);
        return $10440;
    };
    const Kind$Code$highlight$end = x0 => x1 => x2 => Kind$Code$highlight$end$(x0, x1, x2);

    function Maybe$extract$(_m$2, _a$4, _f$5) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $10442 = self.value;
                var $10443 = _f$5($10442);
                var $10441 = $10443;
                break;
            case 'Maybe.none':
                var $10444 = _a$4;
                var $10441 = $10444;
                break;
        };
        return $10441;
    };
    const Maybe$extract = x0 => x1 => x2 => Maybe$extract$(x0, x1, x2);

    function Nat$is_zero$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $10446 = Bool$true;
            var $10445 = $10446;
        } else {
            var $10447 = (self - 1n);
            var $10448 = Bool$false;
            var $10445 = $10448;
        };
        return $10445;
    };
    const Nat$is_zero = x0 => Nat$is_zero$(x0);

    function Nat$double$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $10450 = Nat$zero;
            var $10449 = $10450;
        } else {
            var $10451 = (self - 1n);
            var $10452 = Nat$succ$(Nat$succ$(Nat$double$($10451)));
            var $10449 = $10452;
        };
        return $10449;
    };
    const Nat$double = x0 => Nat$double$(x0);

    function String$pad_right$(_size$1, _chr$2, _str$3) {
        var self = _size$1;
        if (self === 0n) {
            var $10454 = _str$3;
            var $10453 = $10454;
        } else {
            var $10455 = (self - 1n);
            var self = _str$3;
            if (self.length === 0) {
                var $10457 = String$cons$(_chr$2, String$pad_right$($10455, _chr$2, ""));
                var $10456 = $10457;
            } else {
                var $10458 = self.charCodeAt(0);
                var $10459 = self.slice(1);
                var $10460 = String$cons$($10458, String$pad_right$($10455, _chr$2, $10459));
                var $10456 = $10460;
            };
            var $10453 = $10456;
        };
        return $10453;
    };
    const String$pad_right = x0 => x1 => x2 => String$pad_right$(x0, x1, x2);

    function String$pad_left$(_size$1, _chr$2, _str$3) {
        var $10461 = String$reverse$(String$pad_right$(_size$1, _chr$2, String$reverse$(_str$3)));
        return $10461;
    };
    const String$pad_left = x0 => x1 => x2 => String$pad_left$(x0, x1, x2);

    function Kind$Code$color$(_col$1, _str$2) {
        var $10462 = String$cons$(27, ("[" + (_col$1 + ("m" + (_str$2 + String$cons$(27, "[0m"))))));
        return $10462;
    };
    const Kind$Code$color = x0 => x1 => Kind$Code$color$(x0, x1);

    function List$take$(_n$2, _xs$3) {
        var self = _xs$3;
        switch (self._) {
            case 'List.cons':
                var $10464 = self.head;
                var $10465 = self.tail;
                var self = _n$2;
                if (self === 0n) {
                    var $10467 = List$nil;
                    var $10466 = $10467;
                } else {
                    var $10468 = (self - 1n);
                    var $10469 = List$cons$($10464, List$take$($10468, $10465));
                    var $10466 = $10469;
                };
                var $10463 = $10466;
                break;
            case 'List.nil':
                var $10470 = List$nil;
                var $10463 = $10470;
                break;
        };
        return $10463;
    };
    const List$take = x0 => x1 => List$take$(x0, x1);

    function Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) {
        var Kind$Code$highlight$go$ = (_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) => ({
            ctr: 'TCO',
            arg: [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9]
        });
        var Kind$Code$highlight$go = _code$1 => _ixi$2 => _ix0$3 => _ix1$4 => _col$5 => _row$6 => _lft$7 => _lin$8 => _res$9 => Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9);
        var arg = [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9];
        while (true) {
            let [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9] = arg;
            var R = (() => {
                var _spa$10 = 3n;
                var self = _code$1;
                if (self.length === 0) {
                    var $10472 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                    var $10471 = $10472;
                } else {
                    var $10473 = self.charCodeAt(0);
                    var $10474 = self.slice(1);
                    var self = ($10473 === 10);
                    if (self) {
                        var _stp$13 = Maybe$extract$(_lft$7, Bool$false, Nat$is_zero);
                        var self = _stp$13;
                        if (self) {
                            var $10477 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                            var $10476 = $10477;
                        } else {
                            var _siz$14 = Nat$succ$(Nat$double$(_spa$10));
                            var self = _ix1$4;
                            if (self === 0n) {
                                var self = _lft$7;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $10480 = self.value;
                                        var $10481 = Maybe$some$(Nat$pred$($10480));
                                        var $10479 = $10481;
                                        break;
                                    case 'Maybe.none':
                                        var $10482 = Maybe$some$(_spa$10);
                                        var $10479 = $10482;
                                        break;
                                };
                                var _lft$15 = $10479;
                            } else {
                                var $10483 = (self - 1n);
                                var $10484 = _lft$7;
                                var _lft$15 = $10484;
                            };
                            var _ixi$16 = Nat$pred$(_ixi$2);
                            var _ix0$17 = Nat$pred$(_ix0$3);
                            var _ix1$18 = Nat$pred$(_ix1$4);
                            var _col$19 = 0n;
                            var _row$20 = Nat$succ$(_row$6);
                            var _res$21 = List$cons$(String$reverse$(_lin$8), _res$9);
                            var _lin$22 = String$reverse$(String$flatten$(List$cons$(String$pad_left$(4n, 32, Nat$show$(_row$20)), List$cons$(" | ", List$nil))));
                            var $10478 = Kind$Code$highlight$go$($10474, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$20, _lft$15, _lin$22, _res$21);
                            var $10476 = $10478;
                        };
                        var $10475 = $10476;
                    } else {
                        var _chr$13 = String$cons$($10473, String$nil);
                        var self = (Nat$is_zero$(_ix0$3) && (!Nat$is_zero$(_ix1$4)));
                        if (self) {
                            var $10486 = String$reverse$(Kind$Code$color$("41", Kind$Code$color$("37", _chr$13)));
                            var _chr$14 = $10486;
                        } else {
                            var self = (Nat$is_zero$(_ixi$2) && (!Nat$is_zero$(_ix1$4)));
                            if (self) {
                                var $10488 = String$reverse$(Kind$Code$color$("31", Kind$Code$color$("4", _chr$13)));
                                var $10487 = $10488;
                            } else {
                                var $10489 = _chr$13;
                                var $10487 = $10489;
                            };
                            var _chr$14 = $10487;
                        };
                        var self = (_ix0$3 === 1n);
                        if (self) {
                            var $10490 = List$take$(_spa$10, _res$9);
                            var _res$15 = $10490;
                        } else {
                            var $10491 = _res$9;
                            var _res$15 = $10491;
                        };
                        var _ixi$16 = Nat$pred$(_ixi$2);
                        var _ix0$17 = Nat$pred$(_ix0$3);
                        var _ix1$18 = Nat$pred$(_ix1$4);
                        var _col$19 = Nat$succ$(_col$5);
                        var _lin$20 = String$flatten$(List$cons$(_chr$14, List$cons$(_lin$8, List$nil)));
                        var $10485 = Kind$Code$highlight$go$($10474, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$6, _lft$7, _lin$20, _res$15);
                        var $10475 = $10485;
                    };
                    var $10471 = $10475;
                };
                return $10471;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Code$highlight$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Code$highlight$go$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Code$highlight$(_code$1, _init$2, _idx0$3, _idx1$4) {
        var $10492 = Kind$Code$highlight$go$((_code$1 + " \u{a}"), _init$2, _idx0$3, _idx1$4, 0n, 1n, Maybe$none, String$reverse$("   1 | "), List$nil);
        return $10492;
    };
    const Kind$Code$highlight = x0 => x1 => x2 => x3 => Kind$Code$highlight$(x0, x1, x2, x3);

    function Kind$Defs$read$(_file$1, _code$2, _defs$3) {
        var self = Kind$Parser$file$(_file$1, _code$2, _defs$3, Parser$State$new$(Maybe$none, "", 0n, 0n, _code$2));
        switch (self._) {
            case 'Parser.Reply.error':
                var $10494 = self.err;
                var self = $10494;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $10496 = self.nam;
                        var $10497 = self.ini;
                        var $10498 = self.idx;
                        var $10499 = self.msg;
                        var _err$9 = ($10499 + (() => {
                            var self = $10496;
                            if (self.length === 0) {
                                var $10501 = "";
                                return $10501;
                            } else {
                                var $10502 = self.charCodeAt(0);
                                var $10503 = self.slice(1);
                                var $10504 = (" Inside " + ($10496 + ":"));
                                return $10504;
                            };
                        })());
                        var _hig$10 = Kind$Code$highlight$(_code$2, $10497, $10498, Nat$succ$($10498));
                        var _str$11 = String$flatten$(List$cons$(_err$9, List$cons$("\u{a}", List$cons$(_hig$10, List$nil))));
                        var $10500 = Either$left$(_str$11);
                        var $10495 = $10500;
                        break;
                };
                var $10493 = $10495;
                break;
            case 'Parser.Reply.value':
                var $10505 = self.val;
                var $10506 = Either$right$($10505);
                var $10493 = $10506;
                break;
        };
        return $10493;
    };
    const Kind$Defs$read = x0 => x1 => x2 => Kind$Defs$read$(x0, x1, x2);

    function Kind$Synth$load$go$(_name$1, _files$2, _defs$3) {
        var self = _files$2;
        switch (self._) {
            case 'List.cons':
                var $10508 = self.head;
                var $10509 = self.tail;
                var $10510 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                    var $10511 = _m$bind$6;
                    return $10511;
                }))(Kind$Synth$get_kind_code$($10508))((_code$6 => {
                    var _read$7 = Kind$Defs$read$($10508, _code$6, _defs$3);
                    var self = _read$7;
                    switch (self._) {
                        case 'Either.right':
                            var $10513 = self.value;
                            var _defs$9 = $10513;
                            var self = Kind$Map$get$(_name$1, _defs$9);
                            switch (self._) {
                                case 'Maybe.none':
                                    var $10515 = Kind$Synth$load$go$(_name$1, $10509, _defs$9);
                                    var $10514 = $10515;
                                    break;
                                case 'Maybe.some':
                                    var $10516 = IO$monad$((_m$bind$11 => _m$pure$12 => {
                                        var $10517 = _m$pure$12;
                                        return $10517;
                                    }))(Maybe$some$(_defs$9));
                                    var $10514 = $10516;
                                    break;
                            };
                            var $10512 = $10514;
                            break;
                        case 'Either.left':
                            var $10518 = Kind$Synth$load$go$(_name$1, $10509, _defs$3);
                            var $10512 = $10518;
                            break;
                    };
                    return $10512;
                }));
                var $10507 = $10510;
                break;
            case 'List.nil':
                var $10519 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                    var $10520 = _m$pure$5;
                    return $10520;
                }))(Maybe$none);
                var $10507 = $10519;
                break;
        };
        return $10507;
    };
    const Kind$Synth$load$go = x0 => x1 => x2 => Kind$Synth$load$go$(x0, x1, x2);

    function Kind$Synth$files_of$make$(_names$1, _last$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.cons':
                var $10522 = self.head;
                var $10523 = self.tail;
                var _head$5 = (_last$2 + ($10522 + ".kind"));
                var _tail$6 = Kind$Synth$files_of$make$($10523, (_last$2 + ($10522 + "/")));
                var $10524 = List$cons$(_head$5, _tail$6);
                var $10521 = $10524;
                break;
            case 'List.nil':
                var $10525 = List$nil;
                var $10521 = $10525;
                break;
        };
        return $10521;
    };
    const Kind$Synth$files_of$make = x0 => x1 => Kind$Synth$files_of$make$(x0, x1);

    function String$length$go$(_xs$1, _n$2) {
        var String$length$go$ = (_xs$1, _n$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _n$2]
        });
        var String$length$go = _xs$1 => _n$2 => String$length$go$(_xs$1, _n$2);
        var arg = [_xs$1, _n$2];
        while (true) {
            let [_xs$1, _n$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $10526 = _n$2;
                    return $10526;
                } else {
                    var $10527 = self.charCodeAt(0);
                    var $10528 = self.slice(1);
                    var $10529 = String$length$go$($10528, Nat$succ$(_n$2));
                    return $10529;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$length$go = x0 => x1 => String$length$go$(x0, x1);

    function String$length$(_xs$1) {
        var $10530 = String$length$go$(_xs$1, 0n);
        return $10530;
    };
    const String$length = x0 => String$length$(x0);

    function String$split$go$(_xs$1, _match$2, _last$3) {
        var self = _xs$1;
        if (self.length === 0) {
            var $10532 = List$cons$(_last$3, List$nil);
            var $10531 = $10532;
        } else {
            var $10533 = self.charCodeAt(0);
            var $10534 = self.slice(1);
            var self = String$starts_with$(_xs$1, _match$2);
            if (self) {
                var _rest$6 = String$drop$(String$length$(_match$2), _xs$1);
                var $10536 = List$cons$(_last$3, String$split$go$(_rest$6, _match$2, ""));
                var $10535 = $10536;
            } else {
                var _next$6 = String$cons$($10533, String$nil);
                var $10537 = String$split$go$($10534, _match$2, (_last$3 + _next$6));
                var $10535 = $10537;
            };
            var $10531 = $10535;
        };
        return $10531;
    };
    const String$split$go = x0 => x1 => x2 => String$split$go$(x0, x1, x2);

    function String$split$(_xs$1, _match$2) {
        var $10538 = String$split$go$(_xs$1, _match$2, "");
        return $10538;
    };
    const String$split = x0 => x1 => String$split$(x0, x1);

    function Kind$Synth$files_of$(_name$1) {
        var $10539 = List$reverse$(Kind$Synth$files_of$make$(String$split$(_name$1, "."), ""));
        return $10539;
    };
    const Kind$Synth$files_of = x0 => Kind$Synth$files_of$(x0);

    function Kind$Synth$load$(_name$1, _defs$2) {
        var $10540 = IO$monad$((_m$bind$3 => _m$pure$4 => {
            var $10541 = _m$bind$3;
            return $10541;
        }))(Kind$Synth$load$cached$(List$cons$(_name$1, List$nil), _defs$2))((_cached_defs$3 => {
            var self = _cached_defs$3;
            switch (self._) {
                case 'Maybe.some':
                    var $10543 = self.value;
                    var $10544 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                        var $10545 = _m$pure$6;
                        return $10545;
                    }))(Maybe$some$($10543));
                    var $10542 = $10544;
                    break;
                case 'Maybe.none':
                    var $10546 = Kind$Synth$load$go$(_name$1, Kind$Synth$files_of$(_name$1), _defs$2);
                    var $10542 = $10546;
                    break;
            };
            return $10542;
        }));
        return $10540;
    };
    const Kind$Synth$load = x0 => x1 => Kind$Synth$load$(x0, x1);
    const Kind$Status$wait = ({
        _: 'Kind.Status.wait'
    });

    function Kind$Check$(_V$1) {
        var $10547 = null;
        return $10547;
    };
    const Kind$Check = x0 => Kind$Check$(x0);

    function Kind$Check$result$(_value$2, _errors$3) {
        var $10548 = ({
            _: 'Kind.Check.result',
            'value': _value$2,
            'errors': _errors$3
        });
        return $10548;
    };
    const Kind$Check$result = x0 => x1 => Kind$Check$result$(x0, x1);

    function Kind$Error$undefined_reference$(_origin$1, _name$2) {
        var $10549 = ({
            _: 'Kind.Error.undefined_reference',
            'origin': _origin$1,
            'name': _name$2
        });
        return $10549;
    };
    const Kind$Error$undefined_reference = x0 => x1 => Kind$Error$undefined_reference$(x0, x1);

    function Kind$Error$waiting$(_name$1) {
        var $10550 = ({
            _: 'Kind.Error.waiting',
            'name': _name$1
        });
        return $10550;
    };
    const Kind$Error$waiting = x0 => Kind$Error$waiting$(x0);

    function Kind$Error$indirect$(_name$1) {
        var $10551 = ({
            _: 'Kind.Error.indirect',
            'name': _name$1
        });
        return $10551;
    };
    const Kind$Error$indirect = x0 => Kind$Error$indirect$(x0);

    function Maybe$mapped$(_m$2, _f$4) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $10553 = self.value;
                var $10554 = Maybe$some$(_f$4($10553));
                var $10552 = $10554;
                break;
            case 'Maybe.none':
                var $10555 = Maybe$none;
                var $10552 = $10555;
                break;
        };
        return $10552;
    };
    const Maybe$mapped = x0 => x1 => Maybe$mapped$(x0, x1);

    function Kind$Path$Maybe$Builder$o$(_path$1) {
        var $10556 = Maybe$mapped$(_path$1, Kind$Path$Builder$o);
        return $10556;
    };
    const Kind$Path$Maybe$Builder$o = x0 => Kind$Path$Maybe$Builder$o$(x0);

    function Kind$Path$Maybe$Builder$i$(_path$1) {
        var $10557 = Maybe$mapped$(_path$1, Kind$Path$Builder$i);
        return $10557;
    };
    const Kind$Path$Maybe$Builder$i = x0 => Kind$Path$Maybe$Builder$i$(x0);

    function Kind$Error$patch$(_path$1, _term$2) {
        var $10558 = ({
            _: 'Kind.Error.patch',
            'path': _path$1,
            'term': _term$2
        });
        return $10558;
    };
    const Kind$Error$patch = x0 => x1 => Kind$Error$patch$(x0, x1);

    function Kind$Path$Maybe$Builder$to_bits$(_path$1) {
        var self = _path$1;
        switch (self._) {
            case 'Maybe.some':
                var $10560 = self.value;
                var $10561 = $10560(Bits$e);
                var $10559 = $10561;
                break;
            case 'Maybe.none':
                var $10562 = Bits$e;
                var $10559 = $10562;
                break;
        };
        return $10559;
    };
    const Kind$Path$Maybe$Builder$to_bits = x0 => Kind$Path$Maybe$Builder$to_bits$(x0);

    function Kind$Term$check$patch$(_term$1, _type$2, _path$3) {
        var $10563 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$patch$(Kind$Path$Maybe$Builder$to_bits$(_path$3), _term$1), List$nil));
        return $10563;
    };
    const Kind$Term$check$patch = x0 => x1 => x2 => Kind$Term$check$patch$(x0, x1, x2);

    function Kind$Error$type_mismatch$(_origin$1, _expected$2, _detected$3, _context$4) {
        var $10564 = ({
            _: 'Kind.Error.type_mismatch',
            'origin': _origin$1,
            'expected': _expected$2,
            'detected': _detected$3,
            'context': _context$4
        });
        return $10564;
    };
    const Kind$Error$type_mismatch = x0 => x1 => x2 => x3 => Kind$Error$type_mismatch$(x0, x1, x2, x3);

    function Kind$Error$show_goal$(_name$1, _dref$2, _verb$3, _goal$4, _context$5) {
        var $10565 = ({
            _: 'Kind.Error.show_goal',
            'name': _name$1,
            'dref': _dref$2,
            'verb': _verb$3,
            'goal': _goal$4,
            'context': _context$5
        });
        return $10565;
    };
    const Kind$Error$show_goal = x0 => x1 => x2 => x3 => x4 => Kind$Error$show_goal$(x0, x1, x2, x3, x4);

    function Kind$Path$Builder$nil$(_x$1) {
        var $10566 = _x$1;
        return $10566;
    };
    const Kind$Path$Builder$nil = x0 => Kind$Path$Builder$nil$(x0);
    const Kind$Path$Maybe$Builder$nil = Maybe$some$(Kind$Path$Builder$nil);

    function Kind$Term$check$direct$(_term$1, _defs$2) {
        var self = Kind$Term$check$(_term$1, Maybe$none, _defs$2, List$nil, Kind$Path$Maybe$Builder$nil, Maybe$none);
        switch (self._) {
            case 'Kind.Check.result':
                var $10568 = self.value;
                var $10569 = self.errors;
                var self = $10568;
                switch (self._) {
                    case 'Maybe.none':
                        var $10571 = Kind$Check$result$(Maybe$none, $10569);
                        var $10570 = $10571;
                        break;
                    case 'Maybe.some':
                        var self = Kind$Check$result$(Maybe$some$(_term$1), List$nil);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $10573 = self.value;
                                var $10574 = self.errors;
                                var $10575 = Kind$Check$result$($10573, List$concat$($10569, $10574));
                                var $10572 = $10575;
                                break;
                        };
                        var $10570 = $10572;
                        break;
                };
                var $10567 = $10570;
                break;
        };
        return $10567;
    };
    const Kind$Term$check$direct = x0 => x1 => Kind$Term$check$direct$(x0, x1);

    function Kind$Term$check$get_name_of_self_type$slice$(_self$1) {
        var _len$2 = String$length$(_self$1);
        var _ini$3 = String$slice$(0n, (_len$2 - 5n <= 0n ? 0n : _len$2 - 5n), _self$1);
        var _end$4 = String$slice$((_len$2 - 5n <= 0n ? 0n : _len$2 - 5n), _len$2, _self$1);
        var self = (_end$4 === ".Self");
        if (self) {
            var $10577 = Maybe$some$(_ini$3);
            var $10576 = $10577;
        } else {
            var $10578 = Maybe$none;
            var $10576 = $10578;
        };
        return $10576;
    };
    const Kind$Term$check$get_name_of_self_type$slice = x0 => Kind$Term$check$get_name_of_self_type$slice$(x0);

    function Kind$Term$check$get_name_of_self_type$(_type$1, _defs$2) {
        var self = Kind$Term$reduce$(_type$1, Kind$Map$new);
        switch (self._) {
            case 'Kind.Term.ref':
                var $10580 = self.name;
                var $10581 = Maybe$some$($10580);
                var $10579 = $10581;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.get':
            case 'Kind.Term.ori':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10583 = self.name;
                        var $10584 = Maybe$some$($10583);
                        var $10582 = $10584;
                        break;
                    case 'Kind.Term.all':
                        var $10585 = self.self;
                        var $10586 = Kind$Term$check$get_name_of_self_type$slice$($10585);
                        var $10582 = $10586;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10587 = Maybe$none;
                        var $10582 = $10587;
                        break;
                };
                var $10579 = $10582;
                break;
            case 'Kind.Term.typ':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10589 = self.name;
                        var $10590 = Maybe$some$($10589);
                        var $10588 = $10590;
                        break;
                    case 'Kind.Term.all':
                        var $10591 = self.self;
                        var $10592 = Kind$Term$check$get_name_of_self_type$slice$($10591);
                        var $10588 = $10592;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10593 = Maybe$none;
                        var $10588 = $10593;
                        break;
                };
                var $10579 = $10588;
                break;
            case 'Kind.Term.all':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10595 = self.name;
                        var $10596 = Maybe$some$($10595);
                        var $10594 = $10596;
                        break;
                    case 'Kind.Term.all':
                        var $10597 = self.self;
                        var $10598 = Kind$Term$check$get_name_of_self_type$slice$($10597);
                        var $10594 = $10598;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10599 = Maybe$none;
                        var $10594 = $10599;
                        break;
                };
                var $10579 = $10594;
                break;
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.num':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10601 = self.name;
                        var $10602 = Maybe$some$($10601);
                        var $10600 = $10602;
                        break;
                    case 'Kind.Term.all':
                        var $10603 = self.self;
                        var $10604 = Kind$Term$check$get_name_of_self_type$slice$($10603);
                        var $10600 = $10604;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10605 = Maybe$none;
                        var $10600 = $10605;
                        break;
                };
                var $10579 = $10600;
                break;
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.new':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10607 = self.name;
                        var $10608 = Maybe$some$($10607);
                        var $10606 = $10608;
                        break;
                    case 'Kind.Term.all':
                        var $10609 = self.self;
                        var $10610 = Kind$Term$check$get_name_of_self_type$slice$($10609);
                        var $10606 = $10610;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10611 = Maybe$none;
                        var $10606 = $10611;
                        break;
                };
                var $10579 = $10606;
                break;
            case 'Kind.Term.cse':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10613 = self.name;
                        var $10614 = Maybe$some$($10613);
                        var $10612 = $10614;
                        break;
                    case 'Kind.Term.all':
                        var $10615 = self.self;
                        var $10616 = Kind$Term$check$get_name_of_self_type$slice$($10615);
                        var $10612 = $10616;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10617 = Maybe$none;
                        var $10612 = $10617;
                        break;
                };
                var $10579 = $10612;
                break;
        };
        return $10579;
    };
    const Kind$Term$check$get_name_of_self_type = x0 => x1 => Kind$Term$check$get_name_of_self_type$(x0, x1);

    function Kind$Term$check$expand$num$nat$(_numb$1) {
        var $10618 = Kind$Term$nat$(_numb$1);
        return $10618;
    };
    const Kind$Term$check$expand$num$nat = x0 => Kind$Term$check$expand$num$nat$(x0);

    function Kind$Term$check$expand$num$int$(_sign$1, _numb$2) {
        var _term$3 = Kind$Term$nat$(_numb$2);
        var _term$4 = Kind$Term$app$(Kind$Term$ref$("Int.from_nat"), _term$3);
        var self = _sign$1;
        switch (self._) {
            case 'Maybe.some':
                var $10620 = self.value;
                var self = $10620;
                if (self) {
                    var $10622 = _term$4;
                    var $10621 = $10622;
                } else {
                    var $10623 = Kind$Term$app$(Kind$Term$ref$("Int.neg"), _term$4);
                    var $10621 = $10623;
                };
                var _term$5 = $10621;
                break;
            case 'Maybe.none':
                var $10624 = _term$4;
                var _term$5 = $10624;
                break;
        };
        var $10619 = _term$5;
        return $10619;
    };
    const Kind$Term$check$expand$num$int = x0 => x1 => Kind$Term$check$expand$num$int$(x0, x1);

    function Kind$Term$check$expand$num$other$(_name$1, _sign$2, _numb$3, _frac$4) {
        var self = _sign$2;
        switch (self._) {
            case 'Maybe.some':
                var $10626 = self.value;
                var self = $10626;
                if (self) {
                    var $10628 = "+";
                    var $10627 = $10628;
                } else {
                    var $10629 = "-";
                    var $10627 = $10629;
                };
                var _text$5 = $10627;
                break;
            case 'Maybe.none':
                var $10630 = "";
                var _text$5 = $10630;
                break;
        };
        var _text$6 = (_text$5 + Nat$show$(_numb$3));
        var _text$7 = (_text$6 + (() => {
            var self = _frac$4;
            switch (self._) {
                case 'Maybe.some':
                    var $10631 = self.value;
                    var $10632 = ("." + Nat$show$($10631));
                    return $10632;
                case 'Maybe.none':
                    var $10633 = "";
                    return $10633;
            };
        })());
        var $10625 = Kind$Term$app$(Kind$Term$ref$((_name$1 + ".read")), Kind$Term$str$(_text$7));
        return $10625;
    };
    const Kind$Term$check$expand$num$other = x0 => x1 => x2 => x3 => Kind$Term$check$expand$num$other$(x0, x1, x2, x3);

    function Kind$Term$check$expand$num$(_sign$1, _numb$2, _frac$3, _type$4, _defs$5) {
        var self = _type$4;
        switch (self._) {
            case 'Maybe.some':
                var $10635 = self.value;
                var self = Kind$Term$check$get_name_of_self_type$($10635, _defs$5);
                switch (self._) {
                    case 'Maybe.some':
                        var $10637 = self.value;
                        var self = ($10637 === "Nat");
                        if (self) {
                            var $10639 = Maybe$some$(Kind$Term$check$expand$num$nat$(_numb$2));
                            var $10638 = $10639;
                        } else {
                            var self = ($10637 === "Int");
                            if (self) {
                                var $10641 = Maybe$some$(Kind$Term$check$expand$num$int$(_sign$1, _numb$2));
                                var $10640 = $10641;
                            } else {
                                var $10642 = Maybe$some$(Kind$Term$check$expand$num$other$($10637, _sign$1, _numb$2, _frac$3));
                                var $10640 = $10642;
                            };
                            var $10638 = $10640;
                        };
                        var $10636 = $10638;
                        break;
                    case 'Maybe.none':
                        var $10643 = Maybe$none;
                        var $10636 = $10643;
                        break;
                };
                var _got$6 = $10636;
                break;
            case 'Maybe.none':
                var $10644 = Maybe$none;
                var _got$6 = $10644;
                break;
        };
        var self = _got$6;
        switch (self._) {
            case 'Maybe.some':
                var $10645 = self.value;
                var $10646 = $10645;
                var $10634 = $10646;
                break;
            case 'Maybe.none':
                var self = _frac$3;
                switch (self._) {
                    case 'Maybe.none':
                        var self = _sign$1;
                        switch (self._) {
                            case 'Maybe.none':
                                var $10649 = Kind$Term$check$expand$num$nat$(_numb$2);
                                var $10648 = $10649;
                                break;
                            case 'Maybe.some':
                                var $10650 = Kind$Term$check$expand$num$int$(_sign$1, _numb$2);
                                var $10648 = $10650;
                                break;
                        };
                        var $10647 = $10648;
                        break;
                    case 'Maybe.some':
                        var $10651 = Kind$Term$check$expand$num$other$("F64", _sign$1, _numb$2, _frac$3);
                        var $10647 = $10651;
                        break;
                };
                var $10634 = $10647;
                break;
        };
        return $10634;
    };
    const Kind$Term$check$expand$num = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$expand$num$(x0, x1, x2, x3, x4);

    function Kind$Term$check$infer_types_of_with$(_vars$1, _defs$2, _ctx$3, _path$4, _orig$5) {
        var self = _vars$1;
        switch (self._) {
            case 'List.cons':
                var $10653 = self.head;
                var $10654 = self.tail;
                var self = $10653;
                switch (self._) {
                    case 'Kind.Ann.new':
                        var $10656 = self.name;
                        var $10657 = self.term;
                        var $10658 = self.type;
                        var self = $10658;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10660 = self.value;
                                var $10661 = Kind$Check$result$(Maybe$some$(Maybe$some$($10660)), List$nil);
                                var self = $10661;
                                break;
                            case 'Maybe.none':
                                var self = Kind$Term$check$($10657, Maybe$none, _defs$2, _ctx$3, _path$4, _orig$5);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $10663 = self.value;
                                        var $10664 = self.errors;
                                        var self = $10663;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $10666 = self.value;
                                                var self = Kind$Check$result$(Maybe$some$(Maybe$some$($10666)), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $10668 = self.value;
                                                        var $10669 = self.errors;
                                                        var $10670 = Kind$Check$result$($10668, List$concat$($10664, $10669));
                                                        var $10667 = $10670;
                                                        break;
                                                };
                                                var $10665 = $10667;
                                                break;
                                            case 'Maybe.none':
                                                var $10671 = Kind$Check$result$(Maybe$none, $10664);
                                                var $10665 = $10671;
                                                break;
                                        };
                                        var $10662 = $10665;
                                        break;
                                };
                                var self = $10662;
                                break;
                        };
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $10672 = self.value;
                                var $10673 = self.errors;
                                var self = $10672;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $10675 = self.value;
                                        var self = Kind$Term$check$infer_types_of_with$($10654, _defs$2, _ctx$3, _path$4, _orig$5);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $10677 = self.value;
                                                var $10678 = self.errors;
                                                var self = $10677;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $10680 = self.value;
                                                        var self = Kind$Check$result$(Maybe$some$(List$cons$(Kind$Ann$new$($10656, $10657, $10675), $10680)), List$nil);
                                                        switch (self._) {
                                                            case 'Kind.Check.result':
                                                                var $10682 = self.value;
                                                                var $10683 = self.errors;
                                                                var $10684 = Kind$Check$result$($10682, List$concat$($10678, $10683));
                                                                var $10681 = $10684;
                                                                break;
                                                        };
                                                        var $10679 = $10681;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $10685 = Kind$Check$result$(Maybe$none, $10678);
                                                        var $10679 = $10685;
                                                        break;
                                                };
                                                var self = $10679;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $10686 = self.value;
                                                var $10687 = self.errors;
                                                var $10688 = Kind$Check$result$($10686, List$concat$($10673, $10687));
                                                var $10676 = $10688;
                                                break;
                                        };
                                        var $10674 = $10676;
                                        break;
                                    case 'Maybe.none':
                                        var $10689 = Kind$Check$result$(Maybe$none, $10673);
                                        var $10674 = $10689;
                                        break;
                                };
                                var $10659 = $10674;
                                break;
                        };
                        var $10655 = $10659;
                        break;
                };
                var $10652 = $10655;
                break;
            case 'List.nil':
                var $10690 = Kind$Check$result$(Maybe$some$(List$nil), List$nil);
                var $10652 = $10690;
                break;
        };
        return $10652;
    };
    const Kind$Term$check$infer_types_of_with = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$infer_types_of_with$(x0, x1, x2, x3, x4);

    function Kind$Term$normalize$(_term$1, _defs$2) {
        var self = Kind$Term$reduce$(_term$1, _defs$2);
        switch (self._) {
            case 'Kind.Term.var':
                var $10692 = self.name;
                var $10693 = self.indx;
                var $10694 = Kind$Term$var$($10692, $10693);
                var $10691 = $10694;
                break;
            case 'Kind.Term.ref':
                var $10695 = self.name;
                var $10696 = Kind$Term$ref$($10695);
                var $10691 = $10696;
                break;
            case 'Kind.Term.all':
                var $10697 = self.eras;
                var $10698 = self.self;
                var $10699 = self.name;
                var $10700 = self.xtyp;
                var $10701 = self.body;
                var $10702 = Kind$Term$all$($10697, $10698, $10699, Kind$Term$normalize$($10700, _defs$2), (_s$8 => _x$9 => {
                    var $10703 = Kind$Term$normalize$($10701(_s$8)(_x$9), _defs$2);
                    return $10703;
                }));
                var $10691 = $10702;
                break;
            case 'Kind.Term.lam':
                var $10704 = self.name;
                var $10705 = self.body;
                var $10706 = Kind$Term$lam$($10704, (_x$5 => {
                    var $10707 = Kind$Term$normalize$($10705(_x$5), _defs$2);
                    return $10707;
                }));
                var $10691 = $10706;
                break;
            case 'Kind.Term.app':
                var $10708 = self.func;
                var $10709 = self.argm;
                var $10710 = Kind$Term$app$(Kind$Term$normalize$($10708, _defs$2), Kind$Term$normalize$($10709, _defs$2));
                var $10691 = $10710;
                break;
            case 'Kind.Term.let':
                var $10711 = self.name;
                var $10712 = self.expr;
                var $10713 = self.body;
                var $10714 = Kind$Term$let$($10711, Kind$Term$normalize$($10712, _defs$2), (_x$6 => {
                    var $10715 = Kind$Term$normalize$($10713(_x$6), _defs$2);
                    return $10715;
                }));
                var $10691 = $10714;
                break;
            case 'Kind.Term.ann':
                var $10716 = self.done;
                var $10717 = self.term;
                var $10718 = self.type;
                var $10719 = Kind$Term$ann$($10716, Kind$Term$normalize$($10717, _defs$2), Kind$Term$normalize$($10718, _defs$2));
                var $10691 = $10719;
                break;
            case 'Kind.Term.gol':
                var $10720 = self.name;
                var $10721 = self.dref;
                var $10722 = self.verb;
                var $10723 = Kind$Term$gol$($10720, $10721, $10722);
                var $10691 = $10723;
                break;
            case 'Kind.Term.hol':
                var $10724 = self.path;
                var $10725 = Kind$Term$hol$($10724);
                var $10691 = $10725;
                break;
            case 'Kind.Term.nat':
                var $10726 = self.natx;
                var $10727 = Kind$Term$nat$($10726);
                var $10691 = $10727;
                break;
            case 'Kind.Term.chr':
                var $10728 = self.chrx;
                var $10729 = Kind$Term$chr$($10728);
                var $10691 = $10729;
                break;
            case 'Kind.Term.str':
                var $10730 = self.strx;
                var $10731 = Kind$Term$str$($10730);
                var $10691 = $10731;
                break;
            case 'Kind.Term.ori':
                var $10732 = self.expr;
                var $10733 = Kind$Term$normalize$($10732, _defs$2);
                var $10691 = $10733;
                break;
            case 'Kind.Term.typ':
                var $10734 = Kind$Term$typ;
                var $10691 = $10734;
                break;
            case 'Kind.Term.def':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $10735 = _term$1;
                var $10691 = $10735;
                break;
        };
        return $10691;
    };
    const Kind$Term$normalize = x0 => x1 => Kind$Term$normalize$(x0, x1);

    function Kind$Term$check$expand$cse$motive$go$(_wyth$1, _moti$2, _name$3, _expr$4, _etyp$5, _rtyp$6, _defs$7, _size$8) {
        var self = _wyth$1;
        switch (self._) {
            case 'List.cons':
                var $10737 = self.head;
                var $10738 = self.tail;
                var self = $10737;
                switch (self._) {
                    case 'Kind.Ann.new':
                        var $10740 = self.name;
                        var $10741 = self.type;
                        var $10742 = Kind$Term$all$(Bool$false, "", $10740, Maybe$default$($10741, Kind$Term$hol$(Bits$e)), (_s$14 => _x$15 => {
                            var $10743 = Kind$Term$check$expand$cse$motive$($10738, _moti$2, _name$3, _expr$4, _etyp$5, _rtyp$6, _defs$7, Nat$succ$(Nat$succ$(_size$8)));
                            return $10743;
                        }));
                        var $10739 = $10742;
                        break;
                };
                var $10736 = $10739;
                break;
            case 'List.nil':
                var self = _moti$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $10745 = self.value;
                        var $10746 = $10745;
                        var $10744 = $10746;
                        break;
                    case 'Maybe.none':
                        var self = _rtyp$6;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10748 = self.value;
                                var $10749 = Kind$Term$normalize$($10748, Kind$Map$new);
                                var $10747 = $10749;
                                break;
                            case 'Maybe.none':
                                var $10750 = Kind$Term$hol$(Bits$e);
                                var $10747 = $10750;
                                break;
                        };
                        var $10744 = $10747;
                        break;
                };
                var $10736 = $10744;
                break;
        };
        return $10736;
    };
    const Kind$Term$check$expand$cse$motive$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => Kind$Term$check$expand$cse$motive$go$(x0, x1, x2, x3, x4, x5, x6, x7);

    function List$tail$(_xs$2) {
        var self = _xs$2;
        switch (self._) {
            case 'List.cons':
                var $10752 = self.tail;
                var $10753 = $10752;
                var $10751 = $10753;
                break;
            case 'List.nil':
                var $10754 = List$nil;
                var $10751 = $10754;
                break;
        };
        return $10751;
    };
    const List$tail = x0 => List$tail$(x0);

    function Kind$Term$SmartMotive$vals$cont$(_expr$1, _term$2, _args$3, _defs$4) {
        var Kind$Term$SmartMotive$vals$cont$ = (_expr$1, _term$2, _args$3, _defs$4) => ({
            ctr: 'TCO',
            arg: [_expr$1, _term$2, _args$3, _defs$4]
        });
        var Kind$Term$SmartMotive$vals$cont = _expr$1 => _term$2 => _args$3 => _defs$4 => Kind$Term$SmartMotive$vals$cont$(_expr$1, _term$2, _args$3, _defs$4);
        var arg = [_expr$1, _term$2, _args$3, _defs$4];
        while (true) {
            let [_expr$1, _term$2, _args$3, _defs$4] = arg;
            var R = (() => {
                var self = Kind$Term$reduce$(_term$2, _defs$4);
                switch (self._) {
                    case 'Kind.Term.app':
                        var $10755 = self.func;
                        var $10756 = self.argm;
                        var $10757 = Kind$Term$SmartMotive$vals$cont$(_expr$1, $10755, List$cons$($10756, _args$3), _defs$4);
                        return $10757;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10758 = List$cons$(_expr$1, List$tail$(List$reverse$(_args$3)));
                        return $10758;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$SmartMotive$vals$cont = x0 => x1 => x2 => x3 => Kind$Term$SmartMotive$vals$cont$(x0, x1, x2, x3);

    function Kind$Term$SmartMotive$vals$(_expr$1, _type$2, _defs$3) {
        var Kind$Term$SmartMotive$vals$ = (_expr$1, _type$2, _defs$3) => ({
            ctr: 'TCO',
            arg: [_expr$1, _type$2, _defs$3]
        });
        var Kind$Term$SmartMotive$vals = _expr$1 => _type$2 => _defs$3 => Kind$Term$SmartMotive$vals$(_expr$1, _type$2, _defs$3);
        var arg = [_expr$1, _type$2, _defs$3];
        while (true) {
            let [_expr$1, _type$2, _defs$3] = arg;
            var R = (() => {
                var self = Kind$Term$reduce$(_type$2, _defs$3);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10759 = self.body;
                        var $10760 = Kind$Term$SmartMotive$vals$(_expr$1, $10759(Kind$Term$typ)(Kind$Term$typ), _defs$3);
                        return $10760;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10761 = Kind$Term$SmartMotive$vals$cont$(_expr$1, _type$2, List$nil, _defs$3);
                        return $10761;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$SmartMotive$vals = x0 => x1 => x2 => Kind$Term$SmartMotive$vals$(x0, x1, x2);

    function Kind$Term$SmartMotive$nams$cont$(_name$1, _term$2, _binds$3, _defs$4) {
        var Kind$Term$SmartMotive$nams$cont$ = (_name$1, _term$2, _binds$3, _defs$4) => ({
            ctr: 'TCO',
            arg: [_name$1, _term$2, _binds$3, _defs$4]
        });
        var Kind$Term$SmartMotive$nams$cont = _name$1 => _term$2 => _binds$3 => _defs$4 => Kind$Term$SmartMotive$nams$cont$(_name$1, _term$2, _binds$3, _defs$4);
        var arg = [_name$1, _term$2, _binds$3, _defs$4];
        while (true) {
            let [_name$1, _term$2, _binds$3, _defs$4] = arg;
            var R = (() => {
                var self = Kind$Term$reduce$(_term$2, _defs$4);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10762 = self.self;
                        var $10763 = self.name;
                        var $10764 = self.body;
                        var $10765 = Kind$Term$SmartMotive$nams$cont$(_name$1, $10764(Kind$Term$ref$($10762))(Kind$Term$ref$($10763)), List$cons$(String$flatten$(List$cons$(_name$1, List$cons$(".", List$cons$($10763, List$nil)))), _binds$3), _defs$4);
                        return $10765;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10766 = List$cons$(_name$1, List$tail$(_binds$3));
                        return $10766;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$SmartMotive$nams$cont = x0 => x1 => x2 => x3 => Kind$Term$SmartMotive$nams$cont$(x0, x1, x2, x3);

    function Kind$Term$SmartMotive$nams$(_name$1, _type$2, _defs$3) {
        var self = Kind$Term$reduce$(_type$2, _defs$3);
        switch (self._) {
            case 'Kind.Term.all':
                var $10768 = self.xtyp;
                var $10769 = Kind$Term$SmartMotive$nams$cont$(_name$1, $10768, List$nil, _defs$3);
                var $10767 = $10769;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10770 = List$nil;
                var $10767 = $10770;
                break;
        };
        return $10767;
    };
    const Kind$Term$SmartMotive$nams = x0 => x1 => x2 => Kind$Term$SmartMotive$nams$(x0, x1, x2);

    function List$zip$(_as$3, _bs$4) {
        var self = _as$3;
        switch (self._) {
            case 'List.cons':
                var $10772 = self.head;
                var $10773 = self.tail;
                var self = _bs$4;
                switch (self._) {
                    case 'List.cons':
                        var $10775 = self.head;
                        var $10776 = self.tail;
                        var $10777 = List$cons$(Pair$new$($10772, $10775), List$zip$($10773, $10776));
                        var $10774 = $10777;
                        break;
                    case 'List.nil':
                        var $10778 = List$nil;
                        var $10774 = $10778;
                        break;
                };
                var $10771 = $10774;
                break;
            case 'List.nil':
                var $10779 = List$nil;
                var $10771 = $10779;
                break;
        };
        return $10771;
    };
    const List$zip = x0 => x1 => List$zip$(x0, x1);
    const Nat$gte = a0 => a1 => (a0 >= a1);
    const Bits$concat = a0 => a1 => (a1 + a0);

    function Kind$Term$serialize$go$(_term$1, _depth$2, _init$3, _diff$4, _x$5) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.var':
                var $10781 = self.indx;
                var self = ($10781 >= _init$3);
                if (self) {
                    var _name$8 = a1 => (a1 + (nat_to_bits(Nat$pred$((_depth$2 - $10781 <= 0n ? 0n : _depth$2 - $10781)))));
                    var $10783 = (((_name$8(_x$5) + '1') + '0') + '0');
                    var $10782 = $10783;
                } else {
                    var _name$8 = a1 => (a1 + (nat_to_bits($10781)));
                    var $10784 = (((_name$8(_x$5) + '0') + '1') + '0');
                    var $10782 = $10784;
                };
                var $10780 = $10782;
                break;
            case 'Kind.Term.ref':
                var $10785 = self.name;
                var _name$7 = a1 => (a1 + (kind_name_to_bits($10785)));
                var $10786 = (((_name$7(_x$5) + '0') + '0') + '0');
                var $10780 = $10786;
                break;
            case 'Kind.Term.all':
                var $10787 = self.eras;
                var $10788 = self.self;
                var $10789 = self.name;
                var $10790 = self.xtyp;
                var $10791 = self.body;
                var self = $10787;
                if (self) {
                    var $10793 = Bits$i;
                    var _eras$11 = $10793;
                } else {
                    var $10794 = Bits$o;
                    var _eras$11 = $10794;
                };
                var _self$12 = a1 => (a1 + (kind_name_to_bits($10788)));
                var _xtyp$13 = Kind$Term$serialize$go($10790)(_depth$2)(_init$3)(_diff$4);
                var _body$14 = Kind$Term$serialize$go($10791(Kind$Term$var$($10788, _depth$2))(Kind$Term$var$($10789, Nat$succ$(_depth$2))))(Nat$succ$(Nat$succ$(_depth$2)))(_init$3)(_diff$4);
                var $10792 = (((_eras$11(_self$12(_xtyp$13(_body$14(_x$5)))) + '0') + '0') + '1');
                var $10780 = $10792;
                break;
            case 'Kind.Term.lam':
                var $10795 = self.name;
                var $10796 = self.body;
                var _body$8 = Kind$Term$serialize$go($10796(Kind$Term$var$($10795, _depth$2)))(Nat$succ$(_depth$2))(_init$3)(_diff$4);
                var $10797 = (((_body$8(_x$5) + '1') + '0') + '1');
                var $10780 = $10797;
                break;
            case 'Kind.Term.app':
                var $10798 = self.func;
                var $10799 = self.argm;
                var _func$8 = Kind$Term$serialize$go($10798)(_depth$2)(_init$3)(_diff$4);
                var _argm$9 = Kind$Term$serialize$go($10799)(_depth$2)(_init$3)(_diff$4);
                var $10800 = (((_func$8(_argm$9(_x$5)) + '0') + '1') + '1');
                var $10780 = $10800;
                break;
            case 'Kind.Term.let':
                var $10801 = self.name;
                var $10802 = self.expr;
                var $10803 = self.body;
                var _expr$9 = Kind$Term$serialize$go($10802)(_depth$2)(_init$3)(_diff$4);
                var _body$10 = Kind$Term$serialize$go($10803(Kind$Term$var$($10801, _depth$2)))(Nat$succ$(_depth$2))(_init$3)(_diff$4);
                var $10804 = (((_expr$9(_body$10(_x$5)) + '1') + '1') + '1');
                var $10780 = $10804;
                break;
            case 'Kind.Term.ann':
                var $10805 = self.term;
                var $10806 = Kind$Term$serialize$go$($10805, _depth$2, _init$3, _diff$4, _x$5);
                var $10780 = $10806;
                break;
            case 'Kind.Term.gol':
                var $10807 = self.name;
                var _name$9 = a1 => (a1 + (kind_name_to_bits($10807)));
                var $10808 = (((_name$9(_x$5) + '0') + '0') + '0');
                var $10780 = $10808;
                break;
            case 'Kind.Term.nat':
                var $10809 = self.natx;
                var $10810 = Kind$Term$serialize$go$(Kind$Term$unroll_nat$($10809), _depth$2, _init$3, _diff$4, _x$5);
                var $10780 = $10810;
                break;
            case 'Kind.Term.chr':
                var $10811 = self.chrx;
                var $10812 = Kind$Term$serialize$go$(Kind$Term$unroll_chr$($10811), _depth$2, _init$3, _diff$4, _x$5);
                var $10780 = $10812;
                break;
            case 'Kind.Term.str':
                var $10813 = self.strx;
                var $10814 = Kind$Term$serialize$go$(Kind$Term$unroll_str$($10813), _depth$2, _init$3, _diff$4, _x$5);
                var $10780 = $10814;
                break;
            case 'Kind.Term.ori':
                var $10815 = self.expr;
                var $10816 = Kind$Term$serialize$go$($10815, _depth$2, _init$3, _diff$4, _x$5);
                var $10780 = $10816;
                break;
            case 'Kind.Term.typ':
                var $10817 = (((_x$5 + '1') + '1') + '0');
                var $10780 = $10817;
                break;
            case 'Kind.Term.def':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $10818 = _diff$4(_x$5);
                var $10780 = $10818;
                break;
            case 'Kind.Term.hol':
                var $10819 = _x$5;
                var $10780 = $10819;
                break;
        };
        return $10780;
    };
    const Kind$Term$serialize$go = x0 => x1 => x2 => x3 => x4 => Kind$Term$serialize$go$(x0, x1, x2, x3, x4);

    function Kind$Term$serialize$(_term$1, _depth$2, _side$3) {
        var self = _side$3;
        if (self) {
            var $10821 = Bits$o;
            var _diff$4 = $10821;
        } else {
            var $10822 = Bits$i;
            var _diff$4 = $10822;
        };
        var $10820 = Kind$Term$serialize$go$(_term$1, _depth$2, _depth$2, _diff$4, Bits$e);
        return $10820;
    };
    const Kind$Term$serialize = x0 => x1 => x2 => Kind$Term$serialize$(x0, x1, x2);
    const Bits$eql = a0 => a1 => (a1 === a0);

    function Kind$Term$identical$(_a$1, _b$2, _lv$3) {
        var _ah$4 = Kind$Term$serialize$(_a$1, _lv$3, Bool$false);
        var _bh$5 = Kind$Term$serialize$(_b$2, _lv$3, Bool$true);
        var $10823 = (_bh$5 === _ah$4);
        return $10823;
    };
    const Kind$Term$identical = x0 => x1 => x2 => Kind$Term$identical$(x0, x1, x2);

    function Kind$Term$SmartMotive$replace$(_term$1, _from$2, _to$3, _lv$4) {
        var self = Kind$Term$identical$(_term$1, _from$2, _lv$4);
        if (self) {
            var $10825 = _to$3;
            var $10824 = $10825;
        } else {
            var self = _term$1;
            switch (self._) {
                case 'Kind.Term.var':
                    var $10827 = self.name;
                    var $10828 = self.indx;
                    var $10829 = Kind$Term$var$($10827, $10828);
                    var $10826 = $10829;
                    break;
                case 'Kind.Term.ref':
                    var $10830 = self.name;
                    var $10831 = Kind$Term$ref$($10830);
                    var $10826 = $10831;
                    break;
                case 'Kind.Term.all':
                    var $10832 = self.eras;
                    var $10833 = self.self;
                    var $10834 = self.name;
                    var $10835 = self.xtyp;
                    var $10836 = self.body;
                    var _xtyp$10 = Kind$Term$SmartMotive$replace$($10835, _from$2, _to$3, _lv$4);
                    var _body$11 = $10836(Kind$Term$ref$($10833))(Kind$Term$ref$($10834));
                    var _body$12 = Kind$Term$SmartMotive$replace$(_body$11, _from$2, _to$3, Nat$succ$(Nat$succ$(_lv$4)));
                    var $10837 = Kind$Term$all$($10832, $10833, $10834, _xtyp$10, (_s$13 => _x$14 => {
                        var $10838 = _body$12;
                        return $10838;
                    }));
                    var $10826 = $10837;
                    break;
                case 'Kind.Term.lam':
                    var $10839 = self.name;
                    var $10840 = self.body;
                    var _body$7 = $10840(Kind$Term$ref$($10839));
                    var _body$8 = Kind$Term$SmartMotive$replace$(_body$7, _from$2, _to$3, Nat$succ$(_lv$4));
                    var $10841 = Kind$Term$lam$($10839, (_x$9 => {
                        var $10842 = _body$8;
                        return $10842;
                    }));
                    var $10826 = $10841;
                    break;
                case 'Kind.Term.app':
                    var $10843 = self.func;
                    var $10844 = self.argm;
                    var _func$7 = Kind$Term$SmartMotive$replace$($10843, _from$2, _to$3, _lv$4);
                    var _argm$8 = Kind$Term$SmartMotive$replace$($10844, _from$2, _to$3, _lv$4);
                    var $10845 = Kind$Term$app$(_func$7, _argm$8);
                    var $10826 = $10845;
                    break;
                case 'Kind.Term.let':
                    var $10846 = self.name;
                    var $10847 = self.expr;
                    var $10848 = self.body;
                    var _expr$8 = Kind$Term$SmartMotive$replace$($10847, _from$2, _to$3, _lv$4);
                    var _body$9 = $10848(Kind$Term$ref$($10846));
                    var _body$10 = Kind$Term$SmartMotive$replace$(_body$9, _from$2, _to$3, Nat$succ$(_lv$4));
                    var $10849 = Kind$Term$let$($10846, _expr$8, (_x$11 => {
                        var $10850 = _body$10;
                        return $10850;
                    }));
                    var $10826 = $10849;
                    break;
                case 'Kind.Term.ann':
                    var $10851 = self.done;
                    var $10852 = self.term;
                    var $10853 = self.type;
                    var _term$8 = Kind$Term$SmartMotive$replace$($10852, _from$2, _to$3, _lv$4);
                    var _type$9 = Kind$Term$SmartMotive$replace$($10853, _from$2, _to$3, _lv$4);
                    var $10854 = Kind$Term$ann$($10851, _term$8, _type$9);
                    var $10826 = $10854;
                    break;
                case 'Kind.Term.get':
                    var $10855 = self.expr;
                    var $10856 = self.fkey;
                    var _expr$7 = Kind$Term$SmartMotive$replace$($10855, _from$2, _to$3, _lv$4);
                    var _fkey$8 = $10856;
                    var $10857 = Kind$Term$get$(_expr$7, _fkey$8);
                    var $10826 = $10857;
                    break;
                case 'Kind.Term.set':
                    var $10858 = self.expr;
                    var $10859 = self.fkey;
                    var $10860 = self.fval;
                    var _expr$8 = Kind$Term$SmartMotive$replace$($10858, _from$2, _to$3, _lv$4);
                    var _fkey$9 = $10859;
                    var _fval$10 = Kind$Term$SmartMotive$replace$($10860, _from$2, _to$3, _lv$4);
                    var $10861 = Kind$Term$set$(_expr$8, _fkey$9, _fval$10);
                    var $10826 = $10861;
                    break;
                case 'Kind.Term.ope':
                    var $10862 = self.name;
                    var $10863 = self.arg0;
                    var $10864 = self.arg1;
                    var _arg0$8 = Kind$Term$SmartMotive$replace$($10863, _from$2, _to$3, _lv$4);
                    var _arg1$9 = Kind$Term$SmartMotive$replace$($10864, _from$2, _to$3, _lv$4);
                    var $10865 = Kind$Term$ope$($10862, _arg0$8, _arg1$9);
                    var $10826 = $10865;
                    break;
                case 'Kind.Term.ori':
                    var $10866 = self.expr;
                    var $10867 = Kind$Term$SmartMotive$replace$($10866, _from$2, _to$3, _lv$4);
                    var $10826 = $10867;
                    break;
                case 'Kind.Term.typ':
                    var $10868 = Kind$Term$typ;
                    var $10826 = $10868;
                    break;
                case 'Kind.Term.def':
                case 'Kind.Term.gol':
                case 'Kind.Term.hol':
                case 'Kind.Term.nat':
                case 'Kind.Term.chr':
                case 'Kind.Term.str':
                case 'Kind.Term.num':
                case 'Kind.Term.cse':
                case 'Kind.Term.new':
                    var $10869 = _term$1;
                    var $10826 = $10869;
                    break;
            };
            var $10824 = $10826;
        };
        return $10824;
    };
    const Kind$Term$SmartMotive$replace = x0 => x1 => x2 => x3 => Kind$Term$SmartMotive$replace$(x0, x1, x2, x3);

    function Kind$Term$SmartMotive$make$(_name$1, _expr$2, _type$3, _moti$4, _size$5, _defs$6) {
        var _vals$7 = Kind$Term$SmartMotive$vals$(_expr$2, _type$3, _defs$6);
        var _nams$8 = Kind$Term$SmartMotive$nams$(_name$1, _type$3, _defs$6);
        var _subs$9 = List$zip$(_nams$8, _vals$7);
        var $10870 = List$fold$(_subs$9, _moti$4, (_sub$10 => _moti$11 => {
            var self = _sub$10;
            switch (self._) {
                case 'Pair.new':
                    var $10872 = self.fst;
                    var $10873 = self.snd;
                    var $10874 = Kind$Term$SmartMotive$replace$(_moti$11, $10873, Kind$Term$ref$($10872), _size$5);
                    var $10871 = $10874;
                    break;
            };
            return $10871;
        }));
        return $10870;
    };
    const Kind$Term$SmartMotive$make = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Term$SmartMotive$make$(x0, x1, x2, x3, x4, x5);

    function Kind$Term$check$expand$cse$motive$(_wyth$1, _moti$2, _name$3, _expr$4, _etyp$5, _rtyp$6, _defs$7, _size$8) {
        var _done$9 = Kind$Term$check$expand$cse$motive$go$(_wyth$1, _moti$2, _name$3, _expr$4, _etyp$5, _rtyp$6, _defs$7, _size$8);
        var self = _moti$2;
        switch (self._) {
            case 'Maybe.none':
                var $10876 = Kind$Term$SmartMotive$make$(_name$3, _expr$4, _etyp$5, _done$9, _size$8, _defs$7);
                var $10875 = $10876;
                break;
            case 'Maybe.some':
                var $10877 = _done$9;
                var $10875 = $10877;
                break;
        };
        return $10875;
    };
    const Kind$Term$check$expand$cse$motive = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => Kind$Term$check$expand$cse$motive$(x0, x1, x2, x3, x4, x5, x6, x7);

    function Kind$Term$check$expand$cse$argument$(_name$1, _wyth$2, _type$3, _body$4, _defs$5) {
        var self = Kind$Term$reduce$(_type$3, _defs$5);
        switch (self._) {
            case 'Kind.Term.all':
                var $10879 = self.self;
                var $10880 = self.name;
                var $10881 = self.body;
                var $10882 = Kind$Term$lam$((() => {
                    var self = String$is_empty$($10880);
                    if (self) {
                        var $10883 = _name$1;
                        return $10883;
                    } else {
                        var $10884 = String$flatten$(List$cons$(_name$1, List$cons$(".", List$cons$($10880, List$nil))));
                        return $10884;
                    };
                })(), (_x$11 => {
                    var $10885 = Kind$Term$check$expand$cse$argument$(_name$1, _wyth$2, $10881(Kind$Term$var$($10879, 0n))(Kind$Term$var$($10880, 0n)), _body$4, _defs$5);
                    return $10885;
                }));
                var $10878 = $10882;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.get':
            case 'Kind.Term.ori':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10887 = self.head;
                        var $10888 = self.tail;
                        var self = $10887;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10890 = self.name;
                                var $10891 = Kind$Term$lam$($10890, (_x$13 => {
                                    var $10892 = Kind$Term$check$expand$cse$argument$(_name$1, $10888, _type$3, _body$4, _defs$5);
                                    return $10892;
                                }));
                                var $10889 = $10891;
                                break;
                        };
                        var $10886 = $10889;
                        break;
                    case 'List.nil':
                        var $10893 = _body$4;
                        var $10886 = $10893;
                        break;
                };
                var $10878 = $10886;
                break;
            case 'Kind.Term.ref':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.new':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10895 = self.head;
                        var $10896 = self.tail;
                        var self = $10895;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10898 = self.name;
                                var $10899 = Kind$Term$lam$($10898, (_x$12 => {
                                    var $10900 = Kind$Term$check$expand$cse$argument$(_name$1, $10896, _type$3, _body$4, _defs$5);
                                    return $10900;
                                }));
                                var $10897 = $10899;
                                break;
                        };
                        var $10894 = $10897;
                        break;
                    case 'List.nil':
                        var $10901 = _body$4;
                        var $10894 = $10901;
                        break;
                };
                var $10878 = $10894;
                break;
            case 'Kind.Term.typ':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10903 = self.head;
                        var $10904 = self.tail;
                        var self = $10903;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10906 = self.name;
                                var $10907 = Kind$Term$lam$($10906, (_x$11 => {
                                    var $10908 = Kind$Term$check$expand$cse$argument$(_name$1, $10904, _type$3, _body$4, _defs$5);
                                    return $10908;
                                }));
                                var $10905 = $10907;
                                break;
                        };
                        var $10902 = $10905;
                        break;
                    case 'List.nil':
                        var $10909 = _body$4;
                        var $10902 = $10909;
                        break;
                };
                var $10878 = $10902;
                break;
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.num':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10911 = self.head;
                        var $10912 = self.tail;
                        var self = $10911;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10914 = self.name;
                                var $10915 = Kind$Term$lam$($10914, (_x$14 => {
                                    var $10916 = Kind$Term$check$expand$cse$argument$(_name$1, $10912, _type$3, _body$4, _defs$5);
                                    return $10916;
                                }));
                                var $10913 = $10915;
                                break;
                        };
                        var $10910 = $10913;
                        break;
                    case 'List.nil':
                        var $10917 = _body$4;
                        var $10910 = $10917;
                        break;
                };
                var $10878 = $10910;
                break;
            case 'Kind.Term.cse':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10919 = self.head;
                        var $10920 = self.tail;
                        var self = $10919;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10922 = self.name;
                                var $10923 = Kind$Term$lam$($10922, (_x$17 => {
                                    var $10924 = Kind$Term$check$expand$cse$argument$(_name$1, $10920, _type$3, _body$4, _defs$5);
                                    return $10924;
                                }));
                                var $10921 = $10923;
                                break;
                        };
                        var $10918 = $10921;
                        break;
                    case 'List.nil':
                        var $10925 = _body$4;
                        var $10918 = $10925;
                        break;
                };
                var $10878 = $10918;
                break;
        };
        return $10878;
    };
    const Kind$Term$check$expand$cse$argument = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$expand$cse$argument$(x0, x1, x2, x3, x4);

    function Maybe$or$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Maybe.some':
                var $10927 = self.value;
                var $10928 = Maybe$some$($10927);
                var $10926 = $10928;
                break;
            case 'Maybe.none':
                var $10929 = _b$3;
                var $10926 = $10929;
                break;
        };
        return $10926;
    };
    const Maybe$or = x0 => x1 => Maybe$or$(x0, x1);

    function Kind$Term$check$expand$cse$cases$(_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7) {
        var Kind$Term$check$expand$cse$cases$ = (_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7) => ({
            ctr: 'TCO',
            arg: [_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7]
        });
        var Kind$Term$check$expand$cse$cases = _expr$1 => _name$2 => _wyth$3 => _cses$4 => _type$5 => _defs$6 => _ctxt$7 => Kind$Term$check$expand$cse$cases$(_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7);
        var arg = [_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7];
        while (true) {
            let [_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7] = arg;
            var R = (() => {
                var self = Kind$Term$reduce$(_type$5, _defs$6);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10930 = self.self;
                        var $10931 = self.name;
                        var $10932 = self.xtyp;
                        var $10933 = self.body;
                        var _argm$13 = Maybe$or$(Kind$Map$get$($10931, _cses$4), Kind$Map$get$("_", _cses$4));
                        var _argm$14 = Maybe$default$(_argm$13, Kind$Term$ref$((_name$2 + ("_" + ($10931 + "_case")))));
                        var _argm$15 = Kind$Term$check$expand$cse$argument$(_name$2, _wyth$3, $10932, _argm$14, _defs$6);
                        var _expr$16 = Kind$Term$app$(_expr$1, _argm$15);
                        var _type$17 = $10933(Kind$Term$var$($10930, 0n))(Kind$Term$var$($10931, 0n));
                        var $10934 = Kind$Term$check$expand$cse$cases$(_expr$16, _name$2, _wyth$3, _cses$4, _type$17, _defs$6, _ctxt$7);
                        return $10934;
                    case 'Kind.Term.var':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.get':
                    case 'Kind.Term.ori':
                        var _expr$10 = (() => {
                            var $10937 = _expr$1;
                            var $10938 = _wyth$3;
                            let _expr$11 = $10937;
                            let _defn$10;
                            while ($10938._ === 'List.cons') {
                                _defn$10 = $10938.head;
                                var $10937 = Kind$Term$app$(_expr$11, (() => {
                                    var self = _defn$10;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10939 = self.term;
                                            var $10940 = $10939;
                                            return $10940;
                                    };
                                })());
                                _expr$11 = $10937;
                                $10938 = $10938.tail;
                            }
                            return _expr$11;
                        })();
                        var $10935 = _expr$10;
                        return $10935;
                    case 'Kind.Term.ref':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.new':
                        var _expr$9 = (() => {
                            var $10943 = _expr$1;
                            var $10944 = _wyth$3;
                            let _expr$10 = $10943;
                            let _defn$9;
                            while ($10944._ === 'List.cons') {
                                _defn$9 = $10944.head;
                                var $10943 = Kind$Term$app$(_expr$10, (() => {
                                    var self = _defn$9;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10945 = self.term;
                                            var $10946 = $10945;
                                            return $10946;
                                    };
                                })());
                                _expr$10 = $10943;
                                $10944 = $10944.tail;
                            }
                            return _expr$10;
                        })();
                        var $10941 = _expr$9;
                        return $10941;
                    case 'Kind.Term.typ':
                        var _expr$8 = (() => {
                            var $10949 = _expr$1;
                            var $10950 = _wyth$3;
                            let _expr$9 = $10949;
                            let _defn$8;
                            while ($10950._ === 'List.cons') {
                                _defn$8 = $10950.head;
                                var $10949 = Kind$Term$app$(_expr$9, (() => {
                                    var self = _defn$8;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10951 = self.term;
                                            var $10952 = $10951;
                                            return $10952;
                                    };
                                })());
                                _expr$9 = $10949;
                                $10950 = $10950.tail;
                            }
                            return _expr$9;
                        })();
                        var $10947 = _expr$8;
                        return $10947;
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.num':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var _expr$11 = (() => {
                            var $10955 = _expr$1;
                            var $10956 = _wyth$3;
                            let _expr$12 = $10955;
                            let _defn$11;
                            while ($10956._ === 'List.cons') {
                                _defn$11 = $10956.head;
                                var $10955 = Kind$Term$app$(_expr$12, (() => {
                                    var self = _defn$11;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10957 = self.term;
                                            var $10958 = $10957;
                                            return $10958;
                                    };
                                })());
                                _expr$12 = $10955;
                                $10956 = $10956.tail;
                            }
                            return _expr$12;
                        })();
                        var $10953 = _expr$11;
                        return $10953;
                    case 'Kind.Term.cse':
                        var _expr$14 = (() => {
                            var $10961 = _expr$1;
                            var $10962 = _wyth$3;
                            let _expr$15 = $10961;
                            let _defn$14;
                            while ($10962._ === 'List.cons') {
                                _defn$14 = $10962.head;
                                var $10961 = Kind$Term$app$(_expr$15, (() => {
                                    var self = _defn$14;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10963 = self.term;
                                            var $10964 = $10963;
                                            return $10964;
                                    };
                                })());
                                _expr$15 = $10961;
                                $10962 = $10962.tail;
                            }
                            return _expr$15;
                        })();
                        var $10959 = _expr$14;
                        return $10959;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$check$expand$cse$cases = x0 => x1 => x2 => x3 => x4 => x5 => x6 => Kind$Term$check$expand$cse$cases$(x0, x1, x2, x3, x4, x5, x6);

    function Kind$Term$check$expand$cse$(_expr$1, _name$2, _wyth$3, _cses$4, _moti$5, _etyp$6, _rtyp$7, _defs$8, _ctxt$9) {
        var self = Kind$Term$reduce$(_etyp$6, _defs$8);
        switch (self._) {
            case 'Kind.Term.all':
                var $10966 = self.self;
                var $10967 = self.name;
                var $10968 = self.xtyp;
                var $10969 = self.body;
                var _moti$15 = Kind$Term$check$expand$cse$motive$(_wyth$3, _moti$5, _name$2, _expr$1, _etyp$6, _rtyp$7, _defs$8, (list_length(_ctxt$9)));
                var _argm$16 = Kind$Term$check$expand$cse$argument$(_name$2, List$nil, $10968, _moti$15, _defs$8);
                var _expr$17 = Kind$Term$app$(_expr$1, _argm$16);
                var _type$18 = $10969(Kind$Term$var$($10966, 0n))(Kind$Term$var$($10967, 0n));
                var $10970 = Maybe$some$(Kind$Term$check$expand$cse$cases$(_expr$17, _name$2, _wyth$3, _cses$4, _type$18, _defs$8, _ctxt$9));
                var $10965 = $10970;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10971 = Maybe$none;
                var $10965 = $10971;
                break;
        };
        return $10965;
    };
    const Kind$Term$check$expand$cse = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Term$check$expand$cse$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Error$cant_infer$(_origin$1, _term$2, _context$3) {
        var $10972 = ({
            _: 'Kind.Error.cant_infer',
            'origin': _origin$1,
            'term': _term$2,
            'context': _context$3
        });
        return $10972;
    };
    const Kind$Error$cant_infer = x0 => x1 => x2 => Kind$Error$cant_infer$(x0, x1, x2);

    function Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$3, _orig$4) {
        var $10973 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$cant_infer$(_orig$4, _term$1, _ctx$3), List$nil));
        return $10973;
    };
    const Kind$Term$check$cant_infer = x0 => x1 => x2 => x3 => Kind$Term$check$cant_infer$(x0, x1, x2, x3);

    function Kind$Term$get_bnds$(_term$1, _depth$2) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.all':
                var $10975 = self.self;
                var $10976 = self.name;
                var $10977 = self.xtyp;
                var $10978 = self.body;
                var _b$8 = $10978(Kind$Term$var$($10975, _depth$2))(Kind$Term$var$($10976, Nat$succ$(_depth$2)));
                var self = Kind$Term$get_bnds$(_b$8, Nat$succ$(Nat$succ$(_depth$2)));
                switch (self._) {
                    case 'Pair.new':
                        var $10980 = self.fst;
                        var $10981 = self.snd;
                        var $10982 = Pair$new$(List$cons$(Pair$new$($10976, $10977), $10980), $10981);
                        var $10979 = $10982;
                        break;
                };
                var $10974 = $10979;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10983 = Pair$new$(List$nil, _term$1);
                var $10974 = $10983;
                break;
        };
        return $10974;
    };
    const Kind$Term$get_bnds = x0 => x1 => Kind$Term$get_bnds$(x0, x1);

    function List$last$go$(_xs$2, _last$3) {
        var List$last$go$ = (_xs$2, _last$3) => ({
            ctr: 'TCO',
            arg: [_xs$2, _last$3]
        });
        var List$last$go = _xs$2 => _last$3 => List$last$go$(_xs$2, _last$3);
        var arg = [_xs$2, _last$3];
        while (true) {
            let [_xs$2, _last$3] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $10984 = self.head;
                        var $10985 = self.tail;
                        var $10986 = List$last$go$($10985, Maybe$some$($10984));
                        return $10986;
                    case 'List.nil':
                        var $10987 = _last$3;
                        return $10987;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$last$go = x0 => x1 => List$last$go$(x0, x1);

    function List$last$(_xs$2) {
        var $10988 = List$last$go$(_xs$2, Maybe$none);
        return $10988;
    };
    const List$last = x0 => List$last$(x0);

    function Kind$Term$check$expand$set$count_params$(_xtyp$1) {
        var self = Kind$Term$get_bnds$(_xtyp$1, 0n);
        switch (self._) {
            case 'Pair.new':
                var $10990 = self.fst;
                var self = Kind$Term$get_args$(Pair$snd$(Maybe$default$(List$last$($10990), Pair$new$("", Kind$Term$typ))));
                switch (self._) {
                    case 'Pair.new':
                        var $10992 = self.snd;
                        var _indexs$6 = Nat$pred$((list_length($10990)));
                        var _params$7 = ((list_length($10992)) - _indexs$6 <= 0n ? 0n : (list_length($10992)) - _indexs$6);
                        var $10993 = _params$7;
                        var $10991 = $10993;
                        break;
                };
                var $10989 = $10991;
                break;
        };
        return $10989;
    };
    const Kind$Term$check$expand$set$count_params = x0 => Kind$Term$check$expand$set$count_params$(x0);

    function Nat$for$(_state$2, _from$3, _til$4, _func$5) {
        var Nat$for$ = (_state$2, _from$3, _til$4, _func$5) => ({
            ctr: 'TCO',
            arg: [_state$2, _from$3, _til$4, _func$5]
        });
        var Nat$for = _state$2 => _from$3 => _til$4 => _func$5 => Nat$for$(_state$2, _from$3, _til$4, _func$5);
        var arg = [_state$2, _from$3, _til$4, _func$5];
        while (true) {
            let [_state$2, _from$3, _til$4, _func$5] = arg;
            var R = (() => {
                var self = (_from$3 === _til$4);
                if (self) {
                    var $10994 = _state$2;
                    return $10994;
                } else {
                    var $10995 = Nat$for$(_func$5(_from$3)(_state$2), Nat$succ$(_from$3), _til$4, _func$5);
                    return $10995;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$for = x0 => x1 => x2 => x3 => Nat$for$(x0, x1, x2, x3);

    function List$get$(_index$2, _list$3) {
        var List$get$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$get = _index$2 => _list$3 => List$get$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $10996 = self.head;
                        var $10997 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $10999 = Maybe$some$($10996);
                            var $10998 = $10999;
                        } else {
                            var $11000 = (self - 1n);
                            var $11001 = List$get$($11000, $10997);
                            var $10998 = $11001;
                        };
                        return $10998;
                    case 'List.nil':
                        var $11002 = Maybe$none;
                        return $11002;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$get = x0 => x1 => List$get$(x0, x1);

    function Kind$Term$check$expand$new$pair$(_args$1, _type$2, _defs$3) {
        var self = ((list_length(_args$1)) === 2n);
        if (self) {
            var _term$4 = Kind$Term$ref$("Pair.new");
            var _term$5 = Kind$Term$app$(_term$4, Kind$Term$hol$(Bits$e));
            var _term$6 = Kind$Term$app$(_term$5, Kind$Term$hol$(Bits$e));
            var _term$7 = Kind$Term$app$(_term$6, Maybe$default$(List$get$(0n, _args$1), Kind$Term$ref$("pair_fst")));
            var _term$8 = Kind$Term$app$(_term$7, Maybe$default$(List$get$(1n, _args$1), Kind$Term$ref$("pair_snd")));
            var $11004 = Maybe$some$(_term$8);
            var $11003 = $11004;
        } else {
            var $11005 = Maybe$none;
            var $11003 = $11005;
        };
        return $11003;
    };
    const Kind$Term$check$expand$new$pair = x0 => x1 => x2 => Kind$Term$check$expand$new$pair$(x0, x1, x2);

    function Kind$Term$check$expand$new$(_args$1, _type$2, _defs$3) {
        var self = _type$2;
        switch (self._) {
            case 'Maybe.some':
                var $11007 = self.value;
                var self = Kind$Term$reduce$($11007, _defs$3);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $11009 = self.self;
                        var $11010 = self.xtyp;
                        var $11011 = self.body;
                        var self = Kind$Term$reduce$($11011(Kind$Term$typ)(Kind$Term$typ), _defs$3);
                        switch (self._) {
                            case 'Kind.Term.all':
                                var $11013 = self.name;
                                var _tnam$15 = Maybe$default$(Kind$Term$check$get_name_of_self_type$slice$($11009), "");
                                var _term$16 = Kind$Term$ref$((_tnam$15 + ("." + $11013)));
                                var _pars$17 = Kind$Term$check$expand$set$count_params$($11010);
                                var _term$18 = Nat$for$(_term$16, 0n, _pars$17, (_i$18 => _term$19 => {
                                    var $11015 = Kind$Term$app$(_term$19, Kind$Term$hol$(Bits$e));
                                    return $11015;
                                }));
                                var _term$19 = (() => {
                                    var $11017 = _term$18;
                                    var $11018 = _args$1;
                                    let _term$20 = $11017;
                                    let _arg$19;
                                    while ($11018._ === 'List.cons') {
                                        _arg$19 = $11018.head;
                                        var $11017 = Kind$Term$app$(_term$20, _arg$19);
                                        _term$20 = $11017;
                                        $11018 = $11018.tail;
                                    }
                                    return _term$20;
                                })();
                                var $11014 = Maybe$some$(_term$19);
                                var $11012 = $11014;
                                break;
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.typ':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $11019 = Maybe$none;
                                var $11012 = $11019;
                                break;
                        };
                        var $11008 = $11012;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $11020 = Maybe$none;
                        var $11008 = $11020;
                        break;
                };
                var _got$4 = $11008;
                break;
            case 'Maybe.none':
                var $11021 = Maybe$none;
                var _got$4 = $11021;
                break;
        };
        var self = _got$4;
        switch (self._) {
            case 'Maybe.some':
                var $11022 = self.value;
                var $11023 = Maybe$some$($11022);
                var $11006 = $11023;
                break;
            case 'Maybe.none':
                var $11024 = Kind$Term$check$expand$new$pair$(_args$1, _type$2, _defs$3);
                var $11006 = $11024;
                break;
        };
        return $11006;
    };
    const Kind$Term$check$expand$new = x0 => x1 => x2 => Kind$Term$check$expand$new$(x0, x1, x2);

    function Kind$Term$check$expand$get$selector$(_fkey$1, _ctor$2, _defs$3, _rett$4) {
        var self = Kind$Term$reduce$(_ctor$2, _defs$3);
        switch (self._) {
            case 'Kind.Term.all':
                var $11026 = self.name;
                var $11027 = self.body;
                var $11028 = Kind$Term$lam$($11026, (_x$10 => {
                    var _body$11 = $11027(Kind$Term$typ)(Kind$Term$typ);
                    var self = ($11026 === _fkey$1);
                    if (self) {
                        var $11030 = _x$10;
                        var _rett$12 = $11030;
                    } else {
                        var $11031 = _rett$4;
                        var _rett$12 = $11031;
                    };
                    var $11029 = Kind$Term$check$expand$get$selector$(_fkey$1, _body$11, _defs$3, _rett$12);
                    return $11029;
                }));
                var $11025 = $11028;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $11032 = _rett$4;
                var $11025 = $11032;
                break;
        };
        return $11025;
    };
    const Kind$Term$check$expand$get$selector = x0 => x1 => x2 => x3 => Kind$Term$check$expand$get$selector$(x0, x1, x2, x3);

    function Kind$Term$check$expand$get$(_expr$1, _fkey$2, _etyp$3, _defs$4) {
        var self = Kind$Term$reduce$(_etyp$3, _defs$4);
        switch (self._) {
            case 'Kind.Term.all':
                var $11034 = self.body;
                var self = Kind$Term$reduce$($11034(Kind$Term$typ)(Kind$Term$typ), _defs$4);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $11036 = self.xtyp;
                        var _term$15 = Kind$Term$app$(_expr$1, Kind$Term$lam$("", (_$15 => {
                            var $11038 = Kind$Term$hol$(Bits$e);
                            return $11038;
                        })));
                        var _rett$16 = Kind$Term$ref$((_fkey$2 + "_field"));
                        var _sele$17 = Kind$Term$check$expand$get$selector$(_fkey$2, $11036, _defs$4, _rett$16);
                        var $11037 = Maybe$some$(Kind$Term$app$(_term$15, _sele$17));
                        var $11035 = $11037;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $11039 = Maybe$none;
                        var $11035 = $11039;
                        break;
                };
                var $11033 = $11035;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $11040 = Maybe$none;
                var $11033 = $11040;
                break;
        };
        return $11033;
    };
    const Kind$Term$check$expand$get = x0 => x1 => x2 => x3 => Kind$Term$check$expand$get$(x0, x1, x2, x3);

    function Kind$Term$check$expand$set$selector$(_fkey$1, _fval$2, _ctor$3, _defs$4, _rett$5) {
        var self = Kind$Term$reduce$(_ctor$3, _defs$4);
        switch (self._) {
            case 'Kind.Term.all':
                var $11042 = self.name;
                var $11043 = self.body;
                var $11044 = Kind$Term$lam$($11042, (_x$11 => {
                    var _body$12 = $11043(Kind$Term$typ)(Kind$Term$typ);
                    var _rett$13 = Kind$Term$app$(_rett$5, (() => {
                        var self = ($11042 === _fkey$1);
                        if (self) {
                            var $11046 = _fval$2;
                            return $11046;
                        } else {
                            var $11047 = _x$11;
                            return $11047;
                        };
                    })());
                    var $11045 = Kind$Term$check$expand$set$selector$(_fkey$1, _fval$2, _body$12, _defs$4, _rett$13);
                    return $11045;
                }));
                var $11041 = $11044;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $11048 = _rett$5;
                var $11041 = $11048;
                break;
        };
        return $11041;
    };
    const Kind$Term$check$expand$set$selector = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$expand$set$selector$(x0, x1, x2, x3, x4);

    function Kind$Term$check$expand$set$(_expr$1, _fkey$2, _fval$3, _etyp$4, _defs$5) {
        var self = Kind$Term$reduce$(_etyp$4, _defs$5);
        switch (self._) {
            case 'Kind.Term.all':
                var $11050 = self.self;
                var $11051 = self.xtyp;
                var $11052 = self.body;
                var self = Kind$Term$reduce$($11052(Kind$Term$typ)(Kind$Term$typ), _defs$5);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $11054 = self.name;
                        var $11055 = self.xtyp;
                        var _term$16 = Kind$Term$app$(_expr$1, Kind$Term$lam$("", (_$16 => {
                            var $11057 = Kind$Term$hol$(Bits$e);
                            return $11057;
                        })));
                        var _tnam$17 = Maybe$default$(Kind$Term$check$get_name_of_self_type$slice$($11050), "");
                        var _rett$18 = Kind$Term$ref$((_tnam$17 + ("." + $11054)));
                        var _pars$19 = Kind$Term$check$expand$set$count_params$($11051);
                        var _rett$20 = Nat$for$(_rett$18, 0n, _pars$19, (_i$20 => _rett$21 => {
                            var $11058 = Kind$Term$app$(_rett$21, Kind$Term$hol$(Bits$e));
                            return $11058;
                        }));
                        var _sele$21 = Kind$Term$check$expand$set$selector$(_fkey$2, _fval$3, $11055, _defs$5, _rett$20);
                        var $11056 = Maybe$some$(Kind$Term$app$(_term$16, _sele$21));
                        var $11053 = $11056;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $11059 = Maybe$none;
                        var $11053 = $11059;
                        break;
                };
                var $11049 = $11053;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $11060 = Maybe$none;
                var $11049 = $11060;
                break;
        };
        return $11049;
    };
    const Kind$Term$check$expand$set = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$expand$set$(x0, x1, x2, x3, x4);

    function String$at$(_index$1, _str$2) {
        var String$at$ = (_index$1, _str$2) => ({
            ctr: 'TCO',
            arg: [_index$1, _str$2]
        });
        var String$at = _index$1 => _str$2 => String$at$(_index$1, _str$2);
        var arg = [_index$1, _str$2];
        while (true) {
            let [_index$1, _str$2] = arg;
            var R = (() => {
                var self = _str$2;
                if (self.length === 0) {
                    var $11061 = Maybe$none;
                    return $11061;
                } else {
                    var $11062 = self.charCodeAt(0);
                    var $11063 = self.slice(1);
                    var self = _index$1;
                    if (self === 0n) {
                        var $11065 = Maybe$some$($11062);
                        var $11064 = $11065;
                    } else {
                        var $11066 = (self - 1n);
                        var $11067 = String$at$($11066, $11063);
                        var $11064 = $11067;
                    };
                    return $11064;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$at = x0 => x1 => String$at$(x0, x1);

    function String$last$(_xs$1) {
        var $11068 = String$at$(Nat$pred$(String$length$(_xs$1)), _xs$1);
        return $11068;
    };
    const String$last = x0 => String$last$(x0);

    function Kind$Term$check$expand$ope$(_skip_cmp$1, _oper$2, _arg0$3, _arg1$4, _otyp$5, _defs$6) {
        var self = ((Maybe$default$(String$last$(_oper$2), 120) === 63) && _skip_cmp$1);
        if (self) {
            var $11070 = Maybe$none;
            var $11069 = $11070;
        } else {
            var _type_name$7 = Kind$Term$check$get_name_of_self_type$(_otyp$5, _defs$6);
            var self = _type_name$7;
            switch (self._) {
                case 'Maybe.some':
                    var $11072 = self.value;
                    var self = (_oper$2 === "+");
                    if (self) {
                        var $11074 = Maybe$some$("add");
                        var _oper_name$9 = $11074;
                    } else {
                        var self = (_oper$2 === "-");
                        if (self) {
                            var $11076 = Maybe$some$("sub");
                            var $11075 = $11076;
                        } else {
                            var self = (_oper$2 === "*");
                            if (self) {
                                var $11078 = Maybe$some$("mul");
                                var $11077 = $11078;
                            } else {
                                var self = (_oper$2 === "/");
                                if (self) {
                                    var $11080 = Maybe$some$("div");
                                    var $11079 = $11080;
                                } else {
                                    var self = (_oper$2 === "**");
                                    if (self) {
                                        var $11082 = Maybe$some$("pow");
                                        var $11081 = $11082;
                                    } else {
                                        var self = (_oper$2 === "%");
                                        if (self) {
                                            var $11084 = Maybe$some$("mod");
                                            var $11083 = $11084;
                                        } else {
                                            var self = (_oper$2 === "<?");
                                            if (self) {
                                                var $11086 = Maybe$some$("ltn");
                                                var $11085 = $11086;
                                            } else {
                                                var self = (_oper$2 === "<=?");
                                                if (self) {
                                                    var $11088 = Maybe$some$("lte");
                                                    var $11087 = $11088;
                                                } else {
                                                    var self = (_oper$2 === "=?");
                                                    if (self) {
                                                        var $11090 = Maybe$some$("eql");
                                                        var $11089 = $11090;
                                                    } else {
                                                        var self = (_oper$2 === ">=?");
                                                        if (self) {
                                                            var $11092 = Maybe$some$("gte");
                                                            var $11091 = $11092;
                                                        } else {
                                                            var self = (_oper$2 === ">?");
                                                            if (self) {
                                                                var $11094 = Maybe$some$("gtn");
                                                                var $11093 = $11094;
                                                            } else {
                                                                var self = (_oper$2 === "&&");
                                                                if (self) {
                                                                    var $11096 = Maybe$some$("and");
                                                                    var $11095 = $11096;
                                                                } else {
                                                                    var self = (_oper$2 === "||");
                                                                    if (self) {
                                                                        var $11098 = Maybe$some$("or");
                                                                        var $11097 = $11098;
                                                                    } else {
                                                                        var $11099 = Maybe$none;
                                                                        var $11097 = $11099;
                                                                    };
                                                                    var $11095 = $11097;
                                                                };
                                                                var $11093 = $11095;
                                                            };
                                                            var $11091 = $11093;
                                                        };
                                                        var $11089 = $11091;
                                                    };
                                                    var $11087 = $11089;
                                                };
                                                var $11085 = $11087;
                                            };
                                            var $11083 = $11085;
                                        };
                                        var $11081 = $11083;
                                    };
                                    var $11079 = $11081;
                                };
                                var $11077 = $11079;
                            };
                            var $11075 = $11077;
                        };
                        var _oper_name$9 = $11075;
                    };
                    var self = _oper_name$9;
                    switch (self._) {
                        case 'Maybe.some':
                            var $11100 = self.value;
                            var _term$11 = Kind$Term$ref$(($11072 + ("." + $11100)));
                            var _term$12 = Kind$Term$app$(_term$11, _arg0$3);
                            var _term$13 = Kind$Term$app$(_term$12, _arg1$4);
                            var $11101 = Maybe$some$(_term$13);
                            var $11073 = $11101;
                            break;
                        case 'Maybe.none':
                            var $11102 = Maybe$none;
                            var $11073 = $11102;
                            break;
                    };
                    var $11071 = $11073;
                    break;
                case 'Maybe.none':
                    var $11103 = Maybe$none;
                    var $11071 = $11103;
                    break;
            };
            var $11069 = $11071;
        };
        return $11069;
    };
    const Kind$Term$check$expand$ope = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Term$check$expand$ope$(x0, x1, x2, x3, x4, x5);

    function BitsSet$has$(_bits$1, _set$2) {
        var self = (bitsmap_get(_bits$1, _set$2));
        switch (self._) {
            case 'Maybe.none':
                var $11105 = Bool$false;
                var $11104 = $11105;
                break;
            case 'Maybe.some':
                var $11106 = Bool$true;
                var $11104 = $11106;
                break;
        };
        return $11104;
    };
    const BitsSet$has = x0 => x1 => BitsSet$has$(x0, x1);

    function BitsSet$mut$has$(_bits$1, _set$2) {
        var $11107 = BitsSet$has$(_bits$1, _set$2);
        return $11107;
    };
    const BitsSet$mut$has = x0 => x1 => BitsSet$mut$has$(x0, x1);

    function Kind$Term$equal$extra_holes$funari$(_term$1, _arity$2) {
        var Kind$Term$equal$extra_holes$funari$ = (_term$1, _arity$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _arity$2]
        });
        var Kind$Term$equal$extra_holes$funari = _term$1 => _arity$2 => Kind$Term$equal$extra_holes$funari$(_term$1, _arity$2);
        var arg = [_term$1, _arity$2];
        while (true) {
            let [_term$1, _arity$2] = arg;
            var R = (() => {
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.var':
                        var $11108 = self.name;
                        var $11109 = Maybe$some$(Pair$new$($11108, _arity$2));
                        return $11109;
                    case 'Kind.Term.ref':
                        var $11110 = self.name;
                        var $11111 = Maybe$some$(Pair$new$($11110, _arity$2));
                        return $11111;
                    case 'Kind.Term.app':
                        var $11112 = self.func;
                        var $11113 = Kind$Term$equal$extra_holes$funari$($11112, Nat$succ$(_arity$2));
                        return $11113;
                    case 'Kind.Term.ori':
                        var $11114 = self.expr;
                        var $11115 = Kind$Term$equal$extra_holes$funari$($11114, _arity$2);
                        return $11115;
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11116 = Maybe$none;
                        return $11116;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$equal$extra_holes$funari = x0 => x1 => Kind$Term$equal$extra_holes$funari$(x0, x1);

    function Kind$Term$has_holes$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.all':
                var $11118 = self.xtyp;
                var $11119 = self.body;
                var $11120 = (Kind$Term$has_holes$($11118) || Kind$Term$has_holes$($11119(Kind$Term$typ)(Kind$Term$typ)));
                var $11117 = $11120;
                break;
            case 'Kind.Term.lam':
                var $11121 = self.body;
                var $11122 = Kind$Term$has_holes$($11121(Kind$Term$typ));
                var $11117 = $11122;
                break;
            case 'Kind.Term.app':
                var $11123 = self.func;
                var $11124 = self.argm;
                var $11125 = (Kind$Term$has_holes$($11123) || Kind$Term$has_holes$($11124));
                var $11117 = $11125;
                break;
            case 'Kind.Term.let':
                var $11126 = self.expr;
                var $11127 = self.body;
                var $11128 = (Kind$Term$has_holes$($11126) || Kind$Term$has_holes$($11127(Kind$Term$typ)));
                var $11117 = $11128;
                break;
            case 'Kind.Term.ann':
                var $11129 = self.term;
                var $11130 = self.type;
                var $11131 = (Kind$Term$has_holes$($11129) || Kind$Term$has_holes$($11130));
                var $11117 = $11131;
                break;
            case 'Kind.Term.ori':
                var $11132 = self.expr;
                var $11133 = Kind$Term$has_holes$($11132);
                var $11117 = $11133;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.def':
            case 'Kind.Term.gol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $11134 = Bool$false;
                var $11117 = $11134;
                break;
            case 'Kind.Term.hol':
                var $11135 = Bool$true;
                var $11117 = $11135;
                break;
        };
        return $11117;
    };
    const Kind$Term$has_holes = x0 => Kind$Term$has_holes$(x0);

    function Kind$Term$equal$hole$(_path$1, _term$2) {
        var self = _term$2;
        switch (self._) {
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var self = Kind$Term$has_holes$(_term$2);
                if (self) {
                    var $11138 = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
                    var $11137 = $11138;
                } else {
                    var $11139 = Kind$Check$result$(Maybe$some$(Bool$true), List$cons$(Kind$Error$patch$(_path$1, Kind$Term$normalize$(_term$2, Kind$Map$new)), List$nil));
                    var $11137 = $11139;
                };
                var $11136 = $11137;
                break;
            case 'Kind.Term.hol':
                var $11140 = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
                var $11136 = $11140;
                break;
        };
        return $11136;
    };
    const Kind$Term$equal$hole = x0 => x1 => Kind$Term$equal$hole$(x0, x1);

    function Kind$Term$equal$extra_holes$filler$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Kind.Term.app':
                var $11142 = self.func;
                var $11143 = self.argm;
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.app':
                        var $11145 = self.func;
                        var $11146 = self.argm;
                        var self = Kind$Term$equal$extra_holes$filler$($11142, $11145);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11148 = self.value;
                                var $11149 = self.errors;
                                var self = $11148;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11151 = Kind$Check$result$(Maybe$none, $11149);
                                        var $11150 = $11151;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Term$equal$extra_holes$filler$($11143, $11146);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11153 = self.value;
                                                var $11154 = self.errors;
                                                var $11155 = Kind$Check$result$($11153, List$concat$($11149, $11154));
                                                var $11152 = $11155;
                                                break;
                                        };
                                        var $11150 = $11152;
                                        break;
                                };
                                var $11147 = $11150;
                                break;
                        };
                        var $11144 = $11147;
                        break;
                    case 'Kind.Term.hol':
                        var $11156 = self.path;
                        var self = Kind$Term$equal$hole$($11156, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11158 = self.value;
                                var $11159 = self.errors;
                                var self = $11158;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11161 = Kind$Check$result$(Maybe$none, $11159);
                                        var $11160 = $11161;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11163 = self.value;
                                                var $11164 = self.errors;
                                                var $11165 = Kind$Check$result$($11163, List$concat$($11159, $11164));
                                                var $11162 = $11165;
                                                break;
                                        };
                                        var $11160 = $11162;
                                        break;
                                };
                                var $11157 = $11160;
                                break;
                        };
                        var $11144 = $11157;
                        break;
                    case 'Kind.Term.ori':
                        var $11166 = self.expr;
                        var $11167 = Kind$Term$equal$extra_holes$filler$(_a$1, $11166);
                        var $11144 = $11167;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11168 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11144 = $11168;
                        break;
                };
                var $11141 = $11144;
                break;
            case 'Kind.Term.hol':
                var $11169 = self.path;
                var self = Kind$Term$equal$hole$($11169, _b$2);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11171 = self.value;
                        var $11172 = self.errors;
                        var self = $11171;
                        switch (self._) {
                            case 'Maybe.none':
                                var $11174 = Kind$Check$result$(Maybe$none, $11172);
                                var $11173 = $11174;
                                break;
                            case 'Maybe.some':
                                var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11176 = self.value;
                                        var $11177 = self.errors;
                                        var $11178 = Kind$Check$result$($11176, List$concat$($11172, $11177));
                                        var $11175 = $11178;
                                        break;
                                };
                                var $11173 = $11175;
                                break;
                        };
                        var $11170 = $11173;
                        break;
                };
                var $11141 = $11170;
                break;
            case 'Kind.Term.ori':
                var $11179 = self.expr;
                var $11180 = Kind$Term$equal$extra_holes$filler$($11179, _b$2);
                var $11141 = $11180;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.lam':
            case 'Kind.Term.get':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11182 = self.path;
                        var self = Kind$Term$equal$hole$($11182, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11184 = self.value;
                                var $11185 = self.errors;
                                var self = $11184;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11187 = Kind$Check$result$(Maybe$none, $11185);
                                        var $11186 = $11187;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11189 = self.value;
                                                var $11190 = self.errors;
                                                var $11191 = Kind$Check$result$($11189, List$concat$($11185, $11190));
                                                var $11188 = $11191;
                                                break;
                                        };
                                        var $11186 = $11188;
                                        break;
                                };
                                var $11183 = $11186;
                                break;
                        };
                        var $11181 = $11183;
                        break;
                    case 'Kind.Term.ori':
                        var $11192 = self.expr;
                        var $11193 = Kind$Term$equal$extra_holes$filler$(_a$1, $11192);
                        var $11181 = $11193;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11194 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11181 = $11194;
                        break;
                };
                var $11141 = $11181;
                break;
            case 'Kind.Term.ref':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.new':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11196 = self.path;
                        var self = Kind$Term$equal$hole$($11196, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11198 = self.value;
                                var $11199 = self.errors;
                                var self = $11198;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11201 = Kind$Check$result$(Maybe$none, $11199);
                                        var $11200 = $11201;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11203 = self.value;
                                                var $11204 = self.errors;
                                                var $11205 = Kind$Check$result$($11203, List$concat$($11199, $11204));
                                                var $11202 = $11205;
                                                break;
                                        };
                                        var $11200 = $11202;
                                        break;
                                };
                                var $11197 = $11200;
                                break;
                        };
                        var $11195 = $11197;
                        break;
                    case 'Kind.Term.ori':
                        var $11206 = self.expr;
                        var $11207 = Kind$Term$equal$extra_holes$filler$(_a$1, $11206);
                        var $11195 = $11207;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11208 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11195 = $11208;
                        break;
                };
                var $11141 = $11195;
                break;
            case 'Kind.Term.typ':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11210 = self.path;
                        var self = Kind$Term$equal$hole$($11210, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11212 = self.value;
                                var $11213 = self.errors;
                                var self = $11212;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11215 = Kind$Check$result$(Maybe$none, $11213);
                                        var $11214 = $11215;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11217 = self.value;
                                                var $11218 = self.errors;
                                                var $11219 = Kind$Check$result$($11217, List$concat$($11213, $11218));
                                                var $11216 = $11219;
                                                break;
                                        };
                                        var $11214 = $11216;
                                        break;
                                };
                                var $11211 = $11214;
                                break;
                        };
                        var $11209 = $11211;
                        break;
                    case 'Kind.Term.ori':
                        var $11220 = self.expr;
                        var $11221 = Kind$Term$equal$extra_holes$filler$(_a$1, $11220);
                        var $11209 = $11221;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11222 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11209 = $11222;
                        break;
                };
                var $11141 = $11209;
                break;
            case 'Kind.Term.all':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11224 = self.path;
                        var self = Kind$Term$equal$hole$($11224, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11226 = self.value;
                                var $11227 = self.errors;
                                var self = $11226;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11229 = Kind$Check$result$(Maybe$none, $11227);
                                        var $11228 = $11229;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11231 = self.value;
                                                var $11232 = self.errors;
                                                var $11233 = Kind$Check$result$($11231, List$concat$($11227, $11232));
                                                var $11230 = $11233;
                                                break;
                                        };
                                        var $11228 = $11230;
                                        break;
                                };
                                var $11225 = $11228;
                                break;
                        };
                        var $11223 = $11225;
                        break;
                    case 'Kind.Term.ori':
                        var $11234 = self.expr;
                        var $11235 = Kind$Term$equal$extra_holes$filler$(_a$1, $11234);
                        var $11223 = $11235;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11236 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11223 = $11236;
                        break;
                };
                var $11141 = $11223;
                break;
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.num':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11238 = self.path;
                        var self = Kind$Term$equal$hole$($11238, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11240 = self.value;
                                var $11241 = self.errors;
                                var self = $11240;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11243 = Kind$Check$result$(Maybe$none, $11241);
                                        var $11242 = $11243;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11245 = self.value;
                                                var $11246 = self.errors;
                                                var $11247 = Kind$Check$result$($11245, List$concat$($11241, $11246));
                                                var $11244 = $11247;
                                                break;
                                        };
                                        var $11242 = $11244;
                                        break;
                                };
                                var $11239 = $11242;
                                break;
                        };
                        var $11237 = $11239;
                        break;
                    case 'Kind.Term.ori':
                        var $11248 = self.expr;
                        var $11249 = Kind$Term$equal$extra_holes$filler$(_a$1, $11248);
                        var $11237 = $11249;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11250 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11237 = $11250;
                        break;
                };
                var $11141 = $11237;
                break;
            case 'Kind.Term.cse':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11252 = self.path;
                        var self = Kind$Term$equal$hole$($11252, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11254 = self.value;
                                var $11255 = self.errors;
                                var self = $11254;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11257 = Kind$Check$result$(Maybe$none, $11255);
                                        var $11256 = $11257;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11259 = self.value;
                                                var $11260 = self.errors;
                                                var $11261 = Kind$Check$result$($11259, List$concat$($11255, $11260));
                                                var $11258 = $11261;
                                                break;
                                        };
                                        var $11256 = $11258;
                                        break;
                                };
                                var $11253 = $11256;
                                break;
                        };
                        var $11251 = $11253;
                        break;
                    case 'Kind.Term.ori':
                        var $11262 = self.expr;
                        var $11263 = Kind$Term$equal$extra_holes$filler$(_a$1, $11262);
                        var $11251 = $11263;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11264 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11251 = $11264;
                        break;
                };
                var $11141 = $11251;
                break;
        };
        return $11141;
    };
    const Kind$Term$equal$extra_holes$filler = x0 => x1 => Kind$Term$equal$extra_holes$filler$(x0, x1);

    function Kind$Term$equal$extra_holes$(_a$1, _b$2) {
        var self = Kind$Term$equal$extra_holes$funari$(_a$1, 0n);
        switch (self._) {
            case 'Maybe.some':
                var $11266 = self.value;
                var self = Kind$Term$equal$extra_holes$funari$(_b$2, 0n);
                switch (self._) {
                    case 'Maybe.some':
                        var $11268 = self.value;
                        var self = $11266;
                        switch (self._) {
                            case 'Pair.new':
                                var $11270 = self.fst;
                                var $11271 = self.snd;
                                var self = $11268;
                                switch (self._) {
                                    case 'Pair.new':
                                        var $11273 = self.fst;
                                        var $11274 = self.snd;
                                        var _same_fun$9 = ($11270 === $11273);
                                        var _same_ari$10 = ($11271 === $11274);
                                        var self = (_same_fun$9 && _same_ari$10);
                                        if (self) {
                                            var $11276 = Kind$Term$equal$extra_holes$filler$(_a$1, _b$2);
                                            var $11275 = $11276;
                                        } else {
                                            var $11277 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                            var $11275 = $11277;
                                        };
                                        var $11272 = $11275;
                                        break;
                                };
                                var $11269 = $11272;
                                break;
                        };
                        var $11267 = $11269;
                        break;
                    case 'Maybe.none':
                        var $11278 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11267 = $11278;
                        break;
                };
                var $11265 = $11267;
                break;
            case 'Maybe.none':
                var $11279 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                var $11265 = $11279;
                break;
        };
        return $11265;
    };
    const Kind$Term$equal$extra_holes = x0 => x1 => Kind$Term$equal$extra_holes$(x0, x1);

    function BitsSet$set$(_bits$1, _set$2) {
        var $11280 = (bitsmap_set(_bits$1, Unit$new, _set$2, 'set'));
        return $11280;
    };
    const BitsSet$set = x0 => x1 => BitsSet$set$(x0, x1);

    function BitsSet$mut$set$(_bits$1, _set$2) {
        var $11281 = BitsSet$set$(_bits$1, _set$2);
        return $11281;
    };
    const BitsSet$mut$set = x0 => x1 => BitsSet$mut$set$(x0, x1);

    function Bool$eql$(_a$1, _b$2) {
        var self = _a$1;
        if (self) {
            var $11283 = _b$2;
            var $11282 = $11283;
        } else {
            var $11284 = (!_b$2);
            var $11282 = $11284;
        };
        return $11282;
    };
    const Bool$eql = x0 => x1 => Bool$eql$(x0, x1);

    function Kind$Term$equal$go$(_a$1, _b$2, _defs$3, _lv$4, _seen$5) {
        var _ah$6 = Kind$Term$serialize$(Kind$Term$reduce$(_a$1, Kind$Map$new), _lv$4, Bool$false);
        var _bh$7 = Kind$Term$serialize$(Kind$Term$reduce$(_b$2, Kind$Map$new), _lv$4, Bool$true);
        var self = (_bh$7 === _ah$6);
        if (self) {
            var $11286 = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
            var $11285 = $11286;
        } else {
            var _a1$8 = Kind$Term$reduce$(_a$1, _defs$3);
            var _b1$9 = Kind$Term$reduce$(_b$2, _defs$3);
            var _ah$10 = Kind$Term$serialize$(_a1$8, _lv$4, Bool$false);
            var _bh$11 = Kind$Term$serialize$(_b1$9, _lv$4, Bool$true);
            var self = (_bh$11 === _ah$10);
            if (self) {
                var $11288 = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
                var $11287 = $11288;
            } else {
                var _id$12 = (_bh$11 + _ah$10);
                var self = BitsSet$mut$has$(_id$12, _seen$5);
                if (self) {
                    var self = Kind$Term$equal$extra_holes$(_a$1, _b$2);
                    switch (self._) {
                        case 'Kind.Check.result':
                            var $11291 = self.value;
                            var $11292 = self.errors;
                            var self = $11291;
                            switch (self._) {
                                case 'Maybe.none':
                                    var $11294 = Kind$Check$result$(Maybe$none, $11292);
                                    var $11293 = $11294;
                                    break;
                                case 'Maybe.some':
                                    var self = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11296 = self.value;
                                            var $11297 = self.errors;
                                            var $11298 = Kind$Check$result$($11296, List$concat$($11292, $11297));
                                            var $11295 = $11298;
                                            break;
                                    };
                                    var $11293 = $11295;
                                    break;
                            };
                            var $11290 = $11293;
                            break;
                    };
                    var $11289 = $11290;
                } else {
                    var self = _a1$8;
                    switch (self._) {
                        case 'Kind.Term.all':
                            var $11300 = self.eras;
                            var $11301 = self.self;
                            var $11302 = self.name;
                            var $11303 = self.xtyp;
                            var $11304 = self.body;
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.all':
                                    var $11306 = self.eras;
                                    var $11307 = self.self;
                                    var $11308 = self.name;
                                    var $11309 = self.xtyp;
                                    var $11310 = self.body;
                                    var _seen$23 = BitsSet$mut$set$(_id$12, _seen$5);
                                    var _a1_body$24 = $11304(Kind$Term$var$($11301, _lv$4))(Kind$Term$var$($11302, Nat$succ$(_lv$4)));
                                    var _b1_body$25 = $11310(Kind$Term$var$($11307, _lv$4))(Kind$Term$var$($11308, Nat$succ$(_lv$4)));
                                    var _eq_self$26 = ($11301 === $11307);
                                    var _eq_eras$27 = Bool$eql$($11300, $11306);
                                    var self = (_eq_self$26 && _eq_eras$27);
                                    if (self) {
                                        var self = Kind$Term$equal$go$($11303, $11309, _defs$3, _lv$4, _seen$23);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11313 = self.value;
                                                var $11314 = self.errors;
                                                var self = $11313;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $11316 = self.value;
                                                        var self = Kind$Term$equal$go$(_a1_body$24, _b1_body$25, _defs$3, Nat$succ$(Nat$succ$(_lv$4)), _seen$23);
                                                        switch (self._) {
                                                            case 'Kind.Check.result':
                                                                var $11318 = self.value;
                                                                var $11319 = self.errors;
                                                                var self = $11318;
                                                                switch (self._) {
                                                                    case 'Maybe.some':
                                                                        var $11321 = self.value;
                                                                        var self = Kind$Check$result$(Maybe$some$(($11316 && $11321)), List$nil);
                                                                        switch (self._) {
                                                                            case 'Kind.Check.result':
                                                                                var $11323 = self.value;
                                                                                var $11324 = self.errors;
                                                                                var $11325 = Kind$Check$result$($11323, List$concat$($11319, $11324));
                                                                                var $11322 = $11325;
                                                                                break;
                                                                        };
                                                                        var $11320 = $11322;
                                                                        break;
                                                                    case 'Maybe.none':
                                                                        var $11326 = Kind$Check$result$(Maybe$none, $11319);
                                                                        var $11320 = $11326;
                                                                        break;
                                                                };
                                                                var self = $11320;
                                                                break;
                                                        };
                                                        switch (self._) {
                                                            case 'Kind.Check.result':
                                                                var $11327 = self.value;
                                                                var $11328 = self.errors;
                                                                var $11329 = Kind$Check$result$($11327, List$concat$($11314, $11328));
                                                                var $11317 = $11329;
                                                                break;
                                                        };
                                                        var $11315 = $11317;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $11330 = Kind$Check$result$(Maybe$none, $11314);
                                                        var $11315 = $11330;
                                                        break;
                                                };
                                                var $11312 = $11315;
                                                break;
                                        };
                                        var $11311 = $11312;
                                    } else {
                                        var $11331 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                        var $11311 = $11331;
                                    };
                                    var $11305 = $11311;
                                    break;
                                case 'Kind.Term.hol':
                                    var $11332 = self.path;
                                    var $11333 = Kind$Term$equal$hole$($11332, _a$1);
                                    var $11305 = $11333;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11334 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11305 = $11334;
                                    break;
                            };
                            var $11299 = $11305;
                            break;
                        case 'Kind.Term.lam':
                            var $11335 = self.name;
                            var $11336 = self.body;
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.lam':
                                    var $11338 = self.name;
                                    var $11339 = self.body;
                                    var _seen$17 = BitsSet$mut$set$(_id$12, _seen$5);
                                    var _a1_body$18 = $11336(Kind$Term$var$($11335, _lv$4));
                                    var _b1_body$19 = $11339(Kind$Term$var$($11338, _lv$4));
                                    var self = Kind$Term$equal$go$(_a1_body$18, _b1_body$19, _defs$3, Nat$succ$(_lv$4), _seen$17);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11341 = self.value;
                                            var $11342 = self.errors;
                                            var self = $11341;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $11344 = self.value;
                                                    var self = Kind$Check$result$(Maybe$some$($11344), List$nil);
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11346 = self.value;
                                                            var $11347 = self.errors;
                                                            var $11348 = Kind$Check$result$($11346, List$concat$($11342, $11347));
                                                            var $11345 = $11348;
                                                            break;
                                                    };
                                                    var $11343 = $11345;
                                                    break;
                                                case 'Maybe.none':
                                                    var $11349 = Kind$Check$result$(Maybe$none, $11342);
                                                    var $11343 = $11349;
                                                    break;
                                            };
                                            var $11340 = $11343;
                                            break;
                                    };
                                    var $11337 = $11340;
                                    break;
                                case 'Kind.Term.hol':
                                    var $11350 = self.path;
                                    var $11351 = Kind$Term$equal$hole$($11350, _a$1);
                                    var $11337 = $11351;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11352 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11337 = $11352;
                                    break;
                            };
                            var $11299 = $11337;
                            break;
                        case 'Kind.Term.app':
                            var $11353 = self.func;
                            var $11354 = self.argm;
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.app':
                                    var $11356 = self.func;
                                    var $11357 = self.argm;
                                    var _seen$17 = BitsSet$mut$set$(_id$12, _seen$5);
                                    var self = Kind$Term$equal$go$($11353, $11356, _defs$3, _lv$4, _seen$17);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11359 = self.value;
                                            var $11360 = self.errors;
                                            var self = $11359;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $11362 = self.value;
                                                    var self = Kind$Term$equal$go$($11354, $11357, _defs$3, _lv$4, _seen$17);
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11364 = self.value;
                                                            var $11365 = self.errors;
                                                            var self = $11364;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $11367 = self.value;
                                                                    var self = Kind$Check$result$(Maybe$some$(($11362 && $11367)), List$nil);
                                                                    switch (self._) {
                                                                        case 'Kind.Check.result':
                                                                            var $11369 = self.value;
                                                                            var $11370 = self.errors;
                                                                            var $11371 = Kind$Check$result$($11369, List$concat$($11365, $11370));
                                                                            var $11368 = $11371;
                                                                            break;
                                                                    };
                                                                    var $11366 = $11368;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $11372 = Kind$Check$result$(Maybe$none, $11365);
                                                                    var $11366 = $11372;
                                                                    break;
                                                            };
                                                            var self = $11366;
                                                            break;
                                                    };
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11373 = self.value;
                                                            var $11374 = self.errors;
                                                            var $11375 = Kind$Check$result$($11373, List$concat$($11360, $11374));
                                                            var $11363 = $11375;
                                                            break;
                                                    };
                                                    var $11361 = $11363;
                                                    break;
                                                case 'Maybe.none':
                                                    var $11376 = Kind$Check$result$(Maybe$none, $11360);
                                                    var $11361 = $11376;
                                                    break;
                                            };
                                            var $11358 = $11361;
                                            break;
                                    };
                                    var $11355 = $11358;
                                    break;
                                case 'Kind.Term.hol':
                                    var $11377 = self.path;
                                    var $11378 = Kind$Term$equal$hole$($11377, _a$1);
                                    var $11355 = $11378;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11379 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11355 = $11379;
                                    break;
                            };
                            var $11299 = $11355;
                            break;
                        case 'Kind.Term.let':
                            var $11380 = self.name;
                            var $11381 = self.expr;
                            var $11382 = self.body;
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.let':
                                    var $11384 = self.name;
                                    var $11385 = self.expr;
                                    var $11386 = self.body;
                                    var _seen$19 = BitsSet$mut$set$(_id$12, _seen$5);
                                    var _a1_body$20 = $11382(Kind$Term$var$($11380, _lv$4));
                                    var _b1_body$21 = $11386(Kind$Term$var$($11384, _lv$4));
                                    var self = Kind$Term$equal$go$($11381, $11385, _defs$3, _lv$4, _seen$19);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11388 = self.value;
                                            var $11389 = self.errors;
                                            var self = $11388;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $11391 = self.value;
                                                    var self = Kind$Term$equal$go$(_a1_body$20, _b1_body$21, _defs$3, Nat$succ$(_lv$4), _seen$19);
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11393 = self.value;
                                                            var $11394 = self.errors;
                                                            var self = $11393;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $11396 = self.value;
                                                                    var self = Kind$Check$result$(Maybe$some$(($11391 && $11396)), List$nil);
                                                                    switch (self._) {
                                                                        case 'Kind.Check.result':
                                                                            var $11398 = self.value;
                                                                            var $11399 = self.errors;
                                                                            var $11400 = Kind$Check$result$($11398, List$concat$($11394, $11399));
                                                                            var $11397 = $11400;
                                                                            break;
                                                                    };
                                                                    var $11395 = $11397;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $11401 = Kind$Check$result$(Maybe$none, $11394);
                                                                    var $11395 = $11401;
                                                                    break;
                                                            };
                                                            var self = $11395;
                                                            break;
                                                    };
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11402 = self.value;
                                                            var $11403 = self.errors;
                                                            var $11404 = Kind$Check$result$($11402, List$concat$($11389, $11403));
                                                            var $11392 = $11404;
                                                            break;
                                                    };
                                                    var $11390 = $11392;
                                                    break;
                                                case 'Maybe.none':
                                                    var $11405 = Kind$Check$result$(Maybe$none, $11389);
                                                    var $11390 = $11405;
                                                    break;
                                            };
                                            var $11387 = $11390;
                                            break;
                                    };
                                    var $11383 = $11387;
                                    break;
                                case 'Kind.Term.hol':
                                    var $11406 = self.path;
                                    var $11407 = Kind$Term$equal$hole$($11406, _a$1);
                                    var $11383 = $11407;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11408 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11383 = $11408;
                                    break;
                            };
                            var $11299 = $11383;
                            break;
                        case 'Kind.Term.hol':
                            var $11409 = self.path;
                            var $11410 = Kind$Term$equal$hole$($11409, _b$2);
                            var $11299 = $11410;
                            break;
                        case 'Kind.Term.var':
                        case 'Kind.Term.get':
                        case 'Kind.Term.ori':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11412 = self.path;
                                    var $11413 = Kind$Term$equal$hole$($11412, _a$1);
                                    var $11411 = $11413;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11414 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11411 = $11414;
                                    break;
                            };
                            var $11299 = $11411;
                            break;
                        case 'Kind.Term.ref':
                        case 'Kind.Term.nat':
                        case 'Kind.Term.chr':
                        case 'Kind.Term.str':
                        case 'Kind.Term.new':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11416 = self.path;
                                    var $11417 = Kind$Term$equal$hole$($11416, _a$1);
                                    var $11415 = $11417;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11418 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11415 = $11418;
                                    break;
                            };
                            var $11299 = $11415;
                            break;
                        case 'Kind.Term.typ':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11420 = self.path;
                                    var $11421 = Kind$Term$equal$hole$($11420, _a$1);
                                    var $11419 = $11421;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11422 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11419 = $11422;
                                    break;
                            };
                            var $11299 = $11419;
                            break;
                        case 'Kind.Term.def':
                        case 'Kind.Term.ann':
                        case 'Kind.Term.gol':
                        case 'Kind.Term.num':
                        case 'Kind.Term.set':
                        case 'Kind.Term.ope':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11424 = self.path;
                                    var $11425 = Kind$Term$equal$hole$($11424, _a$1);
                                    var $11423 = $11425;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11426 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11423 = $11426;
                                    break;
                            };
                            var $11299 = $11423;
                            break;
                        case 'Kind.Term.cse':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11428 = self.path;
                                    var $11429 = Kind$Term$equal$hole$($11428, _a$1);
                                    var $11427 = $11429;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11430 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11427 = $11430;
                                    break;
                            };
                            var $11299 = $11427;
                            break;
                    };
                    var $11289 = $11299;
                };
                var $11287 = $11289;
            };
            var $11285 = $11287;
        };
        return $11285;
    };
    const Kind$Term$equal$go = x0 => x1 => x2 => x3 => x4 => Kind$Term$equal$go$(x0, x1, x2, x3, x4);
    const BitsSet$new = BitsMap$new;

    function BitsSet$mut$new$(_a$1) {
        var $11431 = BitsSet$new;
        return $11431;
    };
    const BitsSet$mut$new = x0 => BitsSet$mut$new$(x0);

    function Kind$Term$check$(_term$1, _type$2, _defs$3, _ctx$4, _path$5, _orig$6) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.var':
                var $11433 = self.name;
                var $11434 = self.indx;
                var self = List$at_last$($11434, _ctx$4);
                switch (self._) {
                    case 'Maybe.some':
                        var $11436 = self.value;
                        var $11437 = Kind$Check$result$(Maybe$some$((() => {
                            var self = $11436;
                            switch (self._) {
                                case 'Pair.new':
                                    var $11438 = self.snd;
                                    var $11439 = $11438;
                                    return $11439;
                            };
                        })()), List$nil);
                        var $11435 = $11437;
                        break;
                    case 'Maybe.none':
                        var $11440 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$undefined_reference$(_orig$6, $11433), List$nil));
                        var $11435 = $11440;
                        break;
                };
                var self = $11435;
                break;
            case 'Kind.Term.ref':
                var $11441 = self.name;
                var self = Kind$Map$get$($11441, _defs$3);
                switch (self._) {
                    case 'Maybe.some':
                        var $11443 = self.value;
                        var self = $11443;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $11445 = self.name;
                                var $11446 = self.term;
                                var $11447 = self.type;
                                var $11448 = self.stat;
                                var _ref_name$18 = $11445;
                                var _ref_type$19 = $11447;
                                var _ref_term$20 = $11446;
                                var _ref_stat$21 = $11448;
                                var self = _ref_stat$21;
                                switch (self._) {
                                    case 'Kind.Status.init':
                                        var $11450 = Kind$Check$result$(Maybe$some$(_ref_type$19), List$cons$(Kind$Error$waiting$(_ref_name$18), List$nil));
                                        var $11449 = $11450;
                                        break;
                                    case 'Kind.Status.wait':
                                    case 'Kind.Status.done':
                                        var $11451 = Kind$Check$result$(Maybe$some$(_ref_type$19), List$nil);
                                        var $11449 = $11451;
                                        break;
                                    case 'Kind.Status.fail':
                                        var $11452 = Kind$Check$result$(Maybe$some$(_ref_type$19), List$cons$(Kind$Error$indirect$(_ref_name$18), List$nil));
                                        var $11449 = $11452;
                                        break;
                                };
                                var $11444 = $11449;
                                break;
                        };
                        var $11442 = $11444;
                        break;
                    case 'Maybe.none':
                        var $11453 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$undefined_reference$(_orig$6, $11441), List$nil));
                        var $11442 = $11453;
                        break;
                };
                var self = $11442;
                break;
            case 'Kind.Term.all':
                var $11454 = self.self;
                var $11455 = self.name;
                var $11456 = self.xtyp;
                var $11457 = self.body;
                var _ctx_size$12 = (list_length(_ctx$4));
                var _self_var$13 = Kind$Term$var$($11454, _ctx_size$12);
                var _body_var$14 = Kind$Term$var$($11455, Nat$succ$(_ctx_size$12));
                var _body_ctx$15 = List$cons$(Pair$new$($11455, $11456), List$cons$(Pair$new$($11454, _term$1), _ctx$4));
                var self = Kind$Term$check$($11456, Maybe$some$(Kind$Term$typ), _defs$3, _ctx$4, Kind$Path$Maybe$Builder$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11459 = self.value;
                        var $11460 = self.errors;
                        var self = $11459;
                        switch (self._) {
                            case 'Maybe.none':
                                var $11462 = Kind$Check$result$(Maybe$none, $11460);
                                var $11461 = $11462;
                                break;
                            case 'Maybe.some':
                                var self = Kind$Term$check$($11457(_self_var$13)(_body_var$14), Maybe$some$(Kind$Term$typ), _defs$3, _body_ctx$15, Kind$Path$Maybe$Builder$i$(_path$5), _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11464 = self.value;
                                        var $11465 = self.errors;
                                        var self = $11464;
                                        switch (self._) {
                                            case 'Maybe.none':
                                                var $11467 = Kind$Check$result$(Maybe$none, $11465);
                                                var $11466 = $11467;
                                                break;
                                            case 'Maybe.some':
                                                var self = Kind$Check$result$(Maybe$some$(Kind$Term$typ), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11469 = self.value;
                                                        var $11470 = self.errors;
                                                        var $11471 = Kind$Check$result$($11469, List$concat$($11465, $11470));
                                                        var $11468 = $11471;
                                                        break;
                                                };
                                                var $11466 = $11468;
                                                break;
                                        };
                                        var self = $11466;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11472 = self.value;
                                        var $11473 = self.errors;
                                        var $11474 = Kind$Check$result$($11472, List$concat$($11460, $11473));
                                        var $11463 = $11474;
                                        break;
                                };
                                var $11461 = $11463;
                                break;
                        };
                        var $11458 = $11461;
                        break;
                };
                var self = $11458;
                break;
            case 'Kind.Term.lam':
                var $11475 = self.name;
                var $11476 = self.body;
                var self = _type$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $11478 = self.value;
                        var _typv$10 = Kind$Term$reduce$($11478, _defs$3);
                        var self = _typv$10;
                        switch (self._) {
                            case 'Kind.Term.all':
                                var $11480 = self.xtyp;
                                var $11481 = self.body;
                                var _ctx_size$16 = (list_length(_ctx$4));
                                var _self_var$17 = _term$1;
                                var _body_var$18 = Kind$Term$var$($11475, _ctx_size$16);
                                var _body_typ$19 = $11481(_self_var$17)(_body_var$18);
                                var _body_ctx$20 = List$cons$(Pair$new$($11475, $11480), _ctx$4);
                                var self = Kind$Term$check$($11476(_body_var$18), Maybe$some$(_body_typ$19), _defs$3, _body_ctx$20, Kind$Path$Maybe$Builder$o$(_path$5), _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11483 = self.value;
                                        var $11484 = self.errors;
                                        var self = $11483;
                                        switch (self._) {
                                            case 'Maybe.none':
                                                var $11486 = Kind$Check$result$(Maybe$none, $11484);
                                                var $11485 = $11486;
                                                break;
                                            case 'Maybe.some':
                                                var self = Kind$Check$result$(Maybe$some$($11478), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11488 = self.value;
                                                        var $11489 = self.errors;
                                                        var $11490 = Kind$Check$result$($11488, List$concat$($11484, $11489));
                                                        var $11487 = $11490;
                                                        break;
                                                };
                                                var $11485 = $11487;
                                                break;
                                        };
                                        var $11482 = $11485;
                                        break;
                                };
                                var $11479 = $11482;
                                break;
                            case 'Kind.Term.var':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.get':
                            case 'Kind.Term.ori':
                                var _expected$13 = Either$left$("function");
                                var _detected$14 = Either$right$($11478);
                                var $11491 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$13, _detected$14, _ctx$4), List$nil));
                                var $11479 = $11491;
                                break;
                            case 'Kind.Term.ref':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.new':
                                var _expected$12 = Either$left$("function");
                                var _detected$13 = Either$right$($11478);
                                var $11492 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$12, _detected$13, _ctx$4), List$nil));
                                var $11479 = $11492;
                                break;
                            case 'Kind.Term.typ':
                                var _expected$11 = Either$left$("function");
                                var _detected$12 = Either$right$($11478);
                                var $11493 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$11, _detected$12, _ctx$4), List$nil));
                                var $11479 = $11493;
                                break;
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.num':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                                var _expected$14 = Either$left$("function");
                                var _detected$15 = Either$right$($11478);
                                var $11494 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$14, _detected$15, _ctx$4), List$nil));
                                var $11479 = $11494;
                                break;
                            case 'Kind.Term.cse':
                                var _expected$17 = Either$left$("function");
                                var _detected$18 = Either$right$($11478);
                                var $11495 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$17, _detected$18, _ctx$4), List$nil));
                                var $11479 = $11495;
                                break;
                        };
                        var $11477 = $11479;
                        break;
                    case 'Maybe.none':
                        var _lam_type$9 = Kind$Term$hol$(Bits$e);
                        var _lam_term$10 = Kind$Term$ann$(Bool$false, _term$1, _lam_type$9);
                        var $11496 = Kind$Term$check$patch$(_lam_term$10, _type$2, _path$5);
                        var $11477 = $11496;
                        break;
                };
                var self = $11477;
                break;
            case 'Kind.Term.app':
                var $11497 = self.func;
                var $11498 = self.argm;
                var self = Kind$Term$check$($11497, Maybe$none, _defs$3, _ctx$4, Kind$Path$Maybe$Builder$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11500 = self.value;
                        var $11501 = self.errors;
                        var self = $11500;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11503 = self.value;
                                var _func_typ$12 = Kind$Term$reduce$($11503, _defs$3);
                                var self = _func_typ$12;
                                switch (self._) {
                                    case 'Kind.Term.all':
                                        var $11505 = self.xtyp;
                                        var $11506 = self.body;
                                        var self = Kind$Term$check$($11498, Maybe$some$($11505), _defs$3, _ctx$4, Kind$Path$Maybe$Builder$i$(_path$5), _orig$6);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11508 = self.value;
                                                var $11509 = self.errors;
                                                var self = $11508;
                                                switch (self._) {
                                                    case 'Maybe.none':
                                                        var $11511 = Kind$Check$result$(Maybe$none, $11509);
                                                        var $11510 = $11511;
                                                        break;
                                                    case 'Maybe.some':
                                                        var self = Kind$Check$result$(Maybe$some$($11506($11497)($11498)), List$nil);
                                                        switch (self._) {
                                                            case 'Kind.Check.result':
                                                                var $11513 = self.value;
                                                                var $11514 = self.errors;
                                                                var $11515 = Kind$Check$result$($11513, List$concat$($11509, $11514));
                                                                var $11512 = $11515;
                                                                break;
                                                        };
                                                        var $11510 = $11512;
                                                        break;
                                                };
                                                var $11507 = $11510;
                                                break;
                                        };
                                        var self = $11507;
                                        break;
                                    case 'Kind.Term.var':
                                    case 'Kind.Term.lam':
                                    case 'Kind.Term.app':
                                    case 'Kind.Term.get':
                                    case 'Kind.Term.ori':
                                        var _expected$15 = Either$left$("function");
                                        var _detected$16 = Either$right$(_func_typ$12);
                                        var self = $11497;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11517 = self.orig;
                                                var $11518 = Maybe$some$($11517);
                                                var _orig$17 = $11518;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11519 = _orig$6;
                                                var _orig$17 = $11519;
                                                break;
                                        };
                                        var $11516 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$17, _expected$15, _detected$16, _ctx$4), List$nil));
                                        var self = $11516;
                                        break;
                                    case 'Kind.Term.ref':
                                    case 'Kind.Term.hol':
                                    case 'Kind.Term.nat':
                                    case 'Kind.Term.chr':
                                    case 'Kind.Term.str':
                                    case 'Kind.Term.new':
                                        var _expected$14 = Either$left$("function");
                                        var _detected$15 = Either$right$(_func_typ$12);
                                        var self = $11497;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11521 = self.orig;
                                                var $11522 = Maybe$some$($11521);
                                                var _orig$16 = $11522;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11523 = _orig$6;
                                                var _orig$16 = $11523;
                                                break;
                                        };
                                        var $11520 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$16, _expected$14, _detected$15, _ctx$4), List$nil));
                                        var self = $11520;
                                        break;
                                    case 'Kind.Term.typ':
                                        var _expected$13 = Either$left$("function");
                                        var _detected$14 = Either$right$(_func_typ$12);
                                        var self = $11497;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11525 = self.orig;
                                                var $11526 = Maybe$some$($11525);
                                                var _orig$15 = $11526;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11527 = _orig$6;
                                                var _orig$15 = $11527;
                                                break;
                                        };
                                        var $11524 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$15, _expected$13, _detected$14, _ctx$4), List$nil));
                                        var self = $11524;
                                        break;
                                    case 'Kind.Term.let':
                                    case 'Kind.Term.def':
                                    case 'Kind.Term.ann':
                                    case 'Kind.Term.gol':
                                    case 'Kind.Term.num':
                                    case 'Kind.Term.set':
                                    case 'Kind.Term.ope':
                                        var _expected$16 = Either$left$("function");
                                        var _detected$17 = Either$right$(_func_typ$12);
                                        var self = $11497;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11529 = self.orig;
                                                var $11530 = Maybe$some$($11529);
                                                var _orig$18 = $11530;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11531 = _orig$6;
                                                var _orig$18 = $11531;
                                                break;
                                        };
                                        var $11528 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$18, _expected$16, _detected$17, _ctx$4), List$nil));
                                        var self = $11528;
                                        break;
                                    case 'Kind.Term.cse':
                                        var _expected$19 = Either$left$("function");
                                        var _detected$20 = Either$right$(_func_typ$12);
                                        var self = $11497;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11533 = self.orig;
                                                var $11534 = Maybe$some$($11533);
                                                var _orig$21 = $11534;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11535 = _orig$6;
                                                var _orig$21 = $11535;
                                                break;
                                        };
                                        var $11532 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$21, _expected$19, _detected$20, _ctx$4), List$nil));
                                        var self = $11532;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11536 = self.value;
                                        var $11537 = self.errors;
                                        var $11538 = Kind$Check$result$($11536, List$concat$($11501, $11537));
                                        var $11504 = $11538;
                                        break;
                                };
                                var $11502 = $11504;
                                break;
                            case 'Maybe.none':
                                var $11539 = Kind$Check$result$(Maybe$none, $11501);
                                var $11502 = $11539;
                                break;
                        };
                        var $11499 = $11502;
                        break;
                };
                var self = $11499;
                break;
            case 'Kind.Term.let':
                var $11540 = self.name;
                var $11541 = self.expr;
                var $11542 = self.body;
                var _ctx_size$10 = (list_length(_ctx$4));
                var self = Kind$Term$check$($11541, Maybe$none, _defs$3, _ctx$4, Kind$Path$Maybe$Builder$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11544 = self.value;
                        var $11545 = self.errors;
                        var self = $11544;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11547 = self.value;
                                var _body_val$14 = $11542(Kind$Term$var$($11540, _ctx_size$10));
                                var _body_ctx$15 = List$cons$(Pair$new$($11540, $11547), _ctx$4);
                                var self = Kind$Term$check$(_body_val$14, _type$2, _defs$3, _body_ctx$15, Kind$Path$Maybe$Builder$i$(_path$5), _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11549 = self.value;
                                        var $11550 = self.errors;
                                        var self = $11549;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11552 = self.value;
                                                var self = Kind$Check$result$(Maybe$some$($11552), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11554 = self.value;
                                                        var $11555 = self.errors;
                                                        var $11556 = Kind$Check$result$($11554, List$concat$($11550, $11555));
                                                        var $11553 = $11556;
                                                        break;
                                                };
                                                var $11551 = $11553;
                                                break;
                                            case 'Maybe.none':
                                                var $11557 = Kind$Check$result$(Maybe$none, $11550);
                                                var $11551 = $11557;
                                                break;
                                        };
                                        var self = $11551;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11558 = self.value;
                                        var $11559 = self.errors;
                                        var $11560 = Kind$Check$result$($11558, List$concat$($11545, $11559));
                                        var $11548 = $11560;
                                        break;
                                };
                                var $11546 = $11548;
                                break;
                            case 'Maybe.none':
                                var $11561 = Kind$Check$result$(Maybe$none, $11545);
                                var $11546 = $11561;
                                break;
                        };
                        var $11543 = $11546;
                        break;
                };
                var self = $11543;
                break;
            case 'Kind.Term.def':
                var $11562 = self.name;
                var $11563 = self.expr;
                var $11564 = self.body;
                var _ctx_size$10 = (list_length(_ctx$4));
                var self = Kind$Term$check$($11563, Maybe$none, _defs$3, _ctx$4, Kind$Path$Maybe$Builder$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11566 = self.value;
                        var $11567 = self.errors;
                        var self = $11566;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11569 = self.value;
                                var _body_val$14 = $11564(Kind$Term$var$($11562, _ctx_size$10));
                                var _body_ctx$15 = List$cons$(Pair$new$($11562, $11569), _ctx$4);
                                var self = Kind$Term$check$(_body_val$14, _type$2, _defs$3, _body_ctx$15, Kind$Path$Maybe$Builder$i$(_path$5), _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11571 = self.value;
                                        var $11572 = self.errors;
                                        var self = $11571;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11574 = self.value;
                                                var self = Kind$Check$result$(Maybe$some$($11574), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11576 = self.value;
                                                        var $11577 = self.errors;
                                                        var $11578 = Kind$Check$result$($11576, List$concat$($11572, $11577));
                                                        var $11575 = $11578;
                                                        break;
                                                };
                                                var $11573 = $11575;
                                                break;
                                            case 'Maybe.none':
                                                var $11579 = Kind$Check$result$(Maybe$none, $11572);
                                                var $11573 = $11579;
                                                break;
                                        };
                                        var self = $11573;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11580 = self.value;
                                        var $11581 = self.errors;
                                        var $11582 = Kind$Check$result$($11580, List$concat$($11567, $11581));
                                        var $11570 = $11582;
                                        break;
                                };
                                var $11568 = $11570;
                                break;
                            case 'Maybe.none':
                                var $11583 = Kind$Check$result$(Maybe$none, $11567);
                                var $11568 = $11583;
                                break;
                        };
                        var $11565 = $11568;
                        break;
                };
                var self = $11565;
                break;
            case 'Kind.Term.ann':
                var $11584 = self.done;
                var $11585 = self.term;
                var $11586 = self.type;
                var self = $11584;
                if (self) {
                    var $11588 = Kind$Check$result$(Maybe$some$($11586), List$nil);
                    var $11587 = $11588;
                } else {
                    var self = Kind$Term$check$($11585, Maybe$some$($11586), _defs$3, _ctx$4, Kind$Path$Maybe$Builder$o$(_path$5), _orig$6);
                    switch (self._) {
                        case 'Kind.Check.result':
                            var $11590 = self.value;
                            var $11591 = self.errors;
                            var self = $11590;
                            switch (self._) {
                                case 'Maybe.none':
                                    var $11593 = Kind$Check$result$(Maybe$none, $11591);
                                    var $11592 = $11593;
                                    break;
                                case 'Maybe.some':
                                    var self = Kind$Term$check$($11586, Maybe$some$(Kind$Term$typ), _defs$3, _ctx$4, Kind$Path$Maybe$Builder$i$(_path$5), _orig$6);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11595 = self.value;
                                            var $11596 = self.errors;
                                            var self = $11595;
                                            switch (self._) {
                                                case 'Maybe.none':
                                                    var $11598 = Kind$Check$result$(Maybe$none, $11596);
                                                    var $11597 = $11598;
                                                    break;
                                                case 'Maybe.some':
                                                    var self = Kind$Check$result$(Maybe$some$($11586), List$nil);
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11600 = self.value;
                                                            var $11601 = self.errors;
                                                            var $11602 = Kind$Check$result$($11600, List$concat$($11596, $11601));
                                                            var $11599 = $11602;
                                                            break;
                                                    };
                                                    var $11597 = $11599;
                                                    break;
                                            };
                                            var self = $11597;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11603 = self.value;
                                            var $11604 = self.errors;
                                            var $11605 = Kind$Check$result$($11603, List$concat$($11591, $11604));
                                            var $11594 = $11605;
                                            break;
                                    };
                                    var $11592 = $11594;
                                    break;
                            };
                            var $11589 = $11592;
                            break;
                    };
                    var $11587 = $11589;
                };
                var self = $11587;
                break;
            case 'Kind.Term.gol':
                var $11606 = self.name;
                var $11607 = self.dref;
                var $11608 = self.verb;
                var $11609 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$show_goal$($11606, $11607, $11608, _type$2, _ctx$4), List$nil));
                var self = $11609;
                break;
            case 'Kind.Term.num':
                var $11610 = self.sign;
                var $11611 = self.numb;
                var $11612 = self.frac;
                var _dsug$10 = Kind$Term$check$expand$num$($11610, $11611, $11612, _type$2, _defs$3);
                var $11613 = Kind$Term$check$patch$(_dsug$10, _type$2, _path$5);
                var self = $11613;
                break;
            case 'Kind.Term.cse':
                var $11614 = self.expr;
                var $11615 = self.name;
                var $11616 = self.with;
                var $11617 = self.cses;
                var $11618 = self.moti;
                var _expr$13 = $11614;
                var self = Kind$Term$check$(_expr$13, Maybe$none, _defs$3, _ctx$4, Kind$Path$Maybe$Builder$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11620 = self.value;
                        var $11621 = self.errors;
                        var self = $11620;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11623 = self.value;
                                var self = Kind$Term$check$infer_types_of_with$($11616, _defs$3, _ctx$4, _path$5, _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11625 = self.value;
                                        var $11626 = self.errors;
                                        var self = $11625;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11628 = self.value;
                                                var _dsug$20 = Kind$Term$check$expand$cse$($11614, $11615, $11628, $11617, $11618, $11623, _type$2, _defs$3, _ctx$4);
                                                var self = _dsug$20;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $11630 = self.value;
                                                        var $11631 = Kind$Term$check$patch$($11630, _type$2, _path$5);
                                                        var self = $11631;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $11632 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                                                        var self = $11632;
                                                        break;
                                                };
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11633 = self.value;
                                                        var $11634 = self.errors;
                                                        var $11635 = Kind$Check$result$($11633, List$concat$($11626, $11634));
                                                        var $11629 = $11635;
                                                        break;
                                                };
                                                var $11627 = $11629;
                                                break;
                                            case 'Maybe.none':
                                                var $11636 = Kind$Check$result$(Maybe$none, $11626);
                                                var $11627 = $11636;
                                                break;
                                        };
                                        var self = $11627;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11637 = self.value;
                                        var $11638 = self.errors;
                                        var $11639 = Kind$Check$result$($11637, List$concat$($11621, $11638));
                                        var $11624 = $11639;
                                        break;
                                };
                                var $11622 = $11624;
                                break;
                            case 'Maybe.none':
                                var $11640 = Kind$Check$result$(Maybe$none, $11621);
                                var $11622 = $11640;
                                break;
                        };
                        var $11619 = $11622;
                        break;
                };
                var self = $11619;
                break;
            case 'Kind.Term.new':
                var $11641 = self.args;
                var _dsug$8 = Kind$Term$check$expand$new$($11641, _type$2, _defs$3);
                var self = _dsug$8;
                switch (self._) {
                    case 'Maybe.some':
                        var $11643 = self.value;
                        var $11644 = Kind$Term$check$patch$($11643, _type$2, _path$5);
                        var $11642 = $11644;
                        break;
                    case 'Maybe.none':
                        var $11645 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                        var $11642 = $11645;
                        break;
                };
                var self = $11642;
                break;
            case 'Kind.Term.get':
                var $11646 = self.expr;
                var $11647 = self.fkey;
                var _expr$9 = $11646;
                var self = Kind$Term$check$(_expr$9, Maybe$none, _defs$3, _ctx$4, Kind$Path$Maybe$Builder$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11649 = self.value;
                        var $11650 = self.errors;
                        var self = $11649;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11652 = self.value;
                                var _dsug$13 = Kind$Term$check$expand$get$($11646, $11647, $11652, _defs$3);
                                var self = _dsug$13;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $11654 = self.value;
                                        var $11655 = Kind$Term$check$patch$($11654, _type$2, _path$5);
                                        var self = $11655;
                                        break;
                                    case 'Maybe.none':
                                        var $11656 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                                        var self = $11656;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11657 = self.value;
                                        var $11658 = self.errors;
                                        var $11659 = Kind$Check$result$($11657, List$concat$($11650, $11658));
                                        var $11653 = $11659;
                                        break;
                                };
                                var $11651 = $11653;
                                break;
                            case 'Maybe.none':
                                var $11660 = Kind$Check$result$(Maybe$none, $11650);
                                var $11651 = $11660;
                                break;
                        };
                        var $11648 = $11651;
                        break;
                };
                var self = $11648;
                break;
            case 'Kind.Term.set':
                var $11661 = self.expr;
                var $11662 = self.fkey;
                var $11663 = self.fval;
                var _expr$10 = $11661;
                var self = Kind$Term$check$(_expr$10, Maybe$none, _defs$3, _ctx$4, Kind$Path$Maybe$Builder$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11665 = self.value;
                        var $11666 = self.errors;
                        var self = $11665;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11668 = self.value;
                                var _dsug$14 = Kind$Term$check$expand$set$($11661, $11662, $11663, $11668, _defs$3);
                                var self = _dsug$14;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $11670 = self.value;
                                        var $11671 = Kind$Term$check$patch$($11670, _type$2, _path$5);
                                        var self = $11671;
                                        break;
                                    case 'Maybe.none':
                                        var $11672 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                                        var self = $11672;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11673 = self.value;
                                        var $11674 = self.errors;
                                        var $11675 = Kind$Check$result$($11673, List$concat$($11666, $11674));
                                        var $11669 = $11675;
                                        break;
                                };
                                var $11667 = $11669;
                                break;
                            case 'Maybe.none':
                                var $11676 = Kind$Check$result$(Maybe$none, $11666);
                                var $11667 = $11676;
                                break;
                        };
                        var $11664 = $11667;
                        break;
                };
                var self = $11664;
                break;
            case 'Kind.Term.ope':
                var $11677 = self.name;
                var $11678 = self.arg0;
                var $11679 = self.arg1;
                var _otyp$10 = Maybe$default$(_type$2, Kind$Term$hol$(Bits$e));
                var _dsug$11 = Kind$Term$check$expand$ope$(Bool$true, $11677, $11678, $11679, _otyp$10, _defs$3);
                var self = _dsug$11;
                switch (self._) {
                    case 'Maybe.some':
                        var $11681 = self.value;
                        var $11682 = Kind$Term$check$patch$($11681, _type$2, _path$5);
                        var $11680 = $11682;
                        break;
                    case 'Maybe.none':
                        var self = Kind$Term$check$($11678, Maybe$none, _defs$3, _ctx$4, Kind$Path$Maybe$Builder$o$(_path$5), _orig$6);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11684 = self.value;
                                var $11685 = self.errors;
                                var self = $11684;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $11687 = self.value;
                                        var _dsug$15 = Kind$Term$check$expand$ope$(Bool$false, $11677, $11678, $11679, $11687, _defs$3);
                                        var self = _dsug$15;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11689 = self.value;
                                                var $11690 = Kind$Term$check$patch$($11689, _type$2, _path$5);
                                                var self = $11690;
                                                break;
                                            case 'Maybe.none':
                                                var $11691 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                                                var self = $11691;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11692 = self.value;
                                                var $11693 = self.errors;
                                                var $11694 = Kind$Check$result$($11692, List$concat$($11685, $11693));
                                                var $11688 = $11694;
                                                break;
                                        };
                                        var $11686 = $11688;
                                        break;
                                    case 'Maybe.none':
                                        var $11695 = Kind$Check$result$(Maybe$none, $11685);
                                        var $11686 = $11695;
                                        break;
                                };
                                var $11683 = $11686;
                                break;
                        };
                        var $11680 = $11683;
                        break;
                };
                var self = $11680;
                break;
            case 'Kind.Term.ori':
                var $11696 = self.orig;
                var $11697 = self.expr;
                var $11698 = Kind$Term$check$($11697, _type$2, _defs$3, _ctx$4, _path$5, Maybe$some$($11696));
                var self = $11698;
                break;
            case 'Kind.Term.typ':
                var $11699 = Kind$Check$result$(Maybe$some$(Kind$Term$typ), List$nil);
                var self = $11699;
                break;
            case 'Kind.Term.hol':
                var $11700 = Kind$Check$result$(_type$2, List$nil);
                var self = $11700;
                break;
            case 'Kind.Term.nat':
                var self = _type$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $11702 = self.value;
                        var _tnam$9 = Kind$Term$check$get_name_of_self_type$($11702, _defs$3);
                        var self = _tnam$9;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11704 = self.value;
                                var self = ($11704 === "Nat");
                                if (self) {
                                    var $11706 = Kind$Term$check$direct$(Kind$Term$ref$("Nat"), _defs$3);
                                    var $11705 = $11706;
                                } else {
                                    var _cast$11 = Kind$Term$ref$(($11704 + ".from_nat"));
                                    var _cast$12 = Kind$Term$app$(_cast$11, _term$1);
                                    var $11707 = Kind$Term$check$patch$(_cast$12, _type$2, _path$5);
                                    var $11705 = $11707;
                                };
                                var $11703 = $11705;
                                break;
                            case 'Maybe.none':
                                var $11708 = Kind$Term$check$direct$(Kind$Term$ref$("Nat"), _defs$3);
                                var $11703 = $11708;
                                break;
                        };
                        var $11701 = $11703;
                        break;
                    case 'Maybe.none':
                        var $11709 = Kind$Term$check$direct$(Kind$Term$ref$("Nat"), _defs$3);
                        var $11701 = $11709;
                        break;
                };
                var self = $11701;
                break;
            case 'Kind.Term.chr':
                var $11710 = Kind$Term$check$direct$(Kind$Term$ref$("Char"), _defs$3);
                var self = $11710;
                break;
            case 'Kind.Term.str':
                var $11711 = Kind$Term$check$direct$(Kind$Term$ref$("String"), _defs$3);
                var self = $11711;
                break;
        };
        switch (self._) {
            case 'Kind.Check.result':
                var $11712 = self.value;
                var $11713 = self.errors;
                var self = $11712;
                switch (self._) {
                    case 'Maybe.some':
                        var $11715 = self.value;
                        var self = _type$2;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11717 = self.value;
                                var self = Kind$Term$equal$go$($11717, $11715, _defs$3, (list_length(_ctx$4)), BitsSet$mut$new$(Unit$new));
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11719 = self.value;
                                        var $11720 = self.errors;
                                        var self = $11719;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11722 = self.value;
                                                var self = $11722;
                                                if (self) {
                                                    var $11724 = Kind$Check$result$(Maybe$some$($11717), List$nil);
                                                    var self = $11724;
                                                } else {
                                                    var $11725 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, Either$right$($11717), Either$right$($11715), _ctx$4), List$nil));
                                                    var self = $11725;
                                                };
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11726 = self.value;
                                                        var $11727 = self.errors;
                                                        var $11728 = Kind$Check$result$($11726, List$concat$($11720, $11727));
                                                        var $11723 = $11728;
                                                        break;
                                                };
                                                var $11721 = $11723;
                                                break;
                                            case 'Maybe.none':
                                                var $11729 = Kind$Check$result$(Maybe$none, $11720);
                                                var $11721 = $11729;
                                                break;
                                        };
                                        var $11718 = $11721;
                                        break;
                                };
                                var self = $11718;
                                break;
                            case 'Maybe.none':
                                var $11730 = Kind$Check$result$(Maybe$some$($11715), List$nil);
                                var self = $11730;
                                break;
                        };
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11731 = self.value;
                                var $11732 = self.errors;
                                var $11733 = Kind$Check$result$($11731, List$concat$($11713, $11732));
                                var $11716 = $11733;
                                break;
                        };
                        var $11714 = $11716;
                        break;
                    case 'Maybe.none':
                        var $11734 = Kind$Check$result$(Maybe$none, $11713);
                        var $11714 = $11734;
                        break;
                };
                var $11432 = $11714;
                break;
        };
        return $11432;
    };
    const Kind$Term$check = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Term$check$(x0, x1, x2, x3, x4, x5);

    function Kind$Path$patch_at$list$(_path$2, _list$3, _cont$4) {
        var Kind$Path$patch_at$list$ = (_path$2, _list$3, _cont$4) => ({
            ctr: 'TCO',
            arg: [_path$2, _list$3, _cont$4]
        });
        var Kind$Path$patch_at$list = _path$2 => _list$3 => _cont$4 => Kind$Path$patch_at$list$(_path$2, _list$3, _cont$4);
        var arg = [_path$2, _list$3, _cont$4];
        while (true) {
            let [_path$2, _list$3, _cont$4] = arg;
            var R = (() => {
                var self = _path$2;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11735 = self.slice(0, -1);
                        var self = _list$3;
                        switch (self._) {
                            case 'List.cons':
                                var $11737 = self.head;
                                var $11738 = self.tail;
                                var $11739 = List$cons$(_cont$4($11735)($11737), $11738);
                                var $11736 = $11739;
                                break;
                            case 'List.nil':
                                var $11740 = List$nil;
                                var $11736 = $11740;
                                break;
                        };
                        return $11736;
                    case 'i':
                        var $11741 = self.slice(0, -1);
                        var self = _list$3;
                        switch (self._) {
                            case 'List.cons':
                                var $11743 = self.tail;
                                var $11744 = Kind$Path$patch_at$list$($11741, $11743, _cont$4);
                                var $11742 = $11744;
                                break;
                            case 'List.nil':
                                var $11745 = List$nil;
                                var $11742 = $11745;
                                break;
                        };
                        return $11742;
                    case 'e':
                        var $11746 = List$nil;
                        return $11746;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Path$patch_at$list = x0 => x1 => x2 => Kind$Path$patch_at$list$(x0, x1, x2);

    function Kind$Path$patch_at$bitsmap$(_path$2, _bmap$3, _cont$4) {
        var self = _path$2;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $11748 = self.slice(0, -1);
                var self = _bmap$3;
                switch (self._) {
                    case 'BitsMap.tie':
                        var $11750 = self.val;
                        var $11751 = self.lft;
                        var $11752 = self.rgt;
                        var self = $11750;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11754 = self.value;
                                var $11755 = BitsMap$tie$(Maybe$some$(_cont$4($11748)($11754)), $11751, $11752);
                                var $11753 = $11755;
                                break;
                            case 'Maybe.none':
                                var $11756 = BitsMap$tie$(Maybe$none, $11751, $11752);
                                var $11753 = $11756;
                                break;
                        };
                        var $11749 = $11753;
                        break;
                    case 'BitsMap.new':
                        var $11757 = BitsMap$new;
                        var $11749 = $11757;
                        break;
                };
                var $11747 = $11749;
                break;
            case 'i':
                var $11758 = self.slice(0, -1);
                var self = $11758;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11760 = self.slice(0, -1);
                        var self = _bmap$3;
                        switch (self._) {
                            case 'BitsMap.tie':
                                var $11762 = self.val;
                                var $11763 = self.lft;
                                var $11764 = self.rgt;
                                var $11765 = BitsMap$tie$($11762, Kind$Path$patch_at$bitsmap$($11760, $11763, _cont$4), $11764);
                                var $11761 = $11765;
                                break;
                            case 'BitsMap.new':
                                var $11766 = BitsMap$new;
                                var $11761 = $11766;
                                break;
                        };
                        var $11759 = $11761;
                        break;
                    case 'i':
                        var $11767 = self.slice(0, -1);
                        var self = _bmap$3;
                        switch (self._) {
                            case 'BitsMap.tie':
                                var $11769 = self.val;
                                var $11770 = self.lft;
                                var $11771 = BitsMap$tie$($11769, $11770, Kind$Path$patch_at$bitsmap$($11767, $11770, _cont$4));
                                var $11768 = $11771;
                                break;
                            case 'BitsMap.new':
                                var $11772 = BitsMap$new;
                                var $11768 = $11772;
                                break;
                        };
                        var $11759 = $11768;
                        break;
                    case 'e':
                        var $11773 = BitsMap$new;
                        var $11759 = $11773;
                        break;
                };
                var $11747 = $11759;
                break;
            case 'e':
                var $11774 = BitsMap$new;
                var $11747 = $11774;
                break;
        };
        return $11747;
    };
    const Kind$Path$patch_at$bitsmap = x0 => x1 => x2 => Kind$Path$patch_at$bitsmap$(x0, x1, x2);

    function Kind$Term$patch_at$(_path$1, _term$2, _fn$3) {
        var self = _term$2;
        switch (self._) {
            case 'Kind.Term.all':
                var $11776 = self.eras;
                var $11777 = self.self;
                var $11778 = self.name;
                var $11779 = self.xtyp;
                var $11780 = self.body;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11782 = self.slice(0, -1);
                        var $11783 = Kind$Term$all$($11776, $11777, $11778, Kind$Term$patch_at$($11782, $11779, _fn$3), $11780);
                        var $11781 = $11783;
                        break;
                    case 'i':
                        var $11784 = self.slice(0, -1);
                        var $11785 = Kind$Term$all$($11776, $11777, $11778, $11779, (_s$10 => _x$11 => {
                            var $11786 = Kind$Term$patch_at$($11784, $11780(_s$10)(_x$11), _fn$3);
                            return $11786;
                        }));
                        var $11781 = $11785;
                        break;
                    case 'e':
                        var $11787 = _fn$3(_term$2);
                        var $11781 = $11787;
                        break;
                };
                var $11775 = $11781;
                break;
            case 'Kind.Term.lam':
                var $11788 = self.name;
                var $11789 = self.body;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11791 = _fn$3(_term$2);
                        var $11790 = $11791;
                        break;
                    case 'o':
                    case 'i':
                        var $11792 = Kind$Term$lam$($11788, (_x$7 => {
                            var $11793 = Kind$Term$patch_at$(Bits$tail$(_path$1), $11789(_x$7), _fn$3);
                            return $11793;
                        }));
                        var $11790 = $11792;
                        break;
                };
                var $11775 = $11790;
                break;
            case 'Kind.Term.app':
                var $11794 = self.func;
                var $11795 = self.argm;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11797 = self.slice(0, -1);
                        var $11798 = Kind$Term$app$(Kind$Term$patch_at$($11797, $11794, _fn$3), $11795);
                        var $11796 = $11798;
                        break;
                    case 'i':
                        var $11799 = self.slice(0, -1);
                        var $11800 = Kind$Term$app$($11794, Kind$Term$patch_at$($11799, $11795, _fn$3));
                        var $11796 = $11800;
                        break;
                    case 'e':
                        var $11801 = _fn$3(_term$2);
                        var $11796 = $11801;
                        break;
                };
                var $11775 = $11796;
                break;
            case 'Kind.Term.let':
                var $11802 = self.name;
                var $11803 = self.expr;
                var $11804 = self.body;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11806 = self.slice(0, -1);
                        var $11807 = Kind$Term$let$($11802, Kind$Term$patch_at$($11806, $11803, _fn$3), $11804);
                        var $11805 = $11807;
                        break;
                    case 'i':
                        var $11808 = self.slice(0, -1);
                        var $11809 = Kind$Term$let$($11802, $11803, (_x$8 => {
                            var $11810 = Kind$Term$patch_at$($11808, $11804(_x$8), _fn$3);
                            return $11810;
                        }));
                        var $11805 = $11809;
                        break;
                    case 'e':
                        var $11811 = _fn$3(_term$2);
                        var $11805 = $11811;
                        break;
                };
                var $11775 = $11805;
                break;
            case 'Kind.Term.ann':
                var $11812 = self.done;
                var $11813 = self.term;
                var $11814 = self.type;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11816 = self.slice(0, -1);
                        var $11817 = Kind$Term$ann$($11812, Kind$Term$patch_at$($11816, $11813, _fn$3), $11814);
                        var $11815 = $11817;
                        break;
                    case 'i':
                        var $11818 = self.slice(0, -1);
                        var $11819 = Kind$Term$ann$($11812, $11813, Kind$Term$patch_at$($11818, $11814, _fn$3));
                        var $11815 = $11819;
                        break;
                    case 'e':
                        var $11820 = _fn$3(_term$2);
                        var $11815 = $11820;
                        break;
                };
                var $11775 = $11815;
                break;
            case 'Kind.Term.cse':
                var $11821 = self.path;
                var $11822 = self.expr;
                var $11823 = self.name;
                var $11824 = self.with;
                var $11825 = self.cses;
                var $11826 = self.moti;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11828 = self.slice(0, -1);
                        var self = $11828;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $11830 = self.slice(0, -1);
                                var $11831 = Kind$Term$cse$($11821, Kind$Term$patch_at$($11830, $11822, _fn$3), $11823, $11824, $11825, $11826);
                                var $11829 = $11831;
                                break;
                            case 'i':
                                var $11832 = self.slice(0, -1);
                                var _term$with$12 = Kind$Path$patch_at$list$($11832, $11824, (_ann_path$12 => _ann$13 => {
                                    var self = _ann$13;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $11835 = self.name;
                                            var $11836 = self.term;
                                            var $11837 = self.type;
                                            var self = _ann_path$12;
                                            switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                case 'o':
                                                    var $11839 = self.slice(0, -1);
                                                    var $11840 = Kind$Ann$new$($11835, Kind$Term$patch_at$($11839, $11836, _fn$3), $11837);
                                                    var $11838 = $11840;
                                                    break;
                                                case 'i':
                                                    var $11841 = self.slice(0, -1);
                                                    var $11842 = Kind$Ann$new$($11835, $11836, (() => {
                                                        var self = $11837;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $11843 = self.value;
                                                                var $11844 = Maybe$some$(Kind$Term$patch_at$($11841, $11843, _fn$3));
                                                                return $11844;
                                                            case 'Maybe.none':
                                                                var $11845 = Maybe$none;
                                                                return $11845;
                                                        };
                                                    })());
                                                    var $11838 = $11842;
                                                    break;
                                                case 'e':
                                                    var $11846 = _ann$13;
                                                    var $11838 = $11846;
                                                    break;
                                            };
                                            var $11834 = $11838;
                                            break;
                                    };
                                    return $11834;
                                }));
                                var $11833 = Kind$Term$cse$($11821, $11822, $11823, _term$with$12, $11825, $11826);
                                var $11829 = $11833;
                                break;
                            case 'e':
                                var $11847 = _fn$3(_term$2);
                                var $11829 = $11847;
                                break;
                        };
                        var $11827 = $11829;
                        break;
                    case 'i':
                        var $11848 = self.slice(0, -1);
                        var self = $11848;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $11850 = self.slice(0, -1);
                                var _term$cses$12 = Kind$Path$patch_at$bitsmap$($11850, $11825, (_cse_path$12 => _cse_term$13 => {
                                    var $11852 = Kind$Term$patch_at$(_cse_path$12, _cse_term$13, _fn$3);
                                    return $11852;
                                }));
                                var $11851 = Kind$Term$cse$($11821, $11822, $11823, $11824, _term$cses$12, $11826);
                                var $11849 = $11851;
                                break;
                            case 'i':
                                var $11853 = self.slice(0, -1);
                                var self = $11826;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $11855 = self.value;
                                        var $11856 = Maybe$some$(Kind$Term$patch_at$($11853, $11855, _fn$3));
                                        var _term$moti$12 = $11856;
                                        break;
                                    case 'Maybe.none':
                                        var $11857 = Maybe$none;
                                        var _term$moti$12 = $11857;
                                        break;
                                };
                                var $11854 = Kind$Term$cse$($11821, $11822, $11823, $11824, $11825, _term$moti$12);
                                var $11849 = $11854;
                                break;
                            case 'e':
                                var $11858 = _fn$3(_term$2);
                                var $11849 = $11858;
                                break;
                        };
                        var $11827 = $11849;
                        break;
                    case 'e':
                        var $11859 = _fn$3(_term$2);
                        var $11827 = $11859;
                        break;
                };
                var $11775 = $11827;
                break;
            case 'Kind.Term.new':
                var $11860 = self.args;
                var $11861 = Kind$Term$new$(Kind$Path$patch_at$list$(_path$1, $11860, (_arg_path$5 => _arg$6 => {
                    var $11862 = Kind$Term$patch_at$(_arg_path$5, _arg$6, _fn$3);
                    return $11862;
                })));
                var $11775 = $11861;
                break;
            case 'Kind.Term.get':
                var $11863 = self.expr;
                var $11864 = self.fkey;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11866 = self.slice(0, -1);
                        var $11867 = Kind$Term$get$(Kind$Term$patch_at$($11866, $11863, _fn$3), $11864);
                        var $11865 = $11867;
                        break;
                    case 'i':
                        var $11868 = self.slice(0, -1);
                        var $11869 = Kind$Term$get$(Kind$Term$patch_at$($11868, $11863, _fn$3), $11864);
                        var $11865 = $11869;
                        break;
                    case 'e':
                        var $11870 = _fn$3(_term$2);
                        var $11865 = $11870;
                        break;
                };
                var $11775 = $11865;
                break;
            case 'Kind.Term.set':
                var $11871 = self.expr;
                var $11872 = self.fkey;
                var $11873 = self.fval;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11875 = self.slice(0, -1);
                        var $11876 = Kind$Term$set$(Kind$Term$patch_at$($11875, $11871, _fn$3), $11872, $11873);
                        var $11874 = $11876;
                        break;
                    case 'i':
                        var $11877 = self.slice(0, -1);
                        var $11878 = Kind$Term$set$($11871, $11872, Kind$Term$patch_at$($11877, $11873, _fn$3));
                        var $11874 = $11878;
                        break;
                    case 'e':
                        var $11879 = _fn$3(_term$2);
                        var $11874 = $11879;
                        break;
                };
                var $11775 = $11874;
                break;
            case 'Kind.Term.ope':
                var $11880 = self.name;
                var $11881 = self.arg0;
                var $11882 = self.arg1;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11884 = self.slice(0, -1);
                        var $11885 = Kind$Term$ope$($11880, Kind$Term$patch_at$($11884, $11881, _fn$3), $11882);
                        var $11883 = $11885;
                        break;
                    case 'i':
                        var $11886 = self.slice(0, -1);
                        var $11887 = Kind$Term$ope$($11880, $11881, Kind$Term$patch_at$($11886, $11882, _fn$3));
                        var $11883 = $11887;
                        break;
                    case 'e':
                        var $11888 = _fn$3(_term$2);
                        var $11883 = $11888;
                        break;
                };
                var $11775 = $11883;
                break;
            case 'Kind.Term.ori':
                var $11889 = self.orig;
                var $11890 = self.expr;
                var $11891 = Kind$Term$ori$($11889, Kind$Term$patch_at$(_path$1, $11890, _fn$3));
                var $11775 = $11891;
                break;
            case 'Kind.Term.var':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11893 = _fn$3(_term$2);
                        var $11892 = $11893;
                        break;
                    case 'o':
                    case 'i':
                        var $11894 = _term$2;
                        var $11892 = $11894;
                        break;
                };
                var $11775 = $11892;
                break;
            case 'Kind.Term.ref':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11896 = _fn$3(_term$2);
                        var $11895 = $11896;
                        break;
                    case 'o':
                    case 'i':
                        var $11897 = _term$2;
                        var $11895 = $11897;
                        break;
                };
                var $11775 = $11895;
                break;
            case 'Kind.Term.typ':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11899 = _fn$3(_term$2);
                        var $11898 = $11899;
                        break;
                    case 'o':
                    case 'i':
                        var $11900 = _term$2;
                        var $11898 = $11900;
                        break;
                };
                var $11775 = $11898;
                break;
            case 'Kind.Term.def':
            case 'Kind.Term.gol':
            case 'Kind.Term.num':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11902 = _fn$3(_term$2);
                        var $11901 = $11902;
                        break;
                    case 'o':
                    case 'i':
                        var $11903 = _term$2;
                        var $11901 = $11903;
                        break;
                };
                var $11775 = $11901;
                break;
        };
        return $11775;
    };
    const Kind$Term$patch_at = x0 => x1 => x2 => Kind$Term$patch_at$(x0, x1, x2);

    function Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _defs$9, _errs$10, _fixd$11) {
        var self = _errs$10;
        switch (self._) {
            case 'List.cons':
                var $11905 = self.head;
                var $11906 = self.tail;
                var self = $11905;
                switch (self._) {
                    case 'Kind.Error.waiting':
                        var $11908 = self.name;
                        var $11909 = IO$monad$((_m$bind$15 => _m$pure$16 => {
                            var $11910 = _m$bind$15;
                            return $11910;
                        }))(Kind$Synth$one$($11908, _defs$9))((_new_defs$15 => {
                            var self = _new_defs$15;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $11912 = self.value;
                                    var $11913 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, $11912, $11906, Bool$true);
                                    var $11911 = $11913;
                                    break;
                                case 'Maybe.none':
                                    var $11914 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _defs$9, $11906, _fixd$11);
                                    var $11911 = $11914;
                                    break;
                            };
                            return $11911;
                        }));
                        var $11907 = $11909;
                        break;
                    case 'Kind.Error.patch':
                        var $11915 = self.path;
                        var $11916 = self.term;
                        var self = $11915;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $11918 = self.slice(0, -1);
                                var _term$17 = Kind$Term$patch_at$($11918, _term$5, (_x$17 => {
                                    var $11920 = $11916;
                                    return $11920;
                                }));
                                var $11919 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$17, _type$6, _isct$7, _arit$8, _defs$9, $11906, Bool$true);
                                var $11917 = $11919;
                                break;
                            case 'i':
                                var $11921 = self.slice(0, -1);
                                var _type$17 = Kind$Term$patch_at$($11921, _type$6, (_x$17 => {
                                    var $11923 = $11916;
                                    return $11923;
                                }));
                                var $11922 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$17, _isct$7, _arit$8, _defs$9, $11906, Bool$true);
                                var $11917 = $11922;
                                break;
                            case 'e':
                                var $11924 = IO$monad$((_m$bind$16 => _m$pure$17 => {
                                    var $11925 = _m$pure$17;
                                    return $11925;
                                }))(Maybe$none);
                                var $11917 = $11924;
                                break;
                        };
                        var $11907 = $11917;
                        break;
                    case 'Kind.Error.undefined_reference':
                        var $11926 = self.name;
                        var $11927 = IO$monad$((_m$bind$16 => _m$pure$17 => {
                            var $11928 = _m$bind$16;
                            return $11928;
                        }))(Kind$Synth$one$($11926, _defs$9))((_new_defs$16 => {
                            var self = _new_defs$16;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $11930 = self.value;
                                    var $11931 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, $11930, $11906, Bool$true);
                                    var $11929 = $11931;
                                    break;
                                case 'Maybe.none':
                                    var $11932 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _defs$9, $11906, _fixd$11);
                                    var $11929 = $11932;
                                    break;
                            };
                            return $11929;
                        }));
                        var $11907 = $11927;
                        break;
                    case 'Kind.Error.type_mismatch':
                    case 'Kind.Error.show_goal':
                    case 'Kind.Error.indirect':
                    case 'Kind.Error.cant_infer':
                        var $11933 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _defs$9, $11906, _fixd$11);
                        var $11907 = $11933;
                        break;
                };
                var $11904 = $11907;
                break;
            case 'List.nil':
                var self = _fixd$11;
                if (self) {
                    var _type$12 = Kind$Term$bind$(List$nil, (_x$12 => {
                        var $11936 = (_x$12 + '1');
                        return $11936;
                    }), _type$6);
                    var _term$13 = Kind$Term$bind$(List$nil, (_x$13 => {
                        var $11937 = (_x$13 + '0');
                        return $11937;
                    }), _term$5);
                    var _defs$14 = Kind$Map$set$(_name$4, Kind$Def$new$(_file$1, _code$2, _orig$3, _name$4, _term$13, _type$12, _isct$7, _arit$8, Kind$Status$init), _defs$9);
                    var $11935 = IO$monad$((_m$bind$15 => _m$pure$16 => {
                        var $11938 = _m$pure$16;
                        return $11938;
                    }))(Maybe$some$(_defs$14));
                    var $11934 = $11935;
                } else {
                    var $11939 = IO$monad$((_m$bind$12 => _m$pure$13 => {
                        var $11940 = _m$pure$13;
                        return $11940;
                    }))(Maybe$none);
                    var $11934 = $11939;
                };
                var $11904 = $11934;
                break;
        };
        return $11904;
    };
    const Kind$Synth$fix = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => x9 => x10 => Kind$Synth$fix$(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10);

    function Kind$Status$fail$(_errors$1) {
        var $11941 = ({
            _: 'Kind.Status.fail',
            'errors': _errors$1
        });
        return $11941;
    };
    const Kind$Status$fail = x0 => Kind$Status$fail$(x0);

    function Kind$Synth$one$(_name$1, _defs$2) {
        var self = Kind$Map$get$(_name$1, _defs$2);
        switch (self._) {
            case 'Maybe.some':
                var $11943 = self.value;
                var self = $11943;
                switch (self._) {
                    case 'Kind.Def.new':
                        var $11945 = self.file;
                        var $11946 = self.code;
                        var $11947 = self.orig;
                        var $11948 = self.name;
                        var $11949 = self.term;
                        var $11950 = self.type;
                        var $11951 = self.isct;
                        var $11952 = self.arit;
                        var $11953 = self.stat;
                        var _file$13 = $11945;
                        var _code$14 = $11946;
                        var _orig$15 = $11947;
                        var _name$16 = $11948;
                        var _term$17 = $11949;
                        var _type$18 = $11950;
                        var _isct$19 = $11951;
                        var _arit$20 = $11952;
                        var _stat$21 = $11953;
                        var self = _stat$21;
                        switch (self._) {
                            case 'Kind.Status.init':
                                var _defs$22 = Kind$Map$set$(_name$16, Kind$Def$new$(_file$13, _code$14, _orig$15, _name$16, _term$17, _type$18, _isct$19, _arit$20, Kind$Status$wait), _defs$2);
                                var self = Kind$Term$check$(_type$18, Maybe$some$(Kind$Term$typ), _defs$22, List$nil, Kind$Path$Maybe$Builder$i$(Kind$Path$Maybe$Builder$nil), Maybe$none);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11956 = self.value;
                                        var $11957 = self.errors;
                                        var self = $11956;
                                        switch (self._) {
                                            case 'Maybe.none':
                                                var $11959 = Kind$Check$result$(Maybe$none, $11957);
                                                var $11958 = $11959;
                                                break;
                                            case 'Maybe.some':
                                                var self = Kind$Term$check$(_term$17, Maybe$some$(_type$18), _defs$22, List$nil, Kind$Path$Maybe$Builder$o$(Kind$Path$Maybe$Builder$nil), Maybe$none);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11961 = self.value;
                                                        var $11962 = self.errors;
                                                        var self = $11961;
                                                        switch (self._) {
                                                            case 'Maybe.none':
                                                                var $11964 = Kind$Check$result$(Maybe$none, $11962);
                                                                var $11963 = $11964;
                                                                break;
                                                            case 'Maybe.some':
                                                                var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                                                switch (self._) {
                                                                    case 'Kind.Check.result':
                                                                        var $11966 = self.value;
                                                                        var $11967 = self.errors;
                                                                        var $11968 = Kind$Check$result$($11966, List$concat$($11962, $11967));
                                                                        var $11965 = $11968;
                                                                        break;
                                                                };
                                                                var $11963 = $11965;
                                                                break;
                                                        };
                                                        var self = $11963;
                                                        break;
                                                };
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11969 = self.value;
                                                        var $11970 = self.errors;
                                                        var $11971 = Kind$Check$result$($11969, List$concat$($11957, $11970));
                                                        var $11960 = $11971;
                                                        break;
                                                };
                                                var $11958 = $11960;
                                                break;
                                        };
                                        var _checked$23 = $11958;
                                        break;
                                };
                                var self = _checked$23;
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11972 = self.errors;
                                        var self = List$is_empty$($11972);
                                        if (self) {
                                            var _defs$26 = Kind$Map$def$(_file$13, _code$14, _orig$15, _name$16, _term$17, _type$18, _isct$19, _arit$20, Bool$true, _defs$22);
                                            var $11974 = IO$monad$((_m$bind$27 => _m$pure$28 => {
                                                var $11975 = _m$pure$28;
                                                return $11975;
                                            }))(Maybe$some$(_defs$26));
                                            var $11973 = $11974;
                                        } else {
                                            var $11976 = IO$monad$((_m$bind$26 => _m$pure$27 => {
                                                var $11977 = _m$bind$26;
                                                return $11977;
                                            }))(Kind$Synth$fix$(_file$13, _code$14, _orig$15, _name$16, _term$17, _type$18, _isct$19, _arit$20, _defs$22, $11972, Bool$false))((_fixed$26 => {
                                                var self = _fixed$26;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $11979 = self.value;
                                                        var $11980 = Kind$Synth$one$(_name$16, $11979);
                                                        var $11978 = $11980;
                                                        break;
                                                    case 'Maybe.none':
                                                        var _stat$27 = Kind$Status$fail$($11972);
                                                        var _defs$28 = Kind$Map$set$(_name$16, Kind$Def$new$(_file$13, _code$14, _orig$15, _name$16, _term$17, _type$18, _isct$19, _arit$20, _stat$27), _defs$22);
                                                        var $11981 = IO$monad$((_m$bind$29 => _m$pure$30 => {
                                                            var $11982 = _m$pure$30;
                                                            return $11982;
                                                        }))(Maybe$some$(_defs$28));
                                                        var $11978 = $11981;
                                                        break;
                                                };
                                                return $11978;
                                            }));
                                            var $11973 = $11976;
                                        };
                                        var $11955 = $11973;
                                        break;
                                };
                                var $11954 = $11955;
                                break;
                            case 'Kind.Status.wait':
                                var $11983 = IO$monad$((_m$bind$22 => _m$pure$23 => {
                                    var $11984 = _m$pure$23;
                                    return $11984;
                                }))(Maybe$some$(_defs$2));
                                var $11954 = $11983;
                                break;
                            case 'Kind.Status.done':
                            case 'Kind.Status.fail':
                                var $11985 = IO$monad$((_m$bind$23 => _m$pure$24 => {
                                    var $11986 = _m$pure$24;
                                    return $11986;
                                }))(Maybe$some$(_defs$2));
                                var $11954 = $11985;
                                break;
                        };
                        var $11944 = $11954;
                        break;
                };
                var $11942 = $11944;
                break;
            case 'Maybe.none':
                var $11987 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $11988 = _m$bind$3;
                    return $11988;
                }))(IO$get_time)((_time_a$3 => {
                    var $11989 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $11990 = _m$bind$4;
                        return $11990;
                    }))(Kind$Synth$load$(_name$1, _defs$2))((_loaded$4 => {
                        var self = _loaded$4;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11992 = self.value;
                                var $11993 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                                    var $11994 = _m$bind$6;
                                    return $11994;
                                }))(IO$get_time)((_time_b$6 => {
                                    var $11995 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                                        var $11996 = _m$bind$7;
                                        return $11996;
                                    }))(Kind$Synth$one$(_name$1, $11992))((_result$7 => {
                                        var $11997 = IO$monad$((_m$bind$8 => _m$pure$9 => {
                                            var $11998 = _m$bind$8;
                                            return $11998;
                                        }))(IO$get_time)((_time_c$8 => {
                                            var $11999 = IO$monad$((_m$bind$9 => _m$pure$10 => {
                                                var $12000 = _m$pure$10;
                                                return $12000;
                                            }))(_result$7);
                                            return $11999;
                                        }));
                                        return $11997;
                                    }));
                                    return $11995;
                                }));
                                var $11991 = $11993;
                                break;
                            case 'Maybe.none':
                                var $12001 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                                    var $12002 = _m$pure$6;
                                    return $12002;
                                }))(Maybe$none);
                                var $11991 = $12001;
                                break;
                        };
                        return $11991;
                    }));
                    return $11989;
                }));
                var $11942 = $11987;
                break;
        };
        return $11942;
    };
    const Kind$Synth$one = x0 => x1 => Kind$Synth$one$(x0, x1);

    function BitsMap$from_list$(_xs$2) {
        var self = _xs$2;
        switch (self._) {
            case 'List.cons':
                var $12004 = self.head;
                var $12005 = self.tail;
                var self = $12004;
                switch (self._) {
                    case 'Pair.new':
                        var $12007 = self.fst;
                        var $12008 = self.snd;
                        var $12009 = (bitsmap_set($12007, $12008, BitsMap$from_list$($12005), 'set'));
                        var $12006 = $12009;
                        break;
                };
                var $12003 = $12006;
                break;
            case 'List.nil':
                var $12010 = BitsMap$new;
                var $12003 = $12010;
                break;
        };
        return $12003;
    };
    const BitsMap$from_list = x0 => BitsMap$from_list$(x0);
    const Kind$Term$inline$names = (() => {
        var _inl$1 = List$cons$("Monad.pure", List$cons$("Monad.bind", List$cons$("Monad.new", List$cons$("Parser.monad", List$cons$("Parser.bind", List$cons$("Parser.pure", List$cons$("Kind.Check.pure", List$cons$("Kind.Check.bind", List$cons$("Kind.Check.monad", List$cons$("Kind.Check.value", List$cons$("Kind.Check.none", List$nil)))))))))));
        var _kvs$2 = List$mapped$(_inl$1, (_x$2 => {
            var $12012 = Pair$new$((kind_name_to_bits(_x$2)), Unit$new);
            return $12012;
        }));
        var $12011 = BitsMap$from_list$(_kvs$2);
        return $12011;
    })();

    function Kind$Term$inline$reduce$(_term$1, _defs$2) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $12014 = self.name;
                var _inli$4 = BitsSet$has$((kind_name_to_bits($12014)), Kind$Term$inline$names);
                var self = _inli$4;
                if (self) {
                    var self = Kind$Map$get$($12014, _defs$2);
                    switch (self._) {
                        case 'Maybe.some':
                            var $12017 = self.value;
                            var self = $12017;
                            switch (self._) {
                                case 'Kind.Def.new':
                                    var $12019 = self.term;
                                    var $12020 = Kind$Term$inline$reduce$($12019, _defs$2);
                                    var $12018 = $12020;
                                    break;
                            };
                            var $12016 = $12018;
                            break;
                        case 'Maybe.none':
                            var $12021 = Kind$Term$ref$($12014);
                            var $12016 = $12021;
                            break;
                    };
                    var $12015 = $12016;
                } else {
                    var $12022 = _term$1;
                    var $12015 = $12022;
                };
                var $12013 = $12015;
                break;
            case 'Kind.Term.app':
                var $12023 = self.func;
                var $12024 = self.argm;
                var _func$5 = Kind$Term$inline$reduce$($12023, _defs$2);
                var self = _func$5;
                switch (self._) {
                    case 'Kind.Term.lam':
                        var $12026 = self.body;
                        var $12027 = Kind$Term$inline$reduce$($12026($12024), _defs$2);
                        var $12025 = $12027;
                        break;
                    case 'Kind.Term.let':
                        var $12028 = self.name;
                        var $12029 = self.expr;
                        var $12030 = self.body;
                        var $12031 = Kind$Term$let$($12028, $12029, (_x$9 => {
                            var $12032 = Kind$Term$inline$reduce$(Kind$Term$app$($12030(_x$9), $12024), _defs$2);
                            return $12032;
                        }));
                        var $12025 = $12031;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.app':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $12033 = _term$1;
                        var $12025 = $12033;
                        break;
                };
                var $12013 = $12025;
                break;
            case 'Kind.Term.ori':
                var $12034 = self.expr;
                var $12035 = Kind$Term$inline$reduce$($12034, _defs$2);
                var $12013 = $12035;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $12036 = _term$1;
                var $12013 = $12036;
                break;
        };
        return $12013;
    };
    const Kind$Term$inline$reduce = x0 => x1 => Kind$Term$inline$reduce$(x0, x1);

    function Kind$Term$inline$(_term$1, _defs$2) {
        var self = Kind$Term$inline$reduce$(_term$1, _defs$2);
        switch (self._) {
            case 'Kind.Term.var':
                var $12038 = self.name;
                var $12039 = self.indx;
                var $12040 = Kind$Term$var$($12038, $12039);
                var $12037 = $12040;
                break;
            case 'Kind.Term.ref':
                var $12041 = self.name;
                var $12042 = Kind$Term$ref$($12041);
                var $12037 = $12042;
                break;
            case 'Kind.Term.all':
                var $12043 = self.eras;
                var $12044 = self.self;
                var $12045 = self.name;
                var $12046 = self.xtyp;
                var $12047 = self.body;
                var $12048 = Kind$Term$all$($12043, $12044, $12045, Kind$Term$inline$($12046, _defs$2), (_s$8 => _x$9 => {
                    var $12049 = Kind$Term$inline$($12047(_s$8)(_x$9), _defs$2);
                    return $12049;
                }));
                var $12037 = $12048;
                break;
            case 'Kind.Term.lam':
                var $12050 = self.name;
                var $12051 = self.body;
                var $12052 = Kind$Term$lam$($12050, (_x$5 => {
                    var $12053 = Kind$Term$inline$($12051(_x$5), _defs$2);
                    return $12053;
                }));
                var $12037 = $12052;
                break;
            case 'Kind.Term.app':
                var $12054 = self.func;
                var $12055 = self.argm;
                var $12056 = Kind$Term$app$(Kind$Term$inline$($12054, _defs$2), Kind$Term$inline$($12055, _defs$2));
                var $12037 = $12056;
                break;
            case 'Kind.Term.let':
                var $12057 = self.name;
                var $12058 = self.expr;
                var $12059 = self.body;
                var $12060 = Kind$Term$let$($12057, Kind$Term$inline$($12058, _defs$2), (_x$6 => {
                    var $12061 = Kind$Term$inline$($12059(_x$6), _defs$2);
                    return $12061;
                }));
                var $12037 = $12060;
                break;
            case 'Kind.Term.ann':
                var $12062 = self.done;
                var $12063 = self.term;
                var $12064 = self.type;
                var $12065 = Kind$Term$ann$($12062, Kind$Term$inline$($12063, _defs$2), Kind$Term$inline$($12064, _defs$2));
                var $12037 = $12065;
                break;
            case 'Kind.Term.gol':
                var $12066 = self.name;
                var $12067 = self.dref;
                var $12068 = self.verb;
                var $12069 = Kind$Term$gol$($12066, $12067, $12068);
                var $12037 = $12069;
                break;
            case 'Kind.Term.hol':
                var $12070 = self.path;
                var $12071 = Kind$Term$hol$($12070);
                var $12037 = $12071;
                break;
            case 'Kind.Term.nat':
                var $12072 = self.natx;
                var $12073 = Kind$Term$nat$($12072);
                var $12037 = $12073;
                break;
            case 'Kind.Term.chr':
                var $12074 = self.chrx;
                var $12075 = Kind$Term$chr$($12074);
                var $12037 = $12075;
                break;
            case 'Kind.Term.str':
                var $12076 = self.strx;
                var $12077 = Kind$Term$str$($12076);
                var $12037 = $12077;
                break;
            case 'Kind.Term.ori':
                var $12078 = self.expr;
                var $12079 = Kind$Term$inline$($12078, _defs$2);
                var $12037 = $12079;
                break;
            case 'Kind.Term.typ':
                var $12080 = Kind$Term$typ;
                var $12037 = $12080;
                break;
            case 'Kind.Term.def':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $12081 = _term$1;
                var $12037 = $12081;
                break;
        };
        return $12037;
    };
    const Kind$Term$inline = x0 => x1 => Kind$Term$inline$(x0, x1);

    function BitsMap$values$go$(_xs$2, _list$3) {
        var self = _xs$2;
        switch (self._) {
            case 'BitsMap.tie':
                var $12083 = self.val;
                var $12084 = self.lft;
                var $12085 = self.rgt;
                var self = $12083;
                switch (self._) {
                    case 'Maybe.some':
                        var $12087 = self.value;
                        var $12088 = List$cons$($12087, _list$3);
                        var _list0$7 = $12088;
                        break;
                    case 'Maybe.none':
                        var $12089 = _list$3;
                        var _list0$7 = $12089;
                        break;
                };
                var _list1$8 = BitsMap$values$go$($12084, _list0$7);
                var _list2$9 = BitsMap$values$go$($12085, _list1$8);
                var $12086 = _list2$9;
                var $12082 = $12086;
                break;
            case 'BitsMap.new':
                var $12090 = _list$3;
                var $12082 = $12090;
                break;
        };
        return $12082;
    };
    const BitsMap$values$go = x0 => x1 => BitsMap$values$go$(x0, x1);

    function BitsMap$values$(_xs$2) {
        var $12091 = BitsMap$values$go$(_xs$2, List$nil);
        return $12091;
    };
    const BitsMap$values = x0 => BitsMap$values$(x0);

    function Kind$Core$var_name$(_indx$1, _name$2, _brui$3, _vars$4) {
        var Kind$Core$var_name$ = (_indx$1, _name$2, _brui$3, _vars$4) => ({
            ctr: 'TCO',
            arg: [_indx$1, _name$2, _brui$3, _vars$4]
        });
        var Kind$Core$var_name = _indx$1 => _name$2 => _brui$3 => _vars$4 => Kind$Core$var_name$(_indx$1, _name$2, _brui$3, _vars$4);
        var arg = [_indx$1, _name$2, _brui$3, _vars$4];
        while (true) {
            let [_indx$1, _name$2, _brui$3, _vars$4] = arg;
            var R = (() => {
                var self = _indx$1;
                if (self === 0n) {
                    var self = _brui$3;
                    if (self === 0n) {
                        var $12093 = _name$2;
                        var $12092 = $12093;
                    } else {
                        var $12094 = (self - 1n);
                        var $12095 = (_name$2 + ("^" + Nat$show$(_brui$3)));
                        var $12092 = $12095;
                    };
                    return $12092;
                } else {
                    var $12096 = (self - 1n);
                    var self = _vars$4;
                    switch (self._) {
                        case 'List.cons':
                            var $12098 = self.head;
                            var $12099 = self.tail;
                            var self = (_name$2 === $12098);
                            if (self) {
                                var $12101 = Nat$succ$(_brui$3);
                                var _brui$8 = $12101;
                            } else {
                                var $12102 = _brui$3;
                                var _brui$8 = $12102;
                            };
                            var $12100 = Kind$Core$var_name$($12096, _name$2, _brui$8, $12099);
                            var $12097 = $12100;
                            break;
                        case 'List.nil':
                            var $12103 = "unbound";
                            var $12097 = $12103;
                            break;
                    };
                    return $12097;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$var_name = x0 => x1 => x2 => x3 => Kind$Core$var_name$(x0, x1, x2, x3);

    function Kind$Name$show$(_name$1) {
        var $12104 = _name$1;
        return $12104;
    };
    const Kind$Name$show = x0 => Kind$Name$show$(x0);

    function Bits$to_nat$(_b$1) {
        var self = _b$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $12106 = self.slice(0, -1);
                var $12107 = (2n * Bits$to_nat$($12106));
                var $12105 = $12107;
                break;
            case 'i':
                var $12108 = self.slice(0, -1);
                var $12109 = Nat$succ$((2n * Bits$to_nat$($12108)));
                var $12105 = $12109;
                break;
            case 'e':
                var $12110 = 0n;
                var $12105 = $12110;
                break;
        };
        return $12105;
    };
    const Bits$to_nat = x0 => Bits$to_nat$(x0);

    function U16$show_hex$(_a$1) {
        var self = _a$1;
        switch ('u16') {
            case 'u16':
                var $12112 = u16_to_word(self);
                var $12113 = Nat$to_string_base$(16n, Bits$to_nat$(Word$to_bits$($12112)));
                var $12111 = $12113;
                break;
        };
        return $12111;
    };
    const U16$show_hex = x0 => U16$show_hex$(x0);

    function Kind$Code$escape$char$(_chr$1) {
        var self = (_chr$1 === Kind$Code$backslash);
        if (self) {
            var $12115 = String$cons$(Kind$Code$backslash, String$cons$(_chr$1, String$nil));
            var $12114 = $12115;
        } else {
            var self = (_chr$1 === 34);
            if (self) {
                var $12117 = String$cons$(Kind$Code$backslash, String$cons$(_chr$1, String$nil));
                var $12116 = $12117;
            } else {
                var self = (_chr$1 === 39);
                if (self) {
                    var $12119 = String$cons$(Kind$Code$backslash, String$cons$(_chr$1, String$nil));
                    var $12118 = $12119;
                } else {
                    var self = U16$btw$(32, _chr$1, 126);
                    if (self) {
                        var $12121 = String$cons$(_chr$1, String$nil);
                        var $12120 = $12121;
                    } else {
                        var $12122 = (String$cons$(Kind$Code$backslash, String$nil) + ("u{" + (U16$show_hex$(_chr$1) + "}")));
                        var $12120 = $12122;
                    };
                    var $12118 = $12120;
                };
                var $12116 = $12118;
            };
            var $12114 = $12116;
        };
        return $12114;
    };
    const Kind$Code$escape$char = x0 => Kind$Code$escape$char$(x0);

    function Kind$Code$escape$go$(_str$1, _result$2) {
        var Kind$Code$escape$go$ = (_str$1, _result$2) => ({
            ctr: 'TCO',
            arg: [_str$1, _result$2]
        });
        var Kind$Code$escape$go = _str$1 => _result$2 => Kind$Code$escape$go$(_str$1, _result$2);
        var arg = [_str$1, _result$2];
        while (true) {
            let [_str$1, _result$2] = arg;
            var R = (() => {
                var self = _str$1;
                if (self.length === 0) {
                    var $12123 = String$reverse$(_result$2);
                    return $12123;
                } else {
                    var $12124 = self.charCodeAt(0);
                    var $12125 = self.slice(1);
                    var $12126 = Kind$Code$escape$go$($12125, (String$reverse$(Kind$Code$escape$char$($12124)) + _result$2));
                    return $12126;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Code$escape$go = x0 => x1 => Kind$Code$escape$go$(x0, x1);

    function Kind$Code$escape$(_str$1) {
        var $12127 = Kind$Code$escape$go$(_str$1, "");
        return $12127;
    };
    const Kind$Code$escape = x0 => Kind$Code$escape$(x0);

    function Kind$Core$show$go$(_term$1, _indx$2, _vars$3) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.var':
                var $12129 = self.name;
                var $12130 = self.indx;
                var $12131 = Kind$Core$var_name$(Nat$pred$((_indx$2 - $12130 <= 0n ? 0n : _indx$2 - $12130)), $12129, 0n, _vars$3);
                var $12128 = $12131;
                break;
            case 'Kind.Term.ref':
                var $12132 = self.name;
                var $12133 = Kind$Name$show$($12132);
                var $12128 = $12133;
                break;
            case 'Kind.Term.all':
                var $12134 = self.eras;
                var $12135 = self.self;
                var $12136 = self.name;
                var $12137 = self.xtyp;
                var $12138 = self.body;
                var _eras$9 = $12134;
                var self = _eras$9;
                if (self) {
                    var $12140 = "%";
                    var _init$10 = $12140;
                } else {
                    var $12141 = "@";
                    var _init$10 = $12141;
                };
                var _self$11 = Kind$Name$show$($12135);
                var _name$12 = Kind$Name$show$($12136);
                var _xtyp$13 = Kind$Core$show$go$($12137, _indx$2, _vars$3);
                var _body$14 = Kind$Core$show$go$($12138(Kind$Term$var$($12135, _indx$2))(Kind$Term$var$($12136, Nat$succ$(_indx$2))), Nat$succ$(Nat$succ$(_indx$2)), List$cons$($12136, List$cons$($12135, _vars$3)));
                var $12139 = String$flatten$(List$cons$(_init$10, List$cons$(_self$11, List$cons$("(", List$cons$(_name$12, List$cons$(":", List$cons$(_xtyp$13, List$cons$(") ", List$cons$(_body$14, List$nil)))))))));
                var $12128 = $12139;
                break;
            case 'Kind.Term.lam':
                var $12142 = self.name;
                var $12143 = self.body;
                var _name$6 = Kind$Name$show$($12142);
                var _body$7 = Kind$Core$show$go$($12143(Kind$Term$var$($12142, _indx$2)), Nat$succ$(_indx$2), List$cons$($12142, _vars$3));
                var $12144 = String$flatten$(List$cons$("#", List$cons$(_name$6, List$cons$(" ", List$cons$(_body$7, List$nil)))));
                var $12128 = $12144;
                break;
            case 'Kind.Term.app':
                var $12145 = self.func;
                var $12146 = self.argm;
                var _func$6 = Kind$Core$show$go$($12145, _indx$2, _vars$3);
                var _argm$7 = Kind$Core$show$go$($12146, _indx$2, _vars$3);
                var $12147 = String$flatten$(List$cons$("(", List$cons$(_func$6, List$cons$(" ", List$cons$(_argm$7, List$cons$(")", List$nil))))));
                var $12128 = $12147;
                break;
            case 'Kind.Term.let':
                var $12148 = self.name;
                var $12149 = self.expr;
                var $12150 = self.body;
                var _name$7 = Kind$Name$show$($12148);
                var _expr$8 = Kind$Core$show$go$($12149, _indx$2, _vars$3);
                var _body$9 = Kind$Core$show$go$($12150(Kind$Term$var$($12148, _indx$2)), Nat$succ$(_indx$2), List$cons$($12148, _vars$3));
                var $12151 = String$flatten$(List$cons$("!", List$cons$(_name$7, List$cons$(" = ", List$cons$(_expr$8, List$cons$("; ", List$cons$(_body$9, List$nil)))))));
                var $12128 = $12151;
                break;
            case 'Kind.Term.def':
                var $12152 = self.name;
                var $12153 = self.expr;
                var $12154 = self.body;
                var _name$7 = Kind$Name$show$($12152);
                var _expr$8 = Kind$Core$show$go$($12153, _indx$2, _vars$3);
                var _body$9 = Kind$Core$show$go$($12154(Kind$Term$var$($12152, _indx$2)), Nat$succ$(_indx$2), List$cons$($12152, _vars$3));
                var $12155 = String$flatten$(List$cons$("$", List$cons$(_name$7, List$cons$(" = ", List$cons$(_expr$8, List$cons$("; ", List$cons$(_body$9, List$nil)))))));
                var $12128 = $12155;
                break;
            case 'Kind.Term.ann':
                var $12156 = self.term;
                var $12157 = self.type;
                var _term$7 = Kind$Core$show$go$($12156, _indx$2, _vars$3);
                var _type$8 = Kind$Core$show$go$($12157, _indx$2, _vars$3);
                var $12158 = String$flatten$(List$cons$("{", List$cons$(_term$7, List$cons$(":", List$cons$(_type$8, List$cons$("}", List$nil))))));
                var $12128 = $12158;
                break;
            case 'Kind.Term.nat':
                var $12159 = self.natx;
                var $12160 = String$flatten$(List$cons$("+", List$cons$(Nat$show$($12159), List$nil)));
                var $12128 = $12160;
                break;
            case 'Kind.Term.chr':
                var $12161 = self.chrx;
                var $12162 = String$flatten$(List$cons$("\'", List$cons$(Kind$Code$escape$char$($12161), List$cons$("\'", List$nil))));
                var $12128 = $12162;
                break;
            case 'Kind.Term.str':
                var $12163 = self.strx;
                var $12164 = String$flatten$(List$cons$("\"", List$cons$(Kind$Code$escape$($12163), List$cons$("\"", List$nil))));
                var $12128 = $12164;
                break;
            case 'Kind.Term.ori':
                var $12165 = self.expr;
                var $12166 = Kind$Core$show$go$($12165, _indx$2, _vars$3);
                var $12128 = $12166;
                break;
            case 'Kind.Term.typ':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $12167 = "*";
                var $12128 = $12167;
                break;
        };
        return $12128;
    };
    const Kind$Core$show$go = x0 => x1 => x2 => Kind$Core$show$go$(x0, x1, x2);

    function Kind$Core$show$(_term$1) {
        var $12168 = Kind$Core$show$go$(_term$1, 0n, List$nil);
        return $12168;
    };
    const Kind$Core$show = x0 => Kind$Core$show$(x0);

    function Kind$Defs$core$(_defs$1) {
        var _result$2 = "";
        var _result$3 = (() => {
            var $12171 = _result$2;
            var $12172 = BitsMap$values$(_defs$1);
            let _result$4 = $12171;
            let _defn$3;
            while ($12172._ === 'List.cons') {
                _defn$3 = $12172.head;
                var self = _defn$3;
                switch (self._) {
                    case 'Kind.Def.new':
                        var $12173 = self.name;
                        var $12174 = self.term;
                        var $12175 = self.type;
                        var $12176 = self.stat;
                        var self = $12176;
                        switch (self._) {
                            case 'Kind.Status.init':
                            case 'Kind.Status.wait':
                            case 'Kind.Status.fail':
                                var $12178 = _result$4;
                                var $12177 = $12178;
                                break;
                            case 'Kind.Status.done':
                                var _name$15 = $12173;
                                var _term$16 = Kind$Core$show$($12174);
                                var _type$17 = Kind$Core$show$($12175);
                                var $12179 = String$flatten$(List$cons$(_result$4, List$cons$(_name$15, List$cons$(" : ", List$cons$(_type$17, List$cons$(" = ", List$cons$(_term$16, List$cons$(";\u{a}", List$nil))))))));
                                var $12177 = $12179;
                                break;
                        };
                        var $12171 = $12177;
                        break;
                };
                _result$4 = $12171;
                $12172 = $12172.tail;
            }
            return _result$4;
        })();
        var $12169 = _result$3;
        return $12169;
    };
    const Kind$Defs$core = x0 => Kind$Defs$core$(x0);

    function Kind$api$io$term_to_core$(_name$1) {
        var $12180 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $12181 = _m$bind$2;
            return $12181;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_new_defs$2 => {
            var self = _new_defs$2;
            switch (self._) {
                case 'Maybe.some':
                    var $12183 = self.value;
                    var $12184 = $12183;
                    var _defs$3 = $12184;
                    break;
                case 'Maybe.none':
                    var $12185 = Kind$Map$new;
                    var _defs$3 = $12185;
                    break;
            };
            var _defs$4 = BitsMap$map$((_defn$4 => {
                var self = _defn$4;
                switch (self._) {
                    case 'Kind.Def.new':
                        var $12187 = self.file;
                        var $12188 = self.code;
                        var $12189 = self.orig;
                        var $12190 = self.name;
                        var $12191 = self.term;
                        var $12192 = self.type;
                        var $12193 = self.isct;
                        var $12194 = self.arit;
                        var $12195 = self.stat;
                        var _term$14 = Kind$Term$inline$($12191, _defs$3);
                        var _type$15 = Kind$Term$inline$($12192, _defs$3);
                        var $12196 = Kind$Def$new$($12187, $12188, $12189, $12190, _term$14, _type$15, $12193, $12194, $12195);
                        var $12186 = $12196;
                        break;
                };
                return $12186;
            }), _defs$3);
            var $12182 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                var $12197 = _m$pure$6;
                return $12197;
            }))(Kind$Defs$core$(_defs$4));
            return $12182;
        }));
        return $12180;
    };
    const Kind$api$io$term_to_core = x0 => Kind$api$io$term_to_core$(x0);

    function Kind$Comp$Defs$compile$defn$adjust$(_defn$1, _defs$2) {
        var self = _defn$1;
        switch (self._) {
            case 'Kind.Def.new':
                var $12199 = self.file;
                var $12200 = self.code;
                var $12201 = self.orig;
                var $12202 = self.name;
                var $12203 = self.term;
                var $12204 = self.type;
                var $12205 = self.isct;
                var $12206 = self.arit;
                var $12207 = self.stat;
                var _term$12 = Kind$Term$inline$($12203, _defs$2);
                var _type$13 = Kind$Term$inline$($12204, _defs$2);
                var $12208 = Kind$Def$new$($12199, $12200, $12201, $12202, _term$12, _type$13, $12205, $12206, $12207);
                var $12198 = $12208;
                break;
        };
        return $12198;
    };
    const Kind$Comp$Defs$compile$defn$adjust = x0 => x1 => Kind$Comp$Defs$compile$defn$adjust$(x0, x1);

    function Kind$Comp$var$(_name$1) {
        var $12209 = ({
            _: 'Kind.Comp.var',
            'name': _name$1
        });
        return $12209;
    };
    const Kind$Comp$var = x0 => Kind$Comp$var$(x0);
    const Kind$Comp$nil = ({
        _: 'Kind.Comp.nil'
    });

    function Kind$Comp$ref$(_name$1) {
        var $12210 = ({
            _: 'Kind.Comp.ref',
            'name': _name$1
        });
        return $12210;
    };
    const Kind$Comp$ref = x0 => Kind$Comp$ref$(x0);
    const Kind$Comp$Prim$bool = ({
        _: 'Kind.Comp.Prim.bool'
    });
    const Kind$Comp$Prim$nat = ({
        _: 'Kind.Comp.Prim.nat'
    });
    const Kind$Comp$Prim$bits = ({
        _: 'Kind.Comp.Prim.bits'
    });
    const Kind$Comp$Prim$u16 = ({
        _: 'Kind.Comp.Prim.u16'
    });
    const Kind$Comp$Prim$u32 = ({
        _: 'Kind.Comp.Prim.u32'
    });
    const Kind$Comp$Prim$string = ({
        _: 'Kind.Comp.Prim.string'
    });
    const Kind$Comp$Prim$natives = List$cons$(Pair$new$("Bool", Kind$Comp$Prim$bool), List$cons$(Pair$new$("Nat", Kind$Comp$Prim$nat), List$cons$(Pair$new$("Bits", Kind$Comp$Prim$bits), List$cons$(Pair$new$("U16", Kind$Comp$Prim$u16), List$cons$(Pair$new$("U32", Kind$Comp$Prim$u32), List$cons$(Pair$new$("String", Kind$Comp$Prim$string), List$nil))))));

    function Kind$Term$equal$(_a$1, _b$2, _defs$3) {
        var self = Kind$Term$equal$go$(_a$1, _b$2, _defs$3, 0n, BitsSet$new);
        switch (self._) {
            case 'Kind.Check.result':
                var $12212 = self.value;
                var $12213 = Maybe$default$($12212, Bool$false);
                var $12211 = $12213;
                break;
        };
        return $12211;
    };
    const Kind$Term$equal = x0 => x1 => x2 => Kind$Term$equal$(x0, x1, x2);

    function Kind$Comp$compile$prim_of$(_type$1, _defs$2) {
        var _result$3 = Maybe$none;
        var _result$4 = (() => {
            var $12216 = _result$3;
            var $12217 = Kind$Comp$Prim$natives;
            let _result$5 = $12216;
            let _prim$4;
            while ($12217._ === 'List.cons') {
                _prim$4 = $12217.head;
                var self = _prim$4;
                switch (self._) {
                    case 'Pair.new':
                        var $12218 = self.fst;
                        var $12219 = self.snd;
                        var self = _result$5;
                        switch (self._) {
                            case 'Maybe.none':
                                var self = Kind$Term$equal$(_type$1, Kind$Term$ref$($12218), _defs$2);
                                if (self) {
                                    var $12222 = Maybe$some$($12219);
                                    var $12221 = $12222;
                                } else {
                                    var $12223 = Maybe$none;
                                    var $12221 = $12223;
                                };
                                var $12220 = $12221;
                                break;
                            case 'Maybe.some':
                                var $12224 = _result$5;
                                var $12220 = $12224;
                                break;
                        };
                        var $12216 = $12220;
                        break;
                };
                _result$5 = $12216;
                $12217 = $12217.tail;
            }
            return _result$5;
        })();
        var $12214 = _result$4;
        return $12214;
    };
    const Kind$Comp$compile$prim_of = x0 => x1 => Kind$Comp$compile$prim_of$(x0, x1);

    function String$ends_with$(_xs$1, _match$2) {
        var _xs_reserved$3 = String$reverse$(_xs$1);
        var _match_reversed$4 = String$reverse$(_match$2);
        var $12225 = String$starts_with$(_xs_reserved$3, _match_reversed$4);
        return $12225;
    };
    const String$ends_with = x0 => x1 => String$ends_with$(x0, x1);

    function Kind$Comp$compile$adt$get_fields$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.all':
                var $12227 = self.eras;
                var $12228 = self.name;
                var $12229 = self.body;
                var _head$7 = $12228;
                var _tail$8 = Kind$Comp$compile$adt$get_fields$($12229(Kind$Term$var$("", 0n))(Kind$Term$var$("", 0n)));
                var self = $12227;
                if (self) {
                    var $12231 = _tail$8;
                    var $12230 = $12231;
                } else {
                    var $12232 = List$cons$(_head$7, _tail$8);
                    var $12230 = $12232;
                };
                var $12226 = $12230;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $12233 = List$nil;
                var $12226 = $12233;
                break;
        };
        return $12226;
    };
    const Kind$Comp$compile$adt$get_fields = x0 => Kind$Comp$compile$adt$get_fields$(x0);

    function Kind$Comp$compile$adt$get_constructors$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.all':
                var $12235 = self.name;
                var $12236 = self.xtyp;
                var $12237 = self.body;
                var _tail$7 = Kind$Comp$compile$adt$get_constructors$($12237(Kind$Term$var$("", 0n))(Kind$Term$var$("", 0n)));
                var _name$8 = $12235;
                var _flds$9 = Kind$Comp$compile$adt$get_fields$($12236);
                var $12238 = List$cons$(Pair$new$(_name$8, _flds$9), _tail$7);
                var $12234 = $12238;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $12239 = List$nil;
                var $12234 = $12239;
                break;
        };
        return $12234;
    };
    const Kind$Comp$compile$adt$get_constructors = x0 => Kind$Comp$compile$adt$get_constructors$(x0);

    function Kind$Comp$Prim$data$(_name$1, _ctrs$2) {
        var $12240 = ({
            _: 'Kind.Comp.Prim.data',
            'name': _name$1,
            'ctrs': _ctrs$2
        });
        return $12240;
    };
    const Kind$Comp$Prim$data = x0 => x1 => Kind$Comp$Prim$data$(x0, x1);

    function Kind$Comp$compile$adt$(_term$1, _defs$2) {
        var _term$3 = Kind$Term$reduce$(_term$1, _defs$2);
        var self = _term$3;
        switch (self._) {
            case 'Kind.Term.all':
                var $12242 = self.self;
                var $12243 = self.body;
                var self = String$ends_with$($12242, ".Self");
                if (self) {
                    var _body$9 = $12243(Kind$Term$var$("", 0n))(Kind$Term$var$("", 0n));
                    var _data$10 = Kind$Comp$compile$adt$get_constructors$(_body$9);
                    var _name$11 = String$take$((String$length$($12242) - 5n <= 0n ? 0n : String$length$($12242) - 5n), $12242);
                    var $12245 = Maybe$some$(Kind$Comp$Prim$data$(_name$11, _data$10));
                    var $12244 = $12245;
                } else {
                    var $12246 = Maybe$none;
                    var $12244 = $12246;
                };
                var $12241 = $12244;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $12247 = Maybe$none;
                var $12241 = $12247;
                break;
        };
        return $12241;
    };
    const Kind$Comp$compile$adt = x0 => x1 => Kind$Comp$compile$adt$(x0, x1);

    function Kind$Comp$eli$(_prim$1, _expr$2) {
        var $12248 = ({
            _: 'Kind.Comp.eli',
            'prim': _prim$1,
            'expr': _expr$2
        });
        return $12248;
    };
    const Kind$Comp$eli = x0 => x1 => Kind$Comp$eli$(x0, x1);

    function Kind$Comp$app$(_func$1, _argm$2) {
        var $12249 = ({
            _: 'Kind.Comp.app',
            'func': _func$1,
            'argm': _argm$2
        });
        return $12249;
    };
    const Kind$Comp$app = x0 => x1 => Kind$Comp$app$(x0, x1);

    function Kind$Comp$let$(_name$1, _expr$2, _body$3) {
        var $12250 = ({
            _: 'Kind.Comp.let',
            'name': _name$1,
            'expr': _expr$2,
            'body': _body$3
        });
        return $12250;
    };
    const Kind$Comp$let = x0 => x1 => x2 => Kind$Comp$let$(x0, x1, x2);

    function Kind$Comp$nat$(_natx$1) {
        var $12251 = ({
            _: 'Kind.Comp.nat',
            'natx': _natx$1
        });
        return $12251;
    };
    const Kind$Comp$nat = x0 => Kind$Comp$nat$(x0);

    function Kind$Comp$chr$(_chrx$1) {
        var $12252 = ({
            _: 'Kind.Comp.chr',
            'chrx': _chrx$1
        });
        return $12252;
    };
    const Kind$Comp$chr = x0 => Kind$Comp$chr$(x0);

    function Kind$Comp$str$(_strx$1) {
        var $12253 = ({
            _: 'Kind.Comp.str',
            'strx': _strx$1
        });
        return $12253;
    };
    const Kind$Comp$str = x0 => Kind$Comp$str$(x0);

    function Kind$Comp$lam$(_name$1, _body$2) {
        var $12254 = ({
            _: 'Kind.Comp.lam',
            'name': _name$1,
            'body': _body$2
        });
        return $12254;
    };
    const Kind$Comp$lam = x0 => x1 => Kind$Comp$lam$(x0, x1);

    function Kind$Comp$ins$(_prim$1, _expr$2) {
        var $12255 = ({
            _: 'Kind.Comp.ins',
            'prim': _prim$1,
            'expr': _expr$2
        });
        return $12255;
    };
    const Kind$Comp$ins = x0 => x1 => Kind$Comp$ins$(x0, x1);

    function Kind$Comp$compile$(_term$1, _type$2, _defs$3, _size$4) {
        var self = _type$2;
        switch (self._) {
            case 'Maybe.some':
                var $12257 = self.value;
                var _typv$6 = Kind$Term$reduce$($12257, _defs$3);
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.lam':
                        var $12259 = self.name;
                        var $12260 = self.body;
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.all':
                                var $12262 = self.eras;
                                var $12263 = self.xtyp;
                                var $12264 = self.body;
                                var _self_var$14 = Kind$Term$ann$(Bool$true, _term$1, $12257);
                                var _name_uid$15 = ($12259 + ("$" + Nat$show$(_size$4)));
                                var _name_var$16 = Kind$Term$ann$(Bool$true, Kind$Term$var$(_name_uid$15, (_size$4 + 1n)), $12263);
                                var _body_typ$17 = $12264(_self_var$14)(_name_var$16);
                                var self = Kind$Comp$compile$($12260(_name_var$16), Maybe$some$(_body_typ$17), _defs$3, (_size$4 + 1n));
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12266 = self.fst;
                                        var self = $12262;
                                        if (self) {
                                            var $12268 = $12266;
                                            var _term_cmp$20 = $12268;
                                        } else {
                                            var $12269 = Kind$Comp$lam$(_name_uid$15, $12266);
                                            var _term_cmp$20 = $12269;
                                        };
                                        var self = Kind$Comp$compile$prim_of$($12257, _defs$3);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $12270 = self.value;
                                                var $12271 = Kind$Comp$ins$($12270, _term_cmp$20);
                                                var _term_cmp$21 = $12271;
                                                break;
                                            case 'Maybe.none':
                                                var self = Kind$Comp$compile$adt$($12257, _defs$3);
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $12273 = self.value;
                                                        var $12274 = Kind$Comp$ins$($12273, _term_cmp$20);
                                                        var $12272 = $12274;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $12275 = _term_cmp$20;
                                                        var $12272 = $12275;
                                                        break;
                                                };
                                                var _term_cmp$21 = $12272;
                                                break;
                                        };
                                        var $12267 = Pair$new$(_term_cmp$21, $12257);
                                        var $12265 = $12267;
                                        break;
                                };
                                var $12261 = $12265;
                                break;
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.typ':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12276 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12261 = $12276;
                                break;
                        };
                        var $12258 = $12261;
                        break;
                    case 'Kind.Term.let':
                        var $12277 = self.name;
                        var $12278 = self.expr;
                        var $12279 = self.body;
                        var self = Kind$Comp$compile$($12278, Maybe$none, _defs$3, _size$4);
                        switch (self._) {
                            case 'Pair.new':
                                var $12281 = self.fst;
                                var $12282 = self.snd;
                                var _name_uid$12 = ($12277 + ("$" + Nat$show$(_size$4)));
                                var _expr_var$13 = Kind$Term$ann$(Bool$true, Kind$Term$var$(_name_uid$12, (_size$4 + 1n)), $12282);
                                var self = Kind$Comp$compile$($12279(_expr_var$13), _type$2, _defs$3, (_size$4 + 1n));
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12284 = self.fst;
                                        var $12285 = self.snd;
                                        var _term_cmp$16 = Kind$Comp$let$(_name_uid$12, $12281, $12284);
                                        var _term_typ$17 = $12285;
                                        var $12286 = Pair$new$(_term_cmp$16, _term_typ$17);
                                        var $12283 = $12286;
                                        break;
                                };
                                var $12280 = $12283;
                                break;
                        };
                        var $12258 = $12280;
                        break;
                    case 'Kind.Term.ori':
                        var $12287 = self.expr;
                        var $12288 = Kind$Comp$compile$($12287, _type$2, _defs$3, _size$4);
                        var $12258 = $12288;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.app':
                    case 'Kind.Term.get':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12290 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $12257);
                                var $12289 = $12290;
                                break;
                            case 'Kind.Term.typ':
                                var $12291 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12289 = $12291;
                                break;
                        };
                        var $12258 = $12289;
                        break;
                    case 'Kind.Term.ref':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.new':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12293 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $12257);
                                var $12292 = $12293;
                                break;
                            case 'Kind.Term.typ':
                                var $12294 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12292 = $12294;
                                break;
                        };
                        var $12258 = $12292;
                        break;
                    case 'Kind.Term.typ':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12296 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $12257);
                                var $12295 = $12296;
                                break;
                            case 'Kind.Term.typ':
                                var $12297 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12295 = $12297;
                                break;
                        };
                        var $12258 = $12295;
                        break;
                    case 'Kind.Term.all':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12299 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $12257);
                                var $12298 = $12299;
                                break;
                            case 'Kind.Term.typ':
                                var $12300 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12298 = $12300;
                                break;
                        };
                        var $12258 = $12298;
                        break;
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.num':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12302 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $12257);
                                var $12301 = $12302;
                                break;
                            case 'Kind.Term.typ':
                                var $12303 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12301 = $12303;
                                break;
                        };
                        var $12258 = $12301;
                        break;
                    case 'Kind.Term.cse':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12305 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $12257);
                                var $12304 = $12305;
                                break;
                            case 'Kind.Term.typ':
                                var $12306 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12304 = $12306;
                                break;
                        };
                        var $12258 = $12304;
                        break;
                };
                var $12256 = $12258;
                break;
            case 'Maybe.none':
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.var':
                        var $12308 = self.name;
                        var $12309 = self.indx;
                        var $12310 = Pair$new$(Kind$Comp$var$($12308), Kind$Term$var$($12308, $12309));
                        var $12307 = $12310;
                        break;
                    case 'Kind.Term.ref':
                        var $12311 = self.name;
                        var self = Kind$Map$get$($12311, _defs$3);
                        switch (self._) {
                            case 'Maybe.some':
                                var $12313 = self.value;
                                var $12314 = Pair$new$(Kind$Comp$ref$($12311), (() => {
                                    var self = $12313;
                                    switch (self._) {
                                        case 'Kind.Def.new':
                                            var $12315 = self.type;
                                            var $12316 = $12315;
                                            return $12316;
                                    };
                                })());
                                var $12312 = $12314;
                                break;
                            case 'Maybe.none':
                                var $12317 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12312 = $12317;
                                break;
                        };
                        var $12307 = $12312;
                        break;
                    case 'Kind.Term.app':
                        var $12318 = self.func;
                        var $12319 = self.argm;
                        var self = Kind$Comp$compile$($12318, Maybe$none, _defs$3, _size$4);
                        switch (self._) {
                            case 'Pair.new':
                                var $12321 = self.fst;
                                var $12322 = self.snd;
                                var self = Kind$Term$reduce$($12322, _defs$3);
                                switch (self._) {
                                    case 'Kind.Term.all':
                                        var $12324 = self.eras;
                                        var $12325 = self.xtyp;
                                        var $12326 = self.body;
                                        var self = Kind$Comp$compile$($12319, Maybe$some$($12325), _defs$3, _size$4);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $12328 = self.fst;
                                                var _term_typ$16 = $12326($12318)($12319);
                                                var self = Kind$Comp$compile$prim_of$($12322, _defs$3);
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $12330 = self.value;
                                                        var $12331 = Kind$Comp$eli$($12330, $12321);
                                                        var _term_cmp$17 = $12331;
                                                        break;
                                                    case 'Maybe.none':
                                                        var self = Kind$Comp$compile$adt$($12322, _defs$3);
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $12333 = self.value;
                                                                var $12334 = Kind$Comp$eli$($12333, $12321);
                                                                var $12332 = $12334;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $12335 = $12321;
                                                                var $12332 = $12335;
                                                                break;
                                                        };
                                                        var _term_cmp$17 = $12332;
                                                        break;
                                                };
                                                var self = $12324;
                                                if (self) {
                                                    var $12336 = _term_cmp$17;
                                                    var _term_cmp$18 = $12336;
                                                } else {
                                                    var $12337 = Kind$Comp$app$(_term_cmp$17, $12328);
                                                    var _term_cmp$18 = $12337;
                                                };
                                                var $12329 = Pair$new$(_term_cmp$18, _term_typ$16);
                                                var $12327 = $12329;
                                                break;
                                        };
                                        var $12323 = $12327;
                                        break;
                                    case 'Kind.Term.var':
                                    case 'Kind.Term.ref':
                                    case 'Kind.Term.typ':
                                    case 'Kind.Term.lam':
                                    case 'Kind.Term.app':
                                    case 'Kind.Term.let':
                                    case 'Kind.Term.def':
                                    case 'Kind.Term.ann':
                                    case 'Kind.Term.gol':
                                    case 'Kind.Term.hol':
                                    case 'Kind.Term.nat':
                                    case 'Kind.Term.chr':
                                    case 'Kind.Term.str':
                                    case 'Kind.Term.num':
                                    case 'Kind.Term.cse':
                                    case 'Kind.Term.new':
                                    case 'Kind.Term.get':
                                    case 'Kind.Term.set':
                                    case 'Kind.Term.ope':
                                    case 'Kind.Term.ori':
                                        var $12338 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                        var $12323 = $12338;
                                        break;
                                };
                                var $12320 = $12323;
                                break;
                        };
                        var $12307 = $12320;
                        break;
                    case 'Kind.Term.let':
                        var $12339 = self.name;
                        var $12340 = self.expr;
                        var $12341 = self.body;
                        var self = Kind$Comp$compile$($12340, Maybe$none, _defs$3, _size$4);
                        switch (self._) {
                            case 'Pair.new':
                                var $12343 = self.fst;
                                var $12344 = self.snd;
                                var _name_uid$10 = ($12339 + ("$" + Nat$show$(_size$4)));
                                var _expr_var$11 = Kind$Term$ann$(Bool$true, Kind$Term$var$(_name_uid$10, (_size$4 + 1n)), $12344);
                                var self = Kind$Comp$compile$($12341(_expr_var$11), Maybe$none, _defs$3, (_size$4 + 1n));
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12346 = self.fst;
                                        var $12347 = self.snd;
                                        var $12348 = Pair$new$(Kind$Comp$let$(_name_uid$10, $12343, $12346), $12347);
                                        var $12345 = $12348;
                                        break;
                                };
                                var $12342 = $12345;
                                break;
                        };
                        var $12307 = $12342;
                        break;
                    case 'Kind.Term.ann':
                        var $12349 = self.term;
                        var $12350 = self.type;
                        var $12351 = Kind$Comp$compile$($12349, Maybe$some$($12350), _defs$3, _size$4);
                        var $12307 = $12351;
                        break;
                    case 'Kind.Term.nat':
                        var $12352 = self.natx;
                        var $12353 = Pair$new$(Kind$Comp$nat$($12352), Kind$Term$ref$("Nat"));
                        var $12307 = $12353;
                        break;
                    case 'Kind.Term.chr':
                        var $12354 = self.chrx;
                        var $12355 = Pair$new$(Kind$Comp$chr$($12354), Kind$Term$ref$("Char"));
                        var $12307 = $12355;
                        break;
                    case 'Kind.Term.str':
                        var $12356 = self.strx;
                        var $12357 = Pair$new$(Kind$Comp$str$($12356), Kind$Term$ref$("String"));
                        var $12307 = $12357;
                        break;
                    case 'Kind.Term.ori':
                        var $12358 = self.expr;
                        var $12359 = Kind$Comp$compile$($12358, Maybe$none, _defs$3, _size$4);
                        var $12307 = $12359;
                        break;
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.def':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $12360 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                        var $12307 = $12360;
                        break;
                };
                var $12256 = $12307;
                break;
        };
        return $12256;
    };
    const Kind$Comp$compile = x0 => x1 => x2 => x3 => Kind$Comp$compile$(x0, x1, x2, x3);

    function Kind$Comp$Defs$compile$defn$(_defn$1, _defs$2) {
        var self = _defn$1;
        switch (self._) {
            case 'Kind.Def.new':
                var $12362 = self.term;
                var $12363 = self.type;
                var self = Kind$Comp$compile$($12362, Maybe$some$($12363), _defs$2, 0n);
                switch (self._) {
                    case 'Pair.new':
                        var $12365 = self.fst;
                        var $12366 = $12365;
                        var $12364 = $12366;
                        break;
                };
                var $12361 = $12364;
                break;
        };
        return $12361;
    };
    const Kind$Comp$Defs$compile$defn = x0 => x1 => Kind$Comp$Defs$compile$defn$(x0, x1);

    function Kind$Comp$Defs$compile$(_defs$1) {
        var _defs$2 = BitsMap$map$((_x$2 => {
            var $12368 = Kind$Comp$Defs$compile$defn$adjust$(_x$2, _defs$1);
            return $12368;
        }), _defs$1);
        var _defs$3 = BitsMap$map$((_x$3 => {
            var $12369 = Kind$Comp$Defs$compile$defn$(_x$3, _defs$2);
            return $12369;
        }), _defs$2);
        var $12367 = _defs$3;
        return $12367;
    };
    const Kind$Comp$Defs$compile = x0 => Kind$Comp$Defs$compile$(x0);

    function Kind$Comp$dependency_sort$go$(_term$1, _defs$2, _seen$3, _list$4) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Comp.ref':
                var $12371 = self.name;
                var self = Kind$Map$get$($12371, _seen$3);
                switch (self._) {
                    case 'Maybe.none':
                        var self = Kind$Map$get$($12371, _defs$2);
                        switch (self._) {
                            case 'Maybe.some':
                                var $12374 = self.value;
                                var _term$7 = $12374;
                                var _seen$8 = Kind$Map$set$($12371, Unit$new, _seen$3);
                                var self = Kind$Comp$dependency_sort$go$(_term$7, _defs$2, _seen$8, _list$4);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12376 = self.fst;
                                        var $12377 = self.snd;
                                        var _list$11 = List$cons$(Pair$new$($12371, $12374), $12377);
                                        var $12378 = Pair$new$($12376, _list$11);
                                        var $12375 = $12378;
                                        break;
                                };
                                var $12373 = $12375;
                                break;
                            case 'Maybe.none':
                                var $12379 = Pair$new$(_seen$3, _list$4);
                                var $12373 = $12379;
                                break;
                        };
                        var $12372 = $12373;
                        break;
                    case 'Maybe.some':
                        var $12380 = Pair$new$(_seen$3, _list$4);
                        var $12372 = $12380;
                        break;
                };
                var $12370 = $12372;
                break;
            case 'Kind.Comp.lam':
                var $12381 = self.body;
                var self = Kind$Comp$dependency_sort$go$($12381, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12383 = self.fst;
                        var $12384 = self.snd;
                        var $12385 = Pair$new$($12383, $12384);
                        var $12382 = $12385;
                        break;
                };
                var $12370 = $12382;
                break;
            case 'Kind.Comp.app':
                var $12386 = self.func;
                var $12387 = self.argm;
                var self = Kind$Comp$dependency_sort$go$($12386, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12389 = self.fst;
                        var $12390 = self.snd;
                        var self = Kind$Comp$dependency_sort$go$($12387, _defs$2, $12389, $12390);
                        switch (self._) {
                            case 'Pair.new':
                                var $12392 = self.fst;
                                var $12393 = self.snd;
                                var $12394 = Pair$new$($12392, $12393);
                                var $12391 = $12394;
                                break;
                        };
                        var $12388 = $12391;
                        break;
                };
                var $12370 = $12388;
                break;
            case 'Kind.Comp.let':
                var $12395 = self.expr;
                var $12396 = self.body;
                var self = Kind$Comp$dependency_sort$go$($12395, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12398 = self.fst;
                        var $12399 = self.snd;
                        var self = Kind$Comp$dependency_sort$go$($12396, _defs$2, $12398, $12399);
                        switch (self._) {
                            case 'Pair.new':
                                var $12401 = self.fst;
                                var $12402 = self.snd;
                                var $12403 = Pair$new$($12401, $12402);
                                var $12400 = $12403;
                                break;
                        };
                        var $12397 = $12400;
                        break;
                };
                var $12370 = $12397;
                break;
            case 'Kind.Comp.eli':
                var $12404 = self.expr;
                var self = Kind$Comp$dependency_sort$go$($12404, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12406 = self.fst;
                        var $12407 = self.snd;
                        var $12408 = Pair$new$($12406, $12407);
                        var $12405 = $12408;
                        break;
                };
                var $12370 = $12405;
                break;
            case 'Kind.Comp.ins':
                var $12409 = self.expr;
                var self = Kind$Comp$dependency_sort$go$($12409, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12411 = self.fst;
                        var $12412 = self.snd;
                        var $12413 = Pair$new$($12411, $12412);
                        var $12410 = $12413;
                        break;
                };
                var $12370 = $12410;
                break;
            case 'Kind.Comp.nil':
            case 'Kind.Comp.var':
            case 'Kind.Comp.nat':
            case 'Kind.Comp.chr':
            case 'Kind.Comp.str':
            case 'Kind.Comp.txt':
                var $12414 = Pair$new$(_seen$3, _list$4);
                var $12370 = $12414;
                break;
        };
        return $12370;
    };
    const Kind$Comp$dependency_sort$go = x0 => x1 => x2 => x3 => Kind$Comp$dependency_sort$go$(x0, x1, x2, x3);

    function Kind$Comp$dependency_sort$(_main$1, _defs$2) {
        var _term$3 = Kind$Comp$ref$(_main$1);
        var _seen$4 = Kind$Map$new;
        var _list$5 = List$nil;
        var self = Kind$Comp$dependency_sort$go$(_term$3, _defs$2, _seen$4, _list$5);
        switch (self._) {
            case 'Pair.new':
                var $12416 = self.snd;
                var $12417 = List$reverse$($12416);
                var $12415 = $12417;
                break;
        };
        return $12415;
    };
    const Kind$Comp$dependency_sort = x0 => x1 => Kind$Comp$dependency_sort$(x0, x1);

    function String$take_while$(_f$1, _xs$2) {
        var self = _xs$2;
        if (self.length === 0) {
            var $12419 = String$nil;
            var $12418 = $12419;
        } else {
            var $12420 = self.charCodeAt(0);
            var $12421 = self.slice(1);
            var self = _f$1($12420);
            if (self) {
                var $12423 = String$cons$($12420, String$take_while$(_f$1, $12421));
                var $12422 = $12423;
            } else {
                var $12424 = String$nil;
                var $12422 = $12424;
            };
            var $12418 = $12422;
        };
        return $12418;
    };
    const String$take_while = x0 => x1 => String$take_while$(x0, x1);

    function String$drop_while$(_f$1, _xs$2) {
        var String$drop_while$ = (_f$1, _xs$2) => ({
            ctr: 'TCO',
            arg: [_f$1, _xs$2]
        });
        var String$drop_while = _f$1 => _xs$2 => String$drop_while$(_f$1, _xs$2);
        var arg = [_f$1, _xs$2];
        while (true) {
            let [_f$1, _xs$2] = arg;
            var R = (() => {
                var self = _xs$2;
                if (self.length === 0) {
                    var $12425 = String$nil;
                    return $12425;
                } else {
                    var $12426 = self.charCodeAt(0);
                    var $12427 = self.slice(1);
                    var self = _f$1($12426);
                    if (self) {
                        var $12429 = String$drop_while$(_f$1, $12427);
                        var $12428 = $12429;
                    } else {
                        var $12430 = _xs$2;
                        var $12428 = $12430;
                    };
                    return $12428;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$drop_while = x0 => x1 => String$drop_while$(x0, x1);

    function Kind$Comp$replace$(_str$1, _vars$2) {
        var self = _str$1;
        if (self.length === 0) {
            var $12432 = _str$1;
            var $12431 = $12432;
        } else {
            var $12433 = self.charCodeAt(0);
            var $12434 = self.slice(1);
            var _a$5 = $12433;
            var self = (_a$5 === 36);
            if (self) {
                var _n_str$6 = String$take_while$((_b$6 => {
                    var $12437 = ((_b$6 >= 48) && (_b$6 <= 57));
                    return $12437;
                }), $12434);
                var self = (String$length$(_n_str$6) > 0n);
                if (self) {
                    var _n_str$tail$7 = String$drop_while$((_b$7 => {
                        var $12439 = ((_b$7 >= 48) && (_b$7 <= 57));
                        return $12439;
                    }), $12434);
                    var $12438 = (Maybe$default$(List$get$((BigInt(_n_str$6)), _vars$2), "?") + Kind$Comp$replace$(_n_str$tail$7, _vars$2));
                    var $12436 = $12438;
                } else {
                    var $12440 = String$cons$(_a$5, Kind$Comp$replace$($12434, _vars$2));
                    var $12436 = $12440;
                };
                var $12435 = $12436;
            } else {
                var $12441 = String$cons$(_a$5, Kind$Comp$replace$($12434, _vars$2));
                var $12435 = $12441;
            };
            var $12431 = $12435;
        };
        return $12431;
    };
    const Kind$Comp$replace = x0 => x1 => Kind$Comp$replace$(x0, x1);

    function List$create$go$(_len$2, _create_value$3, _result$4) {
        var List$create$go$ = (_len$2, _create_value$3, _result$4) => ({
            ctr: 'TCO',
            arg: [_len$2, _create_value$3, _result$4]
        });
        var List$create$go = _len$2 => _create_value$3 => _result$4 => List$create$go$(_len$2, _create_value$3, _result$4);
        var arg = [_len$2, _create_value$3, _result$4];
        while (true) {
            let [_len$2, _create_value$3, _result$4] = arg;
            var R = (() => {
                var self = _len$2;
                if (self === 0n) {
                    var $12442 = _result$4;
                    return $12442;
                } else {
                    var $12443 = (self - 1n);
                    var $12444 = List$create$go$($12443, _create_value$3, List$cons$(_create_value$3($12443), _result$4));
                    return $12444;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$create$go = x0 => x1 => x2 => List$create$go$(x0, x1, x2);

    function List$create$(_len$2, _create_value$3) {
        var $12445 = List$create$go$(_len$2, _create_value$3, List$nil);
        return $12445;
    };
    const List$create = x0 => x1 => List$create$(x0, x1);

    function Kind$Comp$Prim$instantiator$go$(_lang$1, _prim$2, _depth$3, _defs$4, _ctor$5, _j$6) {
        var self = _ctor$5;
        switch (self._) {
            case 'Pair.new':
                var $12447 = self.fst;
                var $12448 = self.snd;
                var self = (_j$6 === $12447);
                if (self) {
                    var $12450 = Kind$Comp$replace$($12448, List$create$($12447, (_j$9 => {
                        var $12451 = ("x" + Nat$show$(_j$9));
                        return $12451;
                    })));
                    var $12449 = $12450;
                } else {
                    var self = _lang$1;
                    switch (self._) {
                        case 'Kind.Comp.Language.new':
                            var $12453 = self.gram;
                            var $12454 = $12453;
                            var self = $12454;
                            break;
                    };
                    switch (self._) {
                        case 'Kind.Comp.Grammar.new':
                            var $12455 = self.lambda;
                            var $12456 = $12455;
                            var $12452 = $12456;
                            break;
                    };
                    var $12452 = $12452(("x" + Nat$show$(_j$6)))(Kind$Comp$Prim$instantiator$go$(_lang$1, _prim$2, _depth$3, _defs$4, _ctor$5, Nat$succ$(_j$6)));
                    var $12449 = $12452;
                };
                var $12446 = $12449;
                break;
        };
        return $12446;
    };
    const Kind$Comp$Prim$instantiator$go = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Comp$Prim$instantiator$go$(x0, x1, x2, x3, x4, x5);

    function Kind$Comp$Prim$instantiator$(_lang$1, _prim$2, _depth$3, _defs$4) {
        var self = _lang$1;
        switch (self._) {
            case 'Kind.Comp.Language.new':
                var $12458 = self.nati;
                var $12459 = $12458;
                var _shape$5 = $12459;
                break;
        };
        var _shape$5 = _shape$5(_prim$2);
        var self = _shape$5;
        switch (self._) {
            case 'Kind.Comp.Native.new':
                var $12460 = self.inst;
                var _text$8 = "x";
                var _text$9 = (() => {
                    var $12463 = _text$8;
                    var $12464 = $12460;
                    let _text$10 = $12463;
                    let _ctor$9;
                    while ($12464._ === 'List.cons') {
                        _ctor$9 = $12464.head;
                        var self = _lang$1;
                        switch (self._) {
                            case 'Kind.Comp.Language.new':
                                var $12465 = self.gram;
                                var $12466 = $12465;
                                var self = $12466;
                                break;
                        };
                        switch (self._) {
                            case 'Kind.Comp.Grammar.new':
                                var $12467 = self.application;
                                var $12468 = $12467;
                                var $12463 = $12468;
                                break;
                        };
                        var $12463 = $12463(_text$10)(Kind$Comp$Prim$instantiator$go$(_lang$1, _prim$2, _depth$3, _defs$4, _ctor$9, 0n));
                        _text$10 = $12463;
                        $12464 = $12464.tail;
                    }
                    return _text$10;
                })();
                var self = _lang$1;
                switch (self._) {
                    case 'Kind.Comp.Language.new':
                        var $12469 = self.gram;
                        var $12470 = $12469;
                        var self = $12470;
                        break;
                };
                switch (self._) {
                    case 'Kind.Comp.Grammar.new':
                        var $12471 = self.lambda;
                        var $12472 = $12471;
                        var $12461 = $12472;
                        break;
                };
                var $12461 = $12461("x")(_text$9);
                var $12457 = $12461;
                break;
        };
        return $12457;
    };
    const Kind$Comp$Prim$instantiator = x0 => x1 => x2 => x3 => Kind$Comp$Prim$instantiator$(x0, x1, x2, x3);

    function Kind$Comp$get_args$go$(_term$1, _args$2) {
        var Kind$Comp$get_args$go$ = (_term$1, _args$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _args$2]
        });
        var Kind$Comp$get_args$go = _term$1 => _args$2 => Kind$Comp$get_args$go$(_term$1, _args$2);
        var arg = [_term$1, _args$2];
        while (true) {
            let [_term$1, _args$2] = arg;
            var R = (() => {
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Comp.app':
                        var $12473 = self.func;
                        var $12474 = self.argm;
                        var $12475 = Kind$Comp$get_args$go$($12473, List$cons$($12474, _args$2));
                        return $12475;
                    case 'Kind.Comp.nil':
                    case 'Kind.Comp.var':
                    case 'Kind.Comp.ref':
                    case 'Kind.Comp.lam':
                    case 'Kind.Comp.let':
                    case 'Kind.Comp.eli':
                    case 'Kind.Comp.ins':
                    case 'Kind.Comp.nat':
                    case 'Kind.Comp.chr':
                    case 'Kind.Comp.str':
                    case 'Kind.Comp.txt':
                        var $12476 = Pair$new$(_term$1, _args$2);
                        return $12476;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Comp$get_args$go = x0 => x1 => Kind$Comp$get_args$go$(x0, x1);

    function Kind$Comp$get_args$(_term$1) {
        var $12477 = Kind$Comp$get_args$go$(_term$1, List$nil);
        return $12477;
    };
    const Kind$Comp$get_args = x0 => Kind$Comp$get_args$(x0);

    function Kind$Comp$get_arity$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Comp.lam':
                var $12479 = self.body;
                var $12480 = (1n + Kind$Comp$get_arity$($12479));
                var $12478 = $12480;
                break;
            case 'Kind.Comp.nil':
            case 'Kind.Comp.var':
            case 'Kind.Comp.ref':
            case 'Kind.Comp.app':
            case 'Kind.Comp.let':
            case 'Kind.Comp.eli':
            case 'Kind.Comp.ins':
            case 'Kind.Comp.nat':
            case 'Kind.Comp.chr':
            case 'Kind.Comp.str':
            case 'Kind.Comp.txt':
                var $12481 = 0n;
                var $12478 = $12481;
                break;
        };
        return $12478;
    };
    const Kind$Comp$get_arity = x0 => Kind$Comp$get_arity$(x0);

    function Kind$Comp$get_vars$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Comp.lam':
                var $12483 = self.name;
                var $12484 = self.body;
                var self = Kind$Comp$get_vars$($12484);
                switch (self._) {
                    case 'Pair.new':
                        var $12486 = self.fst;
                        var $12487 = self.snd;
                        var $12488 = Pair$new$(List$cons$($12483, $12486), $12487);
                        var $12485 = $12488;
                        break;
                };
                var $12482 = $12485;
                break;
            case 'Kind.Comp.nil':
            case 'Kind.Comp.var':
            case 'Kind.Comp.ref':
            case 'Kind.Comp.app':
            case 'Kind.Comp.let':
            case 'Kind.Comp.eli':
            case 'Kind.Comp.ins':
            case 'Kind.Comp.nat':
            case 'Kind.Comp.chr':
            case 'Kind.Comp.str':
            case 'Kind.Comp.txt':
                var $12489 = Pair$new$(List$nil, _term$1);
                var $12482 = $12489;
                break;
        };
        return $12482;
    };
    const Kind$Comp$get_vars = x0 => Kind$Comp$get_vars$(x0);

    function Kind$Comp$Prim$inst$go$(_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7) {
        var Kind$Comp$Prim$inst$go$ = (_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7) => ({
            ctr: 'TCO',
            arg: [_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7]
        });
        var Kind$Comp$Prim$inst$go = _lang$1 => _name$2 => _inst$3 => _vars$4 => _args$5 => _depth$6 => _defs$7 => Kind$Comp$Prim$inst$go$(_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7);
        var arg = [_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7];
        while (true) {
            let [_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7] = arg;
            var R = (() => {
                var self = _inst$3;
                switch (self._) {
                    case 'List.cons':
                        var $12490 = self.head;
                        var $12491 = self.tail;
                        var self = _vars$4;
                        switch (self._) {
                            case 'List.cons':
                                var $12493 = self.head;
                                var $12494 = self.tail;
                                var self = (_name$2 === $12493);
                                if (self) {
                                    var self = $12490;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $12497 = self.fst;
                                            var $12498 = self.snd;
                                            var self = ($12497 === (list_length(_args$5)));
                                            if (self) {
                                                var $12500 = Maybe$some$(Kind$Comp$replace$($12498, List$mapped$(_args$5, (_x$14 => {
                                                    var $12501 = Kind$Comp$transpile$term$(_lang$1, _x$14, _depth$6, _defs$7);
                                                    return $12501;
                                                }))));
                                                var $12499 = $12500;
                                            } else {
                                                var $12502 = Maybe$none;
                                                var $12499 = $12502;
                                            };
                                            var $12496 = $12499;
                                            break;
                                    };
                                    var $12495 = $12496;
                                } else {
                                    var $12503 = Kind$Comp$Prim$inst$go$(_lang$1, _name$2, $12491, $12494, _args$5, _depth$6, _defs$7);
                                    var $12495 = $12503;
                                };
                                var $12492 = $12495;
                                break;
                            case 'List.nil':
                                var $12504 = Maybe$none;
                                var $12492 = $12504;
                                break;
                        };
                        return $12492;
                    case 'List.nil':
                        var self = _vars$4;
                        switch (self._) {
                            case 'List.nil':
                            case 'List.cons':
                                var $12506 = Maybe$none;
                                var $12505 = $12506;
                                break;
                        };
                        return $12505;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Comp$Prim$inst$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => Kind$Comp$Prim$inst$go$(x0, x1, x2, x3, x4, x5, x6);

    function Kind$Comp$Prim$inst$(_lang$1, _term$2, _depth$3, _defs$4) {
        var self = _term$2;
        switch (self._) {
            case 'Kind.Comp.ins':
                var $12508 = self.prim;
                var $12509 = self.expr;
                var self = _lang$1;
                switch (self._) {
                    case 'Kind.Comp.Language.new':
                        var $12511 = self.nati;
                        var $12512 = $12511;
                        var _shape$7 = $12512;
                        break;
                };
                var _shape$7 = _shape$7($12508);
                var self = _shape$7;
                switch (self._) {
                    case 'Kind.Comp.Native.new':
                        var $12513 = self.inst;
                        var self = Kind$Comp$get_vars$($12509);
                        switch (self._) {
                            case 'Pair.new':
                                var $12515 = self.fst;
                                var $12516 = self.snd;
                                var self = ((list_length($12513)) === (list_length($12515)));
                                if (self) {
                                    var self = Kind$Comp$get_args$($12516);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $12519 = self.fst;
                                            var $12520 = self.snd;
                                            var self = $12519;
                                            switch (self._) {
                                                case 'Kind.Comp.var':
                                                    var $12522 = self.name;
                                                    var $12523 = Kind$Comp$Prim$inst$go$(_lang$1, $12522, $12513, $12515, $12520, _depth$3, _defs$4);
                                                    var $12521 = $12523;
                                                    break;
                                                case 'Kind.Comp.ref':
                                                    var $12524 = self.name;
                                                    var $12525 = Kind$Comp$Prim$inst$go$(_lang$1, $12524, $12513, $12515, $12520, _depth$3, _defs$4);
                                                    var $12521 = $12525;
                                                    break;
                                                case 'Kind.Comp.nil':
                                                case 'Kind.Comp.lam':
                                                case 'Kind.Comp.app':
                                                case 'Kind.Comp.let':
                                                case 'Kind.Comp.eli':
                                                case 'Kind.Comp.ins':
                                                case 'Kind.Comp.nat':
                                                case 'Kind.Comp.chr':
                                                case 'Kind.Comp.str':
                                                case 'Kind.Comp.txt':
                                                    var $12526 = Maybe$none;
                                                    var $12521 = $12526;
                                                    break;
                                            };
                                            var $12518 = $12521;
                                            break;
                                    };
                                    var $12517 = $12518;
                                } else {
                                    var $12527 = Maybe$none;
                                    var $12517 = $12527;
                                };
                                var $12514 = $12517;
                                break;
                        };
                        var $12510 = $12514;
                        break;
                };
                var $12507 = $12510;
                break;
            case 'Kind.Comp.nil':
            case 'Kind.Comp.var':
            case 'Kind.Comp.ref':
            case 'Kind.Comp.lam':
            case 'Kind.Comp.app':
            case 'Kind.Comp.let':
            case 'Kind.Comp.eli':
            case 'Kind.Comp.nat':
            case 'Kind.Comp.chr':
            case 'Kind.Comp.str':
            case 'Kind.Comp.txt':
                var $12528 = Maybe$none;
                var $12507 = $12528;
                break;
        };
        return $12507;
    };
    const Kind$Comp$Prim$inst = x0 => x1 => x2 => x3 => Kind$Comp$Prim$inst$(x0, x1, x2, x3);

    function Word$fold$(_nil$3, _w0$4, _w1$5, _word$6) {
        var self = _word$6;
        switch (self._) {
            case 'Word.o':
                var $12530 = self.pred;
                var $12531 = _w0$4(Word$fold$(_nil$3, _w0$4, _w1$5, $12530));
                var $12529 = $12531;
                break;
            case 'Word.i':
                var $12532 = self.pred;
                var $12533 = _w1$5(Word$fold$(_nil$3, _w0$4, _w1$5, $12532));
                var $12529 = $12533;
                break;
            case 'Word.e':
                var $12534 = _nil$3;
                var $12529 = $12534;
                break;
        };
        return $12529;
    };
    const Word$fold = x0 => x1 => x2 => x3 => Word$fold$(x0, x1, x2, x3);

    function Word$to_nat$(_word$2) {
        var $12535 = Word$fold$(0n, a1 => (2n * a1), (_x$4 => {
            var $12536 = Nat$succ$((2n * _x$4));
            return $12536;
        }), _word$2);
        return $12535;
    };
    const Word$to_nat = x0 => Word$to_nat$(x0);
    const U16$to_nat = a0 => (BigInt(a0));

    function Kind$Comp$transpile$term$(_lang$1, _comp$2, _depth$3, _defs$4) {
        var _go$5 = Kind$Comp$transpile$term(_lang$1);
        var self = Kind$Comp$Prim$inst$(_lang$1, _comp$2, _depth$3, _defs$4);
        switch (self._) {
            case 'Maybe.some':
                var $12538 = self.value;
                var $12539 = $12538;
                var $12537 = $12539;
                break;
            case 'Maybe.none':
                var self = Kind$Comp$Prim$elim$(_lang$1, _comp$2, _depth$3, _defs$4);
                switch (self._) {
                    case 'Maybe.some':
                        var $12541 = self.value;
                        var $12542 = $12541;
                        var $12540 = $12542;
                        break;
                    case 'Maybe.none':
                        var self = _comp$2;
                        switch (self._) {
                            case 'Kind.Comp.var':
                                var $12544 = self.name;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12546 = self.gram;
                                        var $12547 = $12546;
                                        var self = $12547;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12548 = self.name;
                                        var $12549 = $12548;
                                        var $12545 = $12549;
                                        break;
                                };
                                var $12545 = $12545($12544);
                                var $12543 = $12545;
                                break;
                            case 'Kind.Comp.ref':
                                var $12550 = self.name;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12552 = self.gram;
                                        var $12553 = $12552;
                                        var self = $12553;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12554 = self.name;
                                        var $12555 = $12554;
                                        var $12551 = $12555;
                                        break;
                                };
                                var $12551 = $12551($12550);
                                var $12543 = $12551;
                                break;
                            case 'Kind.Comp.lam':
                                var $12556 = self.name;
                                var $12557 = self.body;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12559 = self.gram;
                                        var $12560 = $12559;
                                        var self = $12560;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12561 = self.lambda;
                                        var $12562 = $12561;
                                        var $12558 = $12562;
                                        break;
                                };
                                var $12558 = $12558((() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12563 = self.gram;
                                            var $12564 = $12563;
                                            var self = $12564;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12565 = self.name;
                                            var $12566 = $12565;
                                            return $12566;
                                    };
                                })()($12556))(_go$5($12557)(Nat$succ$(_depth$3))(_defs$4));
                                var $12543 = $12558;
                                break;
                            case 'Kind.Comp.app':
                                var $12567 = self.func;
                                var $12568 = self.argm;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12570 = self.gram;
                                        var $12571 = $12570;
                                        var self = $12571;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12572 = self.application;
                                        var $12573 = $12572;
                                        var $12569 = $12573;
                                        break;
                                };
                                var $12569 = $12569(_go$5($12567)(_depth$3)(_defs$4))(_go$5($12568)(_depth$3)(_defs$4));
                                var $12543 = $12569;
                                break;
                            case 'Kind.Comp.let':
                                var $12574 = self.name;
                                var $12575 = self.expr;
                                var $12576 = self.body;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12578 = self.gram;
                                        var $12579 = $12578;
                                        var self = $12579;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12580 = self.local_definition;
                                        var $12581 = $12580;
                                        var $12577 = $12581;
                                        break;
                                };
                                var $12577 = $12577((() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12582 = self.gram;
                                            var $12583 = $12582;
                                            var self = $12583;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12584 = self.name;
                                            var $12585 = $12584;
                                            return $12585;
                                    };
                                })()($12574))(_go$5($12575)(_depth$3)(_defs$4))(_go$5($12576)(Nat$succ$(_depth$3))(_defs$4));
                                var $12543 = $12577;
                                break;
                            case 'Kind.Comp.eli':
                                var $12586 = self.prim;
                                var $12587 = self.expr;
                                var self = $12586;
                                switch (self._) {
                                    case 'Kind.Comp.Prim.bool':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12590 = self.gram;
                                                var $12591 = $12590;
                                                var self = $12591;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12592 = self.application;
                                                var $12593 = $12592;
                                                var $12589 = $12593;
                                                break;
                                        };
                                        var $12589 = $12589((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12594 = self.gram;
                                                    var $12595 = $12594;
                                                    var self = $12595;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12596 = self.elim_name;
                                                    var $12597 = $12596;
                                                    return $12597;
                                            };
                                        })()("Bool"))(_go$5($12587)(_depth$3)(_defs$4));
                                        var $12588 = $12589;
                                        break;
                                    case 'Kind.Comp.Prim.bits':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12599 = self.gram;
                                                var $12600 = $12599;
                                                var self = $12600;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12601 = self.application;
                                                var $12602 = $12601;
                                                var $12598 = $12602;
                                                break;
                                        };
                                        var $12598 = $12598((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12603 = self.gram;
                                                    var $12604 = $12603;
                                                    var self = $12604;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12605 = self.elim_name;
                                                    var $12606 = $12605;
                                                    return $12606;
                                            };
                                        })()("Bits"))(_go$5($12587)(_depth$3)(_defs$4));
                                        var $12588 = $12598;
                                        break;
                                    case 'Kind.Comp.Prim.unit':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12608 = self.gram;
                                                var $12609 = $12608;
                                                var self = $12609;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12610 = self.application;
                                                var $12611 = $12610;
                                                var $12607 = $12611;
                                                break;
                                        };
                                        var $12607 = $12607((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12612 = self.gram;
                                                    var $12613 = $12612;
                                                    var self = $12613;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12614 = self.elim_name;
                                                    var $12615 = $12614;
                                                    return $12615;
                                            };
                                        })()("Unit"))(_go$5($12587)(_depth$3)(_defs$4));
                                        var $12588 = $12607;
                                        break;
                                    case 'Kind.Comp.Prim.nat':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12617 = self.gram;
                                                var $12618 = $12617;
                                                var self = $12618;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12619 = self.application;
                                                var $12620 = $12619;
                                                var $12616 = $12620;
                                                break;
                                        };
                                        var $12616 = $12616((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12621 = self.gram;
                                                    var $12622 = $12621;
                                                    var self = $12622;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12623 = self.elim_name;
                                                    var $12624 = $12623;
                                                    return $12624;
                                            };
                                        })()("Nat"))(_go$5($12587)(_depth$3)(_defs$4));
                                        var $12588 = $12616;
                                        break;
                                    case 'Kind.Comp.Prim.u16':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12626 = self.gram;
                                                var $12627 = $12626;
                                                var self = $12627;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12628 = self.application;
                                                var $12629 = $12628;
                                                var $12625 = $12629;
                                                break;
                                        };
                                        var $12625 = $12625((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12630 = self.gram;
                                                    var $12631 = $12630;
                                                    var self = $12631;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12632 = self.elim_name;
                                                    var $12633 = $12632;
                                                    return $12633;
                                            };
                                        })()("U16"))(_go$5($12587)(_depth$3)(_defs$4));
                                        var $12588 = $12625;
                                        break;
                                    case 'Kind.Comp.Prim.u32':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12635 = self.gram;
                                                var $12636 = $12635;
                                                var self = $12636;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12637 = self.application;
                                                var $12638 = $12637;
                                                var $12634 = $12638;
                                                break;
                                        };
                                        var $12634 = $12634((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12639 = self.gram;
                                                    var $12640 = $12639;
                                                    var self = $12640;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12641 = self.elim_name;
                                                    var $12642 = $12641;
                                                    return $12642;
                                            };
                                        })()("U32"))(_go$5($12587)(_depth$3)(_defs$4));
                                        var $12588 = $12634;
                                        break;
                                    case 'Kind.Comp.Prim.string':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12644 = self.gram;
                                                var $12645 = $12644;
                                                var self = $12645;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12646 = self.application;
                                                var $12647 = $12646;
                                                var $12643 = $12647;
                                                break;
                                        };
                                        var $12643 = $12643((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12648 = self.gram;
                                                    var $12649 = $12648;
                                                    var self = $12649;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12650 = self.elim_name;
                                                    var $12651 = $12650;
                                                    return $12651;
                                            };
                                        })()("String"))(_go$5($12587)(_depth$3)(_defs$4));
                                        var $12588 = $12643;
                                        break;
                                    case 'Kind.Comp.Prim.data':
                                        var $12652 = _go$5($12587)(_depth$3)(_defs$4);
                                        var $12588 = $12652;
                                        break;
                                };
                                var $12543 = $12588;
                                break;
                            case 'Kind.Comp.ins':
                                var $12653 = self.prim;
                                var $12654 = self.expr;
                                var self = $12653;
                                switch (self._) {
                                    case 'Kind.Comp.Prim.bool':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12657 = self.gram;
                                                var $12658 = $12657;
                                                var self = $12658;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12659 = self.application;
                                                var $12660 = $12659;
                                                var $12656 = $12660;
                                                break;
                                        };
                                        var $12656 = $12656((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12661 = self.gram;
                                                    var $12662 = $12661;
                                                    var self = $12662;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12663 = self.inst_name;
                                                    var $12664 = $12663;
                                                    return $12664;
                                            };
                                        })()("Bool"))(_go$5($12654)(_depth$3)(_defs$4));
                                        var $12655 = $12656;
                                        break;
                                    case 'Kind.Comp.Prim.bits':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12666 = self.gram;
                                                var $12667 = $12666;
                                                var self = $12667;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12668 = self.application;
                                                var $12669 = $12668;
                                                var $12665 = $12669;
                                                break;
                                        };
                                        var $12665 = $12665((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12670 = self.gram;
                                                    var $12671 = $12670;
                                                    var self = $12671;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12672 = self.inst_name;
                                                    var $12673 = $12672;
                                                    return $12673;
                                            };
                                        })()("Bits"))(_go$5($12654)(_depth$3)(_defs$4));
                                        var $12655 = $12665;
                                        break;
                                    case 'Kind.Comp.Prim.unit':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12675 = self.gram;
                                                var $12676 = $12675;
                                                var self = $12676;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12677 = self.application;
                                                var $12678 = $12677;
                                                var $12674 = $12678;
                                                break;
                                        };
                                        var $12674 = $12674((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12679 = self.gram;
                                                    var $12680 = $12679;
                                                    var self = $12680;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12681 = self.inst_name;
                                                    var $12682 = $12681;
                                                    return $12682;
                                            };
                                        })()("Unit"))(_go$5($12654)(_depth$3)(_defs$4));
                                        var $12655 = $12674;
                                        break;
                                    case 'Kind.Comp.Prim.nat':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12684 = self.gram;
                                                var $12685 = $12684;
                                                var self = $12685;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12686 = self.application;
                                                var $12687 = $12686;
                                                var $12683 = $12687;
                                                break;
                                        };
                                        var $12683 = $12683((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12688 = self.gram;
                                                    var $12689 = $12688;
                                                    var self = $12689;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12690 = self.inst_name;
                                                    var $12691 = $12690;
                                                    return $12691;
                                            };
                                        })()("Nat"))(_go$5($12654)(_depth$3)(_defs$4));
                                        var $12655 = $12683;
                                        break;
                                    case 'Kind.Comp.Prim.u16':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12693 = self.gram;
                                                var $12694 = $12693;
                                                var self = $12694;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12695 = self.application;
                                                var $12696 = $12695;
                                                var $12692 = $12696;
                                                break;
                                        };
                                        var $12692 = $12692((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12697 = self.gram;
                                                    var $12698 = $12697;
                                                    var self = $12698;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12699 = self.inst_name;
                                                    var $12700 = $12699;
                                                    return $12700;
                                            };
                                        })()("U16"))(_go$5($12654)(_depth$3)(_defs$4));
                                        var $12655 = $12692;
                                        break;
                                    case 'Kind.Comp.Prim.u32':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12702 = self.gram;
                                                var $12703 = $12702;
                                                var self = $12703;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12704 = self.application;
                                                var $12705 = $12704;
                                                var $12701 = $12705;
                                                break;
                                        };
                                        var $12701 = $12701((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12706 = self.gram;
                                                    var $12707 = $12706;
                                                    var self = $12707;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12708 = self.inst_name;
                                                    var $12709 = $12708;
                                                    return $12709;
                                            };
                                        })()("U32"))(_go$5($12654)(_depth$3)(_defs$4));
                                        var $12655 = $12701;
                                        break;
                                    case 'Kind.Comp.Prim.string':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12711 = self.gram;
                                                var $12712 = $12711;
                                                var self = $12712;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12713 = self.application;
                                                var $12714 = $12713;
                                                var $12710 = $12714;
                                                break;
                                        };
                                        var $12710 = $12710((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12715 = self.gram;
                                                    var $12716 = $12715;
                                                    var self = $12716;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12717 = self.inst_name;
                                                    var $12718 = $12717;
                                                    return $12718;
                                            };
                                        })()("String"))(_go$5($12654)(_depth$3)(_defs$4));
                                        var $12655 = $12710;
                                        break;
                                    case 'Kind.Comp.Prim.data':
                                        var $12719 = _go$5($12654)(_depth$3)(_defs$4);
                                        var $12655 = $12719;
                                        break;
                                };
                                var $12543 = $12655;
                                break;
                            case 'Kind.Comp.nat':
                                var $12720 = self.natx;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12722 = self.gram;
                                        var $12723 = $12722;
                                        var self = $12723;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12724 = self.nat;
                                        var $12725 = $12724;
                                        var $12721 = $12725;
                                        break;
                                };
                                var $12721 = $12721($12720);
                                var $12543 = $12721;
                                break;
                            case 'Kind.Comp.chr':
                                var $12726 = self.chrx;
                                var $12727 = Nat$show$((BigInt($12726)));
                                var $12543 = $12727;
                                break;
                            case 'Kind.Comp.str':
                                var $12728 = self.strx;
                                var $12729 = ("\"" + ((() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12730 = self.gram;
                                            var $12731 = $12730;
                                            var self = $12731;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12732 = self.string_literal;
                                            var $12733 = $12732;
                                            return $12733;
                                    };
                                })()($12728) + "\""));
                                var $12543 = $12729;
                                break;
                            case 'Kind.Comp.txt':
                                var $12734 = self.text;
                                var $12735 = $12734;
                                var $12543 = $12735;
                                break;
                            case 'Kind.Comp.nil':
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12737 = self.gram;
                                        var $12738 = $12737;
                                        var self = $12738;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12739 = self.null;
                                        var $12740 = $12739;
                                        var $12736 = $12740;
                                        break;
                                };
                                var $12543 = $12736;
                                break;
                        };
                        var $12540 = $12543;
                        break;
                };
                var $12537 = $12540;
                break;
        };
        return $12537;
    };
    const Kind$Comp$transpile$term = x0 => x1 => x2 => x3 => Kind$Comp$transpile$term$(x0, x1, x2, x3);

    function List$map$(_f$3, _as$4) {
        var self = _as$4;
        switch (self._) {
            case 'List.cons':
                var $12742 = self.head;
                var $12743 = self.tail;
                var $12744 = List$cons$(_f$3($12742), List$map$(_f$3, $12743));
                var $12741 = $12744;
                break;
            case 'List.nil':
                var $12745 = List$nil;
                var $12741 = $12745;
                break;
        };
        return $12741;
    };
    const List$map = x0 => x1 => List$map$(x0, x1);

    function List$seq$go$(_n$1, _xs$2) {
        var List$seq$go$ = (_n$1, _xs$2) => ({
            ctr: 'TCO',
            arg: [_n$1, _xs$2]
        });
        var List$seq$go = _n$1 => _xs$2 => List$seq$go$(_n$1, _xs$2);
        var arg = [_n$1, _xs$2];
        while (true) {
            let [_n$1, _xs$2] = arg;
            var R = (() => {
                var self = _n$1;
                if (self === 0n) {
                    var $12746 = _xs$2;
                    return $12746;
                } else {
                    var $12747 = (self - 1n);
                    var $12748 = List$seq$go$($12747, List$cons$($12747, _xs$2));
                    return $12748;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$seq$go = x0 => x1 => List$seq$go$(x0, x1);

    function List$seq$(_n$1) {
        var $12749 = List$seq$go$(_n$1, List$nil);
        return $12749;
    };
    const List$seq = x0 => List$seq$(x0);

    function Kind$Comp$txt$(_text$1) {
        var $12750 = ({
            _: 'Kind.Comp.txt',
            'text': _text$1
        });
        return $12750;
    };
    const Kind$Comp$txt = x0 => Kind$Comp$txt$(x0);

    function Kind$Comp$subst$(_name$1, _value$2, _term$3) {
        var self = _term$3;
        switch (self._) {
            case 'Kind.Comp.var':
                var $12752 = self.name;
                var self = (_name$1 === $12752);
                if (self) {
                    var $12754 = _value$2;
                    var $12753 = $12754;
                } else {
                    var $12755 = Kind$Comp$var$($12752);
                    var $12753 = $12755;
                };
                var $12751 = $12753;
                break;
            case 'Kind.Comp.ref':
                var $12756 = self.name;
                var $12757 = Kind$Comp$ref$($12756);
                var $12751 = $12757;
                break;
            case 'Kind.Comp.lam':
                var $12758 = self.name;
                var $12759 = self.body;
                var $12760 = Kind$Comp$lam$($12758, (() => {
                    var self = (_name$1 === $12758);
                    if (self) {
                        var $12761 = $12759;
                        return $12761;
                    } else {
                        var $12762 = Kind$Comp$subst$(_name$1, _value$2, $12759);
                        return $12762;
                    };
                })());
                var $12751 = $12760;
                break;
            case 'Kind.Comp.app':
                var $12763 = self.func;
                var $12764 = self.argm;
                var $12765 = Kind$Comp$app$(Kind$Comp$subst$(_name$1, _value$2, $12763), Kind$Comp$subst$(_name$1, _value$2, $12764));
                var $12751 = $12765;
                break;
            case 'Kind.Comp.let':
                var $12766 = self.name;
                var $12767 = self.expr;
                var $12768 = self.body;
                var $12769 = Kind$Comp$let$($12766, Kind$Comp$subst$(_name$1, _value$2, $12767), (() => {
                    var self = (_name$1 === $12766);
                    if (self) {
                        var $12770 = $12768;
                        return $12770;
                    } else {
                        var $12771 = Kind$Comp$subst$(_name$1, _value$2, $12768);
                        return $12771;
                    };
                })());
                var $12751 = $12769;
                break;
            case 'Kind.Comp.eli':
                var $12772 = self.prim;
                var $12773 = self.expr;
                var $12774 = Kind$Comp$eli$($12772, Kind$Comp$subst$(_name$1, _value$2, $12773));
                var $12751 = $12774;
                break;
            case 'Kind.Comp.ins':
                var $12775 = self.prim;
                var $12776 = self.expr;
                var $12777 = Kind$Comp$ins$($12775, Kind$Comp$subst$(_name$1, _value$2, $12776));
                var $12751 = $12777;
                break;
            case 'Kind.Comp.nat':
                var $12778 = self.natx;
                var $12779 = Kind$Comp$nat$($12778);
                var $12751 = $12779;
                break;
            case 'Kind.Comp.chr':
                var $12780 = self.chrx;
                var $12781 = Kind$Comp$chr$($12780);
                var $12751 = $12781;
                break;
            case 'Kind.Comp.str':
                var $12782 = self.strx;
                var $12783 = Kind$Comp$str$($12782);
                var $12751 = $12783;
                break;
            case 'Kind.Comp.txt':
                var $12784 = self.text;
                var $12785 = Kind$Comp$txt$($12784);
                var $12751 = $12785;
                break;
            case 'Kind.Comp.nil':
                var $12786 = Kind$Comp$nil;
                var $12751 = $12786;
                break;
        };
        return $12751;
    };
    const Kind$Comp$subst = x0 => x1 => x2 => Kind$Comp$subst$(x0, x1, x2);

    function Kind$Comp$apply$(_term$1, _args$2) {
        var Kind$Comp$apply$ = (_term$1, _args$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _args$2]
        });
        var Kind$Comp$apply = _term$1 => _args$2 => Kind$Comp$apply$(_term$1, _args$2);
        var arg = [_term$1, _args$2];
        while (true) {
            let [_term$1, _args$2] = arg;
            var R = (() => {
                var self = _args$2;
                switch (self._) {
                    case 'List.cons':
                        var $12787 = self.head;
                        var $12788 = self.tail;
                        var self = _term$1;
                        switch (self._) {
                            case 'Kind.Comp.lam':
                                var $12790 = self.name;
                                var $12791 = self.body;
                                var $12792 = Kind$Comp$apply$(Kind$Comp$subst$($12790, $12787, $12791), $12788);
                                var $12789 = $12792;
                                break;
                            case 'Kind.Comp.nil':
                            case 'Kind.Comp.var':
                            case 'Kind.Comp.ref':
                            case 'Kind.Comp.app':
                            case 'Kind.Comp.let':
                            case 'Kind.Comp.eli':
                            case 'Kind.Comp.ins':
                            case 'Kind.Comp.nat':
                            case 'Kind.Comp.chr':
                            case 'Kind.Comp.str':
                            case 'Kind.Comp.txt':
                                var $12793 = Kind$Comp$apply$(Kind$Comp$app$(_term$1, $12787), $12788);
                                var $12789 = $12793;
                                break;
                        };
                        return $12789;
                    case 'List.nil':
                        var $12794 = _term$1;
                        return $12794;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Comp$apply = x0 => x1 => Kind$Comp$apply$(x0, x1);

    function Kind$Comp$Prim$elim$(_lang$1, _term$2, _depth$3, _defs$4) {
        var self = Kind$Comp$get_args$(_term$2);
        switch (self._) {
            case 'Pair.new':
                var $12796 = self.fst;
                var $12797 = self.snd;
                var self = $12796;
                switch (self._) {
                    case 'Kind.Comp.ref':
                        var $12799 = self.name;
                        var self = Kind$Map$get$($12799, _defs$4);
                        switch (self._) {
                            case 'Maybe.some':
                                var $12801 = self.value;
                                var _arity$9 = Kind$Comp$get_arity$($12801);
                                var self = ((_arity$9 === (list_length($12797))) && (_arity$9 > 0n));
                                if (self) {
                                    var _inlined_args$10 = List$map$((_arg$10 => {
                                        var $12804 = Kind$Comp$transpile$term$(_lang$1, _arg$10, _depth$3, _defs$4);
                                        return $12804;
                                    }), $12797);
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12805 = self.gram;
                                            var $12806 = $12805;
                                            var self = $12806;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12807 = self.global_application;
                                            var $12808 = $12807;
                                            var _code$11 = $12808;
                                            break;
                                    };
                                    var _code$11 = _code$11($12799)(_inlined_args$10);
                                    var $12803 = Maybe$some$(_code$11);
                                    var $12802 = $12803;
                                } else {
                                    var $12809 = Maybe$none;
                                    var $12802 = $12809;
                                };
                                var $12800 = $12802;
                                break;
                            case 'Maybe.none':
                                var $12810 = Maybe$none;
                                var $12800 = $12810;
                                break;
                        };
                        var $12798 = $12800;
                        break;
                    case 'Kind.Comp.eli':
                        var $12811 = self.prim;
                        var $12812 = self.expr;
                        var self = _lang$1;
                        switch (self._) {
                            case 'Kind.Comp.Language.new':
                                var $12814 = self.nati;
                                var $12815 = $12814;
                                var _shape$9 = $12815;
                                break;
                        };
                        var _shape$9 = _shape$9($12811);
                        var self = _shape$9;
                        switch (self._) {
                            case 'Kind.Comp.Native.new':
                                var $12816 = self.elim;
                                var self = $12816;
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12818 = self.fst;
                                        var $12819 = self.snd;
                                        var _args_len$14 = (list_length($12797));
                                        var _cses_len$15 = (list_length($12819));
                                        var self = (_args_len$14 > _cses_len$15);
                                        if (self) {
                                            var $12821 = Maybe$none;
                                            var $12820 = $12821;
                                        } else {
                                            var _lams_len$16 = (_cses_len$15 - _args_len$14 <= 0n ? 0n : _cses_len$15 - _args_len$14);
                                            var _args$17 = Nat$for$($12797, 0n, _lams_len$16, (_i$17 => _args$18 => {
                                                var $12823 = List$concat$(_args$18, List$cons$(Kind$Comp$var$(("c" + Nat$show$(_i$17))), List$nil));
                                                return $12823;
                                            }));
                                            var _self$18 = ("self" + Nat$show$(_depth$3));
                                            var _cse_body_list$19 = List$map$((_item$19 => {
                                                var self = _item$19;
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $12825 = self.fst;
                                                        var $12826 = self.snd;
                                                        var self = $12825;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $12828 = self.fst;
                                                                var $12829 = self.snd;
                                                                var _flds_len$24 = (list_length($12829));
                                                                var _let_args_n$25 = List$reverse$(List$seq$(_flds_len$24));
                                                                var _lam_args_n$26 = List$reverse$(List$seq$(_lams_len$16));
                                                                var _keys$27 = List$create$(_flds_len$24, (_k$27 => {
                                                                    var $12831 = Kind$Comp$var$(("f" + Nat$show$((_depth$3 + _k$27))));
                                                                    return $12831;
                                                                }));
                                                                var _argj$28 = Kind$Comp$apply$($12826, _keys$27);
                                                                var _body$29 = Kind$Comp$transpile$term$(_lang$1, _argj$28, ((_depth$3 + _flds_len$24) + _lams_len$16), _defs$4);
                                                                var _body$30 = (() => {
                                                                    var $12833 = _body$29;
                                                                    var $12834 = _lam_args_n$26;
                                                                    let _body$31 = $12833;
                                                                    let _i$30;
                                                                    while ($12834._ === 'List.cons') {
                                                                        _i$30 = $12834.head;
                                                                        var self = _lang$1;
                                                                        switch (self._) {
                                                                            case 'Kind.Comp.Language.new':
                                                                                var $12835 = self.gram;
                                                                                var $12836 = $12835;
                                                                                var self = $12836;
                                                                                break;
                                                                        };
                                                                        switch (self._) {
                                                                            case 'Kind.Comp.Grammar.new':
                                                                                var $12837 = self.lambda;
                                                                                var $12838 = $12837;
                                                                                var $12833 = $12838;
                                                                                break;
                                                                        };
                                                                        var $12833 = $12833(("c" + Nat$show$(_i$30)))(_body$31);
                                                                        _body$31 = $12833;
                                                                        $12834 = $12834.tail;
                                                                    }
                                                                    return _body$31;
                                                                })();
                                                                var _text$31 = _body$30;
                                                                var _text$32 = (() => {
                                                                    var $12840 = _text$31;
                                                                    var $12841 = _let_args_n$25;
                                                                    let _text$33 = $12840;
                                                                    let _k$32;
                                                                    while ($12841._ === 'List.cons') {
                                                                        _k$32 = $12841.head;
                                                                        var self = _lang$1;
                                                                        switch (self._) {
                                                                            case 'Kind.Comp.Language.new':
                                                                                var $12842 = self.gram;
                                                                                var $12843 = $12842;
                                                                                var self = $12843;
                                                                                break;
                                                                        };
                                                                        switch (self._) {
                                                                            case 'Kind.Comp.Grammar.new':
                                                                                var $12844 = self.local_definition;
                                                                                var $12845 = $12844;
                                                                                var $12840 = $12845;
                                                                                break;
                                                                        };
                                                                        var $12840 = $12840(("f" + Nat$show$((_depth$3 + _k$32))))(Kind$Comp$replace$(Maybe$default$(List$get$(_k$32, $12829), ""), List$cons$(_self$18, List$nil)))(_text$33);
                                                                        _text$33 = $12840;
                                                                        $12841 = $12841.tail;
                                                                    }
                                                                    return _text$33;
                                                                })();
                                                                var $12830 = Pair$new$($12828, _text$32);
                                                                var $12827 = $12830;
                                                                break;
                                                        };
                                                        var $12824 = $12827;
                                                        break;
                                                };
                                                return $12824;
                                            }), List$zip$($12819, _args$17));
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12846 = self.gram;
                                                    var $12847 = $12846;
                                                    var self = $12847;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12848 = self.select;
                                                    var $12849 = $12848;
                                                    var _ret$20 = $12849;
                                                    break;
                                            };
                                            var _ret$20 = _ret$20(Kind$Comp$replace$($12818, List$cons$(_self$18, List$nil)))(_cse_body_list$19);
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12850 = self.gram;
                                                    var $12851 = $12850;
                                                    var self = $12851;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12852 = self.local_definition;
                                                    var $12853 = $12852;
                                                    var _ret$21 = $12853;
                                                    break;
                                            };
                                            var _ret$21 = _ret$21(_self$18)(Kind$Comp$transpile$term$(_lang$1, $12812, _depth$3, _defs$4))(_ret$20);
                                            var $12822 = Maybe$some$(_ret$21);
                                            var $12820 = $12822;
                                        };
                                        var $12817 = $12820;
                                        break;
                                };
                                var $12813 = $12817;
                                break;
                        };
                        var $12798 = $12813;
                        break;
                    case 'Kind.Comp.nil':
                    case 'Kind.Comp.var':
                    case 'Kind.Comp.lam':
                    case 'Kind.Comp.app':
                    case 'Kind.Comp.let':
                    case 'Kind.Comp.ins':
                    case 'Kind.Comp.nat':
                    case 'Kind.Comp.chr':
                    case 'Kind.Comp.str':
                    case 'Kind.Comp.txt':
                        var $12854 = Maybe$none;
                        var $12798 = $12854;
                        break;
                };
                var $12795 = $12798;
                break;
        };
        return $12795;
    };
    const Kind$Comp$Prim$elim = x0 => x1 => x2 => x3 => Kind$Comp$Prim$elim$(x0, x1, x2, x3);

    function Kind$Comp$Prim$eliminator$(_lang$1, _prim$2, _depth$3, _defs$4) {
        var _term$5 = Kind$Comp$eli$(_prim$2, Kind$Comp$var$("x"));
        var _text$6 = Maybe$default$(Kind$Comp$Prim$elim$(_lang$1, _term$5, 0n, _defs$4), "");
        var _term$7 = Kind$Comp$lam$("x", Kind$Comp$txt$(_text$6));
        var $12855 = Kind$Comp$transpile$term$(_lang$1, _term$7, _depth$3, _defs$4);
        return $12855;
    };
    const Kind$Comp$Prim$eliminator = x0 => x1 => x2 => x3 => Kind$Comp$Prim$eliminator$(x0, x1, x2, x3);

    function BBT$lookup$(_cmp$3, _key$4, _map$5) {
        var BBT$lookup$ = (_cmp$3, _key$4, _map$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _key$4, _map$5]
        });
        var BBT$lookup = _cmp$3 => _key$4 => _map$5 => BBT$lookup$(_cmp$3, _key$4, _map$5);
        var arg = [_cmp$3, _key$4, _map$5];
        while (true) {
            let [_cmp$3, _key$4, _map$5] = arg;
            var R = (() => {
                var self = _map$5;
                switch (self._) {
                    case 'BBT.bin':
                        var $12856 = self.key;
                        var $12857 = self.val;
                        var $12858 = self.left;
                        var $12859 = self.right;
                        var self = _cmp$3(_key$4)($12856);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $12861 = BBT$lookup$(_cmp$3, _key$4, $12858);
                                var $12860 = $12861;
                                break;
                            case 'Cmp.eql':
                                var $12862 = Maybe$some$($12857);
                                var $12860 = $12862;
                                break;
                            case 'Cmp.gtn':
                                var $12863 = BBT$lookup$(_cmp$3, _key$4, $12859);
                                var $12860 = $12863;
                                break;
                        };
                        return $12860;
                    case 'BBT.tip':
                        var $12864 = Maybe$none;
                        return $12864;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BBT$lookup = x0 => x1 => x2 => BBT$lookup$(x0, x1, x2);

    function U16$cmp$(_a$1, _b$2) {
        var self = (_a$1 < _b$2);
        if (self) {
            var $12866 = Cmp$ltn;
            var $12865 = $12866;
        } else {
            var self = (_a$1 === _b$2);
            if (self) {
                var $12868 = Cmp$eql;
                var $12867 = $12868;
            } else {
                var $12869 = Cmp$gtn;
                var $12867 = $12869;
            };
            var $12865 = $12867;
        };
        return $12865;
    };
    const U16$cmp = x0 => x1 => U16$cmp$(x0, x1);

    function String$cmp$(_a$1, _b$2) {
        var String$cmp$ = (_a$1, _b$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _b$2]
        });
        var String$cmp = _a$1 => _b$2 => String$cmp$(_a$1, _b$2);
        var arg = [_a$1, _b$2];
        while (true) {
            let [_a$1, _b$2] = arg;
            var R = (() => {
                var self = _a$1;
                if (self.length === 0) {
                    var self = _b$2;
                    if (self.length === 0) {
                        var $12871 = Cmp$eql;
                        var $12870 = $12871;
                    } else {
                        var $12872 = self.charCodeAt(0);
                        var $12873 = self.slice(1);
                        var $12874 = Cmp$ltn;
                        var $12870 = $12874;
                    };
                    return $12870;
                } else {
                    var $12875 = self.charCodeAt(0);
                    var $12876 = self.slice(1);
                    var self = _b$2;
                    if (self.length === 0) {
                        var $12878 = Cmp$gtn;
                        var $12877 = $12878;
                    } else {
                        var $12879 = self.charCodeAt(0);
                        var $12880 = self.slice(1);
                        var self = U16$cmp$($12875, $12879);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $12882 = Cmp$ltn;
                                var $12881 = $12882;
                                break;
                            case 'Cmp.eql':
                                var $12883 = String$cmp$($12876, $12880);
                                var $12881 = $12883;
                                break;
                            case 'Cmp.gtn':
                                var $12884 = Cmp$gtn;
                                var $12881 = $12884;
                                break;
                        };
                        var $12877 = $12881;
                    };
                    return $12877;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$cmp = x0 => x1 => String$cmp$(x0, x1);

    function Map$get$(_key$2, _map$3) {
        var $12885 = BBT$lookup$(String$cmp, _key$2, _map$3);
        return $12885;
    };
    const Map$get = x0 => x1 => Map$get$(x0, x1);

    function BBT$(_K$1, _V$2) {
        var $12886 = null;
        return $12886;
    };
    const BBT = x0 => x1 => BBT$(x0, x1);

    function Map$(_V$1) {
        var $12887 = null;
        return $12887;
    };
    const Map = x0 => Map$(x0);

    function Kind$Comp$transpile$global_definitions$(_lang$1, _defs_list$2, _defs$3) {
        var _code$4 = "";
        var _code$5 = (() => {
            var $12890 = _code$4;
            var $12891 = Kind$Comp$Prim$natives;
            let _code$6 = $12890;
            let _nati$5;
            while ($12891._ === 'List.cons') {
                _nati$5 = $12891.head;
                var self = _nati$5;
                switch (self._) {
                    case 'Pair.new':
                        var $12892 = self.fst;
                        var $12893 = self.snd;
                        var _code$9 = (_code$6 + (() => {
                            var self = _lang$1;
                            switch (self._) {
                                case 'Kind.Comp.Language.new':
                                    var $12895 = self.gram;
                                    var $12896 = $12895;
                                    var self = $12896;
                                    break;
                            };
                            switch (self._) {
                                case 'Kind.Comp.Grammar.new':
                                    var $12897 = self.global_function;
                                    var $12898 = $12897;
                                    return $12898;
                            };
                        })()((() => {
                            var self = _lang$1;
                            switch (self._) {
                                case 'Kind.Comp.Language.new':
                                    var $12899 = self.gram;
                                    var $12900 = $12899;
                                    var self = $12900;
                                    break;
                            };
                            switch (self._) {
                                case 'Kind.Comp.Grammar.new':
                                    var $12901 = self.inst_name;
                                    var $12902 = $12901;
                                    return $12902;
                            };
                        })()($12892))(List$nil)(Kind$Comp$Prim$instantiator$(_lang$1, $12893, 0n, _defs$3)));
                        var _code$10 = (_code$9 + (() => {
                            var self = _lang$1;
                            switch (self._) {
                                case 'Kind.Comp.Language.new':
                                    var $12903 = self.gram;
                                    var $12904 = $12903;
                                    var self = $12904;
                                    break;
                            };
                            switch (self._) {
                                case 'Kind.Comp.Grammar.new':
                                    var $12905 = self.global_function;
                                    var $12906 = $12905;
                                    return $12906;
                            };
                        })()((() => {
                            var self = _lang$1;
                            switch (self._) {
                                case 'Kind.Comp.Language.new':
                                    var $12907 = self.gram;
                                    var $12908 = $12907;
                                    var self = $12908;
                                    break;
                            };
                            switch (self._) {
                                case 'Kind.Comp.Grammar.new':
                                    var $12909 = self.elim_name;
                                    var $12910 = $12909;
                                    return $12910;
                            };
                        })()($12892))(List$nil)(Kind$Comp$Prim$eliminator$(_lang$1, $12893, 0n, _defs$3)));
                        var $12894 = _code$10;
                        var $12890 = $12894;
                        break;
                };
                _code$6 = $12890;
                $12891 = $12891.tail;
            }
            return _code$6;
        })();
        var _code$6 = (() => {
            var $12912 = _code$5;
            var $12913 = _defs_list$2;
            let _code$7 = $12912;
            let _defn$6;
            while ($12913._ === 'List.cons') {
                _defn$6 = $12913.head;
                var self = _defn$6;
                switch (self._) {
                    case 'Pair.new':
                        var $12914 = self.fst;
                        var $12915 = self.snd;
                        var self = Kind$Comp$get_vars$($12915);
                        switch (self._) {
                            case 'Pair.new':
                                var $12917 = self.fst;
                                var $12918 = self.snd;
                                var self = Map$get$($12914, (() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12920 = self.opts;
                                            var $12921 = $12920;
                                            return $12921;
                                    };
                                })());
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $12922 = self.value;
                                        var $12923 = Kind$Comp$replace$(Pair$snd$($12922), $12917);
                                        var _inlined_body$12 = $12923;
                                        break;
                                    case 'Maybe.none':
                                        var $12924 = Kind$Comp$transpile$term$(_lang$1, $12918, 0n, _defs$3);
                                        var _inlined_body$12 = $12924;
                                        break;
                                };
                                var _code$13 = (_code$7 + (() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12925 = self.gram;
                                            var $12926 = $12925;
                                            var self = $12926;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12927 = self.global_function;
                                            var $12928 = $12927;
                                            return $12928;
                                    };
                                })()($12914)($12917)(_inlined_body$12));
                                var $12919 = _code$13;
                                var $12916 = $12919;
                                break;
                        };
                        var $12912 = $12916;
                        break;
                };
                _code$7 = $12912;
                $12913 = $12913.tail;
            }
            return _code$7;
        })();
        var $12888 = _code$6;
        return $12888;
    };
    const Kind$Comp$transpile$global_definitions = x0 => x1 => x2 => Kind$Comp$transpile$global_definitions$(x0, x1, x2);

    function Kind$Comp$transpile$(_lang$1, _main$2, _defs$3) {
        var _defs_list$4 = Kind$Comp$dependency_sort$(_main$2, _defs$3);
        var self = _lang$1;
        switch (self._) {
            case 'Kind.Comp.Language.new':
                var $12930 = self.gram;
                var $12931 = $12930;
                var self = $12931;
                break;
        };
        switch (self._) {
            case 'Kind.Comp.Grammar.new':
                var $12932 = self.program;
                var $12933 = $12932;
                var _code$5 = $12933;
                break;
        };
        var _code$5 = _code$5(_main$2)(((() => {
            var self = _lang$1;
            switch (self._) {
                case 'Kind.Comp.Language.new':
                    var $12934 = self.base;
                    var $12935 = $12934;
                    return $12935;
            };
        })() + ("\u{a}\u{a}" + Kind$Comp$transpile$global_definitions$(_lang$1, _defs_list$4, _defs$3))));
        var $12929 = _code$5;
        return $12929;
    };
    const Kind$Comp$transpile = x0 => x1 => x2 => Kind$Comp$transpile$(x0, x1, x2);

    function Kind$Comp$Language$new$(_gram$1, _nati$2, _opts$3, _base$4) {
        var $12936 = ({
            _: 'Kind.Comp.Language.new',
            'gram': _gram$1,
            'nati': _nati$2,
            'opts': _opts$3,
            'base': _base$4
        });
        return $12936;
    };
    const Kind$Comp$Language$new = x0 => x1 => x2 => x3 => Kind$Comp$Language$new$(x0, x1, x2, x3);

    function Kind$Comp$Grammar$new$(_null$1, _name$2, _inst_name$3, _elim_name$4, _lambda$5, _application$6, _local_definition$7, _global_function$8, _global_application$9, _select$10, _string_literal$11, _nat$12, _module$13, _program$14) {
        var $12937 = ({
            _: 'Kind.Comp.Grammar.new',
            'null': _null$1,
            'name': _name$2,
            'inst_name': _inst_name$3,
            'elim_name': _elim_name$4,
            'lambda': _lambda$5,
            'application': _application$6,
            'local_definition': _local_definition$7,
            'global_function': _global_function$8,
            'global_application': _global_application$9,
            'select': _select$10,
            'string_literal': _string_literal$11,
            'nat': _nat$12,
            'module': _module$13,
            'program': _program$14
        });
        return $12937;
    };
    const Kind$Comp$Grammar$new = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => x9 => x10 => x11 => x12 => x13 => Kind$Comp$Grammar$new$(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13);
    const Kind$Comp$Target$Scheme$null = "\'()";

    function Kind$Comp$Target$Scheme$name$(_name$1) {
        var self = String$is_empty$(_name$1);
        if (self) {
            var $12939 = "-";
            var $12938 = $12939;
        } else {
            var $12940 = _name$1;
            var $12938 = $12940;
        };
        return $12938;
    };
    const Kind$Comp$Target$Scheme$name = x0 => Kind$Comp$Target$Scheme$name$(x0);

    function Kind$Comp$Target$Scheme$inst_name$(_name$1) {
        var $12941 = (_name$1 + "-inst");
        return $12941;
    };
    const Kind$Comp$Target$Scheme$inst_name = x0 => Kind$Comp$Target$Scheme$inst_name$(x0);

    function Kind$Comp$Target$Scheme$elim_name$(_name$1) {
        var $12942 = (_name$1 + "-elim");
        return $12942;
    };
    const Kind$Comp$Target$Scheme$elim_name = x0 => Kind$Comp$Target$Scheme$elim_name$(x0);

    function Kind$Comp$Target$Scheme$lambda$(_name$1, _body$2) {
        var $12943 = ("(lambda (" + (_name$1 + (") " + (_body$2 + ")"))));
        return $12943;
    };
    const Kind$Comp$Target$Scheme$lambda = x0 => x1 => Kind$Comp$Target$Scheme$lambda$(x0, x1);

    function Kind$Comp$Target$Scheme$application$(_func$1, _argm$2) {
        var $12944 = ("(" + (_func$1 + (" " + (_argm$2 + ")"))));
        return $12944;
    };
    const Kind$Comp$Target$Scheme$application = x0 => x1 => Kind$Comp$Target$Scheme$application$(x0, x1);

    function Kind$Comp$Target$Scheme$local_definition$(_name$1, _expr$2, _body$3) {
        var $12945 = ("(let ((" + (_name$1 + (" " + (_expr$2 + (")) " + (_body$3 + ")"))))));
        return $12945;
    };
    const Kind$Comp$Target$Scheme$local_definition = x0 => x1 => x2 => Kind$Comp$Target$Scheme$local_definition$(x0, x1, x2);

    function Kind$Comp$Target$Scheme$global_application$(_name$1, _args$2) {
        var $12946 = ("($" + (_name$1 + (" " + (String$join$(" ", _args$2) + ")"))));
        return $12946;
    };
    const Kind$Comp$Target$Scheme$global_application = x0 => x1 => Kind$Comp$Target$Scheme$global_application$(x0, x1);

    function Kind$Comp$Target$Scheme$nest_lambdas$aux$(_fun$1, _args$2, _rem_args$3) {
        var self = _rem_args$3;
        switch (self._) {
            case 'List.cons':
                var $12948 = self.head;
                var $12949 = self.tail;
                var $12950 = Kind$Comp$Target$Scheme$lambda$($12948, Kind$Comp$Target$Scheme$nest_lambdas$aux$(_fun$1, _args$2, $12949));
                var $12947 = $12950;
                break;
            case 'List.nil':
                var $12951 = Kind$Comp$Target$Scheme$global_application$(_fun$1, _args$2);
                var $12947 = $12951;
                break;
        };
        return $12947;
    };
    const Kind$Comp$Target$Scheme$nest_lambdas$aux = x0 => x1 => x2 => Kind$Comp$Target$Scheme$nest_lambdas$aux$(x0, x1, x2);

    function Kind$Comp$Target$Scheme$nest_lambdas$(_name$1, _args$2) {
        var _body$3 = Kind$Comp$Target$Scheme$nest_lambdas$aux$(_name$1, _args$2, _args$2);
        var $12952 = ("(define " + (_name$1 + (" " + (_body$3 + ")\u{a}"))));
        return $12952;
    };
    const Kind$Comp$Target$Scheme$nest_lambdas = x0 => x1 => Kind$Comp$Target$Scheme$nest_lambdas$(x0, x1);

    function Kind$Comp$Target$Scheme$global_function$(_name$1, _args$2, _body$3) {
        var self = _args$2;
        switch (self._) {
            case 'List.nil':
                var $12954 = ("(define " + (_name$1 + (" " + (_body$3 + ")\u{a}"))));
                var $12953 = $12954;
                break;
            case 'List.cons':
                var $12955 = ("(define ($" + (_name$1 + (" " + (String$join$(" ", _args$2) + (") " + (_body$3 + (")\u{a}" + Kind$Comp$Target$Scheme$nest_lambdas$(_name$1, _args$2))))))));
                var $12953 = $12955;
                break;
        };
        return $12953;
    };
    const Kind$Comp$Target$Scheme$global_function = x0 => x1 => x2 => Kind$Comp$Target$Scheme$global_function$(x0, x1, x2);

    function Kind$Comp$Target$Scheme$select$(_term$1, _cse_body_list$2) {
        var _cses$3 = "";
        var _cses$4 = (() => {
            var $12958 = _cses$3;
            var $12959 = _cse_body_list$2;
            let _cses$5 = $12958;
            let _cse_body$4;
            while ($12959._ === 'List.cons') {
                _cse_body$4 = $12959.head;
                var self = _cse_body$4;
                switch (self._) {
                    case 'Pair.new':
                        var $12960 = self.fst;
                        var $12961 = self.snd;
                        var $12962 = (_cses$5 + (" (" + ($12960 + (" " + ($12961 + ")")))));
                        var $12958 = $12962;
                        break;
                };
                _cses$5 = $12958;
                $12959 = $12959.tail;
            }
            return _cses$5;
        })();
        var $12956 = ("(case " + (_term$1 + (_cses$4 + ")")));
        return $12956;
    };
    const Kind$Comp$Target$Scheme$select = x0 => x1 => Kind$Comp$Target$Scheme$select$(x0, x1);

    function Char$to_string$(_chr$1) {
        var $12963 = String$cons$(_chr$1, String$nil);
        return $12963;
    };
    const Char$to_string = x0 => Char$to_string$(x0);

    function Kind$Comp$Target$Scheme$string_literal$(_str$1) {
        var self = _str$1;
        if (self.length === 0) {
            var $12965 = "";
            var $12964 = $12965;
        } else {
            var $12966 = self.charCodeAt(0);
            var $12967 = self.slice(1);
            var $12968 = ((() => {
                var self = (($12966 === 92) || ($12966 === 34));
                if (self) {
                    var $12969 = ("\\" + Char$to_string$($12966));
                    return $12969;
                } else {
                    var self = (($12966 >= 32) && ($12966 <= 126));
                    if (self) {
                        var $12971 = Char$to_string$($12966);
                        var $12970 = $12971;
                    } else {
                        var $12972 = ("\\x" + (U16$show_hex$($12966) + ";"));
                        var $12970 = $12972;
                    };
                    return $12970;
                };
            })() + Kind$Comp$Target$Scheme$string_literal$($12967));
            var $12964 = $12968;
        };
        return $12964;
    };
    const Kind$Comp$Target$Scheme$string_literal = x0 => Kind$Comp$Target$Scheme$string_literal$(x0);

    function Kind$Comp$Target$Scheme$nat$(_nat$1) {
        var $12973 = Nat$show$(_nat$1);
        return $12973;
    };
    const Kind$Comp$Target$Scheme$nat = x0 => Kind$Comp$Target$Scheme$nat$(x0);
    const Kind$Comp$Target$Scheme$exports = List$cons$("suffix?", List$cons$("prefix?", List$cons$("run-all", List$cons$("run_io", List$cons$("print-lines", List$cons$("run_kind", List$cons$("make-string-view", List$cons$("string-view?", List$cons$("string-view-end", List$cons$("string-view-start", List$cons$("kstring-length", List$cons$("kstring-head", List$cons$("kstring-tail", List$cons$("string-view-ref", List$cons$("kstring?", List$cons$("kstring->string", List$cons$("kstring-append", List$cons$("kstring-getter", List$cons$("kstring_join", List$nil)))))))))))))))))));

    function Kind$Comp$Target$Scheme$module$(_name$1, _exports$2, _defs$3) {
        var _code$4 = ("#!chezscheme\u{a}(library (" + (_name$1 + ") (export"));
        var _code$5 = (() => {
            var $12976 = _code$4;
            var $12977 = Kind$Comp$Target$Scheme$exports;
            let _code$6 = $12976;
            let _export$5;
            while ($12977._ === 'List.cons') {
                _export$5 = $12977.head;
                var $12976 = (_code$6 + (" " + _export$5));
                _code$6 = $12976;
                $12977 = $12977.tail;
            }
            return _code$6;
        })();
        var _code$6 = (() => {
            var $12979 = _code$5;
            var $12980 = _exports$2;
            let _code$7 = $12979;
            let _export$6;
            while ($12980._ === 'List.cons') {
                _export$6 = $12980.head;
                var $12979 = (_code$7 + (" " + _export$6));
                _code$7 = $12979;
                $12980 = $12980.tail;
            }
            return _code$7;
        })();
        var _code$7 = (_code$6 + ")\u{a}");
        var _code$8 = (_code$7 + "(import (chezscheme))\u{a}");
        var _code$9 = (_code$8 + (_defs$3 + ")"));
        var $12974 = _code$9;
        return $12974;
    };
    const Kind$Comp$Target$Scheme$module = x0 => x1 => x2 => Kind$Comp$Target$Scheme$module$(x0, x1, x2);

    function Kind$Comp$Target$Scheme$program$(_main$1, _defs$2) {
        var _code$3 = (_defs$2 + ("(run_kind " + (_main$1 + ")")));
        var $12981 = _code$3;
        return $12981;
    };
    const Kind$Comp$Target$Scheme$program = x0 => x1 => Kind$Comp$Target$Scheme$program$(x0, x1);
    const Kind$Comp$Target$Scheme$grammar = Kind$Comp$Grammar$new$(Kind$Comp$Target$Scheme$null, Kind$Comp$Target$Scheme$name, Kind$Comp$Target$Scheme$inst_name, Kind$Comp$Target$Scheme$elim_name, Kind$Comp$Target$Scheme$lambda, Kind$Comp$Target$Scheme$application, Kind$Comp$Target$Scheme$local_definition, Kind$Comp$Target$Scheme$global_function, Kind$Comp$Target$Scheme$global_application, Kind$Comp$Target$Scheme$select, Kind$Comp$Target$Scheme$string_literal, Kind$Comp$Target$Scheme$nat, Kind$Comp$Target$Scheme$module, Kind$Comp$Target$Scheme$program);

    function Kind$Comp$Native$new$(_inst$1, _elim$2) {
        var $12982 = ({
            _: 'Kind.Comp.Native.new',
            'inst': _inst$1,
            'elim': _elim$2
        });
        return $12982;
    };
    const Kind$Comp$Native$new = x0 => x1 => Kind$Comp$Native$new$(x0, x1);

    function Kind$Comp$Target$Scheme$natives$(_prim$1) {
        var self = _prim$1;
        switch (self._) {
            case 'Kind.Comp.Prim.data':
                var $12984 = self.name;
                var $12985 = self.ctrs;
                var $12986 = Kind$Comp$Native$new$(List$fold$($12985, List$nil, (_ctr$4 => _result$5 => {
                    var self = _ctr$4;
                    switch (self._) {
                        case 'Pair.new':
                            var $12988 = self.fst;
                            var $12989 = self.snd;
                            var _fields_size$8 = (list_length($12989));
                            var _fields_vars$9 = String$join$("", List$create$(_fields_size$8, (_x$9 => {
                                var $12991 = (" $" + Nat$show$(_x$9));
                                return $12991;
                            })));
                            var $12990 = List$cons$(Pair$new$(_fields_size$8, ("(vector \'" + ($12984 + ("." + ($12988 + (_fields_vars$9 + ")")))))), _result$5);
                            var $12987 = $12990;
                            break;
                    };
                    return $12987;
                })), Pair$new$("(get $0 0)", List$fold$($12985, List$nil, (_ctr$4 => _result$5 => {
                    var self = _ctr$4;
                    switch (self._) {
                        case 'Pair.new':
                            var $12993 = self.fst;
                            var $12994 = self.snd;
                            var _fields_size$8 = (list_length($12994));
                            var _fields_gets$9 = List$create$(_fields_size$8, (_i$9 => {
                                var $12996 = ("(get $0 " + (Nat$show$(Nat$succ$(_i$9)) + ")"));
                                return $12996;
                            }));
                            var $12995 = List$cons$(Pair$new$(("\'" + ($12984 + ("." + $12993))), _fields_gets$9), _result$5);
                            var $12992 = $12995;
                            break;
                    };
                    return $12992;
                }))));
                var $12983 = $12986;
                break;
            case 'Kind.Comp.Prim.bool':
                var $12997 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "#t"), List$cons$(Pair$new$(0n, "#f"), List$nil)), Pair$new$("$0", List$cons$(Pair$new$("#t", List$nil), List$cons$(Pair$new$("#f", List$nil), List$nil))));
                var $12983 = $12997;
                break;
            case 'Kind.Comp.Prim.bits':
                var $12998 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "#b1"), List$cons$(Pair$new$(1n, "(bitwise-arithmetic-shift-left $0 #b1)"), List$cons$(Pair$new$(1n, "(bitwise-ior (bitwise-arithmetic-shift-left $0 #b1) #b1)"), List$nil))), Pair$new$("(if (eq? $0 #b1) 2 (bitwise-and $0 #b1))", List$cons$(Pair$new$("2", List$nil), List$cons$(Pair$new$("0", List$cons$("(bitwise-arithmetic-shift-right $0 #b1)", List$nil)), List$cons$(Pair$new$("1", List$cons$("(bitwise-arithmetic-shift-right $0 #b1)", List$nil)), List$nil)))));
                var $12983 = $12998;
                break;
            case 'Kind.Comp.Prim.unit':
                var $12999 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "#t"), List$nil), Pair$new$("#t", List$cons$(Pair$new$("#t", List$nil), List$nil)));
                var $12983 = $12999;
                break;
            case 'Kind.Comp.Prim.nat':
                var $13000 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "0"), List$cons$(Pair$new$(1n, "(+ $0 1)"), List$nil)), Pair$new$("(= $0 0)", List$cons$(Pair$new$("#t", List$nil), List$cons$(Pair$new$("#f", List$cons$("(- $0 1)", List$nil)), List$nil))));
                var $12983 = $13000;
                break;
            case 'Kind.Comp.Prim.u16':
                var $13001 = Kind$Comp$Native$new$(List$cons$(Pair$new$(1n, "(word-to-u16 $0)"), List$nil), Pair$new$("#t", List$cons$(Pair$new$("#t", List$cons$("(u16-to-word $0)", List$nil)), List$nil)));
                var $12983 = $13001;
                break;
            case 'Kind.Comp.Prim.u32':
                var $13002 = Kind$Comp$Native$new$(List$cons$(Pair$new$(1n, "(word-to-u 32 $0)"), List$nil), Pair$new$("#t", List$cons$(Pair$new$("#t", List$cons$("(u-to-word 32 $0)", List$nil)), List$nil)));
                var $12983 = $13002;
                break;
            case 'Kind.Comp.Prim.string':
                var $13003 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "\"\""), List$cons$(Pair$new$(2n, "(kstring-append (make-string 1 (integer->char $0)) $1)"), List$nil)), Pair$new$("(<= (kstring-length $0) 0)", List$cons$(Pair$new$("#t", List$nil), List$cons$(Pair$new$("#f", List$cons$("(char->integer (kstring-head $0))", List$cons$("(kstring-tail $0)", List$nil))), List$nil))));
                var $12983 = $13003;
                break;
        };
        return $12983;
    };
    const Kind$Comp$Target$Scheme$natives = x0 => Kind$Comp$Target$Scheme$natives$(x0);

    function BBT$bin$(_size$3, _key$4, _val$5, _left$6, _right$7) {
        var $13004 = ({
            _: 'BBT.bin',
            'size': _size$3,
            'key': _key$4,
            'val': _val$5,
            'left': _left$6,
            'right': _right$7
        });
        return $13004;
    };
    const BBT$bin = x0 => x1 => x2 => x3 => x4 => BBT$bin$(x0, x1, x2, x3, x4);

    function U32$new$(_value$1) {
        var $13005 = word_to_u32(_value$1);
        return $13005;
    };
    const U32$new = x0 => U32$new$(x0);
    const Nat$to_u32 = a0 => (Number(a0) >>> 0);
    const BBT$tip = ({
        _: 'BBT.tip'
    });

    function BBT$singleton$(_key$3, _val$4) {
        var $13006 = BBT$bin$(1, _key$3, _val$4, BBT$tip, BBT$tip);
        return $13006;
    };
    const BBT$singleton = x0 => x1 => BBT$singleton$(x0, x1);

    function BBT$size$(_map$3) {
        var self = _map$3;
        switch (self._) {
            case 'BBT.bin':
                var $13008 = self.size;
                var $13009 = $13008;
                var $13007 = $13009;
                break;
            case 'BBT.tip':
                var $13010 = 0;
                var $13007 = $13010;
                break;
        };
        return $13007;
    };
    const BBT$size = x0 => BBT$size$(x0);
    const U32$add = a0 => a1 => ((a0 + a1) >>> 0);
    const U32$mul = a0 => a1 => ((a0 * a1) >>> 0);
    const BBT$w = 3;
    const U32$ltn = a0 => a1 => (a0 < a1);
    const U32$from_nat = a0 => (Number(a0) >>> 0);

    function BBT$node$(_key$3, _val$4, _left$5, _right$6) {
        var _size_left$7 = BBT$size$(_left$5);
        var _size_right$8 = BBT$size$(_right$6);
        var _new_size$9 = ((1 + ((_size_left$7 + _size_right$8) >>> 0)) >>> 0);
        var $13011 = BBT$bin$(_new_size$9, _key$3, _val$4, _left$5, _right$6);
        return $13011;
    };
    const BBT$node = x0 => x1 => x2 => x3 => BBT$node$(x0, x1, x2, x3);

    function Cmp$as_gtn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $13013 = Bool$false;
                var $13012 = $13013;
                break;
            case 'Cmp.gtn':
                var $13014 = Bool$true;
                var $13012 = $13014;
                break;
        };
        return $13012;
    };
    const Cmp$as_gtn = x0 => Cmp$as_gtn$(x0);

    function Word$gtn$(_a$2, _b$3) {
        var $13015 = Cmp$as_gtn$(Word$cmp$(_a$2, _b$3));
        return $13015;
    };
    const Word$gtn = x0 => x1 => Word$gtn$(x0, x1);
    const U32$gtn = a0 => a1 => (a0 > a1);

    function BBT$balance$(_k$3, _v$4, _l$5, _r$6) {
        var _size_l$7 = BBT$size$(_l$5);
        var _size_r$8 = BBT$size$(_r$6);
        var _size_l_plus_size_r$9 = ((_size_l$7 + _size_r$8) >>> 0);
        var _w_x_size_l$10 = ((BBT$w * _size_l$7) >>> 0);
        var _w_x_size_r$11 = ((BBT$w * _size_r$8) >>> 0);
        var self = (_size_l_plus_size_r$9 < 2);
        if (self) {
            var $13017 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
            var $13016 = $13017;
        } else {
            var self = (_size_r$8 > _w_x_size_l$10);
            if (self) {
                var self = _r$6;
                switch (self._) {
                    case 'BBT.bin':
                        var $13020 = self.key;
                        var $13021 = self.val;
                        var $13022 = self.left;
                        var $13023 = self.right;
                        var _size_rl$17 = BBT$size$($13022);
                        var _size_rr$18 = BBT$size$($13023);
                        var self = (_size_rl$17 < _size_rr$18);
                        if (self) {
                            var _new_key$19 = $13020;
                            var _new_val$20 = $13021;
                            var _new_left$21 = BBT$node$(_k$3, _v$4, _l$5, $13022);
                            var _new_right$22 = $13023;
                            var $13025 = BBT$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                            var $13024 = $13025;
                        } else {
                            var self = $13022;
                            switch (self._) {
                                case 'BBT.bin':
                                    var $13027 = self.key;
                                    var $13028 = self.val;
                                    var $13029 = self.left;
                                    var $13030 = self.right;
                                    var _new_key$24 = $13027;
                                    var _new_val$25 = $13028;
                                    var _new_left$26 = BBT$node$(_k$3, _v$4, _l$5, $13029);
                                    var _new_right$27 = BBT$node$($13020, $13021, $13030, $13023);
                                    var $13031 = BBT$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                    var $13026 = $13031;
                                    break;
                                case 'BBT.tip':
                                    var $13032 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                                    var $13026 = $13032;
                                    break;
                            };
                            var $13024 = $13026;
                        };
                        var $13019 = $13024;
                        break;
                    case 'BBT.tip':
                        var $13033 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                        var $13019 = $13033;
                        break;
                };
                var $13018 = $13019;
            } else {
                var self = (_size_l$7 > _w_x_size_r$11);
                if (self) {
                    var self = _l$5;
                    switch (self._) {
                        case 'BBT.bin':
                            var $13036 = self.key;
                            var $13037 = self.val;
                            var $13038 = self.left;
                            var $13039 = self.right;
                            var _size_ll$17 = BBT$size$($13038);
                            var _size_lr$18 = BBT$size$($13039);
                            var self = (_size_lr$18 < _size_ll$17);
                            if (self) {
                                var _new_key$19 = $13036;
                                var _new_val$20 = $13037;
                                var _new_left$21 = $13038;
                                var _new_right$22 = BBT$node$(_k$3, _v$4, $13039, _r$6);
                                var $13041 = BBT$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                                var $13040 = $13041;
                            } else {
                                var self = $13039;
                                switch (self._) {
                                    case 'BBT.bin':
                                        var $13043 = self.key;
                                        var $13044 = self.val;
                                        var $13045 = self.left;
                                        var $13046 = self.right;
                                        var _new_key$24 = $13043;
                                        var _new_val$25 = $13044;
                                        var _new_left$26 = BBT$node$($13036, $13037, $13038, $13045);
                                        var _new_right$27 = BBT$node$(_k$3, _v$4, $13046, _r$6);
                                        var $13047 = BBT$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                        var $13042 = $13047;
                                        break;
                                    case 'BBT.tip':
                                        var $13048 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                                        var $13042 = $13048;
                                        break;
                                };
                                var $13040 = $13042;
                            };
                            var $13035 = $13040;
                            break;
                        case 'BBT.tip':
                            var $13049 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                            var $13035 = $13049;
                            break;
                    };
                    var $13034 = $13035;
                } else {
                    var $13050 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                    var $13034 = $13050;
                };
                var $13018 = $13034;
            };
            var $13016 = $13018;
        };
        return $13016;
    };
    const BBT$balance = x0 => x1 => x2 => x3 => BBT$balance$(x0, x1, x2, x3);

    function BBT$insert$(_cmp$3, _key$4, _val$5, _map$6) {
        var self = _map$6;
        switch (self._) {
            case 'BBT.bin':
                var $13052 = self.key;
                var $13053 = self.val;
                var $13054 = self.left;
                var $13055 = self.right;
                var self = _cmp$3(_key$4)($13052);
                switch (self._) {
                    case 'Cmp.ltn':
                        var _new_key$12 = $13052;
                        var _new_val$13 = $13053;
                        var _new_left$14 = BBT$insert$(_cmp$3, _key$4, _val$5, $13054);
                        var _new_right$15 = $13055;
                        var $13057 = BBT$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $13056 = $13057;
                        break;
                    case 'Cmp.eql':
                        var $13058 = BBT$node$(_key$4, _val$5, $13054, $13055);
                        var $13056 = $13058;
                        break;
                    case 'Cmp.gtn':
                        var _new_key$12 = $13052;
                        var _new_val$13 = $13053;
                        var _new_left$14 = $13054;
                        var _new_right$15 = BBT$insert$(_cmp$3, _key$4, _val$5, $13055);
                        var $13059 = BBT$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $13056 = $13059;
                        break;
                };
                var $13051 = $13056;
                break;
            case 'BBT.tip':
                var $13060 = BBT$singleton$(_key$4, _val$5);
                var $13051 = $13060;
                break;
        };
        return $13051;
    };
    const BBT$insert = x0 => x1 => x2 => x3 => BBT$insert$(x0, x1, x2, x3);

    function BBT$from_list$go$(_cmp$3, _acc$4, _xs$5) {
        var BBT$from_list$go$ = (_cmp$3, _acc$4, _xs$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _acc$4, _xs$5]
        });
        var BBT$from_list$go = _cmp$3 => _acc$4 => _xs$5 => BBT$from_list$go$(_cmp$3, _acc$4, _xs$5);
        var arg = [_cmp$3, _acc$4, _xs$5];
        while (true) {
            let [_cmp$3, _acc$4, _xs$5] = arg;
            var R = (() => {
                var self = _xs$5;
                switch (self._) {
                    case 'List.cons':
                        var $13061 = self.head;
                        var $13062 = self.tail;
                        var _key$8 = Pair$fst$($13061);
                        var _val$9 = Pair$snd$($13061);
                        var _new_acc$10 = BBT$insert$(_cmp$3, _key$8, _val$9, _acc$4);
                        var $13063 = BBT$from_list$go$(_cmp$3, _new_acc$10, $13062);
                        return $13063;
                    case 'List.nil':
                        var $13064 = _acc$4;
                        return $13064;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BBT$from_list$go = x0 => x1 => x2 => BBT$from_list$go$(x0, x1, x2);

    function BBT$from_list$(_cmp$3, _xs$4) {
        var $13065 = BBT$from_list$go$(_cmp$3, BBT$tip, _xs$4);
        return $13065;
    };
    const BBT$from_list = x0 => x1 => BBT$from_list$(x0, x1);

    function Map$from_list$(_xs$2) {
        var $13066 = BBT$from_list$(String$cmp, _xs$2);
        return $13066;
    };
    const Map$from_list = x0 => Map$from_list$(x0);
    const Kind$Comp$Target$Scheme$optimizeds = Map$from_list$(List$cons$(Pair$new$("Bool.not", Pair$new$(1n, "(not $0)")), List$cons$(Pair$new$("Bool.and", Pair$new$(2n, "(and $0 $1)")), List$cons$(Pair$new$("Bool.if", Pair$new$(3n, "(if $0 $1 $2)")), List$cons$(Pair$new$("Bool.or", Pair$new$(2n, "(or $0 $1)")), List$cons$(Pair$new$("Nat.add", Pair$new$(2n, "(+ $0 $1)")), List$cons$(Pair$new$("Nat.sub", Pair$new$(2n, "(max (- $0 $1) 0)")), List$cons$(Pair$new$("Nat.mul", Pair$new$(2n, "(* $0 $1)")), List$cons$(Pair$new$("Nat.div", Pair$new$(2n, "(div $0 $1)")), List$cons$(Pair$new$("Nat.mod", Pair$new$(2n, "(mod $0 $1)")), List$cons$(Pair$new$("Nat.pow", Pair$new$(2n, "(expt $0 $1)")), List$cons$(Pair$new$("Nat.ltn", Pair$new$(2n, "(< $0 $1)")), List$cons$(Pair$new$("Nat.lte", Pair$new$(2n, "(<= $0 $1)")), List$cons$(Pair$new$("Nat.eql", Pair$new$(2n, "(= $0 $1)")), List$cons$(Pair$new$("Nat.gte", Pair$new$(2n, "(>= $0 $1)")), List$cons$(Pair$new$("Nat.gtn", Pair$new$(2n, "(> $0 $1)")), List$cons$(Pair$new$("Nat.to_u16", Pair$new$(1n, "$0")), List$cons$(Pair$new$("Nat.show", Pair$new$(1n, "(number->string $0)")), List$cons$(Pair$new$("U16.add", Pair$new$(2n, "(mod (+ $0 $1) 65536)")), List$cons$(Pair$new$("U16.sub", Pair$new$(2n, "(mod (- $0 $1) 65536)")), List$cons$(Pair$new$("U16.mul", Pair$new$(2n, "(mod (* $0 $1) 65536)")), List$cons$(Pair$new$("U16.div", Pair$new$(2n, "(div $0 $1)")), List$cons$(Pair$new$("U16.mod", Pair$new$(2n, "(mod $0 $1)")), List$cons$(Pair$new$("U16.pow", Pair$new$(2n, "(mod (expt $0 $1) 65536)")), List$cons$(Pair$new$("U16.ltn", Pair$new$(2n, "(< $0 $1)")), List$cons$(Pair$new$("U16.lte", Pair$new$(2n, "(<= $0 $1)")), List$cons$(Pair$new$("U16.eql", Pair$new$(2n, "(= $0 $1)")), List$cons$(Pair$new$("U16.gte", Pair$new$(2n, "(>= $0 $1)")), List$cons$(Pair$new$("U16.gtn", Pair$new$(2n, "(> $0 $1)")), List$cons$(Pair$new$("U16.inc", Pair$new$(2n, "(+ $0 1)")), List$cons$(Pair$new$("U16.to_nat", Pair$new$(1n, "$0")), List$cons$(Pair$new$("String.eql", Pair$new$(2n, "(string=? (kstring->string $0) (kstring->string $1))")), List$cons$(Pair$new$("String.concat", Pair$new$(2n, "(kstring-append $0 $1)")), List$nil)))))))))))))))))))))))))))))))));
    const Kind$Comp$Target$Scheme$basics = "; string-view record type (fast way to get a tail)\u{a}(define-record string-view\u{a}  ((immutable data)  ; underlying string\u{a}   (immutable start) ; start position (inclusive)\u{a}   (immutable end))) ; end position (exclusive)\u{a}\u{a}(define string-view-ref\u{a}  (lambda (x y)\u{a}    (string-ref (string-view-data x) (+ (string-view-start x) y))))\u{a}\u{a}(define kstring-tail\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      (make-string-view\u{a}        (string-view-data x)\u{a}        (+ (string-view-start x) 1)\u{a}        (string-view-end x))\u{a}      (make-string-view\u{a}        x\u{a}        1\u{a}        (string-length x)))))\u{a}\u{a}(define kstring-head\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      (string-ref (string-view-data x) (string-view-start x))\u{a}      (string-ref x 0))))\u{a}\u{a}(define kstring-length\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      (- (string-view-end x) (string-view-start x))\u{a}      (string-length x))))\u{a}\u{a}(define kstring?\u{a}  (lambda (x)\u{a}    (or (string-view? x) (string? x))))\u{a}\u{a}(define kstring->string\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      (substring (string-view-data x) (string-view-start x) (string-view-end x))\u{a}      x)))\u{a}\u{a}; TODO depending on x, we could safely append data at the end\u{a}(define kstring-append\u{a}  (lambda (x y)\u{a}    (string-append (kstring->string x) (kstring->string y))))\u{a}\u{a}(define kstring-getter\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      string-view-ref\u{a}      string-ref)))\u{a}\u{a}; Joins a list of strings with an intercalated separator\u{a}(define (kstring_join sep strs fst)\u{a}  (if (null? strs) \u{a}    \"\"\u{a}    (kstring-append\u{a}      (if fst \"\" sep)\u{a}      (car strs)\u{a}      (kstring_join sep (cdr strs) #f))))\u{a}\u{a}; Short alias to vector-ref\u{a}(define get vector-ref)\u{a}\u{a}; Converts a Kind word to a native integer\u{a}(define (word-to-u16 w)\u{a}  (define (word-to-u16-go i w x)\u{a}    (cond ((= 16 i) x)\u{a}      ((symbol=? \'Word.e (get w 0)) (word-to-u16-go (+ i 1) (vector \'Word.e) x))\u{a}      ((symbol=? \'Word.o (get w 0)) (word-to-u16-go (+ i 1) (get w 1) x))\u{a}      ((symbol=? \'Word.i (get w 0)) (word-to-u16-go (+ i 1) (get w 1) (fxior x (fxarithmetic-shift-left 1 i))))))\u{a}  (word-to-u16-go 0 w 0))\u{a}\u{a}(define (word-to-u n w)\u{a}  (define (word-to-u-go n i w x)\u{a}    (cond ((= n i) x)\u{a}      ((symbol=? \'Word.e (get w 0)) (word-to-u-go n (+ i 1) (vector \'Word.e) x))\u{a}      ((symbol=? \'Word.o (get w 0)) (word-to-u-go n (+ i 1) (get w 1) x))\u{a}      ((symbol=? \'Word.i (get w 0)) (word-to-u-go n (+ i 1) (get w 1) (fxior x (fxarithmetic-shift-left 1 i))))))\u{a}  (word-to-u-go n 0 w 0))\u{a}\u{a}; Converts a native integer to a Kind word\u{a}(define (u16-to-word x)\u{a}  (define (u16-to-word-go i x w)\u{a}    (if (= 16 i) w (u16-to-word-go (+ i 1) x\u{a}      (if (= (fxand (fxarithmetic-shift-right x (- 15 i)) 1) 0)\u{a}        (vector \'Word.o w)\u{a}        (vector \'Word.i w)))))\u{a}  (u16-to-word-go 0 x (vector \'Word.e)))\u{a}\u{a}(define (u-to-word n x)\u{a}  (define (u-to-word-go n i x w)\u{a}    (if (= n i) w (u-to-word-go n (+ i 1) x\u{a}      (if (= (fxand (fxarithmetic-shift-right x (- n (+ i 1))) 1) 0)\u{a}        (vector \'Word.o w)\u{a}        (vector \'Word.i w)))))\u{a}  (u-to-word-go n 0 x (vector \'Word.e)))\u{a}\u{a}(define suffix?\u{a}  (lambda (str suff)\u{a}    (let ((suff_length (string-length suff))\u{a}          (str_length (string-length str)))\u{a}      (if (<= suff_length str_length)\u{a}        (string=?\u{a}          (substring str (- str_length suff_length) str_length)\u{a}          suff)\u{a}        #f))))\u{a}\u{a}(define prefix?\u{a}  (lambda (str pref)\u{a}    (let ((pref_length (string-length pref))\u{a}          (str_length (string-length str)))\u{a}      (if (<= pref_length str_length)\u{a}        (string=?\u{a}          (substring str 0 pref_length)\u{a}          pref)\u{a}        #f))))\u{a}\u{a}; Returns the last index that chr occurs in str, -1 otherwise\u{a}(define (last_index_of chr kstr idx)\u{a}  (let ((str (kstring->string kstr)))\u{a}    (if (= idx (kstring-length str))\u{a}      -1\u{a}      (let ((rest (last_index_of chr str (+ idx 1))))\u{a}        (if (char=? (string-ref str idx) chr)\u{a}          (max idx rest)\u{a}          rest)))))\u{a}\u{a}; Returns the first index that chr occurs in str, -1 otherwise\u{a}(define (first_index_of chr kstr idx)\u{a}  (let ((str (kstring->string kstr)))\u{a}    (if (= idx (string-length str))\u{a}      -1\u{a}      (if (char=? (string-ref str idx) chr)\u{a}        idx\u{a}        (first_index_of chr str (+ idx 1))))))\u{a}\u{a}; Splits a string using an identifier\u{a}(define (split_at_first chr kstr)\u{a}  (let ((str (kstring->string kstr)))\u{a}    (let ((split_idx (first_index_of chr str 0)))\u{a}      (if (= split_idx -1)\u{a}        str\u{a}        (cons\u{a}          (substring str 0 split_idx)\u{a}          (substring str (+ split_idx 1) (string-length str)))))))\u{a}\u{a}; Splits a string using an identifier\u{a}(define (split_at_last chr kstr)\u{a}  (let ((str (kstring->string kstr)))\u{a}    (let ((split_idx (last_index_of chr str 0)))\u{a}      (if (= split_idx -1)\u{a}        str\u{a}        (cons\u{a}          (substring str 0 split_idx)\u{a}          (substring str (+ split_idx 1) (string-length str)))))))\u{a}\u{a}; Converts a date to a string, in milliseconds\u{a}(define (time_to_string time)\u{a}  (number->string\u{a}    (+ (* (time-second time) 1000)\u{a}      (div (time-nanosecond time) 1000000))))\u{a}\u{a}; Prints a text with a newline\u{a}(define (print txt)\u{a}  (display (kstring->string txt))\u{a}  (display \"\u{a}\"))\u{a}\u{a}; Gets a line from stdin\u{a}(define (get_line)\u{a}  (let ((port (current-input-port)))\u{a}    (get-line port)))\u{a}\u{a}; Deletes a file\u{a}(define (del_file file)\u{a}  (delete-file (kstring->string file)))\u{a}\u{a}; Gets the contents of a file as a string\u{a}; If it doesn\'t exist, returns empty\u{a}(define (get_file ifile)\u{a}  (let ((file (kstring->string ifile)))\u{a}    (if (file-exists? file)\u{a}      (let ((port (open-input-file file)))\u{a}        (let ((text (get-string-all port)))\u{a}          (begin\u{a}            (close-input-port port)\u{a}            text)))\u{a}      \"\")))\u{a}\u{a}; Sets the contents of a file\u{a}(define (set_file file text)\u{a}  (system (string-append \"mkdir -p \" (car (split_at_last #\\/ file))))\u{a}  (if (file-exists? file) (delete-file file))\u{a}  (let ((port (open-output-file file)))\u{a}    (begin\u{a}      (display text port)\u{a}      (close-output-port port))))\u{a}\u{a}; Returns a list of files in a directory\u{a}(define (get_dir path)\u{a}  (directory-list path)) \u{a}\u{a}; Returns the time a file was modified. TODO: test on Windows/Linux\u{a}(define (get_file_mtime file)\u{a}  (time_to_string (file-modification-time (kstring->string file))))\u{a}\u{a}; Returns the current time\u{a}(define (get_time)\u{a}  (time_to_string (current-time)))\u{a}\u{a}; Performs a single Kind IO action\u{a}(define (io_action iname)\u{a}  (let ((name (kstring->string iname)))\u{a}  (case name\u{a}    (\"print\" (lambda (x) (print x)))\u{a}    (\"put_string\" (lambda (x) (display x)))\u{a}    (\"get_line\" (lambda (x) (get_line)))\u{a}    (\"del_file\" (lambda (x) (del_file x)))\u{a}    (\"get_file\" (lambda (x) (get_file x)))\u{a}    (\"set_file\" (lambda (x) (let ((file_text (split_at_first #\\= (kstring->string x)))) (set_file (car file_text) (cdr file_text)))))\u{a}    (\"get_dir\" (lambda (x) (get_dir x)))\u{a}    (\"get_file_mtime\" (lambda (x) (get_file_mtime x)))\u{a}    (\"get_time\" (lambda (x) (get_time)))\u{a}    (\"request\" (lambda (x) \"\"))\u{a}    (else (display (string-append \"IO action not found: \" name))))))\u{a}\u{a}; Runs a Kind IO program\u{a}(define (run_io io)\u{a}  (case (vector-ref io 0)\u{a}    (\'IO.end (vector-ref io 1))\u{a}    (\'IO.ask (let (\u{a}      (io_query (vector-ref io 1))\u{a}      (io_param (vector-ref io 2))\u{a}      (io_then (vector-ref io 3)))\u{a}      (run_io (io_then ((io_action io_query) io_param)))))))\u{a}\u{a}(define (run_kind term)\u{a}  (if\u{a}    (and\u{a}      (vector? term)\u{a}      (or\u{a}        (eq? (vector-ref term 0) \'IO.ask)\u{a}        (eq? (vector-ref term 0) \'IO.end)))\u{a}    (run_io term)\u{a}    (print term)))\u{a}\u{a}(define (print-lines args)\u{a}  (unless (null? args)\u{a}    (display (car args))\u{a}    (newline)\u{a}    (print-lines (cdr args))))\u{a}\u{a}(define run-all\u{a}    (lambda (p)\u{a}      (let ((code (get-datum p)))\u{a}        (unless (eq? code #!eof)\u{a}          (compile code)\u{a}          (run-all p)))))\u{a}";
    const Kind$Comp$Target$Scheme$Language = Kind$Comp$Language$new$(Kind$Comp$Target$Scheme$grammar, Kind$Comp$Target$Scheme$natives, Kind$Comp$Target$Scheme$optimizeds, Kind$Comp$Target$Scheme$basics);

    function Kind$api$io$term_to_scheme$(_name$1) {
        var $13067 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13068 = _m$bind$2;
            return $13068;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_defs$2 => {
            var _defs$3 = Maybe$default$(_defs$2, Kind$Map$new);
            var _compiled$4 = Kind$Comp$Defs$compile$(_defs$3);
            var _schemed$5 = Kind$Comp$transpile$(Kind$Comp$Target$Scheme$Language, _name$1, _compiled$4);
            var $13069 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                var $13070 = _m$pure$7;
                return $13070;
            }))(_schemed$5);
            return $13069;
        }));
        return $13067;
    };
    const Kind$api$io$term_to_scheme = x0 => Kind$api$io$term_to_scheme$(x0);

    function Kind$Synth$many$(_names$1, _defs$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.cons':
                var $13072 = self.head;
                var $13073 = self.tail;
                var $13074 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                    var $13075 = _m$bind$5;
                    return $13075;
                }))(Kind$Synth$one$($13072, _defs$2))((_new_defs$5 => {
                    var self = _new_defs$5;
                    switch (self._) {
                        case 'Maybe.some':
                            var $13077 = self.value;
                            var $13078 = Kind$Synth$many$($13073, $13077);
                            var $13076 = $13078;
                            break;
                        case 'Maybe.none':
                            var $13079 = Kind$Synth$many$($13073, _defs$2);
                            var $13076 = $13079;
                            break;
                    };
                    return $13076;
                }));
                var $13071 = $13074;
                break;
            case 'List.nil':
                var $13080 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $13081 = _m$pure$4;
                    return $13081;
                }))(_defs$2);
                var $13071 = $13080;
                break;
        };
        return $13071;
    };
    const Kind$Synth$many = x0 => x1 => Kind$Synth$many$(x0, x1);

    function Kind$Comp$dependency_sort$module$(_exports$1, _defs$2) {
        var _ret$3 = Pair$new$(Kind$Map$new, List$nil);
        var _ret$4 = (() => {
            var $13084 = _ret$3;
            var $13085 = _exports$1;
            let _ret$5 = $13084;
            let _export$4;
            while ($13085._ === 'List.cons') {
                _export$4 = $13085.head;
                var _term$6 = Kind$Comp$ref$(_export$4);
                var self = _ret$5;
                switch (self._) {
                    case 'Pair.new':
                        var $13086 = self.fst;
                        var $13087 = self.snd;
                        var $13088 = Kind$Comp$dependency_sort$go$(_term$6, _defs$2, $13086, $13087);
                        var $13084 = $13088;
                        break;
                };
                _ret$5 = $13084;
                $13085 = $13085.tail;
            }
            return _ret$5;
        })();
        var self = _ret$4;
        switch (self._) {
            case 'Pair.new':
                var $13089 = self.snd;
                var $13090 = List$reverse$($13089);
                var $13082 = $13090;
                break;
        };
        return $13082;
    };
    const Kind$Comp$dependency_sort$module = x0 => x1 => Kind$Comp$dependency_sort$module$(x0, x1);

    function Kind$Comp$transpile$module$(_lang$1, _name$2, _exports$3, _defs$4) {
        var _defs_list$5 = Kind$Comp$dependency_sort$module$(_exports$3, _defs$4);
        var self = _lang$1;
        switch (self._) {
            case 'Kind.Comp.Language.new':
                var $13092 = self.gram;
                var $13093 = $13092;
                var self = $13093;
                break;
        };
        switch (self._) {
            case 'Kind.Comp.Grammar.new':
                var $13094 = self.module;
                var $13095 = $13094;
                var _code$6 = $13095;
                break;
        };
        var _code$6 = _code$6(_name$2)(_exports$3)(((() => {
            var self = _lang$1;
            switch (self._) {
                case 'Kind.Comp.Language.new':
                    var $13096 = self.base;
                    var $13097 = $13096;
                    return $13097;
            };
        })() + ("\u{a}\u{a}" + Kind$Comp$transpile$global_definitions$(_lang$1, _defs_list$5, _defs$4))));
        var $13091 = _code$6;
        return $13091;
    };
    const Kind$Comp$transpile$module = x0 => x1 => x2 => x3 => Kind$Comp$transpile$module$(x0, x1, x2, x3);

    function Kind$api$io$terms_to_scheme_lib$(_name$1, _exports$2) {
        var $13098 = IO$monad$((_m$bind$3 => _m$pure$4 => {
            var $13099 = _m$bind$3;
            return $13099;
        }))(Kind$Synth$many$(_exports$2, Kind$Map$new))((_defs$3 => {
            var _compiled$4 = Kind$Comp$Defs$compile$(_defs$3);
            var _schemed$5 = Kind$Comp$transpile$module$(Kind$Comp$Target$Scheme$Language, _name$1, _exports$2, _compiled$4);
            var $13100 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                var $13101 = _m$pure$7;
                return $13101;
            }))(_schemed$5);
            return $13100;
        }));
        return $13098;
    };
    const Kind$api$io$terms_to_scheme_lib = x0 => x1 => Kind$api$io$terms_to_scheme_lib$(x0, x1);

    function BitsMap$keys$go$(_xs$2, _key$3, _list$4) {
        var self = _xs$2;
        switch (self._) {
            case 'BitsMap.tie':
                var $13103 = self.val;
                var $13104 = self.lft;
                var $13105 = self.rgt;
                var self = $13103;
                switch (self._) {
                    case 'Maybe.none':
                        var $13107 = _list$4;
                        var _list0$8 = $13107;
                        break;
                    case 'Maybe.some':
                        var $13108 = List$cons$(Bits$reverse$(_key$3), _list$4);
                        var _list0$8 = $13108;
                        break;
                };
                var _list1$9 = BitsMap$keys$go$($13104, (_key$3 + '0'), _list0$8);
                var _list2$10 = BitsMap$keys$go$($13105, (_key$3 + '1'), _list1$9);
                var $13106 = _list2$10;
                var $13102 = $13106;
                break;
            case 'BitsMap.new':
                var $13109 = _list$4;
                var $13102 = $13109;
                break;
        };
        return $13102;
    };
    const BitsMap$keys$go = x0 => x1 => x2 => BitsMap$keys$go$(x0, x1, x2);

    function BitsMap$keys$(_xs$2) {
        var $13110 = List$reverse$(BitsMap$keys$go$(_xs$2, Bits$e, List$nil));
        return $13110;
    };
    const BitsMap$keys = x0 => BitsMap$keys$(x0);

    function Kind$Synth$file$(_file$1, _defs$2) {
        var $13111 = IO$monad$((_m$bind$3 => _m$pure$4 => {
            var $13112 = _m$bind$3;
            return $13112;
        }))(IO$get_file$(_file$1))((_code$3 => {
            var _read$4 = Kind$Defs$read$(_file$1, _code$3, _defs$2);
            var self = _read$4;
            switch (self._) {
                case 'Either.left':
                    var $13114 = self.value;
                    var $13115 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                        var $13116 = _m$pure$7;
                        return $13116;
                    }))(Either$left$($13114));
                    var $13113 = $13115;
                    break;
                case 'Either.right':
                    var $13117 = self.value;
                    var _file_defs$6 = $13117;
                    var _file_keys$7 = BitsMap$keys$(_file_defs$6);
                    var _file_nams$8 = List$mapped$(_file_keys$7, Kind$Name$from_bits);
                    var $13118 = IO$monad$((_m$bind$9 => _m$pure$10 => {
                        var $13119 = _m$bind$9;
                        return $13119;
                    }))(Kind$Synth$many$(_file_nams$8, _file_defs$6))((_defs$9 => {
                        var $13120 = IO$monad$((_m$bind$10 => _m$pure$11 => {
                            var $13121 = _m$pure$11;
                            return $13121;
                        }))(Either$right$(Pair$new$(_file_nams$8, _defs$9)));
                        return $13120;
                    }));
                    var $13113 = $13118;
                    break;
            };
            return $13113;
        }));
        return $13111;
    };
    const Kind$Synth$file = x0 => x1 => Kind$Synth$file$(x0, x1);

    function IO$put_string$(_text$1) {
        var $13122 = IO$ask$("put_string", _text$1, (_skip$2 => {
            var $13123 = IO$end$(Unit$new);
            return $13123;
        }));
        return $13122;
    };
    const IO$put_string = x0 => IO$put_string$(x0);

    function IO$print$(_text$1) {
        var $13124 = IO$put_string$((_text$1 + "\u{a}"));
        return $13124;
    };
    const IO$print = x0 => IO$print$(x0);

    function Kind$Term$show$as_nat$go$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $13126 = self.name;
                var self = ($13126 === "Nat.zero");
                if (self) {
                    var $13128 = Maybe$some$(0n);
                    var $13127 = $13128;
                } else {
                    var $13129 = Maybe$none;
                    var $13127 = $13129;
                };
                var $13125 = $13127;
                break;
            case 'Kind.Term.app':
                var $13130 = self.func;
                var $13131 = self.argm;
                var self = $13130;
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $13133 = self.name;
                        var self = ($13133 === "Nat.succ");
                        if (self) {
                            var $13135 = Maybe$monad$((_m$bind$5 => _m$pure$6 => {
                                var $13136 = _m$bind$5;
                                return $13136;
                            }))(Kind$Term$show$as_nat$go$($13131))((_pred$5 => {
                                var $13137 = Maybe$monad$((_m$bind$6 => _m$pure$7 => {
                                    var $13138 = _m$pure$7;
                                    return $13138;
                                }))(Nat$succ$(_pred$5));
                                return $13137;
                            }));
                            var $13134 = $13135;
                        } else {
                            var $13139 = Maybe$none;
                            var $13134 = $13139;
                        };
                        var $13132 = $13134;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $13140 = Maybe$none;
                        var $13132 = $13140;
                        break;
                };
                var $13125 = $13132;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $13141 = Maybe$none;
                var $13125 = $13141;
                break;
        };
        return $13125;
    };
    const Kind$Term$show$as_nat$go = x0 => Kind$Term$show$as_nat$go$(x0);

    function Kind$Term$show$as_nat$(_term$1) {
        var $13142 = Maybe$mapped$(Kind$Term$show$as_nat$go$(_term$1), Nat$show);
        return $13142;
    };
    const Kind$Term$show$as_nat = x0 => Kind$Term$show$as_nat$(x0);

    function Kind$Term$show$is_ref$(_term$1, _name$2) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $13144 = self.name;
                var $13145 = (_name$2 === $13144);
                var $13143 = $13145;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $13146 = Bool$false;
                var $13143 = $13146;
                break;
        };
        return $13143;
    };
    const Kind$Term$show$is_ref = x0 => x1 => Kind$Term$show$is_ref$(x0, x1);

    function Kind$Term$show$app$done$(_term$1, _path$2, _args$3) {
        var _arity$4 = (list_length(_args$3));
        var self = (Kind$Term$show$is_ref$(_term$1, "Equal") && (_arity$4 === 3n));
        if (self) {
            var _func$5 = Kind$Term$show$go$(_term$1, _path$2);
            var _eq_lft$6 = Maybe$default$(List$at$(1n, _args$3), "?");
            var _eq_rgt$7 = Maybe$default$(List$at$(2n, _args$3), "?");
            var $13148 = String$flatten$(List$cons$(_eq_lft$6, List$cons$(" == ", List$cons$(_eq_rgt$7, List$nil))));
            var $13147 = $13148;
        } else {
            var _func$5 = Kind$Term$show$go$(_term$1, _path$2);
            var self = _func$5;
            if (self.length === 0) {
                var $13150 = Bool$false;
                var _wrap$6 = $13150;
            } else {
                var $13151 = self.charCodeAt(0);
                var $13152 = self.slice(1);
                var $13153 = ($13151 === 40);
                var _wrap$6 = $13153;
            };
            var _args$7 = String$join$(",", _args$3);
            var self = _wrap$6;
            if (self) {
                var $13154 = String$flatten$(List$cons$("(", List$cons$(_func$5, List$cons$(")", List$nil))));
                var _func$8 = $13154;
            } else {
                var $13155 = _func$5;
                var _func$8 = $13155;
            };
            var $13149 = String$flatten$(List$cons$(_func$8, List$cons$("(", List$cons$(_args$7, List$cons$(")", List$nil)))));
            var $13147 = $13149;
        };
        return $13147;
    };
    const Kind$Term$show$app$done = x0 => x1 => x2 => Kind$Term$show$app$done$(x0, x1, x2);

    function Kind$Term$show$app$(_term$1, _path$2, _args$3) {
        var Kind$Term$show$app$ = (_term$1, _path$2, _args$3) => ({
            ctr: 'TCO',
            arg: [_term$1, _path$2, _args$3]
        });
        var Kind$Term$show$app = _term$1 => _path$2 => _args$3 => Kind$Term$show$app$(_term$1, _path$2, _args$3);
        var arg = [_term$1, _path$2, _args$3];
        while (true) {
            let [_term$1, _path$2, _args$3] = arg;
            var R = (() => {
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.app':
                        var $13156 = self.func;
                        var $13157 = self.argm;
                        var $13158 = Kind$Term$show$app$($13156, Kind$Path$Maybe$Builder$o$(_path$2), List$cons$(Kind$Term$show$go$($13157, Kind$Path$Maybe$Builder$i$(_path$2)), _args$3));
                        return $13158;
                    case 'Kind.Term.ori':
                        var $13159 = self.expr;
                        var $13160 = Kind$Term$show$app$($13159, _path$2, _args$3);
                        return $13160;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $13161 = Kind$Term$show$app$done$(_term$1, _path$2, _args$3);
                        return $13161;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$show$app = x0 => x1 => x2 => Kind$Term$show$app$(x0, x1, x2);

    function BitsMap$to_list$(_xs$2) {
        var $13162 = List$reverse$(BitsMap$to_list$go$(_xs$2, Bits$e, List$nil));
        return $13162;
    };
    const BitsMap$to_list = x0 => BitsMap$to_list$(x0);

    function Kind$Term$show$go$(_term$1, _path$2) {
        var self = Kind$Term$show$as_nat$(_term$1);
        switch (self._) {
            case 'Maybe.some':
                var $13164 = self.value;
                var $13165 = $13164;
                var $13163 = $13165;
                break;
            case 'Maybe.none':
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.var':
                        var $13167 = self.name;
                        var $13168 = Kind$Name$show$($13167);
                        var $13166 = $13168;
                        break;
                    case 'Kind.Term.ref':
                        var $13169 = self.name;
                        var _name$4 = Kind$Name$show$($13169);
                        var self = _path$2;
                        switch (self._) {
                            case 'Maybe.some':
                                var $13171 = self.value;
                                var _path_val$6 = ((Bits$e + '1') + Kind$Path$Builder$to_bits$($13171));
                                var _path_str$7 = Nat$show$(Bits$to_nat$(_path_val$6));
                                var $13172 = String$flatten$(List$cons$(_name$4, List$cons$(Kind$Code$color$("2", ("-" + _path_str$7)), List$nil)));
                                var $13170 = $13172;
                                break;
                            case 'Maybe.none':
                                var $13173 = _name$4;
                                var $13170 = $13173;
                                break;
                        };
                        var $13166 = $13170;
                        break;
                    case 'Kind.Term.all':
                        var $13174 = self.eras;
                        var $13175 = self.self;
                        var $13176 = self.name;
                        var $13177 = self.xtyp;
                        var $13178 = self.body;
                        var _eras$8 = $13174;
                        var _self$9 = Kind$Name$show$($13175);
                        var _name$10 = Kind$Name$show$($13176);
                        var _type$11 = Kind$Term$show$go$($13177, Kind$Path$Maybe$Builder$o$(_path$2));
                        var self = _eras$8;
                        if (self) {
                            var $13180 = "<";
                            var _open$12 = $13180;
                        } else {
                            var $13181 = "(";
                            var _open$12 = $13181;
                        };
                        var self = _eras$8;
                        if (self) {
                            var $13182 = ">";
                            var _clos$13 = $13182;
                        } else {
                            var $13183 = ")";
                            var _clos$13 = $13183;
                        };
                        var _body$14 = Kind$Term$show$go$($13178(Kind$Term$var$($13175, 0n))(Kind$Term$var$($13176, 0n)), Kind$Path$Maybe$Builder$i$(_path$2));
                        var $13179 = String$flatten$(List$cons$(_self$9, List$cons$(_open$12, List$cons$(_name$10, List$cons$(":", List$cons$(_type$11, List$cons$(_clos$13, List$cons$(" ", List$cons$(_body$14, List$nil)))))))));
                        var $13166 = $13179;
                        break;
                    case 'Kind.Term.lam':
                        var $13184 = self.name;
                        var $13185 = self.body;
                        var _name$5 = Kind$Name$show$($13184);
                        var _body$6 = Kind$Term$show$go$($13185(Kind$Term$var$($13184, 0n)), Kind$Path$Maybe$Builder$o$(_path$2));
                        var $13186 = String$flatten$(List$cons$("(", List$cons$(_name$5, List$cons$(") ", List$cons$(_body$6, List$nil)))));
                        var $13166 = $13186;
                        break;
                    case 'Kind.Term.let':
                        var $13187 = self.name;
                        var $13188 = self.expr;
                        var $13189 = self.body;
                        var _name$6 = Kind$Name$show$($13187);
                        var _expr$7 = Kind$Term$show$go$($13188, Kind$Path$Maybe$Builder$o$(_path$2));
                        var _body$8 = Kind$Term$show$go$($13189(Kind$Term$var$($13187, 0n)), Kind$Path$Maybe$Builder$i$(_path$2));
                        var $13190 = String$flatten$(List$cons$("let ", List$cons$(_name$6, List$cons$(" = ", List$cons$(_expr$7, List$cons$("; ", List$cons$(_body$8, List$nil)))))));
                        var $13166 = $13190;
                        break;
                    case 'Kind.Term.def':
                        var $13191 = self.name;
                        var $13192 = self.expr;
                        var $13193 = self.body;
                        var _name$6 = Kind$Name$show$($13191);
                        var _expr$7 = Kind$Term$show$go$($13192, Kind$Path$Maybe$Builder$o$(_path$2));
                        var _body$8 = Kind$Term$show$go$($13193(Kind$Term$var$($13191, 0n)), Kind$Path$Maybe$Builder$i$(_path$2));
                        var $13194 = String$flatten$(List$cons$("def ", List$cons$(_name$6, List$cons$(" = ", List$cons$(_expr$7, List$cons$("; ", List$cons$(_body$8, List$nil)))))));
                        var $13166 = $13194;
                        break;
                    case 'Kind.Term.ann':
                        var $13195 = self.term;
                        var $13196 = self.type;
                        var _term$6 = Kind$Term$show$go$($13195, Kind$Path$Maybe$Builder$o$(_path$2));
                        var _type$7 = Kind$Term$show$go$($13196, Kind$Path$Maybe$Builder$i$(_path$2));
                        var $13197 = String$flatten$(List$cons$(_term$6, List$cons$("::", List$cons$(_type$7, List$nil))));
                        var $13166 = $13197;
                        break;
                    case 'Kind.Term.gol':
                        var $13198 = self.name;
                        var _name$6 = Kind$Name$show$($13198);
                        var $13199 = String$flatten$(List$cons$("?", List$cons$(_name$6, List$nil)));
                        var $13166 = $13199;
                        break;
                    case 'Kind.Term.nat':
                        var $13200 = self.natx;
                        var $13201 = String$flatten$(List$cons$(Nat$show$($13200), List$nil));
                        var $13166 = $13201;
                        break;
                    case 'Kind.Term.chr':
                        var $13202 = self.chrx;
                        var $13203 = String$flatten$(List$cons$("\'", List$cons$(Kind$Code$escape$char$($13202), List$cons$("\'", List$nil))));
                        var $13166 = $13203;
                        break;
                    case 'Kind.Term.str':
                        var $13204 = self.strx;
                        var $13205 = String$flatten$(List$cons$("\"", List$cons$(Kind$Code$escape$($13204), List$cons$("\"", List$nil))));
                        var $13166 = $13205;
                        break;
                    case 'Kind.Term.num':
                        var $13206 = self.sign;
                        var $13207 = self.numb;
                        var $13208 = self.frac;
                        var $13209 = String$flatten$(List$cons$((() => {
                            var self = $13206;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $13210 = self.value;
                                    var self = $13210;
                                    if (self) {
                                        var $13212 = "+";
                                        var $13211 = $13212;
                                    } else {
                                        var $13213 = "-";
                                        var $13211 = $13213;
                                    };
                                    return $13211;
                                case 'Maybe.none':
                                    var $13214 = "";
                                    return $13214;
                            };
                        })(), List$cons$(Nat$show$($13207), List$cons$((() => {
                            var self = $13208;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $13215 = self.value;
                                    var $13216 = ("." + Nat$show$($13215));
                                    return $13216;
                                case 'Maybe.none':
                                    var $13217 = "";
                                    return $13217;
                            };
                        })(), List$nil))));
                        var $13166 = $13209;
                        break;
                    case 'Kind.Term.cse':
                        var $13218 = self.expr;
                        var $13219 = self.name;
                        var $13220 = self.with;
                        var $13221 = self.cses;
                        var $13222 = self.moti;
                        var _expr$9 = Kind$Term$show$go$($13218, Kind$Path$Maybe$Builder$o$(_path$2));
                        var _name$10 = Kind$Name$show$($13219);
                        var _wyth$11 = String$join$("; ", List$mapped$($13220, (_with_var$11 => {
                            var self = _with_var$11;
                            switch (self._) {
                                case 'Kind.Ann.new':
                                    var $13225 = self.name;
                                    var $13226 = self.type;
                                    var self = $13226;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $13228 = self.value;
                                            var $13229 = ($13225 + (": " + Kind$Term$show$go$($13228, Maybe$none)));
                                            var $13227 = $13229;
                                            break;
                                        case 'Maybe.none':
                                            var $13230 = $13225;
                                            var $13227 = $13230;
                                            break;
                                    };
                                    var $13224 = $13227;
                                    break;
                            };
                            return $13224;
                        })));
                        var _cses$12 = BitsMap$to_list$($13221);
                        var _cses$13 = String$join$("", List$mapped$(_cses$12, (_x$13 => {
                            var _name$14 = Kind$Name$from_bits$(Pair$fst$(_x$13));
                            var _term$15 = Kind$Term$show$go$(Pair$snd$(_x$13), Maybe$none);
                            var $13231 = String$flatten$(List$cons$(_name$14, List$cons$(": ", List$cons$(_term$15, List$cons$(", ", List$nil)))));
                            return $13231;
                        })));
                        var self = $13222;
                        switch (self._) {
                            case 'Maybe.some':
                                var $13232 = self.value;
                                var $13233 = String$flatten$(List$cons$(": ", List$cons$(Kind$Term$show$go$($13232, Maybe$none), List$nil)));
                                var _moti$14 = $13233;
                                break;
                            case 'Maybe.none':
                                var $13234 = "";
                                var _moti$14 = $13234;
                                break;
                        };
                        var $13223 = String$flatten$(List$cons$("case ", List$cons$(_expr$9, List$cons$(" as ", List$cons$(_name$10, List$cons$(_wyth$11, List$cons$(" { ", List$cons$(_cses$13, List$cons$("}", List$cons$(_moti$14, List$nil))))))))));
                        var $13166 = $13223;
                        break;
                    case 'Kind.Term.new':
                        var $13235 = self.args;
                        var _args$4 = List$fold$($13235, (_path$4 => {
                            var $13237 = List$nil;
                            return $13237;
                        }), (_arg$4 => _res$5 => _path$6 => {
                            var $13238 = List$cons$(Kind$Term$show$go$(_arg$4, _path$6), _res$5(Kind$Path$Maybe$Builder$o$(_path$6)));
                            return $13238;
                        }))(_path$2);
                        var $13236 = String$flatten$(List$cons$("{", List$cons$(String$join$(",", _args$4), List$cons$("}", List$nil))));
                        var $13166 = $13236;
                        break;
                    case 'Kind.Term.get':
                        var $13239 = self.expr;
                        var $13240 = self.fkey;
                        var _expr$5 = Kind$Term$show$go$($13239, Kind$Path$Maybe$Builder$o$(_path$2));
                        var $13241 = String$flatten$(List$cons$(_expr$5, List$cons$("@", List$cons$($13240, List$nil))));
                        var $13166 = $13241;
                        break;
                    case 'Kind.Term.set':
                        var $13242 = self.expr;
                        var $13243 = self.fkey;
                        var $13244 = self.fval;
                        var _expr$6 = Kind$Term$show$go$($13242, Kind$Path$Maybe$Builder$o$(_path$2));
                        var _fval$7 = Kind$Term$show$go$($13244, Kind$Path$Maybe$Builder$i$(_path$2));
                        var $13245 = String$flatten$(List$cons$(_expr$6, List$cons$("@", List$cons$($13243, List$cons$(" <- ", List$cons$(_fval$7, List$nil))))));
                        var $13166 = $13245;
                        break;
                    case 'Kind.Term.ope':
                        var $13246 = self.name;
                        var $13247 = self.arg0;
                        var $13248 = self.arg1;
                        var _arg0$6 = Kind$Term$show$go$($13247, Kind$Path$Maybe$Builder$o$(_path$2));
                        var _arg1$7 = Kind$Term$show$go$($13248, Kind$Path$Maybe$Builder$i$(_path$2));
                        var $13249 = String$flatten$(List$cons$("(", List$cons$(_arg0$6, List$cons$(" ", List$cons$($13246, List$cons$(" ", List$cons$(_arg1$7, List$cons$(")", List$nil))))))));
                        var $13166 = $13249;
                        break;
                    case 'Kind.Term.ori':
                        var $13250 = self.expr;
                        var $13251 = Kind$Term$show$go$($13250, _path$2);
                        var $13166 = $13251;
                        break;
                    case 'Kind.Term.typ':
                        var $13252 = "Type";
                        var $13166 = $13252;
                        break;
                    case 'Kind.Term.app':
                        var $13253 = Kind$Term$show$app$(_term$1, _path$2, List$nil);
                        var $13166 = $13253;
                        break;
                    case 'Kind.Term.hol':
                        var $13254 = "_";
                        var $13166 = $13254;
                        break;
                };
                var $13163 = $13166;
                break;
        };
        return $13163;
    };
    const Kind$Term$show$go = x0 => x1 => Kind$Term$show$go$(x0, x1);

    function Kind$Term$show$(_term$1) {
        var $13255 = Kind$Term$show$go$(_term$1, Maybe$none);
        return $13255;
    };
    const Kind$Term$show = x0 => Kind$Term$show$(x0);

    function Kind$Defs$report$types$(_defs$1, _names$2) {
        var _types$3 = "";
        var _types$4 = (() => {
            var $13258 = _types$3;
            var $13259 = _names$2;
            let _types$5 = $13258;
            let _name$4;
            while ($13259._ === 'List.cons') {
                _name$4 = $13259.head;
                var self = Kind$Map$get$(_name$4, _defs$1);
                switch (self._) {
                    case 'Maybe.some':
                        var $13260 = self.value;
                        var self = $13260;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $13262 = self.type;
                                var $13263 = (_types$5 + (_name$4 + (": " + (Kind$Term$show$($13262) + "\u{a}"))));
                                var $13261 = $13263;
                                break;
                        };
                        var $13258 = $13261;
                        break;
                    case 'Maybe.none':
                        var $13264 = _types$5;
                        var $13258 = $13264;
                        break;
                };
                _types$5 = $13258;
                $13259 = $13259.tail;
            }
            return _types$5;
        })();
        var $13256 = _types$4;
        return $13256;
    };
    const Kind$Defs$report$types = x0 => x1 => Kind$Defs$report$types$(x0, x1);

    function List$filter$(_f$2, _xs$3) {
        var self = _xs$3;
        switch (self._) {
            case 'List.cons':
                var $13266 = self.head;
                var $13267 = self.tail;
                var self = _f$2($13266);
                if (self) {
                    var $13269 = List$cons$($13266, List$filter$(_f$2, $13267));
                    var $13268 = $13269;
                } else {
                    var $13270 = List$filter$(_f$2, $13267);
                    var $13268 = $13270;
                };
                var $13265 = $13268;
                break;
            case 'List.nil':
                var $13271 = List$nil;
                var $13265 = $13271;
                break;
        };
        return $13265;
    };
    const List$filter = x0 => x1 => List$filter$(x0, x1);

    function Kind$Error$is_undef$(_error$1) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
            case 'Kind.Error.show_goal':
            case 'Kind.Error.waiting':
            case 'Kind.Error.indirect':
            case 'Kind.Error.patch':
            case 'Kind.Error.cant_infer':
                var $13273 = Bool$false;
                var $13272 = $13273;
                break;
            case 'Kind.Error.undefined_reference':
                var $13274 = Bool$true;
                var $13272 = $13274;
                break;
        };
        return $13272;
    };
    const Kind$Error$is_undef = x0 => Kind$Error$is_undef$(x0);

    function Kind$Error$is_mistake$(_error$1) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
            case 'Kind.Error.cant_infer':
                var $13276 = Bool$true;
                var $13275 = $13276;
                break;
            case 'Kind.Error.show_goal':
            case 'Kind.Error.waiting':
            case 'Kind.Error.indirect':
            case 'Kind.Error.patch':
            case 'Kind.Error.undefined_reference':
                var $13277 = Bool$false;
                var $13275 = $13277;
                break;
        };
        return $13275;
    };
    const Kind$Error$is_mistake = x0 => Kind$Error$is_mistake$(x0);

    function Kind$Error$is_goal$(_error$1) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
            case 'Kind.Error.waiting':
            case 'Kind.Error.indirect':
            case 'Kind.Error.patch':
            case 'Kind.Error.undefined_reference':
            case 'Kind.Error.cant_infer':
                var $13279 = Bool$false;
                var $13278 = $13279;
                break;
            case 'Kind.Error.show_goal':
                var $13280 = Bool$true;
                var $13278 = $13280;
                break;
        };
        return $13278;
    };
    const Kind$Error$is_goal = x0 => Kind$Error$is_goal$(x0);

    function Kind$Error$relevant$(_errors$1) {
        var _undefs$2 = List$filter$(Kind$Error$is_undef, _errors$1);
        var _mistakes$3 = List$filter$(Kind$Error$is_mistake, _errors$1);
        var _goals$4 = List$filter$(Kind$Error$is_goal, _errors$1);
        var self = _undefs$2;
        switch (self._) {
            case 'List.nil':
                var self = _mistakes$3;
                switch (self._) {
                    case 'List.cons':
                        var $13283 = self.head;
                        var $13284 = List$concat$(List$cons$($13283, List$nil), _goals$4);
                        var $13282 = $13284;
                        break;
                    case 'List.nil':
                        var $13285 = _goals$4;
                        var $13282 = $13285;
                        break;
                };
                var $13281 = $13282;
                break;
            case 'List.cons':
                var $13286 = List$concat$(_undefs$2, _goals$4);
                var $13281 = $13286;
                break;
        };
        return $13281;
    };
    const Kind$Error$relevant = x0 => Kind$Error$relevant$(x0);

    function Kind$Context$show$(_context$1) {
        var self = _context$1;
        switch (self._) {
            case 'List.cons':
                var $13288 = self.head;
                var $13289 = self.tail;
                var self = $13288;
                switch (self._) {
                    case 'Pair.new':
                        var $13291 = self.fst;
                        var $13292 = self.snd;
                        var _name$6 = Kind$Name$show$($13291);
                        var _type$7 = Kind$Term$show$(Kind$Term$normalize$($13292, Kind$Map$new));
                        var _rest$8 = Kind$Context$show$($13289);
                        var $13293 = (_rest$8 + ("- " + (_name$6 + (": " + (_type$7 + "\u{a}")))));
                        var $13290 = $13293;
                        break;
                };
                var $13287 = $13290;
                break;
            case 'List.nil':
                var $13294 = "";
                var $13287 = $13294;
                break;
        };
        return $13287;
    };
    const Kind$Context$show = x0 => Kind$Context$show$(x0);

    function Kind$Term$expand_at$(_path$1, _term$2, _defs$3) {
        var $13295 = Kind$Term$patch_at$(_path$1, _term$2, (_term$4 => {
            var self = _term$4;
            switch (self._) {
                case 'Kind.Term.ref':
                    var $13297 = self.name;
                    var self = Kind$Map$get$($13297, _defs$3);
                    switch (self._) {
                        case 'Maybe.some':
                            var $13299 = self.value;
                            var self = $13299;
                            switch (self._) {
                                case 'Kind.Def.new':
                                    var $13301 = self.term;
                                    var $13302 = $13301;
                                    var $13300 = $13302;
                                    break;
                            };
                            var $13298 = $13300;
                            break;
                        case 'Maybe.none':
                            var $13303 = Kind$Term$ref$($13297);
                            var $13298 = $13303;
                            break;
                    };
                    var $13296 = $13298;
                    break;
                case 'Kind.Term.var':
                case 'Kind.Term.typ':
                case 'Kind.Term.all':
                case 'Kind.Term.lam':
                case 'Kind.Term.app':
                case 'Kind.Term.let':
                case 'Kind.Term.def':
                case 'Kind.Term.ann':
                case 'Kind.Term.gol':
                case 'Kind.Term.hol':
                case 'Kind.Term.nat':
                case 'Kind.Term.chr':
                case 'Kind.Term.str':
                case 'Kind.Term.num':
                case 'Kind.Term.cse':
                case 'Kind.Term.new':
                case 'Kind.Term.get':
                case 'Kind.Term.set':
                case 'Kind.Term.ope':
                case 'Kind.Term.ori':
                    var $13304 = _term$4;
                    var $13296 = $13304;
                    break;
            };
            return $13296;
        }));
        return $13295;
    };
    const Kind$Term$expand_at = x0 => x1 => x2 => Kind$Term$expand_at$(x0, x1, x2);

    function Kind$Term$expand_ct$(_term$1, _defs$2, _arity$3) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.var':
                var $13306 = self.name;
                var $13307 = self.indx;
                var $13308 = Kind$Term$var$($13306, $13307);
                var $13305 = $13308;
                break;
            case 'Kind.Term.ref':
                var $13309 = self.name;
                var self = Kind$Map$get$($13309, _defs$2);
                switch (self._) {
                    case 'Maybe.some':
                        var $13311 = self.value;
                        var self = $13311;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $13313 = self.term;
                                var $13314 = self.isct;
                                var $13315 = self.arit;
                                var self = ($13314 && (_arity$3 > $13315));
                                if (self) {
                                    var $13317 = $13313;
                                    var $13316 = $13317;
                                } else {
                                    var $13318 = Kind$Term$ref$($13309);
                                    var $13316 = $13318;
                                };
                                var $13312 = $13316;
                                break;
                        };
                        var $13310 = $13312;
                        break;
                    case 'Maybe.none':
                        var $13319 = Kind$Term$ref$($13309);
                        var $13310 = $13319;
                        break;
                };
                var $13305 = $13310;
                break;
            case 'Kind.Term.all':
                var $13320 = self.eras;
                var $13321 = self.self;
                var $13322 = self.name;
                var $13323 = self.xtyp;
                var $13324 = self.body;
                var $13325 = Kind$Term$all$($13320, $13321, $13322, Kind$Term$expand_ct$($13323, _defs$2, 0n), (_s$9 => _x$10 => {
                    var $13326 = Kind$Term$expand_ct$($13324(_s$9)(_x$10), _defs$2, 0n);
                    return $13326;
                }));
                var $13305 = $13325;
                break;
            case 'Kind.Term.lam':
                var $13327 = self.name;
                var $13328 = self.body;
                var $13329 = Kind$Term$lam$($13327, (_x$6 => {
                    var $13330 = Kind$Term$expand_ct$($13328(_x$6), _defs$2, 0n);
                    return $13330;
                }));
                var $13305 = $13329;
                break;
            case 'Kind.Term.app':
                var $13331 = self.func;
                var $13332 = self.argm;
                var $13333 = Kind$Term$app$(Kind$Term$expand_ct$($13331, _defs$2, Nat$succ$(_arity$3)), Kind$Term$expand_ct$($13332, _defs$2, 0n));
                var $13305 = $13333;
                break;
            case 'Kind.Term.let':
                var $13334 = self.name;
                var $13335 = self.expr;
                var $13336 = self.body;
                var $13337 = Kind$Term$let$($13334, Kind$Term$expand_ct$($13335, _defs$2, 0n), (_x$7 => {
                    var $13338 = Kind$Term$expand_ct$($13336(_x$7), _defs$2, 0n);
                    return $13338;
                }));
                var $13305 = $13337;
                break;
            case 'Kind.Term.ann':
                var $13339 = self.done;
                var $13340 = self.term;
                var $13341 = self.type;
                var $13342 = Kind$Term$ann$($13339, Kind$Term$expand_ct$($13340, _defs$2, 0n), Kind$Term$expand_ct$($13341, _defs$2, 0n));
                var $13305 = $13342;
                break;
            case 'Kind.Term.gol':
                var $13343 = self.name;
                var $13344 = self.dref;
                var $13345 = self.verb;
                var $13346 = Kind$Term$gol$($13343, $13344, $13345);
                var $13305 = $13346;
                break;
            case 'Kind.Term.hol':
                var $13347 = self.path;
                var $13348 = Kind$Term$hol$($13347);
                var $13305 = $13348;
                break;
            case 'Kind.Term.nat':
                var $13349 = self.natx;
                var $13350 = Kind$Term$nat$($13349);
                var $13305 = $13350;
                break;
            case 'Kind.Term.chr':
                var $13351 = self.chrx;
                var $13352 = Kind$Term$chr$($13351);
                var $13305 = $13352;
                break;
            case 'Kind.Term.str':
                var $13353 = self.strx;
                var $13354 = Kind$Term$str$($13353);
                var $13305 = $13354;
                break;
            case 'Kind.Term.ori':
                var $13355 = self.orig;
                var $13356 = self.expr;
                var $13357 = Kind$Term$ori$($13355, $13356);
                var $13305 = $13357;
                break;
            case 'Kind.Term.typ':
                var $13358 = Kind$Term$typ;
                var $13305 = $13358;
                break;
            case 'Kind.Term.def':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $13359 = _term$1;
                var $13305 = $13359;
                break;
        };
        return $13305;
    };
    const Kind$Term$expand_ct = x0 => x1 => x2 => Kind$Term$expand_ct$(x0, x1, x2);

    function Kind$Term$expand$(_dref$1, _term$2, _defs$3) {
        var _term$4 = Kind$Term$normalize$(_term$2, Kind$Map$new);
        var _term$5 = (() => {
            var $13362 = _term$4;
            var $13363 = _dref$1;
            let _term$6 = $13362;
            let _path$5;
            while ($13363._ === 'List.cons') {
                _path$5 = $13363.head;
                var _term$7 = Kind$Term$expand_at$(_path$5, _term$6, _defs$3);
                var _term$8 = Kind$Term$normalize$(_term$7, Kind$Map$new);
                var _term$9 = Kind$Term$expand_ct$(_term$8, _defs$3, 0n);
                var _term$10 = Kind$Term$normalize$(_term$9, Kind$Map$new);
                var $13362 = _term$10;
                _term$6 = $13362;
                $13363 = $13363.tail;
            }
            return _term$6;
        })();
        var $13360 = _term$5;
        return $13360;
    };
    const Kind$Term$expand = x0 => x1 => x2 => Kind$Term$expand$(x0, x1, x2);

    function Kind$Error$show$(_error$1, _defs$2) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
                var $13365 = self.expected;
                var $13366 = self.detected;
                var $13367 = self.context;
                var self = $13365;
                switch (self._) {
                    case 'Either.left':
                        var $13369 = self.value;
                        var $13370 = $13369;
                        var _expected$7 = $13370;
                        break;
                    case 'Either.right':
                        var $13371 = self.value;
                        var $13372 = Kind$Term$show$(Kind$Term$normalize$($13371, BitsMap$new));
                        var _expected$7 = $13372;
                        break;
                };
                var self = $13366;
                switch (self._) {
                    case 'Either.left':
                        var $13373 = self.value;
                        var $13374 = $13373;
                        var _detected$8 = $13374;
                        break;
                    case 'Either.right':
                        var $13375 = self.value;
                        var $13376 = Kind$Term$show$(Kind$Term$normalize$($13375, BitsMap$new));
                        var _detected$8 = $13376;
                        break;
                };
                var $13368 = ("Type mismatch.\u{a}" + ("- Expected: " + (_expected$7 + ("\u{a}" + ("- Detected: " + (_detected$8 + ("\u{a}" + (() => {
                    var self = $13367;
                    switch (self._) {
                        case 'List.nil':
                            var $13377 = "";
                            return $13377;
                        case 'List.cons':
                            var $13378 = ("With context:\u{a}" + Kind$Context$show$($13367));
                            return $13378;
                    };
                })())))))));
                var $13364 = $13368;
                break;
            case 'Kind.Error.show_goal':
                var $13379 = self.name;
                var $13380 = self.dref;
                var $13381 = self.verb;
                var $13382 = self.goal;
                var $13383 = self.context;
                var _goal_name$8 = ("Goal ?" + (Kind$Name$show$($13379) + ":\u{a}"));
                var self = $13382;
                switch (self._) {
                    case 'Maybe.some':
                        var $13385 = self.value;
                        var _goal$10 = Kind$Term$expand$($13380, $13385, _defs$2);
                        var $13386 = ("With type: " + ((() => {
                            var self = $13381;
                            if (self) {
                                var $13387 = Kind$Term$show$go$(_goal$10, Maybe$some$((_x$11 => {
                                    var $13388 = _x$11;
                                    return $13388;
                                })));
                                return $13387;
                            } else {
                                var $13389 = Kind$Term$show$(_goal$10);
                                return $13389;
                            };
                        })() + "\u{a}"));
                        var _with_type$9 = $13386;
                        break;
                    case 'Maybe.none':
                        var $13390 = "";
                        var _with_type$9 = $13390;
                        break;
                };
                var self = $13383;
                switch (self._) {
                    case 'List.nil':
                        var $13391 = "";
                        var _with_ctxt$10 = $13391;
                        break;
                    case 'List.cons':
                        var $13392 = ("With context:\u{a}" + Kind$Context$show$($13383));
                        var _with_ctxt$10 = $13392;
                        break;
                };
                var $13384 = String$flatten$(List$cons$(_goal_name$8, List$cons$(_with_type$9, List$cons$(_with_ctxt$10, List$nil))));
                var $13364 = $13384;
                break;
            case 'Kind.Error.waiting':
                var $13393 = self.name;
                var $13394 = ("Waiting for \'" + ($13393 + "\'."));
                var $13364 = $13394;
                break;
            case 'Kind.Error.indirect':
                var $13395 = self.name;
                var $13396 = ("Error on dependency \'" + ($13395 + "\'."));
                var $13364 = $13396;
                break;
            case 'Kind.Error.patch':
                var $13397 = self.term;
                var $13398 = ("Patching: " + Kind$Term$show$($13397));
                var $13364 = $13398;
                break;
            case 'Kind.Error.undefined_reference':
                var $13399 = self.name;
                var $13400 = ("Undefined reference: " + (Kind$Name$show$($13399) + "\u{a}"));
                var $13364 = $13400;
                break;
            case 'Kind.Error.cant_infer':
                var $13401 = self.term;
                var $13402 = self.context;
                var _term$6 = Kind$Term$show$($13401);
                var _context$7 = Kind$Context$show$($13402);
                var $13403 = ("Can\'t infer type of: " + (_term$6 + ("\u{a}" + ("With context:\u{a}" + _context$7))));
                var $13364 = $13403;
                break;
        };
        return $13364;
    };
    const Kind$Error$show = x0 => x1 => Kind$Error$show$(x0, x1);

    function Kind$Error$origin$(_error$1) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
                var $13405 = self.origin;
                var $13406 = $13405;
                var $13404 = $13406;
                break;
            case 'Kind.Error.undefined_reference':
                var $13407 = self.origin;
                var $13408 = $13407;
                var $13404 = $13408;
                break;
            case 'Kind.Error.cant_infer':
                var $13409 = self.origin;
                var $13410 = $13409;
                var $13404 = $13410;
                break;
            case 'Kind.Error.show_goal':
            case 'Kind.Error.waiting':
            case 'Kind.Error.indirect':
            case 'Kind.Error.patch':
                var $13411 = Maybe$none;
                var $13404 = $13411;
                break;
        };
        return $13404;
    };
    const Kind$Error$origin = x0 => Kind$Error$origin$(x0);

    function Kind$Defs$report$errors$(_defs$1) {
        var _errors$2 = "";
        var _errors$3 = (() => {
            var $13414 = _errors$2;
            var $13415 = BitsMap$keys$(_defs$1);
            let _errors$4 = $13414;
            let _key$3;
            while ($13415._ === 'List.cons') {
                _key$3 = $13415.head;
                var _name$5 = Kind$Name$from_bits$(_key$3);
                var _defn$6 = Kind$Map$get$(_name$5, _defs$1);
                var self = _defn$6;
                switch (self._) {
                    case 'Maybe.some':
                        var $13416 = self.value;
                        var self = $13416;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $13418 = self.file;
                                var $13419 = self.code;
                                var $13420 = self.name;
                                var $13421 = self.stat;
                                var self = $13421;
                                switch (self._) {
                                    case 'Kind.Status.fail':
                                        var $13423 = self.errors;
                                        var self = $13423;
                                        switch (self._) {
                                            case 'List.nil':
                                                var $13425 = _errors$4;
                                                var $13424 = $13425;
                                                break;
                                            case 'List.cons':
                                                var _name_str$20 = $13420;
                                                var _rel_errs$21 = Kind$Error$relevant$($13423);
                                                var _errors$22 = (() => {
                                                    var $13428 = _errors$4;
                                                    var $13429 = _rel_errs$21;
                                                    let _errors$23 = $13428;
                                                    let _err$22;
                                                    while ($13429._ === 'List.cons') {
                                                        _err$22 = $13429.head;
                                                        var _err_msg$24 = Kind$Error$show$(_err$22, _defs$1);
                                                        var _ori_val$25 = Kind$Error$origin$(_err$22);
                                                        var self = _ori_val$25;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $13430 = self.value;
                                                                var self = $13430;
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $13432 = self.fst;
                                                                        var $13433 = self.snd;
                                                                        var _inside$29 = ("Inside \'" + ($13418 + "\':\u{a}"));
                                                                        var _source$30 = Kind$Code$highlight$($13419, $13432, $13432, $13433);
                                                                        var $13434 = (_errors$23 + (_err_msg$24 + (_inside$29 + (_source$30 + ("\u{a}" + "\u{a}")))));
                                                                        var $13431 = $13434;
                                                                        break;
                                                                };
                                                                var $13428 = $13431;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $13435 = (_errors$23 + (_err_msg$24 + "\u{a}"));
                                                                var $13428 = $13435;
                                                                break;
                                                        };
                                                        _errors$23 = $13428;
                                                        $13429 = $13429.tail;
                                                    }
                                                    return _errors$23;
                                                })();
                                                var $13426 = _errors$22;
                                                var $13424 = $13426;
                                                break;
                                        };
                                        var $13422 = $13424;
                                        break;
                                    case 'Kind.Status.init':
                                    case 'Kind.Status.wait':
                                    case 'Kind.Status.done':
                                        var $13436 = _errors$4;
                                        var $13422 = $13436;
                                        break;
                                };
                                var $13417 = $13422;
                                break;
                        };
                        var $13414 = $13417;
                        break;
                    case 'Maybe.none':
                        var $13437 = _errors$4;
                        var $13414 = $13437;
                        break;
                };
                _errors$4 = $13414;
                $13415 = $13415.tail;
            }
            return _errors$4;
        })();
        var $13412 = _errors$3;
        return $13412;
    };
    const Kind$Defs$report$errors = x0 => Kind$Defs$report$errors$(x0);

    function Kind$Defs$report$(_defs$1, _names$2) {
        var _types$3 = Kind$Defs$report$types$(_defs$1, _names$2);
        var _errors$4 = Kind$Defs$report$errors$(_defs$1);
        var self = _errors$4;
        if (self.length === 0) {
            var $13439 = "All terms check.";
            var _errors$5 = $13439;
        } else {
            var $13440 = self.charCodeAt(0);
            var $13441 = self.slice(1);
            var $13442 = _errors$4;
            var _errors$5 = $13442;
        };
        var $13438 = (_types$3 + ("\u{a}" + _errors$5));
        return $13438;
    };
    const Kind$Defs$report = x0 => x1 => Kind$Defs$report$(x0, x1);

    function IO$set_file$(_name$1, _content$2) {
        var $13443 = IO$ask$("set_file", (_name$1 + ("=" + _content$2)), (_ok$3 => {
            var $13444 = IO$end$(Unit$new);
            return $13444;
        }));
        return $13443;
    };
    const IO$set_file = x0 => x1 => IO$set_file$(x0, x1);

    function Kind$Synth$load$cached$set_file$(_name$1, _value$2) {
        var $13445 = IO$set_file$(Kind$Synth$load$cached$name$(_name$1), _value$2);
        return $13445;
    };
    const Kind$Synth$load$cached$set_file = x0 => x1 => Kind$Synth$load$cached$set_file$(x0, x1);

    function Bool$show$(_b$1) {
        var self = _b$1;
        if (self) {
            var $13447 = "Bool.true";
            var $13446 = $13447;
        } else {
            var $13448 = "Bool.false";
            var $13446 = $13448;
        };
        return $13446;
    };
    const Bool$show = x0 => Bool$show$(x0);

    function Kind$Defs$cache$go$(_kvs$1) {
        var self = _kvs$1;
        switch (self._) {
            case 'List.cons':
                var $13450 = self.head;
                var $13451 = self.tail;
                var self = $13450;
                switch (self._) {
                    case 'Pair.new':
                        var $13453 = self.fst;
                        var $13454 = self.snd;
                        var self = $13454;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $13456 = self.file;
                                var $13457 = self.term;
                                var $13458 = self.type;
                                var $13459 = self.isct;
                                var $13460 = self.arit;
                                var $13461 = self.stat;
                                var self = $13461;
                                switch (self._) {
                                    case 'Kind.Status.init':
                                    case 'Kind.Status.wait':
                                    case 'Kind.Status.fail':
                                        var $13463 = Kind$Defs$cache$go$($13451);
                                        var $13462 = $13463;
                                        break;
                                    case 'Kind.Status.done':
                                        var $13464 = IO$monad$((_m$bind$16 => _m$pure$17 => {
                                            var $13465 = _m$bind$16;
                                            return $13465;
                                        }))(IO$get_file_mtime$($13456))((_time$16 => {
                                            var $13466 = IO$monad$((_m$bind$17 => _m$pure$18 => {
                                                var $13467 = _m$bind$17;
                                                return $13467;
                                            }))(Kind$Synth$load$cached$set_file$(($13453 + ".term"), Kind$Core$show$($13457)))((_$17 => {
                                                var $13468 = IO$monad$((_m$bind$18 => _m$pure$19 => {
                                                    var $13469 = _m$bind$18;
                                                    return $13469;
                                                }))(Kind$Synth$load$cached$set_file$(($13453 + ".type"), Kind$Core$show$($13458)))((_$18 => {
                                                    var $13470 = IO$monad$((_m$bind$19 => _m$pure$20 => {
                                                        var $13471 = _m$bind$19;
                                                        return $13471;
                                                    }))(Kind$Synth$load$cached$set_file$(($13453 + ".isct"), Bool$show$($13459)))((_$19 => {
                                                        var $13472 = IO$monad$((_m$bind$20 => _m$pure$21 => {
                                                            var $13473 = _m$bind$20;
                                                            return $13473;
                                                        }))(Kind$Synth$load$cached$set_file$(($13453 + ".arit"), Nat$show$($13460)))((_$20 => {
                                                            var $13474 = IO$monad$((_m$bind$21 => _m$pure$22 => {
                                                                var $13475 = _m$bind$21;
                                                                return $13475;
                                                            }))(Kind$Synth$load$cached$set_file$(($13453 + ".file"), $13456))((_$21 => {
                                                                var $13476 = IO$monad$((_m$bind$22 => _m$pure$23 => {
                                                                    var $13477 = _m$bind$22;
                                                                    return $13477;
                                                                }))(Kind$Synth$load$cached$set_file$(($13453 + ".time"), _time$16))((_$22 => {
                                                                    var $13478 = Kind$Defs$cache$go$($13451);
                                                                    return $13478;
                                                                }));
                                                                return $13476;
                                                            }));
                                                            return $13474;
                                                        }));
                                                        return $13472;
                                                    }));
                                                    return $13470;
                                                }));
                                                return $13468;
                                            }));
                                            return $13466;
                                        }));
                                        var $13462 = $13464;
                                        break;
                                };
                                var $13455 = $13462;
                                break;
                        };
                        var $13452 = $13455;
                        break;
                };
                var $13449 = $13452;
                break;
            case 'List.nil':
                var $13479 = IO$monad$((_m$bind$2 => _m$pure$3 => {
                    var $13480 = _m$pure$3;
                    return $13480;
                }))(Unit$new);
                var $13449 = $13479;
                break;
        };
        return $13449;
    };
    const Kind$Defs$cache$go = x0 => Kind$Defs$cache$go$(x0);

    function Kind$Defs$cache$(_defs$1) {
        var $13481 = Kind$Defs$cache$go$(Kind$Map$to_list$(_defs$1));
        return $13481;
    };
    const Kind$Defs$cache = x0 => Kind$Defs$cache$(x0);

    function Kind$api$io$check_file$(_file$1) {
        var $13482 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13483 = _m$bind$2;
            return $13483;
        }))(Kind$Synth$file$(_file$1, Kind$Map$new))((_loaded$2 => {
            var self = _loaded$2;
            switch (self._) {
                case 'Either.left':
                    var $13485 = self.value;
                    var $13486 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $13487 = _m$bind$4;
                        return $13487;
                    }))(IO$print$(String$flatten$(List$cons$("On \'", List$cons$(_file$1, List$cons$("\':", List$nil))))))((_$4 => {
                        var $13488 = IO$print$($13485);
                        return $13488;
                    }));
                    var $13484 = $13486;
                    break;
                case 'Either.right':
                    var $13489 = self.value;
                    var self = $13489;
                    switch (self._) {
                        case 'Pair.new':
                            var $13491 = self.fst;
                            var $13492 = self.snd;
                            var _nams$6 = $13491;
                            var _defs$7 = $13492;
                            var self = _nams$6;
                            switch (self._) {
                                case 'List.nil':
                                    var $13494 = IO$print$(("File not found or empty: \'" + (_file$1 + "\'.")));
                                    var $13493 = $13494;
                                    break;
                                case 'List.cons':
                                    var $13495 = IO$monad$((_m$bind$10 => _m$pure$11 => {
                                        var $13496 = _m$bind$10;
                                        return $13496;
                                    }))(IO$print$(Kind$Defs$report$(_defs$7, _nams$6)))((_$10 => {
                                        var $13497 = Kind$Defs$cache$(_defs$7);
                                        return $13497;
                                    }));
                                    var $13493 = $13495;
                                    break;
                            };
                            var $13490 = $13493;
                            break;
                    };
                    var $13484 = $13490;
                    break;
            };
            return $13484;
        }));
        return $13482;
    };
    const Kind$api$io$check_file = x0 => Kind$api$io$check_file$(x0);

    function Kind$Synth$files$go$(_files$1, _defs$2) {
        var self = _files$1;
        switch (self._) {
            case 'List.cons':
                var $13499 = self.head;
                var $13500 = self.tail;
                var $13501 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                    var $13502 = _m$bind$5;
                    return $13502;
                }))(Kind$Synth$file$($13499, _defs$2))((_file_synth$5 => {
                    var self = _file_synth$5;
                    switch (self._) {
                        case 'Either.right':
                            var $13504 = self.value;
                            var _nams$7 = Pair$fst$($13504);
                            var _defs$8 = Pair$snd$($13504);
                            var $13505 = IO$monad$((_m$bind$9 => _m$pure$10 => {
                                var $13506 = _m$bind$9;
                                return $13506;
                            }))(Kind$Synth$files$go$($13500, _defs$8))((_rest$9 => {
                                var _nams$10 = List$concat$(_nams$7, Pair$fst$(_rest$9));
                                var _defs$11 = Pair$snd$(_rest$9);
                                var $13507 = IO$monad$((_m$bind$12 => _m$pure$13 => {
                                    var $13508 = _m$pure$13;
                                    return $13508;
                                }))(Pair$new$(_nams$10, _defs$11));
                                return $13507;
                            }));
                            var $13503 = $13505;
                            break;
                        case 'Either.left':
                            var $13509 = Kind$Synth$files$go$($13500, _defs$2);
                            var $13503 = $13509;
                            break;
                    };
                    return $13503;
                }));
                var $13498 = $13501;
                break;
            case 'List.nil':
                var $13510 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $13511 = _m$pure$4;
                    return $13511;
                }))(Pair$new$(List$nil, _defs$2));
                var $13498 = $13510;
                break;
        };
        return $13498;
    };
    const Kind$Synth$files$go = x0 => x1 => Kind$Synth$files$go$(x0, x1);

    function Kind$Synth$remove_duplicate_names$(_names$1) {
        var _map$2 = List$fold$(_names$1, Kind$Map$new, (_name$2 => {
            var $13513 = Kind$Map$set(_name$2)(Unit$new);
            return $13513;
        }));
        var $13512 = List$mapped$(BitsMap$keys$(_map$2), Kind$Name$from_bits);
        return $13512;
    };
    const Kind$Synth$remove_duplicate_names = x0 => Kind$Synth$remove_duplicate_names$(x0);

    function Kind$Synth$files$(_files$1, _defs$2) {
        var $13514 = IO$monad$((_m$bind$3 => _m$pure$4 => {
            var $13515 = _m$bind$3;
            return $13515;
        }))(Kind$Synth$files$go$(_files$1, _defs$2))((_got$3 => {
            var _nams$4 = Kind$Synth$remove_duplicate_names$(Pair$fst$(_got$3));
            var _defs$5 = Pair$snd$(_got$3);
            var $13516 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                var $13517 = _m$pure$7;
                return $13517;
            }))(Pair$new$(_nams$4, _defs$5));
            return $13516;
        }));
        return $13514;
    };
    const Kind$Synth$files = x0 => x1 => Kind$Synth$files$(x0, x1);

    function Kind$api$io$check_files$(_files$1) {
        var $13518 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13519 = _m$bind$2;
            return $13519;
        }))(Kind$Synth$files$(_files$1, Kind$Map$new))((_loaded$2 => {
            var _nams$3 = Pair$fst$(_loaded$2);
            var _defs$4 = Pair$snd$(_loaded$2);
            var self = _nams$3;
            switch (self._) {
                case 'List.nil':
                    var $13521 = IO$print$("No valid Kind file found.");
                    var $13520 = $13521;
                    break;
                case 'List.cons':
                    var $13522 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                        var $13523 = _m$bind$7;
                        return $13523;
                    }))(IO$print$(Kind$Defs$report$(_defs$4, _nams$3)))((_$7 => {
                        var $13524 = Kind$Defs$cache$(_defs$4);
                        return $13524;
                    }));
                    var $13520 = $13522;
                    break;
            };
            return $13520;
        }));
        return $13518;
    };
    const Kind$api$io$check_files = x0 => Kind$api$io$check_files$(x0);

    function Kind$api$io$check_term$(_name$1) {
        var $13525 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13526 = _m$bind$2;
            return $13526;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_defs$2 => {
            var self = _defs$2;
            switch (self._) {
                case 'Maybe.some':
                    var $13528 = self.value;
                    var $13529 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $13530 = _m$bind$4;
                        return $13530;
                    }))(IO$print$(Kind$Defs$report$($13528, List$cons$(_name$1, List$nil))))((_$4 => {
                        var $13531 = Kind$Defs$cache$($13528);
                        return $13531;
                    }));
                    var $13527 = $13529;
                    break;
                case 'Maybe.none':
                    var _notfound$3 = ("Term not found: \'" + (_name$1 + "\'."));
                    var _filelist$4 = List$mapped$(Kind$Synth$files_of$(_name$1), (_x$4 => {
                        var $13533 = ("\'" + (_x$4 + "\'"));
                        return $13533;
                    }));
                    var _searched$5 = ("Searched on: " + (String$join$(", ", _filelist$4) + "."));
                    var $13532 = IO$print$((_notfound$3 + ("\u{a}" + _searched$5)));
                    var $13527 = $13532;
                    break;
            };
            return $13527;
        }));
        return $13525;
    };
    const Kind$api$io$check_term = x0 => Kind$api$io$check_term$(x0);

    function Kind$api$io$show_term$(_name$1) {
        var $13534 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13535 = _m$bind$2;
            return $13535;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_new_defs$2 => {
            var $13536 = IO$print$((() => {
                var self = _new_defs$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $13537 = self.value;
                        var _defs$4 = $13537;
                        var _defn$5 = Kind$Map$get$(_name$1, _defs$4);
                        var self = _defn$5;
                        switch (self._) {
                            case 'Maybe.some':
                                var $13539 = self.value;
                                var self = $13539;
                                switch (self._) {
                                    case 'Kind.Def.new':
                                        var $13541 = self.term;
                                        var _term$16 = $13541;
                                        var $13542 = Kind$Term$show$(_term$16);
                                        var $13540 = $13542;
                                        break;
                                };
                                var $13538 = $13540;
                                break;
                            case 'Maybe.none':
                                var $13543 = ("Term not found: \'" + (_name$1 + "\'."));
                                var $13538 = $13543;
                                break;
                        };
                        return $13538;
                    case 'Maybe.none':
                        var _notfound$3 = ("Term not found: \'" + (_name$1 + "\'."));
                        var _filelist$4 = List$mapped$(Kind$Synth$files_of$(_name$1), (_x$4 => {
                            var $13545 = ("\'" + (_x$4 + "\'"));
                            return $13545;
                        }));
                        var _searched$5 = ("Searched on: " + (String$join$(", ", _filelist$4) + "."));
                        var $13544 = (_notfound$3 + ("\u{a}" + _searched$5));
                        return $13544;
                };
            })());
            return $13536;
        }));
        return $13534;
    };
    const Kind$api$io$show_term = x0 => Kind$api$io$show_term$(x0);

    function Kind$api$io$show_term_normal$(_name$1) {
        var $13546 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13547 = _m$bind$2;
            return $13547;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_new_defs$2 => {
            var $13548 = IO$print$((() => {
                var self = _new_defs$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $13549 = self.value;
                        var _defs$4 = $13549;
                        var _defn$5 = Kind$Map$get$(_name$1, _defs$4);
                        var self = _defn$5;
                        switch (self._) {
                            case 'Maybe.some':
                                var $13551 = self.value;
                                var self = $13551;
                                switch (self._) {
                                    case 'Kind.Def.new':
                                        var $13553 = self.term;
                                        var _term$16 = $13553;
                                        var _norm$17 = Kind$Term$normalize$(_term$16, _defs$4);
                                        var $13554 = Kind$Term$show$(_norm$17);
                                        var $13552 = $13554;
                                        break;
                                };
                                var $13550 = $13552;
                                break;
                            case 'Maybe.none':
                                var $13555 = ("Term not found: \'" + (_name$1 + "\'."));
                                var $13550 = $13555;
                                break;
                        };
                        return $13550;
                    case 'Maybe.none':
                        var _notfound$3 = ("Term not found: \'" + (_name$1 + "\'."));
                        var _filelist$4 = List$mapped$(Kind$Synth$files_of$(_name$1), (_x$4 => {
                            var $13557 = ("\'" + (_x$4 + "\'"));
                            return $13557;
                        }));
                        var _searched$5 = ("Searched on: " + (String$join$(", ", _filelist$4) + "."));
                        var $13556 = (_notfound$3 + ("\u{a}" + _searched$5));
                        return $13556;
                };
            })());
            return $13548;
        }));
        return $13546;
    };
    const Kind$api$io$show_term_normal = x0 => Kind$api$io$show_term_normal$(x0);

    function IO$purify$(_io$2) {
        var IO$purify$ = (_io$2) => ({
            ctr: 'TCO',
            arg: [_io$2]
        });
        var IO$purify = _io$2 => IO$purify$(_io$2);
        var arg = [_io$2];
        while (true) {
            let [_io$2] = arg;
            var R = (() => {
                var self = _io$2;
                switch (self._) {
                    case 'IO.end':
                        var $13558 = self.value;
                        var $13559 = $13558;
                        return $13559;
                    case 'IO.ask':
                        var $13560 = self.then;
                        var $13561 = IO$purify$($13560(""));
                        return $13561;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const IO$purify = x0 => IO$purify$(x0);

    function Kind$api$check_code$(_code$1) {
        var self = Kind$Defs$read$("Main.kind", _code$1, Kind$Map$new);
        switch (self._) {
            case 'Either.left':
                var $13563 = self.value;
                var $13564 = $13563;
                var $13562 = $13564;
                break;
            case 'Either.right':
                var $13565 = self.value;
                var $13566 = IO$purify$((() => {
                    var _defs$3 = $13565;
                    var _nams$4 = List$mapped$(BitsMap$keys$(_defs$3), Kind$Name$from_bits);
                    var $13567 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                        var $13568 = _m$bind$5;
                        return $13568;
                    }))(Kind$Synth$many$(_nams$4, _defs$3))((_defs$5 => {
                        var $13569 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                            var $13570 = _m$pure$7;
                            return $13570;
                        }))(Kind$Defs$report$(_defs$5, _nams$4));
                        return $13569;
                    }));
                    return $13567;
                })());
                var $13562 = $13566;
                break;
        };
        return $13562;
    };
    const Kind$api$check_code = x0 => Kind$api$check_code$(x0);

    function Kind$Term$read$(_code$1) {
        var self = Kind$Parser$term(Parser$State$new$(Maybe$none, "", 0n, 0n, _code$1));
        switch (self._) {
            case 'Parser.Reply.value':
                var $13572 = self.val;
                var $13573 = Maybe$some$($13572);
                var $13571 = $13573;
                break;
            case 'Parser.Reply.error':
                var $13574 = Maybe$none;
                var $13571 = $13574;
                break;
        };
        return $13571;
    };
    const Kind$Term$read = x0 => Kind$Term$read$(x0);
    const Kind$api$export = (() => {
        var _e$1 = Kind$api$io$term_to_core;
        var _e$2 = Kind$api$io$term_to_scheme;
        var _e$3 = Kind$api$io$terms_to_scheme_lib;
        var _e$4 = Kind$api$io$check_file;
        var _e$5 = Kind$api$io$check_files;
        var _e$6 = Kind$api$io$check_term;
        var _e$7 = Kind$api$io$show_term;
        var _e$8 = Kind$api$io$show_term_normal;
        var _e$9 = Kind$api$check_code;
        var _e$10 = Kind$Term$read;
        var $13575 = IO$monad$((_m$bind$11 => _m$pure$12 => {
            var $13576 = _m$pure$12;
            return $13576;
        }))(Unit$new);
        return $13575;
    })();
    return {
        '$main$': () => run(Kind$api$export),
        'run': run,
        'IO': IO,
        'IO.ask': IO$ask,
        'IO.bind': IO$bind,
        'IO.end': IO$end,
        'IO.monad': IO$monad,
        'Maybe': Maybe,
        'BitsMap': BitsMap,
        'Maybe.none': Maybe$none,
        'BitsMap.get': BitsMap$get,
        'Bits.o': Bits$o,
        'Bits.i': Bits$i,
        'Bool.true': Bool$true,
        'Bool.false': Bool$false,
        'Cmp.as_ltn': Cmp$as_ltn,
        'Cmp.ltn': Cmp$ltn,
        'Cmp.gtn': Cmp$gtn,
        'Word.cmp.go': Word$cmp$go,
        'Cmp.eql': Cmp$eql,
        'Word.cmp': Word$cmp,
        'Word.ltn': Word$ltn,
        'Nat.succ': Nat$succ,
        'Nat.zero': Nat$zero,
        'U16.ltn': U16$ltn,
        'U16.new': U16$new,
        'Nat.apply': Nat$apply,
        'Word': Word,
        'Word.e': Word$e,
        'Word.i': Word$i,
        'Word.o': Word$o,
        'Word.inc': Word$inc,
        'Word.zero': Word$zero,
        'Nat.to_word': Nat$to_word,
        'Nat.to_u16': Nat$to_u16,
        'Kind.Name.to_bits.go': Kind$Name$to_bits$go,
        'Bits.e': Bits$e,
        'Kind.Name.to_bits': Kind$Name$to_bits,
        'Kind.Map.get': Kind$Map$get,
        'Maybe.default': Maybe$default,
        'Parser.State.new': Parser$State$new,
        'Maybe.some': Maybe$some,
        'Parser.run': Parser$run,
        'Parser.Reply': Parser$Reply,
        'List': List,
        'Parser.Reply.error': Parser$Reply$error,
        'Nat.gtn': Nat$gtn,
        'Parser.Error.combine': Parser$Error$combine,
        'Parser.Error.maybe_combine': Parser$Error$maybe_combine,
        'Parser.Reply.value': Parser$Reply$value,
        'List.nil': List$nil,
        'List.cons': List$cons,
        'Parser.many.go': Parser$many$go,
        'Parser.many': Parser$many,
        'Parser.many1': Parser$many1,
        'Parser.Error.new': Parser$Error$new,
        'Parser.Reply.fail': Parser$Reply$fail,
        'Cmp.as_eql': Cmp$as_eql,
        'Word.eql': Word$eql,
        'U16.eql': U16$eql,
        'Parser.digit': Parser$digit,
        'Nat.add': Nat$add,
        'Nat.mul': Nat$mul,
        'Nat.from_base.go': Nat$from_base$go,
        'List.reverse.go': List$reverse$go,
        'List.reverse': List$reverse,
        'Nat.from_base': Nat$from_base,
        'Parser.nat': Parser$nat,
        'Nat.read': Nat$read,
        'IO.get_time': IO$get_time,
        'Kind.Synth.load.cached.is_loop': Kind$Synth$load$cached$is_loop,
        'IO.get_file': IO$get_file,
        'String.cons': String$cons,
        'String.concat': String$concat,
        'Bits.hex.encode': Bits$hex$encode,
        'Kind.Synth.load.cached.name': Kind$Synth$load$cached$name,
        'Kind.Synth.load.cached.get_file': Kind$Synth$load$cached$get_file,
        'Bool.not': Bool$not,
        'String.is_empty': String$is_empty,
        'IO.get_file_mtime': IO$get_file_mtime,
        'Bool.and': Bool$and,
        'String.eql': String$eql,
        'Pair.new': Pair$new,
        'Maybe.bind': Maybe$bind,
        'Maybe.monad': Maybe$monad,
        'Pair': Pair,
        'Unit.new': Unit$new,
        'Bool.or': Bool$or,
        'Kind.Core.read.spaces': Kind$Core$read$spaces,
        'Kind.Term.ref': Kind$Term$ref,
        'Char.eql': Char$eql,
        'Kind.Term.typ': Kind$Term$typ,
        'Cmp.as_gte': Cmp$as_gte,
        'Word.gte': Word$gte,
        'U16.gte': U16$gte,
        'Cmp.as_lte': Cmp$as_lte,
        'Word.lte': Word$lte,
        'U16.lte': U16$lte,
        'Kind.Core.read.is_name': Kind$Core$read$is_name,
        'Kind.Core.read.name': Kind$Core$read$name,
        'Kind.Core.read.char': Kind$Core$read$char,
        'Kind.Term.all': Kind$Term$all,
        'Kind.Term.lam': Kind$Term$lam,
        'Kind.Term.app': Kind$Term$app,
        'Kind.Term.let': Kind$Term$let,
        'Kind.Term.def': Kind$Term$def,
        'Kind.Term.ann': Kind$Term$ann,
        'String.starts_with': String$starts_with,
        'String.nil': String$nil,
        'String.drop': String$drop,
        'Char.is_hex': Char$is_hex,
        'Word.adder': Word$adder,
        'Word.add': Word$add,
        'U16.add': U16$add,
        'Word.shift_left.one.go': Word$shift_left$one$go,
        'Word.shift_left.one': Word$shift_left$one,
        'Word.shift_left': Word$shift_left,
        'Word.mul.go': Word$mul$go,
        'Word.to_zero': Word$to_zero,
        'Word.mul': Word$mul,
        'U16.mul': U16$mul,
        'U16.inc': U16$inc,
        'Word.subber': Word$subber,
        'Word.sub': Word$sub,
        'U16.sub': U16$sub,
        'U16.zero': U16$zero,
        'Char.hex_value16': Char$hex_value16,
        'Kind.Core.read.u16': Kind$Core$read$u16,
        'Kind.Core.read.chrx': Kind$Core$read$chrx,
        'Kind.Term.chr': Kind$Term$chr,
        'Kind.Core.read.strx': Kind$Core$read$strx,
        'Kind.Term.str': Kind$Term$str,
        'Char.dec_value': Char$dec_value,
        'Kind.Core.read.natx': Kind$Core$read$natx,
        'Kind.Term.nat': Kind$Term$nat,
        'Pair.fst': Pair$fst,
        'Nat.eql': Nat$eql,
        'Nat.pred': Nat$pred,
        'Kind.Core.read.find': Kind$Core$read$find,
        'Pair.snd': Pair$snd,
        'Kind.Core.read.term': Kind$Core$read$term,
        'Kind.Core.read': Kind$Core$read,
        'Bool.read': Bool$read,
        'Kind.Status.done': Kind$Status$done,
        'Kind.Def.new': Kind$Def$new,
        'Kind.Synth.load.cached.def': Kind$Synth$load$cached$def,
        'BitsMap.tie': BitsMap$tie,
        'BitsMap.new': BitsMap$new,
        'BitsMap.set': BitsMap$set,
        'Kind.Map.set': Kind$Map$set,
        'Kind.Map.new': Kind$Map$new,
        'Kind.Map': Kind$Map,
        'Kind.Core.dependencies.go': Kind$Core$dependencies$go,
        'List.mapped': List$mapped,
        'Bits.reverse.tco': Bits$reverse$tco,
        'Bits.reverse': Bits$reverse,
        'BitsMap.to_list.go': BitsMap$to_list$go,
        'Kind.Name.from_bits': Kind$Name$from_bits,
        'Kind.Map.to_list': Kind$Map$to_list,
        'Kind.Map.keys': Kind$Map$keys,
        'Kind.Synth.load.cached': Kind$Synth$load$cached,
        'IO.request': IO$request,
        'Kind.Synth.get_kind_code': Kind$Synth$get_kind_code,
        'Parser.is_eof': Parser$is_eof,
        'Parser': Parser,
        'Parser.choice': Parser$choice,
        'Parser.text.go': Parser$text$go,
        'Parser.text': Parser$text,
        'Parser.eof': Parser$eof,
        'Parser.until.go': Parser$until$go,
        'Parser.until': Parser$until,
        'Parser.one': Parser$one,
        'Kind.Parser.comment': Kind$Parser$comment,
        'Kind.Parser.spaces': Kind$Parser$spaces,
        'Parser.get_idx': Parser$get_idx,
        'U16.btw': U16$btw,
        'Kind.Name.is_letter': Kind$Name$is_letter,
        'Kind.Parser.letter': Kind$Parser$letter,
        'List.fold': List$fold,
        'Parser.fail': Parser$fail,
        'String.head': String$head,
        'Kind.Parser.name1': Kind$Parser$name1,
        'Parser.until1': Parser$until1,
        'Parser.wrap1': Parser$wrap1,
        'Kind.Parser.text': Kind$Parser$text,
        'Parser.maybe': Parser$maybe,
        'Kind.Parser.items1': Kind$Parser$items1,
        'Kind.Parser.name': Kind$Parser$name,
        'Kind.Term.ori': Kind$Term$ori,
        'Kind.Parser.block': Kind$Parser$block,
        'Kind.Parser.dom.prop': Kind$Parser$dom$prop,
        'Kind.Term.hol': Kind$Term$hol,
        'Kind.Parser.dom.gen_prop.go': Kind$Parser$dom$gen_prop$go,
        'Kind.Parser.dom.gen_prop': Kind$Parser$dom$gen_prop,
        'Kind.Parser.dom.for': Kind$Parser$dom$for,
        'Kind.Parser.dom.dynamic': Kind$Parser$dom$dynamic,
        'Kind.Parser.dom.text': Kind$Parser$dom$text,
        'Kind.Parser.dom.leaf': Kind$Parser$dom$leaf,
        'Kind.Parser.dom.transform_children': Kind$Parser$dom$transform_children,
        'Kind.Parser.dom.node': Kind$Parser$dom$node,
        'Kind.Parser.dom': Kind$Parser$dom,
        'Kind.Parser.forall': Kind$Parser$forall,
        'Parser.wrap': Parser$wrap,
        'Kind.Parser.items': Kind$Parser$items,
        'Kind.Parser.lambda.make': Kind$Parser$lambda$make,
        'Kind.Parser.lambda.make.start': Kind$Parser$lambda$make$start,
        'Kind.Parser.lambda': Kind$Parser$lambda,
        'Kind.Parser.lambda.erased': Kind$Parser$lambda$erased,
        'Kind.Parser.parenthesis': Kind$Parser$parenthesis,
        'Kind.Parser.letforrange': Kind$Parser$letforrange,
        'Kind.Parser.letforrange.u32': Kind$Parser$letforrange$u32,
        'Kind.Parser.letforrange.with': Kind$Parser$letforrange$with,
        'Kind.Parser.letforrange.u32.with': Kind$Parser$letforrange$u32$with,
        'Kind.Parser.letforrange.i32': Kind$Parser$letforrange$i32,
        'Kind.Parser.letforrange.i32.with': Kind$Parser$letforrange$i32$with,
        'Kind.Parser.letforrange.nat': Kind$Parser$letforrange$nat,
        'Kind.Parser.letforrange.nat.with': Kind$Parser$letforrange$nat$with,
        'Kind.Parser.letforin': Kind$Parser$letforin,
        'Kind.Parser.letforin.with': Kind$Parser$letforin$with,
        'Kind.Parser.letwhile': Kind$Parser$letwhile,
        'Kind.Parser.letwhile.with': Kind$Parser$letwhile$with,
        'Kind.Parser.let': Kind$Parser$let,
        'Kind.Parser.let.omit': Kind$Parser$let$omit,
        'Kind.Parser.getwhile': Kind$Parser$getwhile,
        'Kind.Parser.getwhile.with': Kind$Parser$getwhile$with,
        'Kind.Parser.get': Kind$Parser$get,
        'Kind.Parser.get.omit': Kind$Parser$get$omit,
        'Kind.Parser.def': Kind$Parser$def,
        'Kind.Parser.goal_rewrite': Kind$Parser$goal_rewrite,
        'Kind.Parser.if': Kind$Parser$if,
        'Kind.Code.backslash': Kind$Code$backslash,
        'Kind.Code.escapes': Kind$Code$escapes,
        'Kind.Parser.char.single': Kind$Parser$char$single,
        'Kind.Parser.char': Kind$Parser$char,
        'String.reverse.go': String$reverse$go,
        'String.reverse': String$reverse,
        'Kind.Parser.string.go': Kind$Parser$string$go,
        'Kind.Parser.string': Kind$Parser$string,
        'Kind.Term.new': Kind$Term$new,
        'Kind.Parser.new': Kind$Parser$new,
        'Kind.Parser.sigma.type': Kind$Parser$sigma$type,
        'Kind.Parser.some': Kind$Parser$some,
        'Kind.Parser.not': Kind$Parser$not,
        'Kind.Parser.left': Kind$Parser$left,
        'Kind.Parser.right': Kind$Parser$right,
        'Kind.Parser.apply': Kind$Parser$apply,
        'Kind.Parser.chain': Kind$Parser$chain,
        'Kind.Parser.mirror': Kind$Parser$mirror,
        'Kind.Name.read': Kind$Name$read,
        'Kind.Parser.list': Kind$Parser$list,
        'Kind.Parser.map': Kind$Parser$map,
        'Kind.Parser.log': Kind$Parser$log,
        'String.map': String$map,
        'Char.to_upper': Char$to_upper,
        'String.to_upper': String$to_upper,
        'String.is_upper': String$is_upper,
        'String.take': String$take,
        'Nat.sub': Nat$sub,
        'String.slice': String$slice,
        'Kind.Term.unroll_nat': Kind$Term$unroll_nat,
        'Word.to_bits': Word$to_bits,
        'U16.to_bits': U16$to_bits,
        'Kind.Term.unroll_chr.bits': Kind$Term$unroll_chr$bits,
        'Kind.Term.unroll_chr': Kind$Term$unroll_chr,
        'Kind.Term.unroll_str': Kind$Term$unroll_str,
        'Kind.Term.reduce': Kind$Term$reduce,
        'Kind.Term.cse': Kind$Term$cse,
        'Kind.Parser.open': Kind$Parser$open,
        'Kind.Parser.do.statements': Kind$Parser$do$statements,
        'Kind.Parser.do': Kind$Parser$do,
        'Parser.try': Parser$try,
        'Parser.avoiding': Parser$avoiding,
        'Kind.Term.extract_name': Kind$Term$extract_name,
        'Kind.Ann.new': Kind$Ann$new,
        'Kind.Parser.case.with': Kind$Parser$case$with,
        'Kind.Parser.case.case': Kind$Parser$case$case,
        'Parser.append_error': Parser$append_error,
        'Kind.Parser.case.group': Kind$Parser$case$group,
        'BitsMap.map': BitsMap$map,
        'Kind.Map.map': Kind$Map$map,
        'Kind.Parser.case.build': Kind$Parser$case$build,
        'Kind.Parser.case': Kind$Parser$case,
        'Kind.Parser.without': Kind$Parser$without,
        'Kind.Parser.switch.case': Kind$Parser$switch$case,
        'Kind.Parser.switch': Kind$Parser$switch,
        'Bits.tail': Bits$tail,
        'Bits.inc': Bits$inc,
        'Nat.to_bits': Nat$to_bits,
        'Maybe.is_some': Maybe$is_some,
        'Kind.Term.gol': Kind$Term$gol,
        'Kind.Parser.goal': Kind$Parser$goal,
        'Kind.Parser.hole': Kind$Parser$hole,
        'Kind.Parser.float.sign': Kind$Parser$float$sign,
        'List.any': List$any,
        'Kind.Parser.float.str_digit': Kind$Parser$float$str_digit,
        'String.from_list': String$from_list,
        'Kind.Parser.float.64': Kind$Parser$float$64,
        'Kind.Parser.float.32': Kind$Parser$float$32,
        'Either': Either,
        'Either.left': Either$left,
        'Either.right': Either$right,
        'Nat.sub_rem': Nat$sub_rem,
        'Nat.div_mod.go': Nat$div_mod$go,
        'Nat.div_mod': Nat$div_mod,
        'Nat.to_base.go': Nat$to_base$go,
        'Nat.to_base': Nat$to_base,
        'Nat.mod.go': Nat$mod$go,
        'Nat.mod': Nat$mod,
        'Nat.lte': Nat$lte,
        'List.at': List$at,
        'Nat.show_digit': Nat$show_digit,
        'Nat.to_string_base': Nat$to_string_base,
        'Nat.show': Nat$show,
        'Kind.Parser.int_pos': Kind$Parser$int_pos,
        'Kind.Parser.int_neg': Kind$Parser$int_neg,
        'Kind.Parser.machine_integer.signed': Kind$Parser$machine_integer$signed,
        'Parser.hex_digit': Parser$hex_digit,
        'Parser.hex_nat': Parser$hex_nat,
        'Kind.Parser.nat': Kind$Parser$nat,
        'Kind.Parser.machine_integer.unsigned': Kind$Parser$machine_integer$unsigned,
        'Kind.Parser.u64': Kind$Parser$u64,
        'Kind.Parser.u32': Kind$Parser$u32,
        'Kind.Parser.u16': Kind$Parser$u16,
        'Kind.Parser.u8': Kind$Parser$u8,
        'Parser.Number.new': Parser$Number$new,
        'Parser.num': Parser$num,
        'Kind.Term.num': Kind$Term$num,
        'Kind.Parser.num': Kind$Parser$num,
        'Kind.Parser.reference': Kind$Parser$reference,
        'Kind.Parser.text_now': Kind$Parser$text_now,
        'Kind.Parser.items_now': Kind$Parser$items_now,
        'List.for': List$for,
        'Kind.Parser.application': Kind$Parser$application,
        'Kind.Parser.application.erased': Kind$Parser$application$erased,
        'Kind.Parser.list_set': Kind$Parser$list_set,
        'Kind.Parser.list_get': Kind$Parser$list_get,
        'Kind.Parser.map_set': Kind$Parser$map_set,
        'Kind.Parser.map_get': Kind$Parser$map_get,
        'Kind.Term.set': Kind$Term$set,
        'Kind.Parser.field_set': Kind$Parser$field_set,
        'Kind.Term.get': Kind$Term$get,
        'Kind.Parser.field_get': Kind$Parser$field_get,
        'Kind.Parser.arrow': Kind$Parser$arrow,
        'Kind.Parser.concat': Kind$Parser$concat,
        'Kind.Parser.equality': Kind$Parser$equality,
        'Kind.Term.ope': Kind$Term$ope,
        'Kind.Parser.op': Kind$Parser$op,
        'Kind.Parser.add': Kind$Parser$add,
        'Kind.Parser.sub': Kind$Parser$sub,
        'Kind.Parser.mul': Kind$Parser$mul,
        'Kind.Parser.div': Kind$Parser$div,
        'Kind.Parser.mod': Kind$Parser$mod,
        'Kind.Parser.ltn': Kind$Parser$ltn,
        'Kind.Parser.lte': Kind$Parser$lte,
        'Kind.Parser.eql': Kind$Parser$eql,
        'Kind.Parser.gte': Kind$Parser$gte,
        'Kind.Parser.gtn': Kind$Parser$gtn,
        'Kind.Parser.and': Kind$Parser$and,
        'Kind.Parser.or': Kind$Parser$or,
        'Kind.Parser.default': Kind$Parser$default,
        'Kind.Parser.cons': Kind$Parser$cons,
        'Kind.Parser.string_concat': Kind$Parser$string_concat,
        'Kind.Parser.sigma': Kind$Parser$sigma,
        'Kind.Parser.inequality': Kind$Parser$inequality,
        'Kind.Parser.rewrite': Kind$Parser$rewrite,
        'Kind.Parser.annotation': Kind$Parser$annotation,
        'Kind.Parser.application.hole': Kind$Parser$application$hole,
        'Kind.Parser.term.suffix': Kind$Parser$term$suffix,
        'Kind.Parser.term': Kind$Parser$term,
        'Kind.Parser.name_term': Kind$Parser$name_term,
        'Kind.Binder.new': Kind$Binder$new,
        'Kind.Parser.binder.homo': Kind$Parser$binder$homo,
        'List.concat': List$concat,
        'List.flatten': List$flatten,
        'Kind.Parser.binder': Kind$Parser$binder,
        'List.length': List$length,
        'Kind.Parser.forall.make': Kind$Parser$forall$make,
        'List.at_last': List$at_last,
        'Kind.Term.var': Kind$Term$var,
        'Kind.Context.get_name_skips': Kind$Context$get_name_skips,
        'Kind.Name.eql': Kind$Name$eql,
        'Kind.Context.find.go': Kind$Context$find$go,
        'Kind.Context.find': Kind$Context$find,
        'Kind.Path.Builder.o': Kind$Path$Builder$o,
        'Kind.Path.Builder.i': Kind$Path$Builder$i,
        'Kind.Path.Builder.to_bits': Kind$Path$Builder$to_bits,
        'List.imapped': List$imapped,
        'Kind.Path.Builder.nat': Kind$Path$Builder$nat,
        'BitsMap.kmap.go': BitsMap$kmap$go,
        'BitsMap.kmap': BitsMap$kmap,
        'Kind.Map.kmapped': Kind$Map$kmapped,
        'Kind.Path.Builder.bits': Kind$Path$Builder$bits,
        'Kind.Term.bind': Kind$Term$bind,
        'Trampoline.call': Trampoline$call,
        'Trampoline': Trampoline,
        'Trampoline.wrap': Trampoline$wrap,
        'BitsMap.set_if_empty.cps.go': BitsMap$set_if_empty$cps$go,
        'Trampoline.done': Trampoline$done,
        'BitsMap.set_if_empty.cps': BitsMap$set_if_empty$cps,
        'BitsMap.set_if_empty': BitsMap$set_if_empty,
        'Kind.Map.set_if_empty': Kind$Map$set_if_empty,
        'Kind.Status.init': Kind$Status$init,
        'Kind.Map.def': Kind$Map$def,
        'Kind.Parser.file.def': Kind$Parser$file$def,
        'Kind.Parser.ADT.Constructor.new': Kind$Parser$ADT$Constructor$new,
        'Kind.Parser.ADT.ctor': Kind$Parser$ADT$ctor,
        'Kind.Parser.ADT.Datatype.new': Kind$Parser$ADT$Datatype$new,
        'Kind.Parser.ADT.adt': Kind$Parser$ADT$adt,
        'Kind.Parser.ADT.Datatype.build_term.motive.go': Kind$Parser$ADT$Datatype$build_term$motive$go,
        'Kind.Parser.ADT.Datatype.build_term.motive': Kind$Parser$ADT$Datatype$build_term$motive,
        'String.flatten.go': String$flatten$go,
        'String.flatten': String$flatten,
        'Kind.Parser.ADT.Datatype.build_term.constructor.go': Kind$Parser$ADT$Datatype$build_term$constructor$go,
        'Kind.Parser.ADT.Datatype.build_term.constructor': Kind$Parser$ADT$Datatype$build_term$constructor,
        'Kind.Parser.ADT.Datatype.build_term.constructors.go': Kind$Parser$ADT$Datatype$build_term$constructors$go,
        'Kind.Parser.ADT.Datatype.build_term.constructors': Kind$Parser$ADT$Datatype$build_term$constructors,
        'Kind.Parser.ADT.Datatype.build_term.go': Kind$Parser$ADT$Datatype$build_term$go,
        'Kind.Parser.ADT.Datatype.build_term': Kind$Parser$ADT$Datatype$build_term,
        'Kind.Parser.ADT.Datatype.build_type.go': Kind$Parser$ADT$Datatype$build_type$go,
        'Kind.Parser.ADT.Datatype.build_type': Kind$Parser$ADT$Datatype$build_type,
        'Kind.Parser.ADT.Constructor.build_term.opt.go': Kind$Parser$ADT$Constructor$build_term$opt$go,
        'Kind.Parser.ADT.Constructor.build_term.opt': Kind$Parser$ADT$Constructor$build_term$opt,
        'Kind.Parser.ADT.Constructor.build_term.go': Kind$Parser$ADT$Constructor$build_term$go,
        'Kind.Parser.ADT.Constructor.build_term': Kind$Parser$ADT$Constructor$build_term,
        'Kind.Parser.ADT.Constructor.build_type.go': Kind$Parser$ADT$Constructor$build_type$go,
        'Kind.Parser.ADT.Constructor.build_type': Kind$Parser$ADT$Constructor$build_type,
        'List.is_empty': List$is_empty,
        'Kind.Term.get_args.go': Kind$Term$get_args$go,
        'Kind.Term.get_args': Kind$Term$get_args,
        'Kind.Parser.ADT.Derive.stringifier.term.cont': Kind$Parser$ADT$Derive$stringifier$term$cont,
        'Kind.Parser.ADT.Derive.stringifier.term.args': Kind$Parser$ADT$Derive$stringifier$term$args,
        'Kind.Parser.ADT.Derive.stringifier.ctr': Kind$Parser$ADT$Derive$stringifier$ctr,
        'Kind.Parser.ADT.Derive.stringifier.term.ctrs': Kind$Parser$ADT$Derive$stringifier$term$ctrs,
        'Kind.Parser.ADT.Derive.stringifier.term': Kind$Parser$ADT$Derive$stringifier$term,
        'Kind.Parser.ADT.Derive.stringifier.type': Kind$Parser$ADT$Derive$stringifier$type,
        'Kind.Parser.ADT.Derived.new': Kind$Parser$ADT$Derived$new,
        'Kind.Parser.ADT.Derive.parser.term.cont': Kind$Parser$ADT$Derive$parser$term$cont,
        'Kind.Parser.ADT.Derive.parser.term.args': Kind$Parser$ADT$Derive$parser$term$args,
        'Kind.Parser.ADT.Derive.parser.term.cses': Kind$Parser$ADT$Derive$parser$term$cses,
        'Kind.Parser.ADT.Derive.parser.term': Kind$Parser$ADT$Derive$parser$term,
        'Kind.Parser.ADT.Derive.parser.type': Kind$Parser$ADT$Derive$parser$type,
        'Kind.Parser.ADT.Derive.serializer.term.cont': Kind$Parser$ADT$Derive$serializer$term$cont,
        'Kind.Parser.ADT.Derive.serializer.term.args': Kind$Parser$ADT$Derive$serializer$term$args,
        'Kind.Parser.ADT.Derive.serializer.ctr.bits': Kind$Parser$ADT$Derive$serializer$ctr$bits,
        'Kind.Parser.ADT.Derive.serializer.ctr': Kind$Parser$ADT$Derive$serializer$ctr,
        'Kind.Parser.ADT.Derive.serializer.term.ctrs': Kind$Parser$ADT$Derive$serializer$term$ctrs,
        'Bits.zeros': Bits$zeros,
        'Nat.div': Nat$div,
        'Nat.bitlen': Nat$bitlen,
        'Kind.Parser.ADT.Derive.serializer.term': Kind$Parser$ADT$Derive$serializer$term,
        'Kind.Parser.ADT.Derive.serializer.type': Kind$Parser$ADT$Derive$serializer$type,
        'Kind.Parser.ADT.Derive.serializer.term.bits': Kind$Parser$ADT$Derive$serializer$term$bits,
        'Kind.Parser.ADT.Derive.deserializer.term.cont': Kind$Parser$ADT$Derive$deserializer$term$cont,
        'Kind.Parser.ADT.Derive.deserializer.term.args': Kind$Parser$ADT$Derive$deserializer$term$args,
        'Kind.Parser.ADT.Derive.deserializer.term.cses': Kind$Parser$ADT$Derive$deserializer$term$cses,
        'Kind.Parser.ADT.Derive.deserializer.term': Kind$Parser$ADT$Derive$deserializer$term,
        'Kind.Parser.ADT.Derive.deserializer.type': Kind$Parser$ADT$Derive$deserializer$type,
        'Kind.Parser.ADT.Derive.by_name': Kind$Parser$ADT$Derive$by_name,
        'Kind.Parser.file.adt': Kind$Parser$file$adt,
        'Kind.Parser.file.end': Kind$Parser$file$end,
        'Kind.Parser.file': Kind$Parser$file,
        'String.join.go': String$join$go,
        'String.join': String$join,
        'Kind.Code.highlight.end': Kind$Code$highlight$end,
        'Maybe.extract': Maybe$extract,
        'Nat.is_zero': Nat$is_zero,
        'Nat.double': Nat$double,
        'String.pad_right': String$pad_right,
        'String.pad_left': String$pad_left,
        'Kind.Code.color': Kind$Code$color,
        'List.take': List$take,
        'Kind.Code.highlight.go': Kind$Code$highlight$go,
        'Kind.Code.highlight': Kind$Code$highlight,
        'Kind.Defs.read': Kind$Defs$read,
        'Kind.Synth.load.go': Kind$Synth$load$go,
        'Kind.Synth.files_of.make': Kind$Synth$files_of$make,
        'String.length.go': String$length$go,
        'String.length': String$length,
        'String.split.go': String$split$go,
        'String.split': String$split,
        'Kind.Synth.files_of': Kind$Synth$files_of,
        'Kind.Synth.load': Kind$Synth$load,
        'Kind.Status.wait': Kind$Status$wait,
        'Kind.Check': Kind$Check,
        'Kind.Check.result': Kind$Check$result,
        'Kind.Error.undefined_reference': Kind$Error$undefined_reference,
        'Kind.Error.waiting': Kind$Error$waiting,
        'Kind.Error.indirect': Kind$Error$indirect,
        'Maybe.mapped': Maybe$mapped,
        'Kind.Path.Maybe.Builder.o': Kind$Path$Maybe$Builder$o,
        'Kind.Path.Maybe.Builder.i': Kind$Path$Maybe$Builder$i,
        'Kind.Error.patch': Kind$Error$patch,
        'Kind.Path.Maybe.Builder.to_bits': Kind$Path$Maybe$Builder$to_bits,
        'Kind.Term.check.patch': Kind$Term$check$patch,
        'Kind.Error.type_mismatch': Kind$Error$type_mismatch,
        'Kind.Error.show_goal': Kind$Error$show_goal,
        'Kind.Path.Builder.nil': Kind$Path$Builder$nil,
        'Kind.Path.Maybe.Builder.nil': Kind$Path$Maybe$Builder$nil,
        'Kind.Term.check.direct': Kind$Term$check$direct,
        'Kind.Term.check.get_name_of_self_type.slice': Kind$Term$check$get_name_of_self_type$slice,
        'Kind.Term.check.get_name_of_self_type': Kind$Term$check$get_name_of_self_type,
        'Kind.Term.check.expand.num.nat': Kind$Term$check$expand$num$nat,
        'Kind.Term.check.expand.num.int': Kind$Term$check$expand$num$int,
        'Kind.Term.check.expand.num.other': Kind$Term$check$expand$num$other,
        'Kind.Term.check.expand.num': Kind$Term$check$expand$num,
        'Kind.Term.check.infer_types_of_with': Kind$Term$check$infer_types_of_with,
        'Kind.Term.normalize': Kind$Term$normalize,
        'Kind.Term.check.expand.cse.motive.go': Kind$Term$check$expand$cse$motive$go,
        'List.tail': List$tail,
        'Kind.Term.SmartMotive.vals.cont': Kind$Term$SmartMotive$vals$cont,
        'Kind.Term.SmartMotive.vals': Kind$Term$SmartMotive$vals,
        'Kind.Term.SmartMotive.nams.cont': Kind$Term$SmartMotive$nams$cont,
        'Kind.Term.SmartMotive.nams': Kind$Term$SmartMotive$nams,
        'List.zip': List$zip,
        'Nat.gte': Nat$gte,
        'Bits.concat': Bits$concat,
        'Kind.Term.serialize.go': Kind$Term$serialize$go,
        'Kind.Term.serialize': Kind$Term$serialize,
        'Bits.eql': Bits$eql,
        'Kind.Term.identical': Kind$Term$identical,
        'Kind.Term.SmartMotive.replace': Kind$Term$SmartMotive$replace,
        'Kind.Term.SmartMotive.make': Kind$Term$SmartMotive$make,
        'Kind.Term.check.expand.cse.motive': Kind$Term$check$expand$cse$motive,
        'Kind.Term.check.expand.cse.argument': Kind$Term$check$expand$cse$argument,
        'Maybe.or': Maybe$or,
        'Kind.Term.check.expand.cse.cases': Kind$Term$check$expand$cse$cases,
        'Kind.Term.check.expand.cse': Kind$Term$check$expand$cse,
        'Kind.Error.cant_infer': Kind$Error$cant_infer,
        'Kind.Term.check.cant_infer': Kind$Term$check$cant_infer,
        'Kind.Term.get_bnds': Kind$Term$get_bnds,
        'List.last.go': List$last$go,
        'List.last': List$last,
        'Kind.Term.check.expand.set.count_params': Kind$Term$check$expand$set$count_params,
        'Nat.for': Nat$for,
        'List.get': List$get,
        'Kind.Term.check.expand.new.pair': Kind$Term$check$expand$new$pair,
        'Kind.Term.check.expand.new': Kind$Term$check$expand$new,
        'Kind.Term.check.expand.get.selector': Kind$Term$check$expand$get$selector,
        'Kind.Term.check.expand.get': Kind$Term$check$expand$get,
        'Kind.Term.check.expand.set.selector': Kind$Term$check$expand$set$selector,
        'Kind.Term.check.expand.set': Kind$Term$check$expand$set,
        'String.at': String$at,
        'String.last': String$last,
        'Kind.Term.check.expand.ope': Kind$Term$check$expand$ope,
        'BitsSet.has': BitsSet$has,
        'BitsSet.mut.has': BitsSet$mut$has,
        'Kind.Term.equal.extra_holes.funari': Kind$Term$equal$extra_holes$funari,
        'Kind.Term.has_holes': Kind$Term$has_holes,
        'Kind.Term.equal.hole': Kind$Term$equal$hole,
        'Kind.Term.equal.extra_holes.filler': Kind$Term$equal$extra_holes$filler,
        'Kind.Term.equal.extra_holes': Kind$Term$equal$extra_holes,
        'BitsSet.set': BitsSet$set,
        'BitsSet.mut.set': BitsSet$mut$set,
        'Bool.eql': Bool$eql,
        'Kind.Term.equal.go': Kind$Term$equal$go,
        'BitsSet.new': BitsSet$new,
        'BitsSet.mut.new': BitsSet$mut$new,
        'Kind.Term.check': Kind$Term$check,
        'Kind.Path.patch_at.list': Kind$Path$patch_at$list,
        'Kind.Path.patch_at.bitsmap': Kind$Path$patch_at$bitsmap,
        'Kind.Term.patch_at': Kind$Term$patch_at,
        'Kind.Synth.fix': Kind$Synth$fix,
        'Kind.Status.fail': Kind$Status$fail,
        'Kind.Synth.one': Kind$Synth$one,
        'BitsMap.from_list': BitsMap$from_list,
        'Kind.Term.inline.names': Kind$Term$inline$names,
        'Kind.Term.inline.reduce': Kind$Term$inline$reduce,
        'Kind.Term.inline': Kind$Term$inline,
        'BitsMap.values.go': BitsMap$values$go,
        'BitsMap.values': BitsMap$values,
        'Kind.Core.var_name': Kind$Core$var_name,
        'Kind.Name.show': Kind$Name$show,
        'Bits.to_nat': Bits$to_nat,
        'U16.show_hex': U16$show_hex,
        'Kind.Code.escape.char': Kind$Code$escape$char,
        'Kind.Code.escape.go': Kind$Code$escape$go,
        'Kind.Code.escape': Kind$Code$escape,
        'Kind.Core.show.go': Kind$Core$show$go,
        'Kind.Core.show': Kind$Core$show,
        'Kind.Defs.core': Kind$Defs$core,
        'Kind.api.io.term_to_core': Kind$api$io$term_to_core,
        'Kind.Comp.Defs.compile.defn.adjust': Kind$Comp$Defs$compile$defn$adjust,
        'Kind.Comp.var': Kind$Comp$var,
        'Kind.Comp.nil': Kind$Comp$nil,
        'Kind.Comp.ref': Kind$Comp$ref,
        'Kind.Comp.Prim.bool': Kind$Comp$Prim$bool,
        'Kind.Comp.Prim.nat': Kind$Comp$Prim$nat,
        'Kind.Comp.Prim.bits': Kind$Comp$Prim$bits,
        'Kind.Comp.Prim.u16': Kind$Comp$Prim$u16,
        'Kind.Comp.Prim.u32': Kind$Comp$Prim$u32,
        'Kind.Comp.Prim.string': Kind$Comp$Prim$string,
        'Kind.Comp.Prim.natives': Kind$Comp$Prim$natives,
        'Kind.Term.equal': Kind$Term$equal,
        'Kind.Comp.compile.prim_of': Kind$Comp$compile$prim_of,
        'String.ends_with': String$ends_with,
        'Kind.Comp.compile.adt.get_fields': Kind$Comp$compile$adt$get_fields,
        'Kind.Comp.compile.adt.get_constructors': Kind$Comp$compile$adt$get_constructors,
        'Kind.Comp.Prim.data': Kind$Comp$Prim$data,
        'Kind.Comp.compile.adt': Kind$Comp$compile$adt,
        'Kind.Comp.eli': Kind$Comp$eli,
        'Kind.Comp.app': Kind$Comp$app,
        'Kind.Comp.let': Kind$Comp$let,
        'Kind.Comp.nat': Kind$Comp$nat,
        'Kind.Comp.chr': Kind$Comp$chr,
        'Kind.Comp.str': Kind$Comp$str,
        'Kind.Comp.lam': Kind$Comp$lam,
        'Kind.Comp.ins': Kind$Comp$ins,
        'Kind.Comp.compile': Kind$Comp$compile,
        'Kind.Comp.Defs.compile.defn': Kind$Comp$Defs$compile$defn,
        'Kind.Comp.Defs.compile': Kind$Comp$Defs$compile,
        'Kind.Comp.dependency_sort.go': Kind$Comp$dependency_sort$go,
        'Kind.Comp.dependency_sort': Kind$Comp$dependency_sort,
        'String.take_while': String$take_while,
        'String.drop_while': String$drop_while,
        'Kind.Comp.replace': Kind$Comp$replace,
        'List.create.go': List$create$go,
        'List.create': List$create,
        'Kind.Comp.Prim.instantiator.go': Kind$Comp$Prim$instantiator$go,
        'Kind.Comp.Prim.instantiator': Kind$Comp$Prim$instantiator,
        'Kind.Comp.get_args.go': Kind$Comp$get_args$go,
        'Kind.Comp.get_args': Kind$Comp$get_args,
        'Kind.Comp.get_arity': Kind$Comp$get_arity,
        'Kind.Comp.get_vars': Kind$Comp$get_vars,
        'Kind.Comp.Prim.inst.go': Kind$Comp$Prim$inst$go,
        'Kind.Comp.Prim.inst': Kind$Comp$Prim$inst,
        'Word.fold': Word$fold,
        'Word.to_nat': Word$to_nat,
        'U16.to_nat': U16$to_nat,
        'Kind.Comp.transpile.term': Kind$Comp$transpile$term,
        'List.map': List$map,
        'List.seq.go': List$seq$go,
        'List.seq': List$seq,
        'Kind.Comp.txt': Kind$Comp$txt,
        'Kind.Comp.subst': Kind$Comp$subst,
        'Kind.Comp.apply': Kind$Comp$apply,
        'Kind.Comp.Prim.elim': Kind$Comp$Prim$elim,
        'Kind.Comp.Prim.eliminator': Kind$Comp$Prim$eliminator,
        'BBT.lookup': BBT$lookup,
        'U16.cmp': U16$cmp,
        'String.cmp': String$cmp,
        'Map.get': Map$get,
        'BBT': BBT,
        'Map': Map,
        'Kind.Comp.transpile.global_definitions': Kind$Comp$transpile$global_definitions,
        'Kind.Comp.transpile': Kind$Comp$transpile,
        'Kind.Comp.Language.new': Kind$Comp$Language$new,
        'Kind.Comp.Grammar.new': Kind$Comp$Grammar$new,
        'Kind.Comp.Target.Scheme.null': Kind$Comp$Target$Scheme$null,
        'Kind.Comp.Target.Scheme.name': Kind$Comp$Target$Scheme$name,
        'Kind.Comp.Target.Scheme.inst_name': Kind$Comp$Target$Scheme$inst_name,
        'Kind.Comp.Target.Scheme.elim_name': Kind$Comp$Target$Scheme$elim_name,
        'Kind.Comp.Target.Scheme.lambda': Kind$Comp$Target$Scheme$lambda,
        'Kind.Comp.Target.Scheme.application': Kind$Comp$Target$Scheme$application,
        'Kind.Comp.Target.Scheme.local_definition': Kind$Comp$Target$Scheme$local_definition,
        'Kind.Comp.Target.Scheme.global_application': Kind$Comp$Target$Scheme$global_application,
        'Kind.Comp.Target.Scheme.nest_lambdas.aux': Kind$Comp$Target$Scheme$nest_lambdas$aux,
        'Kind.Comp.Target.Scheme.nest_lambdas': Kind$Comp$Target$Scheme$nest_lambdas,
        'Kind.Comp.Target.Scheme.global_function': Kind$Comp$Target$Scheme$global_function,
        'Kind.Comp.Target.Scheme.select': Kind$Comp$Target$Scheme$select,
        'Char.to_string': Char$to_string,
        'Kind.Comp.Target.Scheme.string_literal': Kind$Comp$Target$Scheme$string_literal,
        'Kind.Comp.Target.Scheme.nat': Kind$Comp$Target$Scheme$nat,
        'Kind.Comp.Target.Scheme.exports': Kind$Comp$Target$Scheme$exports,
        'Kind.Comp.Target.Scheme.module': Kind$Comp$Target$Scheme$module,
        'Kind.Comp.Target.Scheme.program': Kind$Comp$Target$Scheme$program,
        'Kind.Comp.Target.Scheme.grammar': Kind$Comp$Target$Scheme$grammar,
        'Kind.Comp.Native.new': Kind$Comp$Native$new,
        'Kind.Comp.Target.Scheme.natives': Kind$Comp$Target$Scheme$natives,
        'BBT.bin': BBT$bin,
        'U32.new': U32$new,
        'Nat.to_u32': Nat$to_u32,
        'BBT.tip': BBT$tip,
        'BBT.singleton': BBT$singleton,
        'BBT.size': BBT$size,
        'U32.add': U32$add,
        'U32.mul': U32$mul,
        'BBT.w': BBT$w,
        'U32.ltn': U32$ltn,
        'U32.from_nat': U32$from_nat,
        'BBT.node': BBT$node,
        'Cmp.as_gtn': Cmp$as_gtn,
        'Word.gtn': Word$gtn,
        'U32.gtn': U32$gtn,
        'BBT.balance': BBT$balance,
        'BBT.insert': BBT$insert,
        'BBT.from_list.go': BBT$from_list$go,
        'BBT.from_list': BBT$from_list,
        'Map.from_list': Map$from_list,
        'Kind.Comp.Target.Scheme.optimizeds': Kind$Comp$Target$Scheme$optimizeds,
        'Kind.Comp.Target.Scheme.basics': Kind$Comp$Target$Scheme$basics,
        'Kind.Comp.Target.Scheme.Language': Kind$Comp$Target$Scheme$Language,
        'Kind.api.io.term_to_scheme': Kind$api$io$term_to_scheme,
        'Kind.Synth.many': Kind$Synth$many,
        'Kind.Comp.dependency_sort.module': Kind$Comp$dependency_sort$module,
        'Kind.Comp.transpile.module': Kind$Comp$transpile$module,
        'Kind.api.io.terms_to_scheme_lib': Kind$api$io$terms_to_scheme_lib,
        'BitsMap.keys.go': BitsMap$keys$go,
        'BitsMap.keys': BitsMap$keys,
        'Kind.Synth.file': Kind$Synth$file,
        'IO.put_string': IO$put_string,
        'IO.print': IO$print,
        'Kind.Term.show.as_nat.go': Kind$Term$show$as_nat$go,
        'Kind.Term.show.as_nat': Kind$Term$show$as_nat,
        'Kind.Term.show.is_ref': Kind$Term$show$is_ref,
        'Kind.Term.show.app.done': Kind$Term$show$app$done,
        'Kind.Term.show.app': Kind$Term$show$app,
        'BitsMap.to_list': BitsMap$to_list,
        'Kind.Term.show.go': Kind$Term$show$go,
        'Kind.Term.show': Kind$Term$show,
        'Kind.Defs.report.types': Kind$Defs$report$types,
        'List.filter': List$filter,
        'Kind.Error.is_undef': Kind$Error$is_undef,
        'Kind.Error.is_mistake': Kind$Error$is_mistake,
        'Kind.Error.is_goal': Kind$Error$is_goal,
        'Kind.Error.relevant': Kind$Error$relevant,
        'Kind.Context.show': Kind$Context$show,
        'Kind.Term.expand_at': Kind$Term$expand_at,
        'Kind.Term.expand_ct': Kind$Term$expand_ct,
        'Kind.Term.expand': Kind$Term$expand,
        'Kind.Error.show': Kind$Error$show,
        'Kind.Error.origin': Kind$Error$origin,
        'Kind.Defs.report.errors': Kind$Defs$report$errors,
        'Kind.Defs.report': Kind$Defs$report,
        'IO.set_file': IO$set_file,
        'Kind.Synth.load.cached.set_file': Kind$Synth$load$cached$set_file,
        'Bool.show': Bool$show,
        'Kind.Defs.cache.go': Kind$Defs$cache$go,
        'Kind.Defs.cache': Kind$Defs$cache,
        'Kind.api.io.check_file': Kind$api$io$check_file,
        'Kind.Synth.files.go': Kind$Synth$files$go,
        'Kind.Synth.remove_duplicate_names': Kind$Synth$remove_duplicate_names,
        'Kind.Synth.files': Kind$Synth$files,
        'Kind.api.io.check_files': Kind$api$io$check_files,
        'Kind.api.io.check_term': Kind$api$io$check_term,
        'Kind.api.io.show_term': Kind$api$io$show_term,
        'Kind.api.io.show_term_normal': Kind$api$io$show_term_normal,
        'IO.purify': IO$purify,
        'Kind.api.check_code': Kind$api$check_code,
        'Kind.Term.read': Kind$Term$read,
        'Kind.api.export': Kind$api$export,
    };
})();