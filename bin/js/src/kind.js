module.exports = (function() {
    function word_to_u16(w) {
        var u = 0;
        for (var i = 0; i < 16; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u16_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 16; ++i) {
            w = {
                _: (u >>> (16 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u16_to_bits(x) {
        var s = '';
        for (var i = 0; i < 16; ++i) {
            s = (x & 1 ? '1' : '0') + s;
            x = x >>> 1;
        }
        return s;
    };

    function word_to_u32(w) {
        var u = 0;
        for (var i = 0; i < 32; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u32_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 32; ++i) {
            w = {
                _: (u >>> (32 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u32_for(state, from, til, func) {
        for (var i = from; i < til; ++i) {
            state = func(i)(state);
        }
        return state;
    };
    var bitsmap_new = {
        _: 'BitsMap.new'
    };
    var bitsmap_tie = function(val, lft, rgt) {
        return {
            _: 'BitsMap.tip',
            val,
            lft,
            rgt
        };
    }
    var maybe_none = {
        _: 'Maybe.none'
    };
    var maybe_some = function(value) {
        return {
            _: 'Maybe.some',
            value
        };
    }
    var bitsmap_get = function(bits, map) {
        for (var i = bits.length - 1; i >= 0; --i) {
            if (map._ !== 'BitsMap.new') {
                map = bits[i] === '0' ? map.lft : map.rgt;
            }
        }
        return map._ === 'BitsMap.new' ? maybe_none : map.val;
    }
    var bitsmap_set = function(bits, val, map, mode) {
        var res = {
            value: map
        };
        var key = 'value';
        var obj = res;
        for (var i = bits.length - 1; i >= 0; --i) {
            var map = obj[key];
            if (map._ === 'BitsMap.new') {
                obj[key] = {
                    _: 'BitsMap.tie',
                    val: maybe_none,
                    lft: bitsmap_new,
                    rgt: bitsmap_new
                };
            } else {
                obj[key] = {
                    _: 'BitsMap.tie',
                    val: map.val,
                    lft: map.lft,
                    rgt: map.rgt
                };
            }
            obj = obj[key];
            key = bits[i] === '0' ? 'lft' : 'rgt';
        }
        var map = obj[key];
        if (map._ === 'BitsMap.new') {
            var x = mode === 'del' ? maybe_none : {
                _: 'Maybe.some',
                value: val
            };
            obj[key] = {
                _: 'BitsMap.tie',
                val: x,
                lft: bitsmap_new,
                rgt: bitsmap_new
            };
        } else {
            var x = mode === 'set' ? {
                _: 'Maybe.some',
                value: val
            } : mode === 'del' ? maybe_none : map.val;
            obj[key] = {
                _: 'BitsMap.tie',
                val: x,
                lft: map.lft,
                rgt: map.rgt
            };
        }
        return res.value;
    };
    var list_for = list => nil => cons => {
        while (list._ !== 'List.nil') {
            nil = cons(list.head)(nil);
            list = list.tail;
        }
        return nil;
    };
    var list_length = list => {
        var len = 0;
        while (list._ === 'List.cons') {
            len += 1;
            list = list.tail;
        };
        return BigInt(len);
    };
    var nat_to_bits = n => {
        return n === 0n ? '' : n.toString(2);
    };
    var kind_name_to_bits = name => {
        const TABLE = {
            'A': '000000',
            'B': '100000',
            'C': '010000',
            'D': '110000',
            'E': '001000',
            'F': '101000',
            'G': '011000',
            'H': '111000',
            'I': '000100',
            'J': '100100',
            'K': '010100',
            'L': '110100',
            'M': '001100',
            'N': '101100',
            'O': '011100',
            'P': '111100',
            'Q': '000010',
            'R': '100010',
            'S': '010010',
            'T': '110010',
            'U': '001010',
            'V': '101010',
            'W': '011010',
            'X': '111010',
            'Y': '000110',
            'Z': '100110',
            'a': '010110',
            'b': '110110',
            'c': '001110',
            'd': '101110',
            'e': '011110',
            'f': '111110',
            'g': '000001',
            'h': '100001',
            'i': '010001',
            'j': '110001',
            'k': '001001',
            'l': '101001',
            'm': '011001',
            'n': '111001',
            'o': '000101',
            'p': '100101',
            'q': '010101',
            'r': '110101',
            's': '001101',
            't': '101101',
            'u': '011101',
            'v': '111101',
            'w': '000011',
            'x': '100011',
            'y': '010011',
            'z': '110011',
            '0': '001011',
            '1': '101011',
            '2': '011011',
            '3': '111011',
            '4': '000111',
            '5': '100111',
            '6': '010111',
            '7': '110111',
            '8': '001111',
            '9': '101111',
            '.': '011111',
            '_': '111111',
        }
        var a = '';
        for (var i = name.length - 1; i >= 0; --i) {
            a += TABLE[name[i]];
        }
        return a;
    };
    const inst_unit = x => x(null);
    const elim_unit = (x => {
        var $1 = (() => c0 => {
            var self = x;
            switch ("unit") {
                case 'unit':
                    var $0 = c0;
                    return $0;
            };
        })();
        return $1;
    });
    const inst_bool = x => x(true)(false);
    const elim_bool = (x => {
        var $4 = (() => c0 => c1 => {
            var self = x;
            if (self) {
                var $2 = c0;
                return $2;
            } else {
                var $3 = c1;
                return $3;
            };
        })();
        return $4;
    });
    const inst_nat = x => x(0n)(x0 => 1n + x0);
    const elim_nat = (x => {
        var $8 = (() => c0 => c1 => {
            var self = x;
            if (self === 0n) {
                var $5 = c0;
                return $5;
            } else {
                var $6 = (self - 1n);
                var $7 = c1($6);
                return $7;
            };
        })();
        return $8;
    });
    const inst_bits = x => x('')(x0 => x0 + '0')(x0 => x0 + '1');
    const elim_bits = (x => {
        var $14 = (() => c0 => c1 => c2 => {
            var self = x;
            switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                case 'o':
                    var $9 = self.slice(0, -1);
                    var $10 = c1($9);
                    return $10;
                case 'i':
                    var $11 = self.slice(0, -1);
                    var $12 = c2($11);
                    return $12;
                case 'e':
                    var $13 = c0;
                    return $13;
            };
        })();
        return $14;
    });
    const inst_u16 = x => x(x0 => word_to_u16(x0));
    const elim_u16 = (x => {
        var $17 = (() => c0 => {
            var self = x;
            switch ('u16') {
                case 'u16':
                    var $15 = u16_to_word(self);
                    var $16 = c0($15);
                    return $16;
            };
        })();
        return $17;
    });
    const inst_u32 = x => x(x0 => word_to_u32(x0));
    const elim_u32 = (x => {
        var $20 = (() => c0 => {
            var self = x;
            switch ('u32') {
                case 'u32':
                    var $18 = u32_to_word(self);
                    var $19 = c0($18);
                    return $19;
            };
        })();
        return $20;
    });
    const inst_string = x => x('')(x0 => x1 => (String.fromCharCode(x0) + x1));
    const elim_string = (x => {
        var $25 = (() => c0 => c1 => {
            var self = x;
            if (self.length === 0) {
                var $21 = c0;
                return $21;
            } else {
                var $22 = self.charCodeAt(0);
                var $23 = self.slice(1);
                var $24 = c1($22)($23);
                return $24;
            };
        })();
        return $25;
    });
    var run = (p) => {
        if (typeof window === 'undefined') {
            var rl = eval("require('readline')").createInterface({
                input: process.stdin,
                output: process.stdout,
                terminal: false
            });
            var fs = eval("require('fs')");
            var pc = eval("process");
            var ht = eval("require('http')");
            var hs = eval("require('https')");
        } else {
            var rl = {
                question: (x, f) => f(''),
                close: () => {}
            };
            var fs = {
                readFileSync: () => ''
            };
            var pc = {
                exit: () => {},
                argv: []
            };
            var ht = null;
            var hs = null;
        };
        return run_io({
            rl,
            fs,
            pc,
            ht,
            hs
        }, p).then((x) => {
            rl.close();
            return x;
        }).catch((e) => {
            rl.close();
            throw e;
        });
    };
    var set_file = (lib, param) => {
        var path = '';
        for (var i = 0; i < param.length && param[i] !== '='; ++i) {
            path += param[i];
        };
        var data = param.slice(i + 1);
        lib.fs.mkdirSync(path.split('/').slice(0, -1).join('/'), {
            recursive: true
        });
        lib.fs.writeFileSync(path, data);
        return '';
    };
    var del_file = (lib, param) => {
        try {
            lib.fs.unlinkSync(param);
            return '';
        } catch (e) {
            if (e.message.indexOf('EPERM') !== -1) {
                lib.fs.rmdirSync(param);
                return '';
            } else {
                throw e;
            }
        }
    };
    var get_file = (lib, param) => {
        return lib.fs.readFileSync(param, 'utf8');
    }
    var get_dir = (lib, param) => {
        return lib.fs.readdirSync(param).join(';');
    };
    var get_file_mtime = (lib, param) => {
        return String(lib.fs.statSync(param).mtime.getTime());
    };
    var request = (lib, param) => {
        if (typeof fetch === 'undefined') {
            return new Promise((res, err) => {
                (/^https/.test(param) ? lib.hs : lib.ht).get(param, r => {
                    let data = '';
                    r.on('data', chunk => {
                        data += chunk;
                    });
                    r.on('end', () => res(data));
                }).on('error', e => res(''));
            });
        } else {
            return fetch(param).then(res => res.text()).catch(e => '');
        }
    }
    var file_error = e => {
        if (e.message.indexOf('NOENT') !== -1) {
            return '';
        } else {
            throw e;
        }
    };
    var io_action = {
        print: async (lib, param) => {
            console.log(param);
            return '';
        },
        put_string: async (lib, param) => {
            process.stdout.write(param);
            return '';
        },
        get_file: async (lib, param) => {
            try {
                return get_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        set_file: async (lib, param) => {
            try {
                return set_file(lib, param)
            } catch (e) {
                return file_error(e);
            }
        },
        del_file: async (lib, param) => {
            try {
                return del_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_dir: async (lib, param) => {
            try {
                return get_dir(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_file_mtime: async (lib, param) => {
            try {
                return get_file_mtime(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        exit: async (lib, param) => {
            lib.pc.exit();
            return '';
        },
        request: async (lib, param) => {
            return request(lib, param);
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        get_line: async (lib, param) => {
            return await new Promise((res, err) => {
                lib.rl.question(param, (line) => res(line));
            });
        },
        get_args: async (lib, param) => {
            return lib.pc.argv[2] || '';
        },
    };
    var run_io = async (lib, io, depth = 0) => {
        switch (io._) {
            case 'IO.end':
                return Promise.resolve(io.value);
            case 'IO.ask':
                var action = io_action[io.query];
                var answer = await action(lib, io.param);
                return await run_io(lib, io.then(answer), depth + 1);
        }
    };

    function IO$(_A$1) {
        var $26 = null;
        return $26;
    };
    const IO = x0 => IO$(x0);

    function IO$ask$(_query$2, _param$3, _then$4) {
        var $27 = ({
            _: 'IO.ask',
            'query': _query$2,
            'param': _param$3,
            'then': _then$4
        });
        return $27;
    };
    const IO$ask = x0 => x1 => x2 => IO$ask$(x0, x1, x2);

    function IO$bind$(_a$3, _f$4) {
        var self = _a$3;
        switch (self._) {
            case 'IO.end':
                var $29 = self.value;
                var $30 = _f$4($29);
                var $28 = $30;
                break;
            case 'IO.ask':
                var $31 = self.query;
                var $32 = self.param;
                var $33 = self.then;
                var $34 = IO$ask$($31, $32, (_x$8 => {
                    var $35 = IO$bind$($33(_x$8), _f$4);
                    return $35;
                }));
                var $28 = $34;
                break;
        };
        return $28;
    };
    const IO$bind = x0 => x1 => IO$bind$(x0, x1);

    function IO$end$(_value$2) {
        var $36 = ({
            _: 'IO.end',
            'value': _value$2
        });
        return $36;
    };
    const IO$end = x0 => IO$end$(x0);

    function IO$monad$(_new$2) {
        var $37 = _new$2(IO$bind)(IO$end);
        return $37;
    };
    const IO$monad = x0 => IO$monad$(x0);

    function Maybe$(_A$1) {
        var $38 = null;
        return $38;
    };
    const Maybe = x0 => Maybe$(x0);

    function BitsMap$(_A$1) {
        var $39 = null;
        return $39;
    };
    const BitsMap = x0 => BitsMap$(x0);
    const Maybe$none = ({
        _: 'Maybe.none'
    });
    const BitsMap$get = a0 => a1 => (bitsmap_get(a0, a1));
    const Bits$e = '';
    const Bits$o = a0 => (a0 + '0');
    const Bits$i = a0 => (a0 + '1');
    const Bool$true = true;
    const Bool$false = false;

    function Cmp$as_ltn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $41 = Bool$true;
                var $40 = $41;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $42 = Bool$false;
                var $40 = $42;
                break;
        };
        return $40;
    };
    const Cmp$as_ltn = x0 => Cmp$as_ltn$(x0);
    const Cmp$ltn = ({
        _: 'Cmp.ltn'
    });
    const Cmp$gtn = ({
        _: 'Cmp.gtn'
    });

    function Word$cmp$go$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $44 = self.pred;
                var $45 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $47 = self.pred;
                            var $48 = (_a$pred$10 => {
                                var $49 = Word$cmp$go$(_a$pred$10, $47, _c$4);
                                return $49;
                            });
                            var $46 = $48;
                            break;
                        case 'Word.i':
                            var $50 = self.pred;
                            var $51 = (_a$pred$10 => {
                                var $52 = Word$cmp$go$(_a$pred$10, $50, Cmp$ltn);
                                return $52;
                            });
                            var $46 = $51;
                            break;
                        case 'Word.e':
                            var $53 = (_a$pred$8 => {
                                var $54 = _c$4;
                                return $54;
                            });
                            var $46 = $53;
                            break;
                    };
                    var $46 = $46($44);
                    return $46;
                });
                var $43 = $45;
                break;
            case 'Word.i':
                var $55 = self.pred;
                var $56 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $58 = self.pred;
                            var $59 = (_a$pred$10 => {
                                var $60 = Word$cmp$go$(_a$pred$10, $58, Cmp$gtn);
                                return $60;
                            });
                            var $57 = $59;
                            break;
                        case 'Word.i':
                            var $61 = self.pred;
                            var $62 = (_a$pred$10 => {
                                var $63 = Word$cmp$go$(_a$pred$10, $61, _c$4);
                                return $63;
                            });
                            var $57 = $62;
                            break;
                        case 'Word.e':
                            var $64 = (_a$pred$8 => {
                                var $65 = _c$4;
                                return $65;
                            });
                            var $57 = $64;
                            break;
                    };
                    var $57 = $57($55);
                    return $57;
                });
                var $43 = $56;
                break;
            case 'Word.e':
                var $66 = (_b$5 => {
                    var $67 = _c$4;
                    return $67;
                });
                var $43 = $66;
                break;
        };
        var $43 = $43(_b$3);
        return $43;
    };
    const Word$cmp$go = x0 => x1 => x2 => Word$cmp$go$(x0, x1, x2);
    const Cmp$eql = ({
        _: 'Cmp.eql'
    });

    function Word$cmp$(_a$2, _b$3) {
        var $68 = Word$cmp$go$(_a$2, _b$3, Cmp$eql);
        return $68;
    };
    const Word$cmp = x0 => x1 => Word$cmp$(x0, x1);

    function Word$ltn$(_a$2, _b$3) {
        var $69 = Cmp$as_ltn$(Word$cmp$(_a$2, _b$3));
        return $69;
    };
    const Word$ltn = x0 => x1 => Word$ltn$(x0, x1);

    function Nat$succ$(_pred$1) {
        var $70 = 1n + _pred$1;
        return $70;
    };
    const Nat$succ = x0 => Nat$succ$(x0);
    const Nat$zero = 0n;
    const U16$ltn = a0 => a1 => (a0 < a1);

    function U16$new$(_value$1) {
        var $71 = word_to_u16(_value$1);
        return $71;
    };
    const U16$new = x0 => U16$new$(x0);

    function Nat$apply$(_n$2, _f$3, _x$4) {
        var Nat$apply$ = (_n$2, _f$3, _x$4) => ({
            ctr: 'TCO',
            arg: [_n$2, _f$3, _x$4]
        });
        var Nat$apply = _n$2 => _f$3 => _x$4 => Nat$apply$(_n$2, _f$3, _x$4);
        var arg = [_n$2, _f$3, _x$4];
        while (true) {
            let [_n$2, _f$3, _x$4] = arg;
            var R = (() => {
                var self = _n$2;
                if (self === 0n) {
                    var $72 = _x$4;
                    return $72;
                } else {
                    var $73 = (self - 1n);
                    var $74 = Nat$apply$($73, _f$3, _f$3(_x$4));
                    return $74;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$apply = x0 => x1 => x2 => Nat$apply$(x0, x1, x2);

    function Word$(_size$1) {
        var $75 = null;
        return $75;
    };
    const Word = x0 => Word$(x0);
    const Word$e = ({
        _: 'Word.e'
    });

    function Word$i$(_pred$2) {
        var $76 = ({
            _: 'Word.i',
            'pred': _pred$2
        });
        return $76;
    };
    const Word$i = x0 => Word$i$(x0);

    function Word$o$(_pred$2) {
        var $77 = ({
            _: 'Word.o',
            'pred': _pred$2
        });
        return $77;
    };
    const Word$o = x0 => Word$o$(x0);

    function Word$inc$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $79 = self.pred;
                var $80 = Word$i$($79);
                var $78 = $80;
                break;
            case 'Word.i':
                var $81 = self.pred;
                var $82 = Word$o$(Word$inc$($81));
                var $78 = $82;
                break;
            case 'Word.e':
                var $83 = Word$e;
                var $78 = $83;
                break;
        };
        return $78;
    };
    const Word$inc = x0 => Word$inc$(x0);

    function Word$zero$(_size$1) {
        var self = _size$1;
        if (self === 0n) {
            var $85 = Word$e;
            var $84 = $85;
        } else {
            var $86 = (self - 1n);
            var $87 = Word$o$(Word$zero$($86));
            var $84 = $87;
        };
        return $84;
    };
    const Word$zero = x0 => Word$zero$(x0);

    function Nat$to_word$(_size$1, _n$2) {
        var $88 = Nat$apply$(_n$2, Word$inc, Word$zero$(_size$1));
        return $88;
    };
    const Nat$to_word = x0 => x1 => Nat$to_word$(x0, x1);
    const Nat$to_u16 = a0 => (Number(a0) & 0xFFFF);
    const Kind$Name$to_bits = a0 => (kind_name_to_bits(a0));

    function Kind$Map$get$(_name$2, _map$3) {
        var $89 = (bitsmap_get((kind_name_to_bits(_name$2)), _map$3));
        return $89;
    };
    const Kind$Map$get = x0 => x1 => Kind$Map$get$(x0, x1);

    function Maybe$default$(_m$2, _a$3) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $91 = self.value;
                var $92 = $91;
                var $90 = $92;
                break;
            case 'Maybe.none':
                var $93 = _a$3;
                var $90 = $93;
                break;
        };
        return $90;
    };
    const Maybe$default = x0 => x1 => Maybe$default$(x0, x1);

    function Parser$State$new$(_err$1, _nam$2, _ini$3, _idx$4, _str$5) {
        var $94 = ({
            _: 'Parser.State.new',
            'err': _err$1,
            'nam': _nam$2,
            'ini': _ini$3,
            'idx': _idx$4,
            'str': _str$5
        });
        return $94;
    };
    const Parser$State$new = x0 => x1 => x2 => x3 => x4 => Parser$State$new$(x0, x1, x2, x3, x4);

    function Maybe$some$(_value$2) {
        var $95 = ({
            _: 'Maybe.some',
            'value': _value$2
        });
        return $95;
    };
    const Maybe$some = x0 => Maybe$some$(x0);

    function Parser$run$(_parser$2, _code$3) {
        var self = _parser$2(Parser$State$new$(Maybe$none, "", 0n, 0n, _code$3));
        switch (self._) {
            case 'Parser.Reply.value':
                var $97 = self.val;
                var $98 = Maybe$some$($97);
                var $96 = $98;
                break;
            case 'Parser.Reply.error':
                var $99 = Maybe$none;
                var $96 = $99;
                break;
        };
        return $96;
    };
    const Parser$run = x0 => x1 => Parser$run$(x0, x1);

    function Parser$Reply$(_V$1) {
        var $100 = null;
        return $100;
    };
    const Parser$Reply = x0 => Parser$Reply$(x0);

    function List$(_A$1) {
        var $101 = null;
        return $101;
    };
    const List = x0 => List$(x0);

    function Parser$Reply$error$(_err$2) {
        var $102 = ({
            _: 'Parser.Reply.error',
            'err': _err$2
        });
        return $102;
    };
    const Parser$Reply$error = x0 => Parser$Reply$error$(x0);
    const Nat$gtn = a0 => a1 => (a0 > a1);

    function Parser$Error$combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Parser.Error.new':
                var $104 = self.idx;
                var self = _b$2;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $106 = self.idx;
                        var self = ($104 > $106);
                        if (self) {
                            var $108 = _a$1;
                            var $107 = $108;
                        } else {
                            var $109 = _b$2;
                            var $107 = $109;
                        };
                        var $105 = $107;
                        break;
                };
                var $103 = $105;
                break;
        };
        return $103;
    };
    const Parser$Error$combine = x0 => x1 => Parser$Error$combine$(x0, x1);

    function Parser$Error$maybe_combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Maybe.some':
                var $111 = self.value;
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $113 = self.value;
                        var $114 = Maybe$some$(Parser$Error$combine$($111, $113));
                        var $112 = $114;
                        break;
                    case 'Maybe.none':
                        var $115 = _a$1;
                        var $112 = $115;
                        break;
                };
                var $110 = $112;
                break;
            case 'Maybe.none':
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.none':
                        var $117 = Maybe$none;
                        var $116 = $117;
                        break;
                    case 'Maybe.some':
                        var $118 = _b$2;
                        var $116 = $118;
                        break;
                };
                var $110 = $116;
                break;
        };
        return $110;
    };
    const Parser$Error$maybe_combine = x0 => x1 => Parser$Error$maybe_combine$(x0, x1);

    function Parser$Reply$value$(_pst$2, _val$3) {
        var $119 = ({
            _: 'Parser.Reply.value',
            'pst': _pst$2,
            'val': _val$3
        });
        return $119;
    };
    const Parser$Reply$value = x0 => x1 => Parser$Reply$value$(x0, x1);
    const List$nil = ({
        _: 'List.nil'
    });

    function List$cons$(_head$2, _tail$3) {
        var $120 = ({
            _: 'List.cons',
            'head': _head$2,
            'tail': _tail$3
        });
        return $120;
    };
    const List$cons = x0 => x1 => List$cons$(x0, x1);

    function Parser$many$go$(_parse$2, _values$3, _pst$4) {
        var Parser$many$go$ = (_parse$2, _values$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_parse$2, _values$3, _pst$4]
        });
        var Parser$many$go = _parse$2 => _values$3 => _pst$4 => Parser$many$go$(_parse$2, _values$3, _pst$4);
        var arg = [_parse$2, _values$3, _pst$4];
        while (true) {
            let [_parse$2, _values$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var self = _parse$2(_pst$4);
                        switch (self._) {
                            case 'Parser.Reply.value':
                                var $122 = self.pst;
                                var $123 = self.val;
                                var $124 = Parser$many$go$(_parse$2, (_xs$12 => {
                                    var $125 = _values$3(List$cons$($123, _xs$12));
                                    return $125;
                                }), $122);
                                var $121 = $124;
                                break;
                            case 'Parser.Reply.error':
                                var $126 = Parser$Reply$value$(_pst$4, _values$3(List$nil));
                                var $121 = $126;
                                break;
                        };
                        return $121;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$many$go = x0 => x1 => x2 => Parser$many$go$(x0, x1, x2);

    function Parser$many$(_parser$2) {
        var $127 = Parser$many$go(_parser$2)((_x$3 => {
            var $128 = _x$3;
            return $128;
        }));
        return $127;
    };
    const Parser$many = x0 => Parser$many$(x0);

    function Parser$many1$(_parser$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $130 = self.err;
                var _reply$9 = _parser$2(_pst$3);
                var self = _reply$9;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $132 = self.err;
                        var self = $130;
                        switch (self._) {
                            case 'Maybe.some':
                                var $134 = self.value;
                                var $135 = Parser$Reply$error$(Parser$Error$combine$($134, $132));
                                var $133 = $135;
                                break;
                            case 'Maybe.none':
                                var $136 = Parser$Reply$error$($132);
                                var $133 = $136;
                                break;
                        };
                        var $131 = $133;
                        break;
                    case 'Parser.Reply.value':
                        var $137 = self.pst;
                        var $138 = self.val;
                        var self = $137;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $140 = self.err;
                                var $141 = self.nam;
                                var $142 = self.ini;
                                var $143 = self.idx;
                                var $144 = self.str;
                                var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($130, $140), $141, $142, $143, $144);
                                var self = _reply$pst$17;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $146 = self.err;
                                        var _reply$23 = Parser$many$(_parser$2)(_reply$pst$17);
                                        var self = _reply$23;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $148 = self.err;
                                                var self = $146;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $150 = self.value;
                                                        var $151 = Parser$Reply$error$(Parser$Error$combine$($150, $148));
                                                        var $149 = $151;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $152 = Parser$Reply$error$($148);
                                                        var $149 = $152;
                                                        break;
                                                };
                                                var $147 = $149;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $153 = self.pst;
                                                var $154 = self.val;
                                                var self = $153;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $156 = self.err;
                                                        var $157 = self.nam;
                                                        var $158 = self.ini;
                                                        var $159 = self.idx;
                                                        var $160 = self.str;
                                                        var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($146, $156), $157, $158, $159, $160);
                                                        var $161 = Parser$Reply$value$(_reply$pst$31, List$cons$($138, $154));
                                                        var $155 = $161;
                                                        break;
                                                };
                                                var $147 = $155;
                                                break;
                                        };
                                        var $145 = $147;
                                        break;
                                };
                                var $139 = $145;
                                break;
                        };
                        var $131 = $139;
                        break;
                };
                var $129 = $131;
                break;
        };
        return $129;
    };
    const Parser$many1 = x0 => x1 => Parser$many1$(x0, x1);

    function Parser$Error$new$(_nam$1, _ini$2, _idx$3, _msg$4) {
        var $162 = ({
            _: 'Parser.Error.new',
            'nam': _nam$1,
            'ini': _ini$2,
            'idx': _idx$3,
            'msg': _msg$4
        });
        return $162;
    };
    const Parser$Error$new = x0 => x1 => x2 => x3 => Parser$Error$new$(x0, x1, x2, x3);

    function Parser$Reply$fail$(_nam$2, _ini$3, _idx$4, _msg$5) {
        var $163 = Parser$Reply$error$(Parser$Error$new$(_nam$2, _ini$3, _idx$4, _msg$5));
        return $163;
    };
    const Parser$Reply$fail = x0 => x1 => x2 => x3 => Parser$Reply$fail$(x0, x1, x2, x3);

    function Cmp$as_eql$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.gtn':
                var $165 = Bool$false;
                var $164 = $165;
                break;
            case 'Cmp.eql':
                var $166 = Bool$true;
                var $164 = $166;
                break;
        };
        return $164;
    };
    const Cmp$as_eql = x0 => Cmp$as_eql$(x0);

    function Word$eql$(_a$2, _b$3) {
        var $167 = Cmp$as_eql$(Word$cmp$(_a$2, _b$3));
        return $167;
    };
    const Word$eql = x0 => x1 => Word$eql$(x0, x1);
    const U16$eql = a0 => a1 => (a0 === a1);

    function Parser$digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $169 = self.err;
                var $170 = self.nam;
                var $171 = self.ini;
                var $172 = self.idx;
                var $173 = self.str;
                var self = $173;
                if (self.length === 0) {
                    var $175 = Parser$Reply$fail$($170, $171, $172, "Not a digit.");
                    var $174 = $175;
                } else {
                    var $176 = self.charCodeAt(0);
                    var $177 = self.slice(1);
                    var _pst$9 = Parser$State$new$($169, $170, $171, Nat$succ$($172), $177);
                    var self = ($176 === 48);
                    if (self) {
                        var $179 = Parser$Reply$value$(_pst$9, 0n);
                        var $178 = $179;
                    } else {
                        var self = ($176 === 49);
                        if (self) {
                            var $181 = Parser$Reply$value$(_pst$9, 1n);
                            var $180 = $181;
                        } else {
                            var self = ($176 === 50);
                            if (self) {
                                var $183 = Parser$Reply$value$(_pst$9, 2n);
                                var $182 = $183;
                            } else {
                                var self = ($176 === 51);
                                if (self) {
                                    var $185 = Parser$Reply$value$(_pst$9, 3n);
                                    var $184 = $185;
                                } else {
                                    var self = ($176 === 52);
                                    if (self) {
                                        var $187 = Parser$Reply$value$(_pst$9, 4n);
                                        var $186 = $187;
                                    } else {
                                        var self = ($176 === 53);
                                        if (self) {
                                            var $189 = Parser$Reply$value$(_pst$9, 5n);
                                            var $188 = $189;
                                        } else {
                                            var self = ($176 === 54);
                                            if (self) {
                                                var $191 = Parser$Reply$value$(_pst$9, 6n);
                                                var $190 = $191;
                                            } else {
                                                var self = ($176 === 55);
                                                if (self) {
                                                    var $193 = Parser$Reply$value$(_pst$9, 7n);
                                                    var $192 = $193;
                                                } else {
                                                    var self = ($176 === 56);
                                                    if (self) {
                                                        var $195 = Parser$Reply$value$(_pst$9, 8n);
                                                        var $194 = $195;
                                                    } else {
                                                        var self = ($176 === 57);
                                                        if (self) {
                                                            var $197 = Parser$Reply$value$(_pst$9, 9n);
                                                            var $196 = $197;
                                                        } else {
                                                            var $198 = Parser$Reply$fail$($170, $171, $172, "Not a digit.");
                                                            var $196 = $198;
                                                        };
                                                        var $194 = $196;
                                                    };
                                                    var $192 = $194;
                                                };
                                                var $190 = $192;
                                            };
                                            var $188 = $190;
                                        };
                                        var $186 = $188;
                                    };
                                    var $184 = $186;
                                };
                                var $182 = $184;
                            };
                            var $180 = $182;
                        };
                        var $178 = $180;
                    };
                    var $174 = $178;
                };
                var $168 = $174;
                break;
        };
        return $168;
    };
    const Parser$digit = x0 => Parser$digit$(x0);
    const Nat$add = a0 => a1 => (a0 + a1);
    const Nat$mul = a0 => a1 => (a0 * a1);

    function Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4) {
        var Nat$from_base$go$ = (_b$1, _ds$2, _p$3, _res$4) => ({
            ctr: 'TCO',
            arg: [_b$1, _ds$2, _p$3, _res$4]
        });
        var Nat$from_base$go = _b$1 => _ds$2 => _p$3 => _res$4 => Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4);
        var arg = [_b$1, _ds$2, _p$3, _res$4];
        while (true) {
            let [_b$1, _ds$2, _p$3, _res$4] = arg;
            var R = (() => {
                var self = _ds$2;
                switch (self._) {
                    case 'List.cons':
                        var $199 = self.head;
                        var $200 = self.tail;
                        var $201 = Nat$from_base$go$(_b$1, $200, (_b$1 * _p$3), (($199 * _p$3) + _res$4));
                        return $201;
                    case 'List.nil':
                        var $202 = _res$4;
                        return $202;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$from_base$go = x0 => x1 => x2 => x3 => Nat$from_base$go$(x0, x1, x2, x3);

    function List$reverse$go$(_xs$2, _res$3) {
        var List$reverse$go$ = (_xs$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_xs$2, _res$3]
        });
        var List$reverse$go = _xs$2 => _res$3 => List$reverse$go$(_xs$2, _res$3);
        var arg = [_xs$2, _res$3];
        while (true) {
            let [_xs$2, _res$3] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $203 = self.head;
                        var $204 = self.tail;
                        var $205 = List$reverse$go$($204, List$cons$($203, _res$3));
                        return $205;
                    case 'List.nil':
                        var $206 = _res$3;
                        return $206;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$reverse$go = x0 => x1 => List$reverse$go$(x0, x1);

    function List$reverse$(_xs$2) {
        var $207 = List$reverse$go$(_xs$2, List$nil);
        return $207;
    };
    const List$reverse = x0 => List$reverse$(x0);

    function Nat$from_base$(_base$1, _ds$2) {
        var $208 = Nat$from_base$go$(_base$1, List$reverse$(_ds$2), 1n, 0n);
        return $208;
    };
    const Nat$from_base = x0 => x1 => Nat$from_base$(x0, x1);

    function Parser$nat$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $210 = self.err;
                var _reply$7 = Parser$many1$(Parser$digit, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $212 = self.err;
                        var self = $210;
                        switch (self._) {
                            case 'Maybe.some':
                                var $214 = self.value;
                                var $215 = Parser$Reply$error$(Parser$Error$combine$($214, $212));
                                var $213 = $215;
                                break;
                            case 'Maybe.none':
                                var $216 = Parser$Reply$error$($212);
                                var $213 = $216;
                                break;
                        };
                        var $211 = $213;
                        break;
                    case 'Parser.Reply.value':
                        var $217 = self.pst;
                        var $218 = self.val;
                        var self = $217;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $220 = self.err;
                                var $221 = self.nam;
                                var $222 = self.ini;
                                var $223 = self.idx;
                                var $224 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($210, $220), $221, $222, $223, $224);
                                var $225 = Parser$Reply$value$(_reply$pst$15, Nat$from_base$(10n, $218));
                                var $219 = $225;
                                break;
                        };
                        var $211 = $219;
                        break;
                };
                var $209 = $211;
                break;
        };
        return $209;
    };
    const Parser$nat = x0 => Parser$nat$(x0);
    const Nat$read = a0 => (BigInt(a0));
    const IO$get_time = IO$ask$("get_time", "", (_time$1 => {
        var $226 = IO$end$((BigInt(_time$1)));
        return $226;
    }));

    function Kind$Synth$load$cached$is_loop$(_name$1, _defs$2) {
        var self = Kind$Map$get$(_name$1, _defs$2);
        switch (self._) {
            case 'Maybe.some':
                var $228 = self.value;
                var self = $228;
                switch (self._) {
                    case 'Kind.Def.new':
                        var $230 = self.stat;
                        var self = $230;
                        switch (self._) {
                            case 'Kind.Status.done':
                                var $232 = self.cached;
                                var $233 = $232;
                                var $231 = $233;
                                break;
                            case 'Kind.Status.init':
                            case 'Kind.Status.wait':
                            case 'Kind.Status.fail':
                                var $234 = Bool$false;
                                var $231 = $234;
                                break;
                        };
                        var $229 = $231;
                        break;
                };
                var $227 = $229;
                break;
            case 'Maybe.none':
                var $235 = Bool$false;
                var $227 = $235;
                break;
        };
        return $227;
    };
    const Kind$Synth$load$cached$is_loop = x0 => x1 => Kind$Synth$load$cached$is_loop$(x0, x1);

    function IO$get_file$(_name$1) {
        var $236 = IO$ask$("get_file", _name$1, (_file$2 => {
            var $237 = IO$end$(_file$2);
            return $237;
        }));
        return $236;
    };
    const IO$get_file = x0 => IO$get_file$(x0);
    const String$nil = '';

    function String$cons$(_head$1, _tail$2) {
        var $238 = (String.fromCharCode(_head$1) + _tail$2);
        return $238;
    };
    const String$cons = x0 => x1 => String$cons$(x0, x1);

    function String$map$(_f$1, _as$2) {
        var self = _as$2;
        if (self.length === 0) {
            var $240 = String$nil;
            var $239 = $240;
        } else {
            var $241 = self.charCodeAt(0);
            var $242 = self.slice(1);
            var $243 = String$cons$(_f$1($241), String$map$(_f$1, $242));
            var $239 = $243;
        };
        return $239;
    };
    const String$map = x0 => x1 => String$map$(x0, x1);
    const Bool$and = a0 => a1 => (a0 && a1);

    function Cmp$as_gte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $245 = Bool$false;
                var $244 = $245;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $246 = Bool$true;
                var $244 = $246;
                break;
        };
        return $244;
    };
    const Cmp$as_gte = x0 => Cmp$as_gte$(x0);

    function Word$gte$(_a$2, _b$3) {
        var $247 = Cmp$as_gte$(Word$cmp$(_a$2, _b$3));
        return $247;
    };
    const Word$gte = x0 => x1 => Word$gte$(x0, x1);
    const U16$gte = a0 => a1 => (a0 >= a1);

    function Cmp$as_lte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $249 = Bool$true;
                var $248 = $249;
                break;
            case 'Cmp.gtn':
                var $250 = Bool$false;
                var $248 = $250;
                break;
        };
        return $248;
    };
    const Cmp$as_lte = x0 => Cmp$as_lte$(x0);

    function Word$lte$(_a$2, _b$3) {
        var $251 = Cmp$as_lte$(Word$cmp$(_a$2, _b$3));
        return $251;
    };
    const Word$lte = x0 => x1 => Word$lte$(x0, x1);
    const U16$lte = a0 => a1 => (a0 <= a1);

    function Word$adder$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $253 = self.pred;
                var $254 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $256 = self.pred;
                            var $257 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $259 = Word$i$(Word$adder$(_a$pred$10, $256, Bool$false));
                                    var $258 = $259;
                                } else {
                                    var $260 = Word$o$(Word$adder$(_a$pred$10, $256, Bool$false));
                                    var $258 = $260;
                                };
                                return $258;
                            });
                            var $255 = $257;
                            break;
                        case 'Word.i':
                            var $261 = self.pred;
                            var $262 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $264 = Word$o$(Word$adder$(_a$pred$10, $261, Bool$true));
                                    var $263 = $264;
                                } else {
                                    var $265 = Word$i$(Word$adder$(_a$pred$10, $261, Bool$false));
                                    var $263 = $265;
                                };
                                return $263;
                            });
                            var $255 = $262;
                            break;
                        case 'Word.e':
                            var $266 = (_a$pred$8 => {
                                var $267 = Word$e;
                                return $267;
                            });
                            var $255 = $266;
                            break;
                    };
                    var $255 = $255($253);
                    return $255;
                });
                var $252 = $254;
                break;
            case 'Word.i':
                var $268 = self.pred;
                var $269 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $271 = self.pred;
                            var $272 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $274 = Word$o$(Word$adder$(_a$pred$10, $271, Bool$true));
                                    var $273 = $274;
                                } else {
                                    var $275 = Word$i$(Word$adder$(_a$pred$10, $271, Bool$false));
                                    var $273 = $275;
                                };
                                return $273;
                            });
                            var $270 = $272;
                            break;
                        case 'Word.i':
                            var $276 = self.pred;
                            var $277 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $279 = Word$i$(Word$adder$(_a$pred$10, $276, Bool$true));
                                    var $278 = $279;
                                } else {
                                    var $280 = Word$o$(Word$adder$(_a$pred$10, $276, Bool$true));
                                    var $278 = $280;
                                };
                                return $278;
                            });
                            var $270 = $277;
                            break;
                        case 'Word.e':
                            var $281 = (_a$pred$8 => {
                                var $282 = Word$e;
                                return $282;
                            });
                            var $270 = $281;
                            break;
                    };
                    var $270 = $270($268);
                    return $270;
                });
                var $252 = $269;
                break;
            case 'Word.e':
                var $283 = (_b$5 => {
                    var $284 = Word$e;
                    return $284;
                });
                var $252 = $283;
                break;
        };
        var $252 = $252(_b$3);
        return $252;
    };
    const Word$adder = x0 => x1 => x2 => Word$adder$(x0, x1, x2);

    function Word$add$(_a$2, _b$3) {
        var $285 = Word$adder$(_a$2, _b$3, Bool$false);
        return $285;
    };
    const Word$add = x0 => x1 => Word$add$(x0, x1);
    const U16$add = a0 => a1 => ((a0 + a1) & 0xFFFF);

    function Char$to_lower$(_char$1) {
        var self = ((_char$1 >= 65) && (_char$1 <= 90));
        if (self) {
            var $287 = ((_char$1 + 32) & 0xFFFF);
            var $286 = $287;
        } else {
            var $288 = _char$1;
            var $286 = $288;
        };
        return $286;
    };
    const Char$to_lower = x0 => Char$to_lower$(x0);

    function String$to_lower$(_str$1) {
        var $289 = String$map$(Char$to_lower, _str$1);
        return $289;
    };
    const String$to_lower = x0 => String$to_lower$(x0);
    const String$concat = a0 => a1 => (a0 + a1);
    const Bool$not = a0 => (!a0);

    function String$is_empty$(_str$1) {
        var self = _str$1;
        if (self.length === 0) {
            var $291 = Bool$true;
            var $290 = $291;
        } else {
            var $292 = self.charCodeAt(0);
            var $293 = self.slice(1);
            var $294 = Bool$false;
            var $290 = $294;
        };
        return $290;
    };
    const String$is_empty = x0 => String$is_empty$(x0);

    function IO$get_file_mtime$(_name$1) {
        var $295 = IO$ask$("get_file_mtime", _name$1, (_file$2 => {
            var $296 = IO$end$(_file$2);
            return $296;
        }));
        return $295;
    };
    const IO$get_file_mtime = x0 => IO$get_file_mtime$(x0);
    const String$eql = a0 => a1 => (a0 === a1);

    function Pair$new$(_fst$3, _snd$4) {
        var $297 = ({
            _: 'Pair.new',
            'fst': _fst$3,
            'snd': _snd$4
        });
        return $297;
    };
    const Pair$new = x0 => x1 => Pair$new$(x0, x1);

    function Maybe$bind$(_m$3, _f$4) {
        var self = _m$3;
        switch (self._) {
            case 'Maybe.some':
                var $299 = self.value;
                var $300 = _f$4($299);
                var $298 = $300;
                break;
            case 'Maybe.none':
                var $301 = Maybe$none;
                var $298 = $301;
                break;
        };
        return $298;
    };
    const Maybe$bind = x0 => x1 => Maybe$bind$(x0, x1);

    function Maybe$monad$(_new$2) {
        var $302 = _new$2(Maybe$bind)(Maybe$some);
        return $302;
    };
    const Maybe$monad = x0 => Maybe$monad$(x0);

    function Pair$(_A$1, _B$2) {
        var $303 = null;
        return $303;
    };
    const Pair = x0 => x1 => Pair$(x0, x1);
    const Unit$new = null;
    const Bool$or = a0 => a1 => (a0 || a1);

    function Kind$Core$read$spaces$(_code$1) {
        var Kind$Core$read$spaces$ = (_code$1) => ({
            ctr: 'TCO',
            arg: [_code$1]
        });
        var Kind$Core$read$spaces = _code$1 => Kind$Core$read$spaces$(_code$1);
        var arg = [_code$1];
        while (true) {
            let [_code$1] = arg;
            var R = (() => {
                var self = _code$1;
                if (self.length === 0) {
                    var $304 = Pair$new$(_code$1, Unit$new);
                    return $304;
                } else {
                    var $305 = self.charCodeAt(0);
                    var $306 = self.slice(1);
                    var _is_space$4 = (($305 === 32) || (($305 === 10) || (($305 === 13) || (($305 === 9) || (($305 === 11) || (($305 === 12) || Bool$false))))));
                    var self = _is_space$4;
                    if (self) {
                        var $308 = Kind$Core$read$spaces$($306);
                        var $307 = $308;
                    } else {
                        var $309 = Pair$new$(_code$1, Unit$new);
                        var $307 = $309;
                    };
                    return $307;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$read$spaces = x0 => Kind$Core$read$spaces$(x0);

    function Kind$Term$ref$(_name$1) {
        var $310 = ({
            _: 'Kind.Term.ref',
            'name': _name$1
        });
        return $310;
    };
    const Kind$Term$ref = x0 => Kind$Term$ref$(x0);

    function Char$eql$(_a$1, _b$2) {
        var $311 = (_a$1 === _b$2);
        return $311;
    };
    const Char$eql = x0 => x1 => Char$eql$(x0, x1);
    const Kind$Term$typ = ({
        _: 'Kind.Term.typ'
    });

    function Kind$Core$read$is_name$(_chr$1) {
        var $312 = (((_chr$1 >= 46) && (_chr$1 <= 47)) || (((_chr$1 >= 48) && (_chr$1 < 58)) || (((_chr$1 >= 65) && (_chr$1 < 91)) || (((_chr$1 >= 95) && (_chr$1 < 96)) || (((_chr$1 >= 97) && (_chr$1 < 123)) || Bool$false)))));
        return $312;
    };
    const Kind$Core$read$is_name = x0 => Kind$Core$read$is_name$(x0);

    function Kind$Core$read$name$(_code$1) {
        var self = _code$1;
        if (self.length === 0) {
            var $314 = Pair$new$(_code$1, "");
            var $313 = $314;
        } else {
            var $315 = self.charCodeAt(0);
            var $316 = self.slice(1);
            var self = Kind$Core$read$is_name$($315);
            if (self) {
                var self = Kind$Core$read$name$($316);
                switch (self._) {
                    case 'Pair.new':
                        var $319 = self.fst;
                        var $320 = self.snd;
                        var $321 = Pair$new$($319, String$cons$($315, $320));
                        var $318 = $321;
                        break;
                };
                var $317 = $318;
            } else {
                var $322 = Pair$new$(_code$1, "");
                var $317 = $322;
            };
            var $313 = $317;
        };
        return $313;
    };
    const Kind$Core$read$name = x0 => Kind$Core$read$name$(x0);

    function Kind$Core$read$char$(_code$1, _chr$2) {
        var self = Kind$Core$read$spaces$(_code$1);
        switch (self._) {
            case 'Pair.new':
                var $324 = self.fst;
                var self = $324;
                if (self.length === 0) {
                    var $326 = Pair$new$("", Unit$new);
                    var $325 = $326;
                } else {
                    var $327 = self.charCodeAt(0);
                    var $328 = self.slice(1);
                    var self = ($327 === _chr$2);
                    if (self) {
                        var $330 = Pair$new$($328, Unit$new);
                        var $329 = $330;
                    } else {
                        var $331 = Pair$new$("", Unit$new);
                        var $329 = $331;
                    };
                    var $325 = $329;
                };
                var $323 = $325;
                break;
        };
        return $323;
    };
    const Kind$Core$read$char = x0 => x1 => Kind$Core$read$char$(x0, x1);

    function Kind$Term$all$(_eras$1, _self$2, _name$3, _xtyp$4, _body$5) {
        var $332 = ({
            _: 'Kind.Term.all',
            'eras': _eras$1,
            'self': _self$2,
            'name': _name$3,
            'xtyp': _xtyp$4,
            'body': _body$5
        });
        return $332;
    };
    const Kind$Term$all = x0 => x1 => x2 => x3 => x4 => Kind$Term$all$(x0, x1, x2, x3, x4);

    function Kind$Term$lam$(_name$1, _body$2) {
        var $333 = ({
            _: 'Kind.Term.lam',
            'name': _name$1,
            'body': _body$2
        });
        return $333;
    };
    const Kind$Term$lam = x0 => x1 => Kind$Term$lam$(x0, x1);

    function Kind$Term$app$(_func$1, _argm$2) {
        var $334 = ({
            _: 'Kind.Term.app',
            'func': _func$1,
            'argm': _argm$2
        });
        return $334;
    };
    const Kind$Term$app = x0 => x1 => Kind$Term$app$(x0, x1);

    function Kind$Term$let$(_name$1, _expr$2, _body$3) {
        var $335 = ({
            _: 'Kind.Term.let',
            'name': _name$1,
            'expr': _expr$2,
            'body': _body$3
        });
        return $335;
    };
    const Kind$Term$let = x0 => x1 => x2 => Kind$Term$let$(x0, x1, x2);

    function Kind$Term$def$(_name$1, _expr$2, _body$3) {
        var $336 = ({
            _: 'Kind.Term.def',
            'name': _name$1,
            'expr': _expr$2,
            'body': _body$3
        });
        return $336;
    };
    const Kind$Term$def = x0 => x1 => x2 => Kind$Term$def$(x0, x1, x2);

    function Kind$Term$ann$(_done$1, _term$2, _type$3) {
        var $337 = ({
            _: 'Kind.Term.ann',
            'done': _done$1,
            'term': _term$2,
            'type': _type$3
        });
        return $337;
    };
    const Kind$Term$ann = x0 => x1 => x2 => Kind$Term$ann$(x0, x1, x2);

    function String$starts_with$(_xs$1, _match$2) {
        var String$starts_with$ = (_xs$1, _match$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _match$2]
        });
        var String$starts_with = _xs$1 => _match$2 => String$starts_with$(_xs$1, _match$2);
        var arg = [_xs$1, _match$2];
        while (true) {
            let [_xs$1, _match$2] = arg;
            var R = (() => {
                var self = _match$2;
                if (self.length === 0) {
                    var $338 = Bool$true;
                    return $338;
                } else {
                    var $339 = self.charCodeAt(0);
                    var $340 = self.slice(1);
                    var self = _xs$1;
                    if (self.length === 0) {
                        var $342 = Bool$false;
                        var $341 = $342;
                    } else {
                        var $343 = self.charCodeAt(0);
                        var $344 = self.slice(1);
                        var self = Char$eql$($339, $343);
                        if (self) {
                            var $346 = String$starts_with$($344, $340);
                            var $345 = $346;
                        } else {
                            var $347 = Bool$false;
                            var $345 = $347;
                        };
                        var $341 = $345;
                    };
                    return $341;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$starts_with = x0 => x1 => String$starts_with$(x0, x1);

    function String$drop$(_n$1, _xs$2) {
        var String$drop$ = (_n$1, _xs$2) => ({
            ctr: 'TCO',
            arg: [_n$1, _xs$2]
        });
        var String$drop = _n$1 => _xs$2 => String$drop$(_n$1, _xs$2);
        var arg = [_n$1, _xs$2];
        while (true) {
            let [_n$1, _xs$2] = arg;
            var R = (() => {
                var self = _n$1;
                if (self === 0n) {
                    var $348 = _xs$2;
                    return $348;
                } else {
                    var $349 = (self - 1n);
                    var self = _xs$2;
                    if (self.length === 0) {
                        var $351 = String$nil;
                        var $350 = $351;
                    } else {
                        var $352 = self.charCodeAt(0);
                        var $353 = self.slice(1);
                        var $354 = String$drop$($349, $353);
                        var $350 = $354;
                    };
                    return $350;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$drop = x0 => x1 => String$drop$(x0, x1);

    function Char$is_hex$(_chr$1) {
        var $355 = (((_chr$1 >= 48) && (_chr$1 <= 57)) || (((_chr$1 >= 97) && (_chr$1 <= 102)) || (((_chr$1 >= 65) && (_chr$1 <= 70)) || Bool$false)));
        return $355;
    };
    const Char$is_hex = x0 => Char$is_hex$(x0);

    function Word$shift_left$one$go$(_word$2, _prev$3) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $357 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $359 = Word$i$(Word$shift_left$one$go$($357, Bool$false));
                    var $358 = $359;
                } else {
                    var $360 = Word$o$(Word$shift_left$one$go$($357, Bool$false));
                    var $358 = $360;
                };
                var $356 = $358;
                break;
            case 'Word.i':
                var $361 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $363 = Word$i$(Word$shift_left$one$go$($361, Bool$true));
                    var $362 = $363;
                } else {
                    var $364 = Word$o$(Word$shift_left$one$go$($361, Bool$true));
                    var $362 = $364;
                };
                var $356 = $362;
                break;
            case 'Word.e':
                var $365 = Word$e;
                var $356 = $365;
                break;
        };
        return $356;
    };
    const Word$shift_left$one$go = x0 => x1 => Word$shift_left$one$go$(x0, x1);

    function Word$shift_left$one$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $367 = self.pred;
                var $368 = Word$o$(Word$shift_left$one$go$($367, Bool$false));
                var $366 = $368;
                break;
            case 'Word.i':
                var $369 = self.pred;
                var $370 = Word$o$(Word$shift_left$one$go$($369, Bool$true));
                var $366 = $370;
                break;
            case 'Word.e':
                var $371 = Word$e;
                var $366 = $371;
                break;
        };
        return $366;
    };
    const Word$shift_left$one = x0 => Word$shift_left$one$(x0);

    function Word$shift_left$(_n$2, _value$3) {
        var Word$shift_left$ = (_n$2, _value$3) => ({
            ctr: 'TCO',
            arg: [_n$2, _value$3]
        });
        var Word$shift_left = _n$2 => _value$3 => Word$shift_left$(_n$2, _value$3);
        var arg = [_n$2, _value$3];
        while (true) {
            let [_n$2, _value$3] = arg;
            var R = (() => {
                var self = _n$2;
                if (self === 0n) {
                    var $372 = _value$3;
                    return $372;
                } else {
                    var $373 = (self - 1n);
                    var $374 = Word$shift_left$($373, Word$shift_left$one$(_value$3));
                    return $374;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$shift_left = x0 => x1 => Word$shift_left$(x0, x1);

    function Word$mul$go$(_a$3, _b$4, _acc$5) {
        var Word$mul$go$ = (_a$3, _b$4, _acc$5) => ({
            ctr: 'TCO',
            arg: [_a$3, _b$4, _acc$5]
        });
        var Word$mul$go = _a$3 => _b$4 => _acc$5 => Word$mul$go$(_a$3, _b$4, _acc$5);
        var arg = [_a$3, _b$4, _acc$5];
        while (true) {
            let [_a$3, _b$4, _acc$5] = arg;
            var R = (() => {
                var self = _a$3;
                switch (self._) {
                    case 'Word.o':
                        var $375 = self.pred;
                        var $376 = Word$mul$go$($375, Word$shift_left$(1n, _b$4), _acc$5);
                        return $376;
                    case 'Word.i':
                        var $377 = self.pred;
                        var $378 = Word$mul$go$($377, Word$shift_left$(1n, _b$4), Word$add$(_b$4, _acc$5));
                        return $378;
                    case 'Word.e':
                        var $379 = _acc$5;
                        return $379;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$mul$go = x0 => x1 => x2 => Word$mul$go$(x0, x1, x2);

    function Word$to_zero$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $381 = self.pred;
                var $382 = Word$o$(Word$to_zero$($381));
                var $380 = $382;
                break;
            case 'Word.i':
                var $383 = self.pred;
                var $384 = Word$o$(Word$to_zero$($383));
                var $380 = $384;
                break;
            case 'Word.e':
                var $385 = Word$e;
                var $380 = $385;
                break;
        };
        return $380;
    };
    const Word$to_zero = x0 => Word$to_zero$(x0);

    function Word$mul$(_a$2, _b$3) {
        var $386 = Word$mul$go$(_a$2, _b$3, Word$to_zero$(_a$2));
        return $386;
    };
    const Word$mul = x0 => x1 => Word$mul$(x0, x1);
    const U16$mul = a0 => a1 => ((a0 * a1) & 0xFFFF);
    const U16$inc = a0 => ((a0 + 1) & 0xFFFF);

    function Word$subber$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $388 = self.pred;
                var $389 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $391 = self.pred;
                            var $392 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $394 = Word$i$(Word$subber$(_a$pred$10, $391, Bool$true));
                                    var $393 = $394;
                                } else {
                                    var $395 = Word$o$(Word$subber$(_a$pred$10, $391, Bool$false));
                                    var $393 = $395;
                                };
                                return $393;
                            });
                            var $390 = $392;
                            break;
                        case 'Word.i':
                            var $396 = self.pred;
                            var $397 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $399 = Word$o$(Word$subber$(_a$pred$10, $396, Bool$true));
                                    var $398 = $399;
                                } else {
                                    var $400 = Word$i$(Word$subber$(_a$pred$10, $396, Bool$true));
                                    var $398 = $400;
                                };
                                return $398;
                            });
                            var $390 = $397;
                            break;
                        case 'Word.e':
                            var $401 = (_a$pred$8 => {
                                var $402 = Word$e;
                                return $402;
                            });
                            var $390 = $401;
                            break;
                    };
                    var $390 = $390($388);
                    return $390;
                });
                var $387 = $389;
                break;
            case 'Word.i':
                var $403 = self.pred;
                var $404 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $406 = self.pred;
                            var $407 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $409 = Word$o$(Word$subber$(_a$pred$10, $406, Bool$false));
                                    var $408 = $409;
                                } else {
                                    var $410 = Word$i$(Word$subber$(_a$pred$10, $406, Bool$false));
                                    var $408 = $410;
                                };
                                return $408;
                            });
                            var $405 = $407;
                            break;
                        case 'Word.i':
                            var $411 = self.pred;
                            var $412 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $414 = Word$i$(Word$subber$(_a$pred$10, $411, Bool$true));
                                    var $413 = $414;
                                } else {
                                    var $415 = Word$o$(Word$subber$(_a$pred$10, $411, Bool$false));
                                    var $413 = $415;
                                };
                                return $413;
                            });
                            var $405 = $412;
                            break;
                        case 'Word.e':
                            var $416 = (_a$pred$8 => {
                                var $417 = Word$e;
                                return $417;
                            });
                            var $405 = $416;
                            break;
                    };
                    var $405 = $405($403);
                    return $405;
                });
                var $387 = $404;
                break;
            case 'Word.e':
                var $418 = (_b$5 => {
                    var $419 = Word$e;
                    return $419;
                });
                var $387 = $418;
                break;
        };
        var $387 = $387(_b$3);
        return $387;
    };
    const Word$subber = x0 => x1 => x2 => Word$subber$(x0, x1, x2);

    function Word$sub$(_a$2, _b$3) {
        var $420 = Word$subber$(_a$2, _b$3, Bool$false);
        return $420;
    };
    const Word$sub = x0 => x1 => Word$sub$(x0, x1);
    const U16$sub = a0 => a1 => ((a0 - a1) & 0xFFFF);
    const U16$zero = U16$new$(Word$zero$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$zero))))))))))))))))));

    function Char$hex_value16$(_chr$1) {
        var self = ((_chr$1 >= 48) && (_chr$1 <= 57));
        if (self) {
            var $422 = ((_chr$1 - 48) & 0xFFFF);
            var $421 = $422;
        } else {
            var self = ((_chr$1 >= 97) && (_chr$1 <= 102));
            if (self) {
                var $424 = (_x0$2 => {
                    var $425 = ((((((((((((((((((((_x0$2 + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF);
                    return $425;
                })(((_chr$1 - 97) & 0xFFFF));
                var $423 = $424;
            } else {
                var self = ((_chr$1 >= 65) && (_chr$1 <= 70));
                if (self) {
                    var $427 = (_x0$2 => {
                        var $428 = ((((((((((((((((((((_x0$2 + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF);
                        return $428;
                    })(((_chr$1 - 65) & 0xFFFF));
                    var $426 = $427;
                } else {
                    var $429 = U16$zero;
                    var $426 = $429;
                };
                var $423 = $426;
            };
            var $421 = $423;
        };
        return $421;
    };
    const Char$hex_value16 = x0 => Char$hex_value16$(x0);

    function Kind$Core$read$u16$(_code$1, _u16$2) {
        var Kind$Core$read$u16$ = (_code$1, _u16$2) => ({
            ctr: 'TCO',
            arg: [_code$1, _u16$2]
        });
        var Kind$Core$read$u16 = _code$1 => _u16$2 => Kind$Core$read$u16$(_code$1, _u16$2);
        var arg = [_code$1, _u16$2];
        while (true) {
            let [_code$1, _u16$2] = arg;
            var R = (() => {
                var self = _code$1;
                if (self.length === 0) {
                    var $430 = Pair$new$(_code$1, _u16$2);
                    return $430;
                } else {
                    var $431 = self.charCodeAt(0);
                    var $432 = self.slice(1);
                    var self = Char$is_hex$($431);
                    if (self) {
                        var _u16$5 = ((((_u16$2 * 16) & 0xFFFF) + Char$hex_value16$($431)) & 0xFFFF);
                        var $434 = Kind$Core$read$u16$($432, _u16$5);
                        var $433 = $434;
                    } else {
                        var $435 = Pair$new$(_code$1, _u16$2);
                        var $433 = $435;
                    };
                    return $433;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$read$u16 = x0 => x1 => Kind$Core$read$u16$(x0, x1);

    function Kind$Core$read$chrx$(_code$1) {
        var self = String$starts_with$(_code$1, "\\u{");
        if (self) {
            var _code$2 = String$drop$(3n, _code$1);
            var self = Kind$Core$read$u16$(_code$2, 0);
            switch (self._) {
                case 'Pair.new':
                    var $438 = self.fst;
                    var $439 = self.snd;
                    var self = String$starts_with$($438, "}");
                    if (self) {
                        var $441 = Pair$new$(String$drop$(1n, $438), $439);
                        var $440 = $441;
                    } else {
                        var $442 = Pair$new$("", 63);
                        var $440 = $442;
                    };
                    var $437 = $440;
                    break;
            };
            var $436 = $437;
        } else {
            var self = String$starts_with$(_code$1, "\\\'");
            if (self) {
                var $444 = Pair$new$(String$drop$(2n, _code$1), 39);
                var $443 = $444;
            } else {
                var self = String$starts_with$(_code$1, "\\\"");
                if (self) {
                    var $446 = Pair$new$(String$drop$(2n, _code$1), 34);
                    var $445 = $446;
                } else {
                    var self = String$starts_with$(_code$1, "\\\\");
                    if (self) {
                        var $448 = Pair$new$(String$drop$(2n, _code$1), 92);
                        var $447 = $448;
                    } else {
                        var self = _code$1;
                        if (self.length === 0) {
                            var $450 = Pair$new$("", 63);
                            var $449 = $450;
                        } else {
                            var $451 = self.charCodeAt(0);
                            var $452 = self.slice(1);
                            var $453 = Pair$new$($452, $451);
                            var $449 = $453;
                        };
                        var $447 = $449;
                    };
                    var $445 = $447;
                };
                var $443 = $445;
            };
            var $436 = $443;
        };
        return $436;
    };
    const Kind$Core$read$chrx = x0 => Kind$Core$read$chrx$(x0);

    function Kind$Term$chr$(_chrx$1) {
        var $454 = ({
            _: 'Kind.Term.chr',
            'chrx': _chrx$1
        });
        return $454;
    };
    const Kind$Term$chr = x0 => Kind$Term$chr$(x0);

    function Kind$Core$read$strx$(_code$1) {
        var self = String$starts_with$(_code$1, "\"");
        if (self) {
            var $456 = Pair$new$(_code$1, "");
            var $455 = $456;
        } else {
            var self = Kind$Core$read$chrx$(_code$1);
            switch (self._) {
                case 'Pair.new':
                    var $458 = self.fst;
                    var $459 = self.snd;
                    var self = Kind$Core$read$strx$($458);
                    switch (self._) {
                        case 'Pair.new':
                            var $461 = self.fst;
                            var $462 = self.snd;
                            var $463 = Pair$new$($461, String$cons$($459, $462));
                            var $460 = $463;
                            break;
                    };
                    var $457 = $460;
                    break;
            };
            var $455 = $457;
        };
        return $455;
    };
    const Kind$Core$read$strx = x0 => Kind$Core$read$strx$(x0);

    function Kind$Term$str$(_strx$1) {
        var $464 = ({
            _: 'Kind.Term.str',
            'strx': _strx$1
        });
        return $464;
    };
    const Kind$Term$str = x0 => Kind$Term$str$(x0);

    function Char$dec_value$(_chr$1) {
        var self = (_chr$1 === 48);
        if (self) {
            var $466 = 0n;
            var $465 = $466;
        } else {
            var self = (_chr$1 === 49);
            if (self) {
                var $468 = 1n;
                var $467 = $468;
            } else {
                var self = (_chr$1 === 50);
                if (self) {
                    var $470 = 2n;
                    var $469 = $470;
                } else {
                    var self = (_chr$1 === 51);
                    if (self) {
                        var $472 = 3n;
                        var $471 = $472;
                    } else {
                        var self = (_chr$1 === 52);
                        if (self) {
                            var $474 = 4n;
                            var $473 = $474;
                        } else {
                            var self = (_chr$1 === 53);
                            if (self) {
                                var $476 = 5n;
                                var $475 = $476;
                            } else {
                                var self = (_chr$1 === 54);
                                if (self) {
                                    var $478 = 6n;
                                    var $477 = $478;
                                } else {
                                    var self = (_chr$1 === 55);
                                    if (self) {
                                        var $480 = 7n;
                                        var $479 = $480;
                                    } else {
                                        var self = (_chr$1 === 56);
                                        if (self) {
                                            var $482 = 8n;
                                            var $481 = $482;
                                        } else {
                                            var self = (_chr$1 === 57);
                                            if (self) {
                                                var $484 = 9n;
                                                var $483 = $484;
                                            } else {
                                                var $485 = 0n;
                                                var $483 = $485;
                                            };
                                            var $481 = $483;
                                        };
                                        var $479 = $481;
                                    };
                                    var $477 = $479;
                                };
                                var $475 = $477;
                            };
                            var $473 = $475;
                        };
                        var $471 = $473;
                    };
                    var $469 = $471;
                };
                var $467 = $469;
            };
            var $465 = $467;
        };
        return $465;
    };
    const Char$dec_value = x0 => Char$dec_value$(x0);

    function Kind$Core$read$natx$(_code$1, _nat$2) {
        var Kind$Core$read$natx$ = (_code$1, _nat$2) => ({
            ctr: 'TCO',
            arg: [_code$1, _nat$2]
        });
        var Kind$Core$read$natx = _code$1 => _nat$2 => Kind$Core$read$natx$(_code$1, _nat$2);
        var arg = [_code$1, _nat$2];
        while (true) {
            let [_code$1, _nat$2] = arg;
            var R = (() => {
                var self = _code$1;
                if (self.length === 0) {
                    var $486 = Pair$new$(_code$1, _nat$2);
                    return $486;
                } else {
                    var $487 = self.charCodeAt(0);
                    var $488 = self.slice(1);
                    var self = Char$is_hex$($487);
                    if (self) {
                        var _nat$5 = ((_nat$2 * 10n) + Char$dec_value$($487));
                        var $490 = Kind$Core$read$natx$($488, _nat$5);
                        var $489 = $490;
                    } else {
                        var $491 = Pair$new$(_code$1, _nat$2);
                        var $489 = $491;
                    };
                    return $489;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$read$natx = x0 => x1 => Kind$Core$read$natx$(x0, x1);

    function Kind$Term$nat$(_natx$1) {
        var $492 = ({
            _: 'Kind.Term.nat',
            'natx': _natx$1
        });
        return $492;
    };
    const Kind$Term$nat = x0 => Kind$Term$nat$(x0);

    function Pair$fst$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $494 = self.fst;
                var $495 = $494;
                var $493 = $495;
                break;
        };
        return $493;
    };
    const Pair$fst = x0 => Pair$fst$(x0);
    const Nat$eql = a0 => a1 => (a0 === a1);

    function Nat$pred$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $497 = Nat$zero;
            var $496 = $497;
        } else {
            var $498 = (self - 1n);
            var $499 = $498;
            var $496 = $499;
        };
        return $496;
    };
    const Nat$pred = x0 => Nat$pred$(x0);

    function Kind$Core$read$find$(_list$2, _cond$3, _indx$4, _skip$5) {
        var Kind$Core$read$find$ = (_list$2, _cond$3, _indx$4, _skip$5) => ({
            ctr: 'TCO',
            arg: [_list$2, _cond$3, _indx$4, _skip$5]
        });
        var Kind$Core$read$find = _list$2 => _cond$3 => _indx$4 => _skip$5 => Kind$Core$read$find$(_list$2, _cond$3, _indx$4, _skip$5);
        var arg = [_list$2, _cond$3, _indx$4, _skip$5];
        while (true) {
            let [_list$2, _cond$3, _indx$4, _skip$5] = arg;
            var R = (() => {
                var self = _list$2;
                switch (self._) {
                    case 'List.cons':
                        var $500 = self.head;
                        var $501 = self.tail;
                        var self = _cond$3($500)(_indx$4);
                        if (self) {
                            var self = (_skip$5 === 0n);
                            if (self) {
                                var $504 = Maybe$some$(Pair$new$($500, _indx$4));
                                var $503 = $504;
                            } else {
                                var $505 = Kind$Core$read$find$($501, _cond$3, Nat$succ$(_indx$4), Nat$pred$(_skip$5));
                                var $503 = $505;
                            };
                            var $502 = $503;
                        } else {
                            var $506 = Kind$Core$read$find$($501, _cond$3, Nat$succ$(_indx$4), _skip$5);
                            var $502 = $506;
                        };
                        return $502;
                    case 'List.nil':
                        var $507 = Maybe$none;
                        return $507;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$read$find = x0 => x1 => x2 => x3 => Kind$Core$read$find$(x0, x1, x2, x3);

    function Pair$snd$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $509 = self.snd;
                var $510 = $509;
                var $508 = $510;
                break;
        };
        return $508;
    };
    const Pair$snd = x0 => Pair$snd$(x0);

    function Kind$Core$read$term$(_code$1) {
        var self = Kind$Core$read$spaces$(_code$1);
        switch (self._) {
            case 'Pair.new':
                var $512 = self.fst;
                var self = $512;
                if (self.length === 0) {
                    var $514 = Pair$new$("", (_ctx$4 => {
                        var $515 = Kind$Term$ref$("error");
                        return $515;
                    }));
                    var $513 = $514;
                } else {
                    var $516 = self.charCodeAt(0);
                    var $517 = self.slice(1);
                    var _head$6 = $516;
                    var _code$7 = $517;
                    var self = Char$eql$(_head$6, 42);
                    if (self) {
                        var $519 = Pair$new$(_code$7, (_ctx$8 => {
                            var $520 = Kind$Term$typ;
                            return $520;
                        }));
                        var $518 = $519;
                    } else {
                        var self = (_head$6 === 64);
                        if (self) {
                            var self = Kind$Core$read$name$(_code$7);
                            switch (self._) {
                                case 'Pair.new':
                                    var $523 = self.fst;
                                    var $524 = self.snd;
                                    var self = Kind$Core$read$char$($523, 40);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $526 = self.fst;
                                            var self = Kind$Core$read$name$($526);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $528 = self.fst;
                                                    var $529 = self.snd;
                                                    var self = Kind$Core$read$char$($528, 58);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $531 = self.fst;
                                                            var self = Kind$Core$read$term$($531);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $533 = self.fst;
                                                                    var $534 = self.snd;
                                                                    var self = Kind$Core$read$char$($533, 41);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $536 = self.fst;
                                                                            var self = Kind$Core$read$term$($536);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $538 = self.fst;
                                                                                    var $539 = self.snd;
                                                                                    var $540 = Pair$new$($538, (_ctx$22 => {
                                                                                        var $541 = Kind$Term$all$(Bool$false, $524, $529, $534(_ctx$22), (_s$23 => _x$24 => {
                                                                                            var $542 = $539(List$cons$(Pair$new$($529, _x$24), List$cons$(Pair$new$($524, _s$23), _ctx$22)));
                                                                                            return $542;
                                                                                        }));
                                                                                        return $541;
                                                                                    }));
                                                                                    var $537 = $540;
                                                                                    break;
                                                                            };
                                                                            var $535 = $537;
                                                                            break;
                                                                    };
                                                                    var $532 = $535;
                                                                    break;
                                                            };
                                                            var $530 = $532;
                                                            break;
                                                    };
                                                    var $527 = $530;
                                                    break;
                                            };
                                            var $525 = $527;
                                            break;
                                    };
                                    var $522 = $525;
                                    break;
                            };
                            var $521 = $522;
                        } else {
                            var self = (_head$6 === 37);
                            if (self) {
                                var self = Kind$Core$read$name$(_code$7);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $545 = self.fst;
                                        var $546 = self.snd;
                                        var self = Kind$Core$read$char$($545, 40);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $548 = self.fst;
                                                var self = Kind$Core$read$name$($548);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $550 = self.fst;
                                                        var $551 = self.snd;
                                                        var self = Kind$Core$read$char$($550, 58);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $553 = self.fst;
                                                                var self = Kind$Core$read$term$($553);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $555 = self.fst;
                                                                        var $556 = self.snd;
                                                                        var self = Kind$Core$read$char$($555, 41);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $558 = self.fst;
                                                                                var self = Kind$Core$read$term$($558);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $560 = self.fst;
                                                                                        var $561 = self.snd;
                                                                                        var $562 = Pair$new$($560, (_ctx$22 => {
                                                                                            var $563 = Kind$Term$all$(Bool$true, $546, $551, $556(_ctx$22), (_s$23 => _x$24 => {
                                                                                                var $564 = $561(List$cons$(Pair$new$($551, _x$24), List$cons$(Pair$new$($546, _s$23), _ctx$22)));
                                                                                                return $564;
                                                                                            }));
                                                                                            return $563;
                                                                                        }));
                                                                                        var $559 = $562;
                                                                                        break;
                                                                                };
                                                                                var $557 = $559;
                                                                                break;
                                                                        };
                                                                        var $554 = $557;
                                                                        break;
                                                                };
                                                                var $552 = $554;
                                                                break;
                                                        };
                                                        var $549 = $552;
                                                        break;
                                                };
                                                var $547 = $549;
                                                break;
                                        };
                                        var $544 = $547;
                                        break;
                                };
                                var $543 = $544;
                            } else {
                                var self = (_head$6 === 35);
                                if (self) {
                                    var self = Kind$Core$read$name$(_code$7);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $567 = self.fst;
                                            var $568 = self.snd;
                                            var self = Kind$Core$read$term$($567);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $570 = self.fst;
                                                    var $571 = self.snd;
                                                    var $572 = Pair$new$($570, (_ctx$12 => {
                                                        var $573 = Kind$Term$lam$($568, (_x$13 => {
                                                            var $574 = $571(List$cons$(Pair$new$($568, _x$13), _ctx$12));
                                                            return $574;
                                                        }));
                                                        return $573;
                                                    }));
                                                    var $569 = $572;
                                                    break;
                                            };
                                            var $566 = $569;
                                            break;
                                    };
                                    var $565 = $566;
                                } else {
                                    var self = (_head$6 === 40);
                                    if (self) {
                                        var self = Kind$Core$read$term$(_code$7);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $577 = self.fst;
                                                var $578 = self.snd;
                                                var self = Kind$Core$read$term$($577);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $580 = self.fst;
                                                        var $581 = self.snd;
                                                        var self = Kind$Core$read$char$($580, 41);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $583 = self.fst;
                                                                var $584 = Pair$new$($583, (_ctx$14 => {
                                                                    var $585 = Kind$Term$app$($578(_ctx$14), $581(_ctx$14));
                                                                    return $585;
                                                                }));
                                                                var $582 = $584;
                                                                break;
                                                        };
                                                        var $579 = $582;
                                                        break;
                                                };
                                                var $576 = $579;
                                                break;
                                        };
                                        var $575 = $576;
                                    } else {
                                        var self = (_head$6 === 33);
                                        if (self) {
                                            var self = Kind$Core$read$name$(_code$7);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $588 = self.fst;
                                                    var $589 = self.snd;
                                                    var self = Kind$Core$read$char$($588, 61);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $591 = self.fst;
                                                            var self = Kind$Core$read$term$($591);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $593 = self.fst;
                                                                    var $594 = self.snd;
                                                                    var self = Kind$Core$read$char$($593, 59);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $596 = self.fst;
                                                                            var self = Kind$Core$read$term$($596);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $598 = self.fst;
                                                                                    var $599 = self.snd;
                                                                                    var $600 = Pair$new$($598, (_ctx$18 => {
                                                                                        var $601 = Kind$Term$let$($589, $594(_ctx$18), (_x$19 => {
                                                                                            var $602 = $599(List$cons$(Pair$new$($589, _x$19), _ctx$18));
                                                                                            return $602;
                                                                                        }));
                                                                                        return $601;
                                                                                    }));
                                                                                    var $597 = $600;
                                                                                    break;
                                                                            };
                                                                            var $595 = $597;
                                                                            break;
                                                                    };
                                                                    var $592 = $595;
                                                                    break;
                                                            };
                                                            var $590 = $592;
                                                            break;
                                                    };
                                                    var $587 = $590;
                                                    break;
                                            };
                                            var $586 = $587;
                                        } else {
                                            var self = (_head$6 === 36);
                                            if (self) {
                                                var self = Kind$Core$read$name$(_code$7);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $605 = self.fst;
                                                        var $606 = self.snd;
                                                        var self = Kind$Core$read$char$($605, 61);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $608 = self.fst;
                                                                var self = Kind$Core$read$term$($608);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $610 = self.fst;
                                                                        var $611 = self.snd;
                                                                        var self = Kind$Core$read$char$($610, 59);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $613 = self.fst;
                                                                                var self = Kind$Core$read$term$($613);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $615 = self.fst;
                                                                                        var $616 = self.snd;
                                                                                        var $617 = Pair$new$($615, (_ctx$18 => {
                                                                                            var $618 = Kind$Term$def$($606, $611(_ctx$18), (_x$19 => {
                                                                                                var $619 = $616(List$cons$(Pair$new$($606, _x$19), _ctx$18));
                                                                                                return $619;
                                                                                            }));
                                                                                            return $618;
                                                                                        }));
                                                                                        var $614 = $617;
                                                                                        break;
                                                                                };
                                                                                var $612 = $614;
                                                                                break;
                                                                        };
                                                                        var $609 = $612;
                                                                        break;
                                                                };
                                                                var $607 = $609;
                                                                break;
                                                        };
                                                        var $604 = $607;
                                                        break;
                                                };
                                                var $603 = $604;
                                            } else {
                                                var self = (_head$6 === 123);
                                                if (self) {
                                                    var self = Kind$Core$read$term$(_code$7);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $622 = self.fst;
                                                            var $623 = self.snd;
                                                            var self = Kind$Core$read$char$($622, 58);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $625 = self.fst;
                                                                    var self = Kind$Core$read$term$($625);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $627 = self.fst;
                                                                            var $628 = self.snd;
                                                                            var self = Kind$Core$read$char$($627, 125);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $630 = self.fst;
                                                                                    var $631 = Pair$new$($630, (_ctx$16 => {
                                                                                        var $632 = Kind$Term$ann$(Bool$false, $623(_ctx$16), $628(_ctx$16));
                                                                                        return $632;
                                                                                    }));
                                                                                    var $629 = $631;
                                                                                    break;
                                                                            };
                                                                            var $626 = $629;
                                                                            break;
                                                                    };
                                                                    var $624 = $626;
                                                                    break;
                                                            };
                                                            var $621 = $624;
                                                            break;
                                                    };
                                                    var $620 = $621;
                                                } else {
                                                    var self = (_head$6 === 39);
                                                    if (self) {
                                                        var self = Kind$Core$read$chrx$(_code$7);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $635 = self.fst;
                                                                var $636 = self.snd;
                                                                var self = Kind$Core$read$char$($635, 39);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $638 = self.fst;
                                                                        var $639 = Pair$new$($638, (_ctx$12 => {
                                                                            var $640 = Kind$Term$chr$($636);
                                                                            return $640;
                                                                        }));
                                                                        var $637 = $639;
                                                                        break;
                                                                };
                                                                var $634 = $637;
                                                                break;
                                                        };
                                                        var $633 = $634;
                                                    } else {
                                                        var self = (_head$6 === 34);
                                                        if (self) {
                                                            var self = Kind$Core$read$strx$(_code$7);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $643 = self.fst;
                                                                    var $644 = self.snd;
                                                                    var self = Kind$Core$read$char$($643, 34);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $646 = self.fst;
                                                                            var $647 = Pair$new$($646, (_ctx$12 => {
                                                                                var $648 = Kind$Term$str$($644);
                                                                                return $648;
                                                                            }));
                                                                            var $645 = $647;
                                                                            break;
                                                                    };
                                                                    var $642 = $645;
                                                                    break;
                                                            };
                                                            var $641 = $642;
                                                        } else {
                                                            var self = (_head$6 === 43);
                                                            if (self) {
                                                                var self = Kind$Core$read$natx$(_code$7, 0n);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $651 = self.fst;
                                                                        var $652 = self.snd;
                                                                        var $653 = Pair$new$($651, (_ctx$10 => {
                                                                            var $654 = Kind$Term$nat$($652);
                                                                            return $654;
                                                                        }));
                                                                        var $650 = $653;
                                                                        break;
                                                                };
                                                                var $649 = $650;
                                                            } else {
                                                                var self = Kind$Core$read$is_name$(_head$6);
                                                                if (self) {
                                                                    var self = Kind$Core$read$name$(_code$7);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $657 = self.fst;
                                                                            var $658 = self.snd;
                                                                            var _name$10 = String$cons$(_head$6, $658);
                                                                            var self = $657;
                                                                            if (self.length === 0) {
                                                                                var $660 = Pair$new$("", 0n);
                                                                                var self = $660;
                                                                            } else {
                                                                                var $661 = self.charCodeAt(0);
                                                                                var $662 = self.slice(1);
                                                                                var self = ($661 === 94);
                                                                                if (self) {
                                                                                    var $664 = Kind$Core$read$natx$($662, 0n);
                                                                                    var $663 = $664;
                                                                                } else {
                                                                                    var $665 = Pair$new$($657, 0n);
                                                                                    var $663 = $665;
                                                                                };
                                                                                var self = $663;
                                                                            };
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $666 = self.fst;
                                                                                    var $667 = self.snd;
                                                                                    var $668 = Pair$new$($666, (_ctx$13 => {
                                                                                        var _got$14 = Kind$Core$read$find$(_ctx$13, (_x$14 => _i$15 => {
                                                                                            var $670 = (Pair$fst$(_x$14) === _name$10);
                                                                                            return $670;
                                                                                        }), 0n, $667);
                                                                                        var self = _got$14;
                                                                                        switch (self._) {
                                                                                            case 'Maybe.some':
                                                                                                var $671 = self.value;
                                                                                                var $672 = Pair$snd$(Pair$fst$($671));
                                                                                                var $669 = $672;
                                                                                                break;
                                                                                            case 'Maybe.none':
                                                                                                var $673 = Kind$Term$ref$(_name$10);
                                                                                                var $669 = $673;
                                                                                                break;
                                                                                        };
                                                                                        return $669;
                                                                                    }));
                                                                                    var $659 = $668;
                                                                                    break;
                                                                            };
                                                                            var $656 = $659;
                                                                            break;
                                                                    };
                                                                    var $655 = $656;
                                                                } else {
                                                                    var $674 = Pair$new$("", (_ctx$8 => {
                                                                        var $675 = Kind$Term$ref$("error");
                                                                        return $675;
                                                                    }));
                                                                    var $655 = $674;
                                                                };
                                                                var $649 = $655;
                                                            };
                                                            var $641 = $649;
                                                        };
                                                        var $633 = $641;
                                                    };
                                                    var $620 = $633;
                                                };
                                                var $603 = $620;
                                            };
                                            var $586 = $603;
                                        };
                                        var $575 = $586;
                                    };
                                    var $565 = $575;
                                };
                                var $543 = $565;
                            };
                            var $521 = $543;
                        };
                        var $518 = $521;
                    };
                    var $513 = $518;
                };
                var $511 = $513;
                break;
        };
        return $511;
    };
    const Kind$Core$read$term = x0 => Kind$Core$read$term$(x0);

    function Kind$Core$read$(_code$1) {
        var self = Kind$Core$read$term$((_code$1 + ";"));
        switch (self._) {
            case 'Pair.new':
                var $677 = self.fst;
                var $678 = self.snd;
                var self = $677;
                if (self.length === 0) {
                    var $680 = Maybe$none;
                    var $679 = $680;
                } else {
                    var $681 = self.charCodeAt(0);
                    var $682 = self.slice(1);
                    var $683 = Maybe$some$($678(List$nil));
                    var $679 = $683;
                };
                var $676 = $679;
                break;
        };
        return $676;
    };
    const Kind$Core$read = x0 => Kind$Core$read$(x0);

    function Bool$read$(_code$1) {
        var self = (_code$1 === "Bool.true");
        if (self) {
            var $685 = Maybe$some$(Bool$true);
            var $684 = $685;
        } else {
            var self = (_code$1 === "Bool.false");
            if (self) {
                var $687 = Maybe$some$(Bool$false);
                var $686 = $687;
            } else {
                var $688 = Maybe$none;
                var $686 = $688;
            };
            var $684 = $686;
        };
        return $684;
    };
    const Bool$read = x0 => Bool$read$(x0);

    function Kind$Status$done$(_cached$1) {
        var $689 = ({
            _: 'Kind.Status.done',
            'cached': _cached$1
        });
        return $689;
    };
    const Kind$Status$done = x0 => Kind$Status$done$(x0);

    function Kind$Def$new$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _stat$9) {
        var $690 = ({
            _: 'Kind.Def.new',
            'file': _file$1,
            'code': _code$2,
            'orig': _orig$3,
            'name': _name$4,
            'term': _term$5,
            'type': _type$6,
            'isct': _isct$7,
            'arit': _arit$8,
            'stat': _stat$9
        });
        return $690;
    };
    const Kind$Def$new = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Def$new$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Synth$load$cached$def$(_name$1) {
        var $691 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $692 = _m$bind$2;
            return $692;
        }))(IO$get_file$(String$to_lower$((".cache/" + (_name$1 + ".file")))))((_cache_file$2 => {
            var self = (!String$is_empty$(_cache_file$2));
            if (self) {
                var $694 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $695 = _m$bind$3;
                    return $695;
                }))(IO$get_file$(String$to_lower$((".cache/" + (_name$1 + ".time")))))((_cache_time$3 => {
                    var $696 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $697 = _m$bind$4;
                        return $697;
                    }))(IO$get_file_mtime$(_cache_file$2))((_cache_file_time$4 => {
                        var self = (_cache_time$3 === _cache_file_time$4);
                        if (self) {
                            var $699 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                                var $700 = _m$bind$5;
                                return $700;
                            }))(IO$get_file$(String$to_lower$((".cache/" + (_name$1 + ".term")))))((_cache_term$5 => {
                                var $701 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                                    var $702 = _m$bind$6;
                                    return $702;
                                }))(IO$get_file$(String$to_lower$((".cache/" + (_name$1 + ".type")))))((_cache_type$6 => {
                                    var $703 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                                        var $704 = _m$bind$7;
                                        return $704;
                                    }))(IO$get_file$(String$to_lower$((".cache/" + (_name$1 + ".isct")))))((_cache_isct$7 => {
                                        var $705 = IO$monad$((_m$bind$8 => _m$pure$9 => {
                                            var $706 = _m$bind$8;
                                            return $706;
                                        }))(IO$get_file$(String$to_lower$((".cache/" + (_name$1 + ".arit")))))((_cache_arit$8 => {
                                            var $707 = IO$monad$((_m$bind$9 => _m$pure$10 => {
                                                var $708 = _m$pure$10;
                                                return $708;
                                            }))((() => {
                                                var _file$9 = _cache_file$2;
                                                var _code$10 = "<cached>";
                                                var _orig$11 = Pair$new$(0n, 0n);
                                                var $709 = Maybe$monad$((_m$bind$12 => _m$pure$13 => {
                                                    var $710 = _m$bind$12;
                                                    return $710;
                                                }))(Kind$Core$read$(_cache_term$5))((_term$12 => {
                                                    var $711 = Maybe$monad$((_m$bind$13 => _m$pure$14 => {
                                                        var $712 = _m$bind$13;
                                                        return $712;
                                                    }))(Kind$Core$read$(_cache_type$6))((_type$13 => {
                                                        var $713 = Maybe$monad$((_m$bind$14 => _m$pure$15 => {
                                                            var $714 = _m$bind$14;
                                                            return $714;
                                                        }))(Bool$read$(_cache_isct$7))((_isct$14 => {
                                                            var $715 = Maybe$monad$((_m$bind$15 => _m$pure$16 => {
                                                                var $716 = _m$bind$15;
                                                                return $716;
                                                            }))(Maybe$some$((BigInt(_cache_arit$8))))((_arit$15 => {
                                                                var _stat$16 = Kind$Status$done$(Bool$true);
                                                                var $717 = Maybe$monad$((_m$bind$17 => _m$pure$18 => {
                                                                    var $718 = _m$pure$18;
                                                                    return $718;
                                                                }))(Kind$Def$new$(_file$9, _code$10, _orig$11, _name$1, _term$12, _type$13, _isct$14, _arit$15, _stat$16));
                                                                return $717;
                                                            }));
                                                            return $715;
                                                        }));
                                                        return $713;
                                                    }));
                                                    return $711;
                                                }));
                                                return $709;
                                            })());
                                            return $707;
                                        }));
                                        return $705;
                                    }));
                                    return $703;
                                }));
                                return $701;
                            }));
                            var $698 = $699;
                        } else {
                            var $719 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                                var $720 = _m$pure$6;
                                return $720;
                            }))(Maybe$none);
                            var $698 = $719;
                        };
                        return $698;
                    }));
                    return $696;
                }));
                var $693 = $694;
            } else {
                var $721 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $722 = _m$pure$4;
                    return $722;
                }))(Maybe$none);
                var $693 = $721;
            };
            return $693;
        }));
        return $691;
    };
    const Kind$Synth$load$cached$def = x0 => Kind$Synth$load$cached$def$(x0);

    function BitsMap$tie$(_val$2, _lft$3, _rgt$4) {
        var $723 = ({
            _: 'BitsMap.tie',
            'val': _val$2,
            'lft': _lft$3,
            'rgt': _rgt$4
        });
        return $723;
    };
    const BitsMap$tie = x0 => x1 => x2 => BitsMap$tie$(x0, x1, x2);
    const BitsMap$new = ({
        _: 'BitsMap.new'
    });
    const BitsMap$set = a0 => a1 => a2 => (bitsmap_set(a0, a1, a2, 'set'));

    function Kind$Map$set$(_name$2, _val$3, _map$4) {
        var $724 = (bitsmap_set((kind_name_to_bits(_name$2)), _val$3, _map$4, 'set'));
        return $724;
    };
    const Kind$Map$set = x0 => x1 => x2 => Kind$Map$set$(x0, x1, x2);
    const Kind$Map$new = BitsMap$new;
    const Kind$Map = null;

    function Kind$Core$dependencies$go$(_term$1, _deps$2) {
        var _nil$3 = Kind$Term$typ;
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $726 = self.name;
                var $727 = Kind$Map$set$($726, Unit$new, _deps$2);
                var $725 = $727;
                break;
            case 'Kind.Term.all':
                var $728 = self.xtyp;
                var $729 = self.body;
                var _deps$9 = Kind$Core$dependencies$go$($728, _deps$2);
                var _deps$10 = Kind$Core$dependencies$go$($729(_nil$3)(_nil$3), _deps$9);
                var $730 = _deps$10;
                var $725 = $730;
                break;
            case 'Kind.Term.lam':
                var $731 = self.body;
                var _deps$6 = Kind$Core$dependencies$go$($731(_nil$3), _deps$2);
                var $732 = _deps$6;
                var $725 = $732;
                break;
            case 'Kind.Term.app':
                var $733 = self.func;
                var $734 = self.argm;
                var _deps$6 = Kind$Core$dependencies$go$($733, _deps$2);
                var _deps$7 = Kind$Core$dependencies$go$($734, _deps$6);
                var $735 = _deps$7;
                var $725 = $735;
                break;
            case 'Kind.Term.let':
                var $736 = self.expr;
                var $737 = self.body;
                var _deps$7 = Kind$Core$dependencies$go$($736, _deps$2);
                var _deps$8 = Kind$Core$dependencies$go$($737(_nil$3), _deps$7);
                var $738 = _deps$8;
                var $725 = $738;
                break;
            case 'Kind.Term.def':
                var $739 = self.expr;
                var $740 = self.body;
                var _deps$7 = Kind$Core$dependencies$go$($739, _deps$2);
                var _deps$8 = Kind$Core$dependencies$go$($740(_nil$3), _deps$7);
                var $741 = _deps$8;
                var $725 = $741;
                break;
            case 'Kind.Term.ann':
                var $742 = self.term;
                var $743 = self.type;
                var _deps$7 = Kind$Core$dependencies$go$($742, _deps$2);
                var _deps$8 = Kind$Core$dependencies$go$($743, _deps$7);
                var $744 = _deps$8;
                var $725 = $744;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $745 = _deps$2;
                var $725 = $745;
                break;
        };
        return $725;
    };
    const Kind$Core$dependencies$go = x0 => x1 => Kind$Core$dependencies$go$(x0, x1);

    function List$mapped$(_as$2, _f$4) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $747 = self.head;
                var $748 = self.tail;
                var $749 = List$cons$(_f$4($747), List$mapped$($748, _f$4));
                var $746 = $749;
                break;
            case 'List.nil':
                var $750 = List$nil;
                var $746 = $750;
                break;
        };
        return $746;
    };
    const List$mapped = x0 => x1 => List$mapped$(x0, x1);

    function Bits$reverse$tco$(_a$1, _r$2) {
        var Bits$reverse$tco$ = (_a$1, _r$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _r$2]
        });
        var Bits$reverse$tco = _a$1 => _r$2 => Bits$reverse$tco$(_a$1, _r$2);
        var arg = [_a$1, _r$2];
        while (true) {
            let [_a$1, _r$2] = arg;
            var R = (() => {
                var self = _a$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $751 = self.slice(0, -1);
                        var $752 = Bits$reverse$tco$($751, (_r$2 + '0'));
                        return $752;
                    case 'i':
                        var $753 = self.slice(0, -1);
                        var $754 = Bits$reverse$tco$($753, (_r$2 + '1'));
                        return $754;
                    case 'e':
                        var $755 = _r$2;
                        return $755;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Bits$reverse$tco = x0 => x1 => Bits$reverse$tco$(x0, x1);

    function Bits$reverse$(_a$1) {
        var $756 = Bits$reverse$tco$(_a$1, Bits$e);
        return $756;
    };
    const Bits$reverse = x0 => Bits$reverse$(x0);

    function BitsMap$to_list$go$(_xs$2, _key$3, _list$4) {
        var self = _xs$2;
        switch (self._) {
            case 'BitsMap.tie':
                var $758 = self.val;
                var $759 = self.lft;
                var $760 = self.rgt;
                var self = $758;
                switch (self._) {
                    case 'Maybe.some':
                        var $762 = self.value;
                        var $763 = List$cons$(Pair$new$(Bits$reverse$(_key$3), $762), _list$4);
                        var _list0$8 = $763;
                        break;
                    case 'Maybe.none':
                        var $764 = _list$4;
                        var _list0$8 = $764;
                        break;
                };
                var _list1$9 = BitsMap$to_list$go$($759, (_key$3 + '0'), _list0$8);
                var _list2$10 = BitsMap$to_list$go$($760, (_key$3 + '1'), _list1$9);
                var $761 = _list2$10;
                var $757 = $761;
                break;
            case 'BitsMap.new':
                var $765 = _list$4;
                var $757 = $765;
                break;
        };
        return $757;
    };
    const BitsMap$to_list$go = x0 => x1 => x2 => BitsMap$to_list$go$(x0, x1, x2);

    function Kind$Name$from_bits$(_bs$1) {
        var self = _bs$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $767 = self.slice(0, -1);
                var _bs$3 = $767;
                var self = _bs$3;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $769 = self.slice(0, -1);
                        var _bs$5 = $769;
                        var self = _bs$5;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $771 = self.slice(0, -1);
                                var _bs$7 = $771;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $773 = self.slice(0, -1);
                                        var _bs$9 = $773;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $775 = self.slice(0, -1);
                                                var _bs$11 = $775;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $777 = self.slice(0, -1);
                                                        var _bs$13 = $777;
                                                        var $778 = String$cons$(65, Kind$Name$from_bits$(_bs$13));
                                                        var $776 = $778;
                                                        break;
                                                    case 'i':
                                                        var $779 = self.slice(0, -1);
                                                        var _bs$13 = $779;
                                                        var $780 = String$cons$(66, Kind$Name$from_bits$(_bs$13));
                                                        var $776 = $780;
                                                        break;
                                                    case 'e':
                                                        var $781 = String$nil;
                                                        var $776 = $781;
                                                        break;
                                                };
                                                var $774 = $776;
                                                break;
                                            case 'i':
                                                var $782 = self.slice(0, -1);
                                                var _bs$11 = $782;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $784 = self.slice(0, -1);
                                                        var _bs$13 = $784;
                                                        var $785 = String$cons$(67, Kind$Name$from_bits$(_bs$13));
                                                        var $783 = $785;
                                                        break;
                                                    case 'i':
                                                        var $786 = self.slice(0, -1);
                                                        var _bs$13 = $786;
                                                        var $787 = String$cons$(68, Kind$Name$from_bits$(_bs$13));
                                                        var $783 = $787;
                                                        break;
                                                    case 'e':
                                                        var $788 = String$nil;
                                                        var $783 = $788;
                                                        break;
                                                };
                                                var $774 = $783;
                                                break;
                                            case 'e':
                                                var $789 = String$nil;
                                                var $774 = $789;
                                                break;
                                        };
                                        var $772 = $774;
                                        break;
                                    case 'i':
                                        var $790 = self.slice(0, -1);
                                        var _bs$9 = $790;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $792 = self.slice(0, -1);
                                                var _bs$11 = $792;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $794 = self.slice(0, -1);
                                                        var _bs$13 = $794;
                                                        var $795 = String$cons$(69, Kind$Name$from_bits$(_bs$13));
                                                        var $793 = $795;
                                                        break;
                                                    case 'i':
                                                        var $796 = self.slice(0, -1);
                                                        var _bs$13 = $796;
                                                        var $797 = String$cons$(70, Kind$Name$from_bits$(_bs$13));
                                                        var $793 = $797;
                                                        break;
                                                    case 'e':
                                                        var $798 = String$nil;
                                                        var $793 = $798;
                                                        break;
                                                };
                                                var $791 = $793;
                                                break;
                                            case 'i':
                                                var $799 = self.slice(0, -1);
                                                var _bs$11 = $799;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $801 = self.slice(0, -1);
                                                        var _bs$13 = $801;
                                                        var $802 = String$cons$(71, Kind$Name$from_bits$(_bs$13));
                                                        var $800 = $802;
                                                        break;
                                                    case 'i':
                                                        var $803 = self.slice(0, -1);
                                                        var _bs$13 = $803;
                                                        var $804 = String$cons$(72, Kind$Name$from_bits$(_bs$13));
                                                        var $800 = $804;
                                                        break;
                                                    case 'e':
                                                        var $805 = String$nil;
                                                        var $800 = $805;
                                                        break;
                                                };
                                                var $791 = $800;
                                                break;
                                            case 'e':
                                                var $806 = String$nil;
                                                var $791 = $806;
                                                break;
                                        };
                                        var $772 = $791;
                                        break;
                                    case 'e':
                                        var $807 = String$nil;
                                        var $772 = $807;
                                        break;
                                };
                                var $770 = $772;
                                break;
                            case 'i':
                                var $808 = self.slice(0, -1);
                                var _bs$7 = $808;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $810 = self.slice(0, -1);
                                        var _bs$9 = $810;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $812 = self.slice(0, -1);
                                                var _bs$11 = $812;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $814 = self.slice(0, -1);
                                                        var _bs$13 = $814;
                                                        var $815 = String$cons$(73, Kind$Name$from_bits$(_bs$13));
                                                        var $813 = $815;
                                                        break;
                                                    case 'i':
                                                        var $816 = self.slice(0, -1);
                                                        var _bs$13 = $816;
                                                        var $817 = String$cons$(74, Kind$Name$from_bits$(_bs$13));
                                                        var $813 = $817;
                                                        break;
                                                    case 'e':
                                                        var $818 = String$nil;
                                                        var $813 = $818;
                                                        break;
                                                };
                                                var $811 = $813;
                                                break;
                                            case 'i':
                                                var $819 = self.slice(0, -1);
                                                var _bs$11 = $819;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $821 = self.slice(0, -1);
                                                        var _bs$13 = $821;
                                                        var $822 = String$cons$(75, Kind$Name$from_bits$(_bs$13));
                                                        var $820 = $822;
                                                        break;
                                                    case 'i':
                                                        var $823 = self.slice(0, -1);
                                                        var _bs$13 = $823;
                                                        var $824 = String$cons$(76, Kind$Name$from_bits$(_bs$13));
                                                        var $820 = $824;
                                                        break;
                                                    case 'e':
                                                        var $825 = String$nil;
                                                        var $820 = $825;
                                                        break;
                                                };
                                                var $811 = $820;
                                                break;
                                            case 'e':
                                                var $826 = String$nil;
                                                var $811 = $826;
                                                break;
                                        };
                                        var $809 = $811;
                                        break;
                                    case 'i':
                                        var $827 = self.slice(0, -1);
                                        var _bs$9 = $827;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $829 = self.slice(0, -1);
                                                var _bs$11 = $829;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $831 = self.slice(0, -1);
                                                        var _bs$13 = $831;
                                                        var $832 = String$cons$(77, Kind$Name$from_bits$(_bs$13));
                                                        var $830 = $832;
                                                        break;
                                                    case 'i':
                                                        var $833 = self.slice(0, -1);
                                                        var _bs$13 = $833;
                                                        var $834 = String$cons$(78, Kind$Name$from_bits$(_bs$13));
                                                        var $830 = $834;
                                                        break;
                                                    case 'e':
                                                        var $835 = String$nil;
                                                        var $830 = $835;
                                                        break;
                                                };
                                                var $828 = $830;
                                                break;
                                            case 'i':
                                                var $836 = self.slice(0, -1);
                                                var _bs$11 = $836;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $838 = self.slice(0, -1);
                                                        var _bs$13 = $838;
                                                        var $839 = String$cons$(79, Kind$Name$from_bits$(_bs$13));
                                                        var $837 = $839;
                                                        break;
                                                    case 'i':
                                                        var $840 = self.slice(0, -1);
                                                        var _bs$13 = $840;
                                                        var $841 = String$cons$(80, Kind$Name$from_bits$(_bs$13));
                                                        var $837 = $841;
                                                        break;
                                                    case 'e':
                                                        var $842 = String$nil;
                                                        var $837 = $842;
                                                        break;
                                                };
                                                var $828 = $837;
                                                break;
                                            case 'e':
                                                var $843 = String$nil;
                                                var $828 = $843;
                                                break;
                                        };
                                        var $809 = $828;
                                        break;
                                    case 'e':
                                        var $844 = String$nil;
                                        var $809 = $844;
                                        break;
                                };
                                var $770 = $809;
                                break;
                            case 'e':
                                var $845 = String$nil;
                                var $770 = $845;
                                break;
                        };
                        var $768 = $770;
                        break;
                    case 'i':
                        var $846 = self.slice(0, -1);
                        var _bs$5 = $846;
                        var self = _bs$5;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $848 = self.slice(0, -1);
                                var _bs$7 = $848;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $850 = self.slice(0, -1);
                                        var _bs$9 = $850;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $852 = self.slice(0, -1);
                                                var _bs$11 = $852;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $854 = self.slice(0, -1);
                                                        var _bs$13 = $854;
                                                        var $855 = String$cons$(81, Kind$Name$from_bits$(_bs$13));
                                                        var $853 = $855;
                                                        break;
                                                    case 'i':
                                                        var $856 = self.slice(0, -1);
                                                        var _bs$13 = $856;
                                                        var $857 = String$cons$(82, Kind$Name$from_bits$(_bs$13));
                                                        var $853 = $857;
                                                        break;
                                                    case 'e':
                                                        var $858 = String$nil;
                                                        var $853 = $858;
                                                        break;
                                                };
                                                var $851 = $853;
                                                break;
                                            case 'i':
                                                var $859 = self.slice(0, -1);
                                                var _bs$11 = $859;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $861 = self.slice(0, -1);
                                                        var _bs$13 = $861;
                                                        var $862 = String$cons$(83, Kind$Name$from_bits$(_bs$13));
                                                        var $860 = $862;
                                                        break;
                                                    case 'i':
                                                        var $863 = self.slice(0, -1);
                                                        var _bs$13 = $863;
                                                        var $864 = String$cons$(84, Kind$Name$from_bits$(_bs$13));
                                                        var $860 = $864;
                                                        break;
                                                    case 'e':
                                                        var $865 = String$nil;
                                                        var $860 = $865;
                                                        break;
                                                };
                                                var $851 = $860;
                                                break;
                                            case 'e':
                                                var $866 = String$nil;
                                                var $851 = $866;
                                                break;
                                        };
                                        var $849 = $851;
                                        break;
                                    case 'i':
                                        var $867 = self.slice(0, -1);
                                        var _bs$9 = $867;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $869 = self.slice(0, -1);
                                                var _bs$11 = $869;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $871 = self.slice(0, -1);
                                                        var _bs$13 = $871;
                                                        var $872 = String$cons$(85, Kind$Name$from_bits$(_bs$13));
                                                        var $870 = $872;
                                                        break;
                                                    case 'i':
                                                        var $873 = self.slice(0, -1);
                                                        var _bs$13 = $873;
                                                        var $874 = String$cons$(86, Kind$Name$from_bits$(_bs$13));
                                                        var $870 = $874;
                                                        break;
                                                    case 'e':
                                                        var $875 = String$nil;
                                                        var $870 = $875;
                                                        break;
                                                };
                                                var $868 = $870;
                                                break;
                                            case 'i':
                                                var $876 = self.slice(0, -1);
                                                var _bs$11 = $876;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $878 = self.slice(0, -1);
                                                        var _bs$13 = $878;
                                                        var $879 = String$cons$(87, Kind$Name$from_bits$(_bs$13));
                                                        var $877 = $879;
                                                        break;
                                                    case 'i':
                                                        var $880 = self.slice(0, -1);
                                                        var _bs$13 = $880;
                                                        var $881 = String$cons$(88, Kind$Name$from_bits$(_bs$13));
                                                        var $877 = $881;
                                                        break;
                                                    case 'e':
                                                        var $882 = String$nil;
                                                        var $877 = $882;
                                                        break;
                                                };
                                                var $868 = $877;
                                                break;
                                            case 'e':
                                                var $883 = String$nil;
                                                var $868 = $883;
                                                break;
                                        };
                                        var $849 = $868;
                                        break;
                                    case 'e':
                                        var $884 = String$nil;
                                        var $849 = $884;
                                        break;
                                };
                                var $847 = $849;
                                break;
                            case 'i':
                                var $885 = self.slice(0, -1);
                                var _bs$7 = $885;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $887 = self.slice(0, -1);
                                        var _bs$9 = $887;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $889 = self.slice(0, -1);
                                                var _bs$11 = $889;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $891 = self.slice(0, -1);
                                                        var _bs$13 = $891;
                                                        var $892 = String$cons$(89, Kind$Name$from_bits$(_bs$13));
                                                        var $890 = $892;
                                                        break;
                                                    case 'i':
                                                        var $893 = self.slice(0, -1);
                                                        var _bs$13 = $893;
                                                        var $894 = String$cons$(90, Kind$Name$from_bits$(_bs$13));
                                                        var $890 = $894;
                                                        break;
                                                    case 'e':
                                                        var $895 = String$nil;
                                                        var $890 = $895;
                                                        break;
                                                };
                                                var $888 = $890;
                                                break;
                                            case 'i':
                                                var $896 = self.slice(0, -1);
                                                var _bs$11 = $896;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $898 = self.slice(0, -1);
                                                        var _bs$13 = $898;
                                                        var $899 = String$cons$(97, Kind$Name$from_bits$(_bs$13));
                                                        var $897 = $899;
                                                        break;
                                                    case 'i':
                                                        var $900 = self.slice(0, -1);
                                                        var _bs$13 = $900;
                                                        var $901 = String$cons$(98, Kind$Name$from_bits$(_bs$13));
                                                        var $897 = $901;
                                                        break;
                                                    case 'e':
                                                        var $902 = String$nil;
                                                        var $897 = $902;
                                                        break;
                                                };
                                                var $888 = $897;
                                                break;
                                            case 'e':
                                                var $903 = String$nil;
                                                var $888 = $903;
                                                break;
                                        };
                                        var $886 = $888;
                                        break;
                                    case 'i':
                                        var $904 = self.slice(0, -1);
                                        var _bs$9 = $904;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $906 = self.slice(0, -1);
                                                var _bs$11 = $906;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $908 = self.slice(0, -1);
                                                        var _bs$13 = $908;
                                                        var $909 = String$cons$(99, Kind$Name$from_bits$(_bs$13));
                                                        var $907 = $909;
                                                        break;
                                                    case 'i':
                                                        var $910 = self.slice(0, -1);
                                                        var _bs$13 = $910;
                                                        var $911 = String$cons$(100, Kind$Name$from_bits$(_bs$13));
                                                        var $907 = $911;
                                                        break;
                                                    case 'e':
                                                        var $912 = String$nil;
                                                        var $907 = $912;
                                                        break;
                                                };
                                                var $905 = $907;
                                                break;
                                            case 'i':
                                                var $913 = self.slice(0, -1);
                                                var _bs$11 = $913;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $915 = self.slice(0, -1);
                                                        var _bs$13 = $915;
                                                        var $916 = String$cons$(101, Kind$Name$from_bits$(_bs$13));
                                                        var $914 = $916;
                                                        break;
                                                    case 'i':
                                                        var $917 = self.slice(0, -1);
                                                        var _bs$13 = $917;
                                                        var $918 = String$cons$(102, Kind$Name$from_bits$(_bs$13));
                                                        var $914 = $918;
                                                        break;
                                                    case 'e':
                                                        var $919 = String$nil;
                                                        var $914 = $919;
                                                        break;
                                                };
                                                var $905 = $914;
                                                break;
                                            case 'e':
                                                var $920 = String$nil;
                                                var $905 = $920;
                                                break;
                                        };
                                        var $886 = $905;
                                        break;
                                    case 'e':
                                        var $921 = String$nil;
                                        var $886 = $921;
                                        break;
                                };
                                var $847 = $886;
                                break;
                            case 'e':
                                var $922 = String$nil;
                                var $847 = $922;
                                break;
                        };
                        var $768 = $847;
                        break;
                    case 'e':
                        var $923 = String$nil;
                        var $768 = $923;
                        break;
                };
                var $766 = $768;
                break;
            case 'i':
                var $924 = self.slice(0, -1);
                var _bs$3 = $924;
                var self = _bs$3;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $926 = self.slice(0, -1);
                        var _bs$5 = $926;
                        var self = _bs$5;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $928 = self.slice(0, -1);
                                var _bs$7 = $928;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $930 = self.slice(0, -1);
                                        var _bs$9 = $930;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $932 = self.slice(0, -1);
                                                var _bs$11 = $932;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $934 = self.slice(0, -1);
                                                        var _bs$13 = $934;
                                                        var $935 = String$cons$(103, Kind$Name$from_bits$(_bs$13));
                                                        var $933 = $935;
                                                        break;
                                                    case 'i':
                                                        var $936 = self.slice(0, -1);
                                                        var _bs$13 = $936;
                                                        var $937 = String$cons$(104, Kind$Name$from_bits$(_bs$13));
                                                        var $933 = $937;
                                                        break;
                                                    case 'e':
                                                        var $938 = String$nil;
                                                        var $933 = $938;
                                                        break;
                                                };
                                                var $931 = $933;
                                                break;
                                            case 'i':
                                                var $939 = self.slice(0, -1);
                                                var _bs$11 = $939;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $941 = self.slice(0, -1);
                                                        var _bs$13 = $941;
                                                        var $942 = String$cons$(105, Kind$Name$from_bits$(_bs$13));
                                                        var $940 = $942;
                                                        break;
                                                    case 'i':
                                                        var $943 = self.slice(0, -1);
                                                        var _bs$13 = $943;
                                                        var $944 = String$cons$(106, Kind$Name$from_bits$(_bs$13));
                                                        var $940 = $944;
                                                        break;
                                                    case 'e':
                                                        var $945 = String$nil;
                                                        var $940 = $945;
                                                        break;
                                                };
                                                var $931 = $940;
                                                break;
                                            case 'e':
                                                var $946 = String$nil;
                                                var $931 = $946;
                                                break;
                                        };
                                        var $929 = $931;
                                        break;
                                    case 'i':
                                        var $947 = self.slice(0, -1);
                                        var _bs$9 = $947;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $949 = self.slice(0, -1);
                                                var _bs$11 = $949;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $951 = self.slice(0, -1);
                                                        var _bs$13 = $951;
                                                        var $952 = String$cons$(107, Kind$Name$from_bits$(_bs$13));
                                                        var $950 = $952;
                                                        break;
                                                    case 'i':
                                                        var $953 = self.slice(0, -1);
                                                        var _bs$13 = $953;
                                                        var $954 = String$cons$(108, Kind$Name$from_bits$(_bs$13));
                                                        var $950 = $954;
                                                        break;
                                                    case 'e':
                                                        var $955 = String$nil;
                                                        var $950 = $955;
                                                        break;
                                                };
                                                var $948 = $950;
                                                break;
                                            case 'i':
                                                var $956 = self.slice(0, -1);
                                                var _bs$11 = $956;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $958 = self.slice(0, -1);
                                                        var _bs$13 = $958;
                                                        var $959 = String$cons$(109, Kind$Name$from_bits$(_bs$13));
                                                        var $957 = $959;
                                                        break;
                                                    case 'i':
                                                        var $960 = self.slice(0, -1);
                                                        var _bs$13 = $960;
                                                        var $961 = String$cons$(110, Kind$Name$from_bits$(_bs$13));
                                                        var $957 = $961;
                                                        break;
                                                    case 'e':
                                                        var $962 = String$nil;
                                                        var $957 = $962;
                                                        break;
                                                };
                                                var $948 = $957;
                                                break;
                                            case 'e':
                                                var $963 = String$nil;
                                                var $948 = $963;
                                                break;
                                        };
                                        var $929 = $948;
                                        break;
                                    case 'e':
                                        var $964 = String$nil;
                                        var $929 = $964;
                                        break;
                                };
                                var $927 = $929;
                                break;
                            case 'i':
                                var $965 = self.slice(0, -1);
                                var _bs$7 = $965;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $967 = self.slice(0, -1);
                                        var _bs$9 = $967;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $969 = self.slice(0, -1);
                                                var _bs$11 = $969;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $971 = self.slice(0, -1);
                                                        var _bs$13 = $971;
                                                        var $972 = String$cons$(111, Kind$Name$from_bits$(_bs$13));
                                                        var $970 = $972;
                                                        break;
                                                    case 'i':
                                                        var $973 = self.slice(0, -1);
                                                        var _bs$13 = $973;
                                                        var $974 = String$cons$(112, Kind$Name$from_bits$(_bs$13));
                                                        var $970 = $974;
                                                        break;
                                                    case 'e':
                                                        var $975 = String$nil;
                                                        var $970 = $975;
                                                        break;
                                                };
                                                var $968 = $970;
                                                break;
                                            case 'i':
                                                var $976 = self.slice(0, -1);
                                                var _bs$11 = $976;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $978 = self.slice(0, -1);
                                                        var _bs$13 = $978;
                                                        var $979 = String$cons$(113, Kind$Name$from_bits$(_bs$13));
                                                        var $977 = $979;
                                                        break;
                                                    case 'i':
                                                        var $980 = self.slice(0, -1);
                                                        var _bs$13 = $980;
                                                        var $981 = String$cons$(114, Kind$Name$from_bits$(_bs$13));
                                                        var $977 = $981;
                                                        break;
                                                    case 'e':
                                                        var $982 = String$nil;
                                                        var $977 = $982;
                                                        break;
                                                };
                                                var $968 = $977;
                                                break;
                                            case 'e':
                                                var $983 = String$nil;
                                                var $968 = $983;
                                                break;
                                        };
                                        var $966 = $968;
                                        break;
                                    case 'i':
                                        var $984 = self.slice(0, -1);
                                        var _bs$9 = $984;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $986 = self.slice(0, -1);
                                                var _bs$11 = $986;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $988 = self.slice(0, -1);
                                                        var _bs$13 = $988;
                                                        var $989 = String$cons$(115, Kind$Name$from_bits$(_bs$13));
                                                        var $987 = $989;
                                                        break;
                                                    case 'i':
                                                        var $990 = self.slice(0, -1);
                                                        var _bs$13 = $990;
                                                        var $991 = String$cons$(116, Kind$Name$from_bits$(_bs$13));
                                                        var $987 = $991;
                                                        break;
                                                    case 'e':
                                                        var $992 = String$nil;
                                                        var $987 = $992;
                                                        break;
                                                };
                                                var $985 = $987;
                                                break;
                                            case 'i':
                                                var $993 = self.slice(0, -1);
                                                var _bs$11 = $993;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $995 = self.slice(0, -1);
                                                        var _bs$13 = $995;
                                                        var $996 = String$cons$(117, Kind$Name$from_bits$(_bs$13));
                                                        var $994 = $996;
                                                        break;
                                                    case 'i':
                                                        var $997 = self.slice(0, -1);
                                                        var _bs$13 = $997;
                                                        var $998 = String$cons$(118, Kind$Name$from_bits$(_bs$13));
                                                        var $994 = $998;
                                                        break;
                                                    case 'e':
                                                        var $999 = String$nil;
                                                        var $994 = $999;
                                                        break;
                                                };
                                                var $985 = $994;
                                                break;
                                            case 'e':
                                                var $1000 = String$nil;
                                                var $985 = $1000;
                                                break;
                                        };
                                        var $966 = $985;
                                        break;
                                    case 'e':
                                        var $1001 = String$nil;
                                        var $966 = $1001;
                                        break;
                                };
                                var $927 = $966;
                                break;
                            case 'e':
                                var $1002 = String$nil;
                                var $927 = $1002;
                                break;
                        };
                        var $925 = $927;
                        break;
                    case 'i':
                        var $1003 = self.slice(0, -1);
                        var _bs$5 = $1003;
                        var self = _bs$5;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $1005 = self.slice(0, -1);
                                var _bs$7 = $1005;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1007 = self.slice(0, -1);
                                        var _bs$9 = $1007;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1009 = self.slice(0, -1);
                                                var _bs$11 = $1009;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1011 = self.slice(0, -1);
                                                        var _bs$13 = $1011;
                                                        var $1012 = String$cons$(119, Kind$Name$from_bits$(_bs$13));
                                                        var $1010 = $1012;
                                                        break;
                                                    case 'i':
                                                        var $1013 = self.slice(0, -1);
                                                        var _bs$13 = $1013;
                                                        var $1014 = String$cons$(120, Kind$Name$from_bits$(_bs$13));
                                                        var $1010 = $1014;
                                                        break;
                                                    case 'e':
                                                        var $1015 = String$nil;
                                                        var $1010 = $1015;
                                                        break;
                                                };
                                                var $1008 = $1010;
                                                break;
                                            case 'i':
                                                var $1016 = self.slice(0, -1);
                                                var _bs$11 = $1016;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1018 = self.slice(0, -1);
                                                        var _bs$13 = $1018;
                                                        var $1019 = String$cons$(121, Kind$Name$from_bits$(_bs$13));
                                                        var $1017 = $1019;
                                                        break;
                                                    case 'i':
                                                        var $1020 = self.slice(0, -1);
                                                        var _bs$13 = $1020;
                                                        var $1021 = String$cons$(122, Kind$Name$from_bits$(_bs$13));
                                                        var $1017 = $1021;
                                                        break;
                                                    case 'e':
                                                        var $1022 = String$nil;
                                                        var $1017 = $1022;
                                                        break;
                                                };
                                                var $1008 = $1017;
                                                break;
                                            case 'e':
                                                var $1023 = String$nil;
                                                var $1008 = $1023;
                                                break;
                                        };
                                        var $1006 = $1008;
                                        break;
                                    case 'i':
                                        var $1024 = self.slice(0, -1);
                                        var _bs$9 = $1024;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1026 = self.slice(0, -1);
                                                var _bs$11 = $1026;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1028 = self.slice(0, -1);
                                                        var _bs$13 = $1028;
                                                        var $1029 = String$cons$(48, Kind$Name$from_bits$(_bs$13));
                                                        var $1027 = $1029;
                                                        break;
                                                    case 'i':
                                                        var $1030 = self.slice(0, -1);
                                                        var _bs$13 = $1030;
                                                        var $1031 = String$cons$(49, Kind$Name$from_bits$(_bs$13));
                                                        var $1027 = $1031;
                                                        break;
                                                    case 'e':
                                                        var $1032 = String$nil;
                                                        var $1027 = $1032;
                                                        break;
                                                };
                                                var $1025 = $1027;
                                                break;
                                            case 'i':
                                                var $1033 = self.slice(0, -1);
                                                var _bs$11 = $1033;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1035 = self.slice(0, -1);
                                                        var _bs$13 = $1035;
                                                        var $1036 = String$cons$(50, Kind$Name$from_bits$(_bs$13));
                                                        var $1034 = $1036;
                                                        break;
                                                    case 'i':
                                                        var $1037 = self.slice(0, -1);
                                                        var _bs$13 = $1037;
                                                        var $1038 = String$cons$(51, Kind$Name$from_bits$(_bs$13));
                                                        var $1034 = $1038;
                                                        break;
                                                    case 'e':
                                                        var $1039 = String$nil;
                                                        var $1034 = $1039;
                                                        break;
                                                };
                                                var $1025 = $1034;
                                                break;
                                            case 'e':
                                                var $1040 = String$nil;
                                                var $1025 = $1040;
                                                break;
                                        };
                                        var $1006 = $1025;
                                        break;
                                    case 'e':
                                        var $1041 = String$nil;
                                        var $1006 = $1041;
                                        break;
                                };
                                var $1004 = $1006;
                                break;
                            case 'i':
                                var $1042 = self.slice(0, -1);
                                var _bs$7 = $1042;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1044 = self.slice(0, -1);
                                        var _bs$9 = $1044;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1046 = self.slice(0, -1);
                                                var _bs$11 = $1046;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1048 = self.slice(0, -1);
                                                        var _bs$13 = $1048;
                                                        var $1049 = String$cons$(52, Kind$Name$from_bits$(_bs$13));
                                                        var $1047 = $1049;
                                                        break;
                                                    case 'i':
                                                        var $1050 = self.slice(0, -1);
                                                        var _bs$13 = $1050;
                                                        var $1051 = String$cons$(53, Kind$Name$from_bits$(_bs$13));
                                                        var $1047 = $1051;
                                                        break;
                                                    case 'e':
                                                        var $1052 = String$nil;
                                                        var $1047 = $1052;
                                                        break;
                                                };
                                                var $1045 = $1047;
                                                break;
                                            case 'i':
                                                var $1053 = self.slice(0, -1);
                                                var _bs$11 = $1053;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1055 = self.slice(0, -1);
                                                        var _bs$13 = $1055;
                                                        var $1056 = String$cons$(54, Kind$Name$from_bits$(_bs$13));
                                                        var $1054 = $1056;
                                                        break;
                                                    case 'i':
                                                        var $1057 = self.slice(0, -1);
                                                        var _bs$13 = $1057;
                                                        var $1058 = String$cons$(55, Kind$Name$from_bits$(_bs$13));
                                                        var $1054 = $1058;
                                                        break;
                                                    case 'e':
                                                        var $1059 = String$nil;
                                                        var $1054 = $1059;
                                                        break;
                                                };
                                                var $1045 = $1054;
                                                break;
                                            case 'e':
                                                var $1060 = String$nil;
                                                var $1045 = $1060;
                                                break;
                                        };
                                        var $1043 = $1045;
                                        break;
                                    case 'i':
                                        var $1061 = self.slice(0, -1);
                                        var _bs$9 = $1061;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1063 = self.slice(0, -1);
                                                var _bs$11 = $1063;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1065 = self.slice(0, -1);
                                                        var _bs$13 = $1065;
                                                        var $1066 = String$cons$(56, Kind$Name$from_bits$(_bs$13));
                                                        var $1064 = $1066;
                                                        break;
                                                    case 'i':
                                                        var $1067 = self.slice(0, -1);
                                                        var _bs$13 = $1067;
                                                        var $1068 = String$cons$(57, Kind$Name$from_bits$(_bs$13));
                                                        var $1064 = $1068;
                                                        break;
                                                    case 'e':
                                                        var $1069 = String$nil;
                                                        var $1064 = $1069;
                                                        break;
                                                };
                                                var $1062 = $1064;
                                                break;
                                            case 'i':
                                                var $1070 = self.slice(0, -1);
                                                var _bs$11 = $1070;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1072 = self.slice(0, -1);
                                                        var _bs$13 = $1072;
                                                        var $1073 = String$cons$(46, Kind$Name$from_bits$(_bs$13));
                                                        var $1071 = $1073;
                                                        break;
                                                    case 'i':
                                                        var $1074 = self.slice(0, -1);
                                                        var _bs$13 = $1074;
                                                        var $1075 = String$cons$(95, Kind$Name$from_bits$(_bs$13));
                                                        var $1071 = $1075;
                                                        break;
                                                    case 'e':
                                                        var $1076 = String$nil;
                                                        var $1071 = $1076;
                                                        break;
                                                };
                                                var $1062 = $1071;
                                                break;
                                            case 'e':
                                                var $1077 = String$nil;
                                                var $1062 = $1077;
                                                break;
                                        };
                                        var $1043 = $1062;
                                        break;
                                    case 'e':
                                        var $1078 = String$nil;
                                        var $1043 = $1078;
                                        break;
                                };
                                var $1004 = $1043;
                                break;
                            case 'e':
                                var $1079 = String$nil;
                                var $1004 = $1079;
                                break;
                        };
                        var $925 = $1004;
                        break;
                    case 'e':
                        var $1080 = String$nil;
                        var $925 = $1080;
                        break;
                };
                var $766 = $925;
                break;
            case 'e':
                var $1081 = String$nil;
                var $766 = $1081;
                break;
        };
        return $766;
    };
    const Kind$Name$from_bits = x0 => Kind$Name$from_bits$(x0);

    function Kind$Map$to_list$(_xs$2) {
        var _kvs$3 = List$reverse$(BitsMap$to_list$go$(_xs$2, Bits$e, List$nil));
        var $1082 = List$mapped$(_kvs$3, (_kv$4 => {
            var self = _kv$4;
            switch (self._) {
                case 'Pair.new':
                    var $1084 = self.fst;
                    var $1085 = self.snd;
                    var $1086 = Pair$new$(Kind$Name$from_bits$($1084), $1085);
                    var $1083 = $1086;
                    break;
            };
            return $1083;
        }));
        return $1082;
    };
    const Kind$Map$to_list = x0 => Kind$Map$to_list$(x0);

    function Kind$Map$keys$(_xs$2) {
        var $1087 = List$mapped$(Kind$Map$to_list$(_xs$2), Pair$fst);
        return $1087;
    };
    const Kind$Map$keys = x0 => Kind$Map$keys$(x0);

    function Kind$Synth$load$cached$(_names$1, _defs$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.cons':
                var $1089 = self.head;
                var $1090 = self.tail;
                var self = Kind$Synth$load$cached$is_loop$($1089, _defs$2);
                if (self) {
                    var $1092 = Kind$Synth$load$cached$($1090, _defs$2);
                    var $1091 = $1092;
                } else {
                    var _name$5 = $1089;
                    var $1093 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                        var $1094 = _m$bind$6;
                        return $1094;
                    }))(Kind$Synth$load$cached$def$(_name$5))((_defn$6 => {
                        var self = _defn$6;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1096 = self.value;
                                var self = $1096;
                                switch (self._) {
                                    case 'Kind.Def.new':
                                        var $1098 = self.term;
                                        var $1099 = self.type;
                                        var _defs$17 = Kind$Map$set$(_name$5, $1096, _defs$2);
                                        var _deps$18 = Kind$Map$new;
                                        var _deps$19 = Kind$Core$dependencies$go$($1098, _deps$18);
                                        var _deps$20 = Kind$Core$dependencies$go$($1099, _deps$19);
                                        var _deps$21 = Kind$Map$keys$(_deps$20);
                                        var $1100 = IO$monad$((_m$bind$22 => _m$pure$23 => {
                                            var $1101 = _m$bind$22;
                                            return $1101;
                                        }))(Kind$Synth$load$cached$(_deps$21, _defs$17))((_defs$22 => {
                                            var self = _defs$22;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $1103 = self.value;
                                                    var $1104 = Kind$Synth$load$cached$($1090, $1103);
                                                    var $1102 = $1104;
                                                    break;
                                                case 'Maybe.none':
                                                    var $1105 = IO$monad$((_m$bind$23 => _m$pure$24 => {
                                                        var $1106 = _m$pure$24;
                                                        return $1106;
                                                    }))(Maybe$none);
                                                    var $1102 = $1105;
                                                    break;
                                            };
                                            return $1102;
                                        }));
                                        var $1097 = $1100;
                                        break;
                                };
                                var $1095 = $1097;
                                break;
                            case 'Maybe.none':
                                var $1107 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                                    var $1108 = _m$pure$8;
                                    return $1108;
                                }))(Maybe$none);
                                var $1095 = $1107;
                                break;
                        };
                        return $1095;
                    }));
                    var $1091 = $1093;
                };
                var $1088 = $1091;
                break;
            case 'List.nil':
                var $1109 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $1110 = _m$pure$4;
                    return $1110;
                }))(Maybe$some$(_defs$2));
                var $1088 = $1109;
                break;
        };
        return $1088;
    };
    const Kind$Synth$load$cached = x0 => x1 => Kind$Synth$load$cached$(x0, x1);

    function IO$request$(_url$1) {
        var $1111 = IO$ask$("request", _url$1, (_text$2 => {
            var $1112 = IO$end$(_text$2);
            return $1112;
        }));
        return $1111;
    };
    const IO$request = x0 => IO$request$(x0);

    function Kind$Synth$get_kind_code$(_file$1) {
        var $1113 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $1114 = _m$bind$2;
            return $1114;
        }))(IO$get_file$(_file$1))((_code$2 => {
            var self = (_code$2 === "");
            if (self) {
                var $1116 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $1117 = _m$bind$3;
                    return $1117;
                }))(IO$request$(("http://uwu.tech:7172/" + _file$1)))((_code$3 => {
                    var $1118 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $1119 = _m$pure$5;
                        return $1119;
                    }))(_code$3);
                    return $1118;
                }));
                var $1115 = $1116;
            } else {
                var $1120 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $1121 = _m$pure$4;
                    return $1121;
                }))(_code$2);
                var $1115 = $1120;
            };
            return $1115;
        }));
        return $1113;
    };
    const Kind$Synth$get_kind_code = x0 => Kind$Synth$get_kind_code$(x0);

    function Parser$is_eof$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1123 = self.str;
                var self = $1123;
                if (self.length === 0) {
                    var $1125 = Parser$Reply$value$(_pst$1, Bool$true);
                    var $1124 = $1125;
                } else {
                    var $1126 = self.charCodeAt(0);
                    var $1127 = self.slice(1);
                    var $1128 = Parser$Reply$value$(_pst$1, Bool$false);
                    var $1124 = $1128;
                };
                var $1122 = $1124;
                break;
        };
        return $1122;
    };
    const Parser$is_eof = x0 => Parser$is_eof$(x0);

    function Parser$(_V$1) {
        var $1129 = null;
        return $1129;
    };
    const Parser = x0 => Parser$(x0);

    function Parser$choice$(_pars$2, _pst$3) {
        var Parser$choice$ = (_pars$2, _pst$3) => ({
            ctr: 'TCO',
            arg: [_pars$2, _pst$3]
        });
        var Parser$choice = _pars$2 => _pst$3 => Parser$choice$(_pars$2, _pst$3);
        var arg = [_pars$2, _pst$3];
        while (true) {
            let [_pars$2, _pst$3] = arg;
            var R = (() => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $1130 = self.err;
                        var $1131 = self.nam;
                        var $1132 = self.ini;
                        var $1133 = self.idx;
                        var $1134 = self.str;
                        var self = _pars$2;
                        switch (self._) {
                            case 'List.cons':
                                var $1136 = self.head;
                                var $1137 = self.tail;
                                var _parsed$11 = $1136(_pst$3);
                                var self = _parsed$11;
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $1139 = self.err;
                                        var _cur_err$13 = Maybe$some$($1139);
                                        var _far_err$14 = Parser$Error$maybe_combine$($1130, _cur_err$13);
                                        var _new_pst$15 = Parser$State$new$(_far_err$14, $1131, $1132, $1133, $1134);
                                        var $1140 = Parser$choice$($1137, _new_pst$15);
                                        var $1138 = $1140;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $1141 = self.pst;
                                        var $1142 = self.val;
                                        var $1143 = Parser$Reply$value$($1141, $1142);
                                        var $1138 = $1143;
                                        break;
                                };
                                var $1135 = $1138;
                                break;
                            case 'List.nil':
                                var self = $1130;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $1145 = self.value;
                                        var $1146 = Parser$Reply$error$($1145);
                                        var $1144 = $1146;
                                        break;
                                    case 'Maybe.none':
                                        var $1147 = Parser$Reply$fail$($1131, $1132, $1133, "No parse.");
                                        var $1144 = $1147;
                                        break;
                                };
                                var $1135 = $1144;
                                break;
                        };
                        return $1135;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$choice = x0 => x1 => Parser$choice$(x0, x1);

    function Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4) {
        var Parser$text$go$ = (_ini_idx$1, _ini_txt$2, _text$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_ini_idx$1, _ini_txt$2, _text$3, _pst$4]
        });
        var Parser$text$go = _ini_idx$1 => _ini_txt$2 => _text$3 => _pst$4 => Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4);
        var arg = [_ini_idx$1, _ini_txt$2, _text$3, _pst$4];
        while (true) {
            let [_ini_idx$1, _ini_txt$2, _text$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var $1148 = self.err;
                        var $1149 = self.nam;
                        var $1150 = self.ini;
                        var $1151 = self.idx;
                        var $1152 = self.str;
                        var self = _text$3;
                        if (self.length === 0) {
                            var $1154 = Parser$Reply$value$(_pst$4, Unit$new);
                            var $1153 = $1154;
                        } else {
                            var $1155 = self.charCodeAt(0);
                            var $1156 = self.slice(1);
                            var self = $1152;
                            if (self.length === 0) {
                                var _error_msg$12 = ("Expected \'" + (_ini_txt$2 + "\', found end of file."));
                                var $1158 = Parser$Reply$fail$($1149, $1150, _ini_idx$1, _error_msg$12);
                                var $1157 = $1158;
                            } else {
                                var $1159 = self.charCodeAt(0);
                                var $1160 = self.slice(1);
                                var self = ($1155 === $1159);
                                if (self) {
                                    var _pst$14 = Parser$State$new$($1148, $1149, $1150, Nat$succ$($1151), $1160);
                                    var $1162 = Parser$text$go$(_ini_idx$1, _ini_txt$2, $1156, _pst$14);
                                    var $1161 = $1162;
                                } else {
                                    var _chr$14 = String$cons$($1159, String$nil);
                                    var _err$15 = ("Expected \'" + (_ini_txt$2 + ("\', found \'" + (_chr$14 + "\'."))));
                                    var $1163 = Parser$Reply$fail$($1149, $1150, _ini_idx$1, _err$15);
                                    var $1161 = $1163;
                                };
                                var $1157 = $1161;
                            };
                            var $1153 = $1157;
                        };
                        return $1153;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$text$go = x0 => x1 => x2 => x3 => Parser$text$go$(x0, x1, x2, x3);

    function Parser$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1165 = self.idx;
                var self = Parser$text$go$($1165, _text$1, _text$1, _pst$2);
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1167 = self.err;
                        var $1168 = Parser$Reply$error$($1167);
                        var $1166 = $1168;
                        break;
                    case 'Parser.Reply.value':
                        var $1169 = self.pst;
                        var $1170 = self.val;
                        var $1171 = Parser$Reply$value$($1169, $1170);
                        var $1166 = $1171;
                        break;
                };
                var $1164 = $1166;
                break;
        };
        return $1164;
    };
    const Parser$text = x0 => x1 => Parser$text$(x0, x1);

    function Parser$eof$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1173 = self.nam;
                var $1174 = self.ini;
                var $1175 = self.idx;
                var $1176 = self.str;
                var self = $1176;
                if (self.length === 0) {
                    var $1178 = Parser$Reply$value$(_pst$1, Unit$new);
                    var $1177 = $1178;
                } else {
                    var $1179 = self.charCodeAt(0);
                    var $1180 = self.slice(1);
                    var $1181 = Parser$Reply$fail$($1173, $1174, $1175, "Expected end-of-file.");
                    var $1177 = $1181;
                };
                var $1172 = $1177;
                break;
        };
        return $1172;
    };
    const Parser$eof = x0 => Parser$eof$(x0);

    function Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5) {
        var Parser$until$go$ = (_until$2, _parse$3, _values$4, _pst$5) => ({
            ctr: 'TCO',
            arg: [_until$2, _parse$3, _values$4, _pst$5]
        });
        var Parser$until$go = _until$2 => _parse$3 => _values$4 => _pst$5 => Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5);
        var arg = [_until$2, _parse$3, _values$4, _pst$5];
        while (true) {
            let [_until$2, _parse$3, _values$4, _pst$5] = arg;
            var R = (() => {
                var _until_reply$6 = _until$2(_pst$5);
                var self = _until_reply$6;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1183 = self.err;
                        var _reply$8 = _parse$3(_pst$5);
                        var self = _reply$8;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $1185 = self.err;
                                var $1186 = Parser$Reply$error$(Parser$Error$combine$($1185, $1183));
                                var $1184 = $1186;
                                break;
                            case 'Parser.Reply.value':
                                var $1187 = self.pst;
                                var $1188 = self.val;
                                var $1189 = Parser$until$go$(_until$2, _parse$3, List$cons$($1188, _values$4), $1187);
                                var $1184 = $1189;
                                break;
                        };
                        var $1182 = $1184;
                        break;
                    case 'Parser.Reply.value':
                        var $1190 = self.pst;
                        var $1191 = Parser$Reply$value$($1190, List$reverse$(_values$4));
                        var $1182 = $1191;
                        break;
                };
                return $1182;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$until$go = x0 => x1 => x2 => x3 => Parser$until$go$(x0, x1, x2, x3);

    function Parser$until$(_until$2, _parse$3) {
        var $1192 = Parser$until$go(_until$2)(_parse$3)(List$nil);
        return $1192;
    };
    const Parser$until = x0 => x1 => Parser$until$(x0, x1);

    function Parser$one$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1194 = self.err;
                var $1195 = self.nam;
                var $1196 = self.ini;
                var $1197 = self.idx;
                var $1198 = self.str;
                var self = $1198;
                if (self.length === 0) {
                    var $1200 = Parser$Reply$fail$($1195, $1196, $1197, "Unexpected end of file.");
                    var $1199 = $1200;
                } else {
                    var $1201 = self.charCodeAt(0);
                    var $1202 = self.slice(1);
                    var _pst$9 = Parser$State$new$($1194, $1195, $1196, Nat$succ$($1197), $1202);
                    var $1203 = Parser$Reply$value$(_pst$9, $1201);
                    var $1199 = $1203;
                };
                var $1193 = $1199;
                break;
        };
        return $1193;
    };
    const Parser$one = x0 => Parser$one$(x0);

    function Kind$Parser$comment$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1205 = self.err;
                var _reply$7 = Parser$text$("//", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1207 = self.err;
                        var self = $1205;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1209 = self.value;
                                var $1210 = Parser$Reply$error$(Parser$Error$combine$($1209, $1207));
                                var $1208 = $1210;
                                break;
                            case 'Maybe.none':
                                var $1211 = Parser$Reply$error$($1207);
                                var $1208 = $1211;
                                break;
                        };
                        var $1206 = $1208;
                        break;
                    case 'Parser.Reply.value':
                        var $1212 = self.pst;
                        var self = $1212;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1214 = self.err;
                                var $1215 = self.nam;
                                var $1216 = self.ini;
                                var $1217 = self.idx;
                                var $1218 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1205, $1214), $1215, $1216, $1217, $1218);
                                var _end$16 = Parser$choice(List$cons$(Parser$text("\u{a}"), List$cons$(Parser$eof, List$nil)));
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1220 = self.err;
                                        var _reply$22 = Parser$until$(_end$16, Parser$one)(_reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1222 = self.err;
                                                var self = $1220;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1224 = self.value;
                                                        var $1225 = Parser$Reply$error$(Parser$Error$combine$($1224, $1222));
                                                        var $1223 = $1225;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1226 = Parser$Reply$error$($1222);
                                                        var $1223 = $1226;
                                                        break;
                                                };
                                                var $1221 = $1223;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1227 = self.pst;
                                                var self = $1227;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1229 = self.err;
                                                        var $1230 = self.nam;
                                                        var $1231 = self.ini;
                                                        var $1232 = self.idx;
                                                        var $1233 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1220, $1229), $1230, $1231, $1232, $1233);
                                                        var $1234 = Parser$Reply$value$(_reply$pst$30, Unit$new);
                                                        var $1228 = $1234;
                                                        break;
                                                };
                                                var $1221 = $1228;
                                                break;
                                        };
                                        var $1219 = $1221;
                                        break;
                                };
                                var $1213 = $1219;
                                break;
                        };
                        var $1206 = $1213;
                        break;
                };
                var $1204 = $1206;
                break;
        };
        return $1204;
    };
    const Kind$Parser$comment = x0 => Kind$Parser$comment$(x0);
    const Kind$Parser$spaces = Parser$many$(Parser$choice(List$cons$(Parser$text(" "), List$cons$(Parser$text("\u{9}"), List$cons$(Parser$text("\u{d}"), List$cons$(Parser$text("\u{a}"), List$cons$(Kind$Parser$comment, List$nil)))))));

    function Parser$get_idx$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1236 = self.idx;
                var $1237 = Parser$Reply$value$(_pst$1, $1236);
                var $1235 = $1237;
                break;
        };
        return $1235;
    };
    const Parser$get_idx = x0 => Parser$get_idx$(x0);

    function U16$btw$(_a$1, _b$2, _c$3) {
        var $1238 = ((_a$1 <= _b$2) && (_b$2 <= _c$3));
        return $1238;
    };
    const U16$btw = x0 => x1 => x2 => U16$btw$(x0, x1, x2);

    function Kind$Name$is_letter$(_chr$1) {
        var self = U16$btw$(65, _chr$1, 90);
        if (self) {
            var $1240 = Bool$true;
            var $1239 = $1240;
        } else {
            var self = U16$btw$(97, _chr$1, 122);
            if (self) {
                var $1242 = Bool$true;
                var $1241 = $1242;
            } else {
                var self = U16$btw$(48, _chr$1, 57);
                if (self) {
                    var $1244 = Bool$true;
                    var $1243 = $1244;
                } else {
                    var self = (46 === _chr$1);
                    if (self) {
                        var $1246 = Bool$true;
                        var $1245 = $1246;
                    } else {
                        var self = (95 === _chr$1);
                        if (self) {
                            var $1248 = Bool$true;
                            var $1247 = $1248;
                        } else {
                            var self = (94 === _chr$1);
                            if (self) {
                                var $1250 = Bool$true;
                                var $1249 = $1250;
                            } else {
                                var $1251 = Bool$false;
                                var $1249 = $1251;
                            };
                            var $1247 = $1249;
                        };
                        var $1245 = $1247;
                    };
                    var $1243 = $1245;
                };
                var $1241 = $1243;
            };
            var $1239 = $1241;
        };
        return $1239;
    };
    const Kind$Name$is_letter = x0 => Kind$Name$is_letter$(x0);

    function Kind$Parser$letter$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1253 = self.err;
                var $1254 = self.nam;
                var $1255 = self.ini;
                var $1256 = self.idx;
                var $1257 = self.str;
                var self = $1257;
                if (self.length === 0) {
                    var $1259 = Parser$Reply$fail$($1254, $1255, $1256, "Unexpected eof.");
                    var $1258 = $1259;
                } else {
                    var $1260 = self.charCodeAt(0);
                    var $1261 = self.slice(1);
                    var self = Kind$Name$is_letter$($1260);
                    if (self) {
                        var _pst$9 = Parser$State$new$($1253, $1254, $1255, Nat$succ$($1256), $1261);
                        var $1263 = Parser$Reply$value$(_pst$9, $1260);
                        var $1262 = $1263;
                    } else {
                        var $1264 = Parser$Reply$fail$($1254, $1255, $1256, "Expected name.");
                        var $1262 = $1264;
                    };
                    var $1258 = $1262;
                };
                var $1252 = $1258;
                break;
        };
        return $1252;
    };
    const Kind$Parser$letter = x0 => Kind$Parser$letter$(x0);

    function List$fold$(_list$2, _nil$4, _cons$5) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $1266 = self.head;
                var $1267 = self.tail;
                var $1268 = _cons$5($1266)(List$fold$($1267, _nil$4, _cons$5));
                var $1265 = $1268;
                break;
            case 'List.nil':
                var $1269 = _nil$4;
                var $1265 = $1269;
                break;
        };
        return $1265;
    };
    const List$fold = x0 => x1 => x2 => List$fold$(x0, x1, x2);

    function Parser$fail$(_error$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $1271 = self.nam;
                var $1272 = self.ini;
                var $1273 = self.idx;
                var $1274 = Parser$Reply$fail$($1271, $1272, $1273, _error$2);
                var $1270 = $1274;
                break;
        };
        return $1270;
    };
    const Parser$fail = x0 => x1 => Parser$fail$(x0, x1);

    function String$head$(_xs$1) {
        var self = _xs$1;
        if (self.length === 0) {
            var $1276 = Maybe$none;
            var $1275 = $1276;
        } else {
            var $1277 = self.charCodeAt(0);
            var $1278 = self.slice(1);
            var $1279 = Maybe$some$($1277);
            var $1275 = $1279;
        };
        return $1275;
    };
    const String$head = x0 => String$head$(x0);

    function Kind$Parser$name1$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1281 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1283 = self.err;
                        var self = $1281;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1285 = self.value;
                                var $1286 = Parser$Reply$error$(Parser$Error$combine$($1285, $1283));
                                var $1284 = $1286;
                                break;
                            case 'Maybe.none':
                                var $1287 = Parser$Reply$error$($1283);
                                var $1284 = $1287;
                                break;
                        };
                        var $1282 = $1284;
                        break;
                    case 'Parser.Reply.value':
                        var $1288 = self.pst;
                        var self = $1288;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1290 = self.err;
                                var $1291 = self.nam;
                                var $1292 = self.ini;
                                var $1293 = self.idx;
                                var $1294 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1281, $1290), $1291, $1292, $1293, $1294);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1296 = self.err;
                                        var _reply$21 = Parser$many1$(Kind$Parser$letter, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1298 = self.err;
                                                var self = $1296;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1300 = self.value;
                                                        var $1301 = Parser$Reply$error$(Parser$Error$combine$($1300, $1298));
                                                        var $1299 = $1301;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1302 = Parser$Reply$error$($1298);
                                                        var $1299 = $1302;
                                                        break;
                                                };
                                                var $1297 = $1299;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1303 = self.pst;
                                                var $1304 = self.val;
                                                var self = $1303;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1306 = self.err;
                                                        var $1307 = self.nam;
                                                        var $1308 = self.ini;
                                                        var $1309 = self.idx;
                                                        var $1310 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1296, $1306), $1307, $1308, $1309, $1310);
                                                        var _name$30 = List$fold$($1304, String$nil, String$cons);
                                                        var _reserved$31 = Parser$fail("Reserved keyword.");
                                                        var _numeric$32 = Parser$fail("Name can\'t start with number or sign.");
                                                        var self = (_name$30 === "case");
                                                        if (self) {
                                                            var $1312 = _reserved$31;
                                                            var $1311 = $1312;
                                                        } else {
                                                            var self = (_name$30 === "do");
                                                            if (self) {
                                                                var $1314 = _reserved$31;
                                                                var $1313 = $1314;
                                                            } else {
                                                                var self = (_name$30 === "if");
                                                                if (self) {
                                                                    var $1316 = _reserved$31;
                                                                    var $1315 = $1316;
                                                                } else {
                                                                    var self = (_name$30 === "with");
                                                                    if (self) {
                                                                        var $1318 = _reserved$31;
                                                                        var $1317 = $1318;
                                                                    } else {
                                                                        var self = (_name$30 === "for");
                                                                        if (self) {
                                                                            var $1320 = _reserved$31;
                                                                            var $1319 = $1320;
                                                                        } else {
                                                                            var self = (_name$30 === "else");
                                                                            if (self) {
                                                                                var $1322 = _reserved$31;
                                                                                var $1321 = $1322;
                                                                            } else {
                                                                                var self = (_name$30 === "switch");
                                                                                if (self) {
                                                                                    var $1324 = _reserved$31;
                                                                                    var $1323 = $1324;
                                                                                } else {
                                                                                    var self = (Maybe$default$(String$head$(_name$30), 120) === 43);
                                                                                    if (self) {
                                                                                        var $1326 = _numeric$32;
                                                                                        var $1325 = $1326;
                                                                                    } else {
                                                                                        var self = (Maybe$default$(String$head$(_name$30), 120) === 45);
                                                                                        if (self) {
                                                                                            var $1328 = _numeric$32;
                                                                                            var $1327 = $1328;
                                                                                        } else {
                                                                                            var self = (Maybe$default$(String$head$(_name$30), 120) === 48);
                                                                                            if (self) {
                                                                                                var $1330 = _numeric$32;
                                                                                                var $1329 = $1330;
                                                                                            } else {
                                                                                                var self = (Maybe$default$(String$head$(_name$30), 120) === 49);
                                                                                                if (self) {
                                                                                                    var $1332 = _numeric$32;
                                                                                                    var $1331 = $1332;
                                                                                                } else {
                                                                                                    var self = (Maybe$default$(String$head$(_name$30), 120) === 50);
                                                                                                    if (self) {
                                                                                                        var $1334 = _numeric$32;
                                                                                                        var $1333 = $1334;
                                                                                                    } else {
                                                                                                        var self = (Maybe$default$(String$head$(_name$30), 120) === 51);
                                                                                                        if (self) {
                                                                                                            var $1336 = _numeric$32;
                                                                                                            var $1335 = $1336;
                                                                                                        } else {
                                                                                                            var self = (Maybe$default$(String$head$(_name$30), 120) === 52);
                                                                                                            if (self) {
                                                                                                                var $1338 = _numeric$32;
                                                                                                                var $1337 = $1338;
                                                                                                            } else {
                                                                                                                var self = (Maybe$default$(String$head$(_name$30), 120) === 53);
                                                                                                                if (self) {
                                                                                                                    var $1340 = _numeric$32;
                                                                                                                    var $1339 = $1340;
                                                                                                                } else {
                                                                                                                    var self = (Maybe$default$(String$head$(_name$30), 120) === 54);
                                                                                                                    if (self) {
                                                                                                                        var $1342 = _numeric$32;
                                                                                                                        var $1341 = $1342;
                                                                                                                    } else {
                                                                                                                        var self = (Maybe$default$(String$head$(_name$30), 120) === 55);
                                                                                                                        if (self) {
                                                                                                                            var $1344 = _numeric$32;
                                                                                                                            var $1343 = $1344;
                                                                                                                        } else {
                                                                                                                            var self = (Maybe$default$(String$head$(_name$30), 120) === 56);
                                                                                                                            if (self) {
                                                                                                                                var $1346 = _numeric$32;
                                                                                                                                var $1345 = $1346;
                                                                                                                            } else {
                                                                                                                                var self = (Maybe$default$(String$head$(_name$30), 120) === 57);
                                                                                                                                if (self) {
                                                                                                                                    var $1348 = _numeric$32;
                                                                                                                                    var $1347 = $1348;
                                                                                                                                } else {
                                                                                                                                    var $1349 = (_pst$33 => {
                                                                                                                                        var $1350 = Parser$Reply$value$(_pst$33, _name$30);
                                                                                                                                        return $1350;
                                                                                                                                    });
                                                                                                                                    var $1347 = $1349;
                                                                                                                                };
                                                                                                                                var $1345 = $1347;
                                                                                                                            };
                                                                                                                            var $1343 = $1345;
                                                                                                                        };
                                                                                                                        var $1341 = $1343;
                                                                                                                    };
                                                                                                                    var $1339 = $1341;
                                                                                                                };
                                                                                                                var $1337 = $1339;
                                                                                                            };
                                                                                                            var $1335 = $1337;
                                                                                                        };
                                                                                                        var $1333 = $1335;
                                                                                                    };
                                                                                                    var $1331 = $1333;
                                                                                                };
                                                                                                var $1329 = $1331;
                                                                                            };
                                                                                            var $1327 = $1329;
                                                                                        };
                                                                                        var $1325 = $1327;
                                                                                    };
                                                                                    var $1323 = $1325;
                                                                                };
                                                                                var $1321 = $1323;
                                                                            };
                                                                            var $1319 = $1321;
                                                                        };
                                                                        var $1317 = $1319;
                                                                    };
                                                                    var $1315 = $1317;
                                                                };
                                                                var $1313 = $1315;
                                                            };
                                                            var $1311 = $1313;
                                                        };
                                                        var $1311 = $1311(_reply$pst$29);
                                                        var $1305 = $1311;
                                                        break;
                                                };
                                                var $1297 = $1305;
                                                break;
                                        };
                                        var $1295 = $1297;
                                        break;
                                };
                                var $1289 = $1295;
                                break;
                        };
                        var $1282 = $1289;
                        break;
                };
                var $1280 = $1282;
                break;
        };
        return $1280;
    };
    const Kind$Parser$name1 = x0 => Kind$Parser$name1$(x0);

    function Parser$until1$(_cond$2, _parser$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $1352 = self.err;
                var _reply$10 = _parser$3(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1354 = self.err;
                        var self = $1352;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1356 = self.value;
                                var $1357 = Parser$Reply$error$(Parser$Error$combine$($1356, $1354));
                                var $1355 = $1357;
                                break;
                            case 'Maybe.none':
                                var $1358 = Parser$Reply$error$($1354);
                                var $1355 = $1358;
                                break;
                        };
                        var $1353 = $1355;
                        break;
                    case 'Parser.Reply.value':
                        var $1359 = self.pst;
                        var $1360 = self.val;
                        var self = $1359;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1362 = self.err;
                                var $1363 = self.nam;
                                var $1364 = self.ini;
                                var $1365 = self.idx;
                                var $1366 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($1352, $1362), $1363, $1364, $1365, $1366);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1368 = self.err;
                                        var _reply$24 = Parser$until$(_cond$2, _parser$3)(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1370 = self.err;
                                                var self = $1368;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1372 = self.value;
                                                        var $1373 = Parser$Reply$error$(Parser$Error$combine$($1372, $1370));
                                                        var $1371 = $1373;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1374 = Parser$Reply$error$($1370);
                                                        var $1371 = $1374;
                                                        break;
                                                };
                                                var $1369 = $1371;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1375 = self.pst;
                                                var $1376 = self.val;
                                                var self = $1375;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1378 = self.err;
                                                        var $1379 = self.nam;
                                                        var $1380 = self.ini;
                                                        var $1381 = self.idx;
                                                        var $1382 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($1368, $1378), $1379, $1380, $1381, $1382);
                                                        var $1383 = Parser$Reply$value$(_reply$pst$32, List$cons$($1360, $1376));
                                                        var $1377 = $1383;
                                                        break;
                                                };
                                                var $1369 = $1377;
                                                break;
                                        };
                                        var $1367 = $1369;
                                        break;
                                };
                                var $1361 = $1367;
                                break;
                        };
                        var $1353 = $1361;
                        break;
                };
                var $1351 = $1353;
                break;
        };
        return $1351;
    };
    const Parser$until1 = x0 => x1 => x2 => Parser$until1$(x0, x1, x2);

    function Parser$wrap1$(_opens$2, _parse$3, _close$4, _pst$5) {
        var self = _pst$5;
        switch (self._) {
            case 'Parser.State.new':
                var $1385 = self.err;
                var _reply$11 = _opens$2(_pst$5);
                var self = _reply$11;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1387 = self.err;
                        var self = $1385;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1389 = self.value;
                                var $1390 = Parser$Reply$error$(Parser$Error$combine$($1389, $1387));
                                var $1388 = $1390;
                                break;
                            case 'Maybe.none':
                                var $1391 = Parser$Reply$error$($1387);
                                var $1388 = $1391;
                                break;
                        };
                        var $1386 = $1388;
                        break;
                    case 'Parser.Reply.value':
                        var $1392 = self.pst;
                        var self = $1392;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1394 = self.err;
                                var $1395 = self.nam;
                                var $1396 = self.ini;
                                var $1397 = self.idx;
                                var $1398 = self.str;
                                var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($1385, $1394), $1395, $1396, $1397, $1398);
                                var $1399 = Parser$until1$(_close$4, _parse$3, _reply$pst$19);
                                var $1393 = $1399;
                                break;
                        };
                        var $1386 = $1393;
                        break;
                };
                var $1384 = $1386;
                break;
        };
        return $1384;
    };
    const Parser$wrap1 = x0 => x1 => x2 => x3 => Parser$wrap1$(x0, x1, x2, x3);

    function Kind$Parser$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1401 = self.err;
                var _reply$8 = Kind$Parser$spaces(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1403 = self.err;
                        var self = $1401;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1405 = self.value;
                                var $1406 = Parser$Reply$error$(Parser$Error$combine$($1405, $1403));
                                var $1404 = $1406;
                                break;
                            case 'Maybe.none':
                                var $1407 = Parser$Reply$error$($1403);
                                var $1404 = $1407;
                                break;
                        };
                        var $1402 = $1404;
                        break;
                    case 'Parser.Reply.value':
                        var $1408 = self.pst;
                        var self = $1408;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1410 = self.err;
                                var $1411 = self.nam;
                                var $1412 = self.ini;
                                var $1413 = self.idx;
                                var $1414 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1401, $1410), $1411, $1412, $1413, $1414);
                                var $1415 = Parser$text$(_text$1, _reply$pst$16);
                                var $1409 = $1415;
                                break;
                        };
                        var $1402 = $1409;
                        break;
                };
                var $1400 = $1402;
                break;
        };
        return $1400;
    };
    const Kind$Parser$text = x0 => x1 => Kind$Parser$text$(x0, x1);

    function Parser$maybe$(_parse$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var self = _parse$2(_pst$3);
                switch (self._) {
                    case 'Parser.Reply.value':
                        var $1418 = self.pst;
                        var $1419 = self.val;
                        var $1420 = Parser$Reply$value$($1418, Maybe$some$($1419));
                        var $1417 = $1420;
                        break;
                    case 'Parser.Reply.error':
                        var $1421 = Parser$Reply$value$(_pst$3, Maybe$none);
                        var $1417 = $1421;
                        break;
                };
                var $1416 = $1417;
                break;
        };
        return $1416;
    };
    const Parser$maybe = x0 => x1 => Parser$maybe$(x0, x1);

    function Kind$Parser$items1$(_ini$2, _parser$3, _end$4) {
        var $1422 = Parser$wrap1(Kind$Parser$text(_ini$2))((_pst$5 => {
            var self = _pst$5;
            switch (self._) {
                case 'Parser.State.new':
                    var $1424 = self.err;
                    var _reply$11 = Kind$Parser$spaces(_pst$5);
                    var self = _reply$11;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1426 = self.err;
                            var self = $1424;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1428 = self.value;
                                    var $1429 = Parser$Reply$error$(Parser$Error$combine$($1428, $1426));
                                    var $1427 = $1429;
                                    break;
                                case 'Maybe.none':
                                    var $1430 = Parser$Reply$error$($1426);
                                    var $1427 = $1430;
                                    break;
                            };
                            var $1425 = $1427;
                            break;
                        case 'Parser.Reply.value':
                            var $1431 = self.pst;
                            var self = $1431;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1433 = self.err;
                                    var $1434 = self.nam;
                                    var $1435 = self.ini;
                                    var $1436 = self.idx;
                                    var $1437 = self.str;
                                    var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($1424, $1433), $1434, $1435, $1436, $1437);
                                    var self = _reply$pst$19;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $1439 = self.err;
                                            var _reply$25 = _parser$3(_reply$pst$19);
                                            var self = _reply$25;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $1441 = self.err;
                                                    var self = $1439;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $1443 = self.value;
                                                            var $1444 = Parser$Reply$error$(Parser$Error$combine$($1443, $1441));
                                                            var $1442 = $1444;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $1445 = Parser$Reply$error$($1441);
                                                            var $1442 = $1445;
                                                            break;
                                                    };
                                                    var $1440 = $1442;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $1446 = self.pst;
                                                    var $1447 = self.val;
                                                    var self = $1446;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $1449 = self.err;
                                                            var $1450 = self.nam;
                                                            var $1451 = self.ini;
                                                            var $1452 = self.idx;
                                                            var $1453 = self.str;
                                                            var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($1439, $1449), $1450, $1451, $1452, $1453);
                                                            var self = _reply$pst$33;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1455 = self.err;
                                                                    var _reply$39 = Parser$maybe$(Kind$Parser$text(","), _reply$pst$33);
                                                                    var self = _reply$39;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $1457 = self.err;
                                                                            var self = $1455;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $1459 = self.value;
                                                                                    var $1460 = Parser$Reply$error$(Parser$Error$combine$($1459, $1457));
                                                                                    var $1458 = $1460;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $1461 = Parser$Reply$error$($1457);
                                                                                    var $1458 = $1461;
                                                                                    break;
                                                                            };
                                                                            var $1456 = $1458;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $1462 = self.pst;
                                                                            var self = $1462;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $1464 = self.err;
                                                                                    var $1465 = self.nam;
                                                                                    var $1466 = self.ini;
                                                                                    var $1467 = self.idx;
                                                                                    var $1468 = self.str;
                                                                                    var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($1455, $1464), $1465, $1466, $1467, $1468);
                                                                                    var $1469 = Parser$Reply$value$(_reply$pst$47, $1447);
                                                                                    var $1463 = $1469;
                                                                                    break;
                                                                            };
                                                                            var $1456 = $1463;
                                                                            break;
                                                                    };
                                                                    var $1454 = $1456;
                                                                    break;
                                                            };
                                                            var $1448 = $1454;
                                                            break;
                                                    };
                                                    var $1440 = $1448;
                                                    break;
                                            };
                                            var $1438 = $1440;
                                            break;
                                    };
                                    var $1432 = $1438;
                                    break;
                            };
                            var $1425 = $1432;
                            break;
                    };
                    var $1423 = $1425;
                    break;
            };
            return $1423;
        }))(Kind$Parser$text(_end$4));
        return $1422;
    };
    const Kind$Parser$items1 = x0 => x1 => x2 => Kind$Parser$items1$(x0, x1, x2);

    function Kind$Parser$name$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1471 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1473 = self.err;
                        var self = $1471;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1475 = self.value;
                                var $1476 = Parser$Reply$error$(Parser$Error$combine$($1475, $1473));
                                var $1474 = $1476;
                                break;
                            case 'Maybe.none':
                                var $1477 = Parser$Reply$error$($1473);
                                var $1474 = $1477;
                                break;
                        };
                        var $1472 = $1474;
                        break;
                    case 'Parser.Reply.value':
                        var $1478 = self.pst;
                        var self = $1478;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1480 = self.err;
                                var $1481 = self.nam;
                                var $1482 = self.ini;
                                var $1483 = self.idx;
                                var $1484 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1471, $1480), $1481, $1482, $1483, $1484);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1486 = self.err;
                                        var _reply$21 = Parser$many$(Kind$Parser$letter)(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1488 = self.err;
                                                var self = $1486;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1490 = self.value;
                                                        var $1491 = Parser$Reply$error$(Parser$Error$combine$($1490, $1488));
                                                        var $1489 = $1491;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1492 = Parser$Reply$error$($1488);
                                                        var $1489 = $1492;
                                                        break;
                                                };
                                                var $1487 = $1489;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1493 = self.pst;
                                                var $1494 = self.val;
                                                var self = $1493;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1496 = self.err;
                                                        var $1497 = self.nam;
                                                        var $1498 = self.ini;
                                                        var $1499 = self.idx;
                                                        var $1500 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1486, $1496), $1497, $1498, $1499, $1500);
                                                        var $1501 = Parser$Reply$value$(_reply$pst$29, List$fold$($1494, String$nil, String$cons));
                                                        var $1495 = $1501;
                                                        break;
                                                };
                                                var $1487 = $1495;
                                                break;
                                        };
                                        var $1485 = $1487;
                                        break;
                                };
                                var $1479 = $1485;
                                break;
                        };
                        var $1472 = $1479;
                        break;
                };
                var $1470 = $1472;
                break;
        };
        return $1470;
    };
    const Kind$Parser$name = x0 => Kind$Parser$name$(x0);

    function Kind$Term$ori$(_orig$1, _expr$2) {
        var $1502 = ({
            _: 'Kind.Term.ori',
            'orig': _orig$1,
            'expr': _expr$2
        });
        return $1502;
    };
    const Kind$Term$ori = x0 => x1 => Kind$Term$ori$(x0, x1);

    function Kind$Parser$block$(_name$1, _parse$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var _reply$9 = Kind$Parser$spaces(_pst$3);
                var self = _reply$9;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1505 = self.err;
                        var $1506 = Parser$Reply$error$($1505);
                        var $1504 = $1506;
                        break;
                    case 'Parser.Reply.value':
                        var $1507 = self.pst;
                        var _pst$12 = $1507;
                        var self = _pst$12;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1509 = self.err;
                                var $1510 = self.nam;
                                var $1511 = self.ini;
                                var $1512 = self.idx;
                                var $1513 = self.str;
                                var _reply$18 = _parse$2(Parser$State$new$($1509, _name$1, $1512, $1512, $1513));
                                var self = _reply$18;
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $1515 = self.err;
                                        var $1516 = Parser$Reply$error$($1515);
                                        var $1514 = $1516;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $1517 = self.pst;
                                        var $1518 = self.val;
                                        var self = $1517;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $1520 = self.err;
                                                var $1521 = self.idx;
                                                var $1522 = self.str;
                                                var _new_pst$26 = Parser$State$new$($1520, $1510, $1511, $1521, $1522);
                                                var $1523 = Parser$Reply$value$(_new_pst$26, Kind$Term$ori$(Pair$new$($1512, $1521), $1518));
                                                var $1519 = $1523;
                                                break;
                                        };
                                        var $1514 = $1519;
                                        break;
                                };
                                var $1508 = $1514;
                                break;
                        };
                        var $1504 = $1508;
                        break;
                };
                var $1503 = $1504;
                break;
        };
        return $1503;
    };
    const Kind$Parser$block = x0 => x1 => x2 => Kind$Parser$block$(x0, x1, x2);

    function Kind$Parser$dom$prop$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1525 = self.err;
                var _reply$7 = Kind$Parser$name1$(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1527 = self.err;
                        var self = $1525;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1529 = self.value;
                                var $1530 = Parser$Reply$error$(Parser$Error$combine$($1529, $1527));
                                var $1528 = $1530;
                                break;
                            case 'Maybe.none':
                                var $1531 = Parser$Reply$error$($1527);
                                var $1528 = $1531;
                                break;
                        };
                        var $1526 = $1528;
                        break;
                    case 'Parser.Reply.value':
                        var $1532 = self.pst;
                        var $1533 = self.val;
                        var self = $1532;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1535 = self.err;
                                var $1536 = self.nam;
                                var $1537 = self.ini;
                                var $1538 = self.idx;
                                var $1539 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1525, $1535), $1536, $1537, $1538, $1539);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1541 = self.err;
                                        var _reply$21 = Kind$Parser$text$("=", _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1543 = self.err;
                                                var self = $1541;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1545 = self.value;
                                                        var $1546 = Parser$Reply$error$(Parser$Error$combine$($1545, $1543));
                                                        var $1544 = $1546;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1547 = Parser$Reply$error$($1543);
                                                        var $1544 = $1547;
                                                        break;
                                                };
                                                var $1542 = $1544;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1548 = self.pst;
                                                var self = $1548;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1550 = self.err;
                                                        var $1551 = self.nam;
                                                        var $1552 = self.ini;
                                                        var $1553 = self.idx;
                                                        var $1554 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1541, $1550), $1551, $1552, $1553, $1554);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1556 = self.err;
                                                                var _reply$35 = Kind$Parser$term(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1558 = self.err;
                                                                        var self = $1556;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1560 = self.value;
                                                                                var $1561 = Parser$Reply$error$(Parser$Error$combine$($1560, $1558));
                                                                                var $1559 = $1561;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1562 = Parser$Reply$error$($1558);
                                                                                var $1559 = $1562;
                                                                                break;
                                                                        };
                                                                        var $1557 = $1559;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1563 = self.pst;
                                                                        var $1564 = self.val;
                                                                        var self = $1563;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1566 = self.err;
                                                                                var $1567 = self.nam;
                                                                                var $1568 = self.ini;
                                                                                var $1569 = self.idx;
                                                                                var $1570 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1556, $1566), $1567, $1568, $1569, $1570);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1572 = self.err;
                                                                                        var _reply$49 = Kind$Parser$spaces(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1574 = self.err;
                                                                                                var self = $1572;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1576 = self.value;
                                                                                                        var $1577 = Parser$Reply$error$(Parser$Error$combine$($1576, $1574));
                                                                                                        var $1575 = $1577;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1578 = Parser$Reply$error$($1574);
                                                                                                        var $1575 = $1578;
                                                                                                        break;
                                                                                                };
                                                                                                var $1573 = $1575;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1579 = self.pst;
                                                                                                var self = $1579;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1581 = self.err;
                                                                                                        var $1582 = self.nam;
                                                                                                        var $1583 = self.ini;
                                                                                                        var $1584 = self.idx;
                                                                                                        var $1585 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($1572, $1581), $1582, $1583, $1584, $1585);
                                                                                                        var $1586 = Parser$Reply$value$(_reply$pst$57, Pair$new$($1533, $1564));
                                                                                                        var $1580 = $1586;
                                                                                                        break;
                                                                                                };
                                                                                                var $1573 = $1580;
                                                                                                break;
                                                                                        };
                                                                                        var $1571 = $1573;
                                                                                        break;
                                                                                };
                                                                                var $1565 = $1571;
                                                                                break;
                                                                        };
                                                                        var $1557 = $1565;
                                                                        break;
                                                                };
                                                                var $1555 = $1557;
                                                                break;
                                                        };
                                                        var $1549 = $1555;
                                                        break;
                                                };
                                                var $1542 = $1549;
                                                break;
                                        };
                                        var $1540 = $1542;
                                        break;
                                };
                                var $1534 = $1540;
                                break;
                        };
                        var $1526 = $1534;
                        break;
                };
                var $1524 = $1526;
                break;
        };
        return $1524;
    };
    const Kind$Parser$dom$prop = x0 => Kind$Parser$dom$prop$(x0);

    function Kind$Term$hol$(_path$1) {
        var $1587 = ({
            _: 'Kind.Term.hol',
            'path': _path$1
        });
        return $1587;
    };
    const Kind$Term$hol = x0 => Kind$Term$hol$(x0);

    function Kind$Parser$dom$gen_prop$go$(_values$1, _result$2) {
        var Kind$Parser$dom$gen_prop$go$ = (_values$1, _result$2) => ({
            ctr: 'TCO',
            arg: [_values$1, _result$2]
        });
        var Kind$Parser$dom$gen_prop$go = _values$1 => _result$2 => Kind$Parser$dom$gen_prop$go$(_values$1, _result$2);
        var arg = [_values$1, _result$2];
        while (true) {
            let [_values$1, _result$2] = arg;
            var R = (() => {
                var self = _values$1;
                switch (self._) {
                    case 'List.cons':
                        var $1588 = self.head;
                        var $1589 = self.tail;
                        var self = $1588;
                        switch (self._) {
                            case 'Pair.new':
                                var $1591 = self.fst;
                                var $1592 = self.snd;
                                var self = ($1591 === "style");
                                if (self) {
                                    var $1594 = Kind$Parser$dom$gen_prop$go$($1589, Pair$new$((() => {
                                        var self = _result$2;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $1595 = self.fst;
                                                var $1596 = $1595;
                                                return $1596;
                                        };
                                    })(), $1592));
                                    var $1593 = $1594;
                                } else {
                                    var _pair$7 = Kind$Term$ref$("Pair.new");
                                    var _pair$8 = Kind$Term$app$(_pair$7, Kind$Term$hol$(Bits$e));
                                    var _pair$9 = Kind$Term$app$(_pair$8, Kind$Term$hol$(Bits$e));
                                    var _pair$10 = Kind$Term$app$(_pair$9, Kind$Term$str$($1591));
                                    var _pair$11 = Kind$Term$app$(_pair$10, $1592);
                                    var _term$12 = Kind$Term$ref$("List.cons");
                                    var _term$13 = Kind$Term$app$(_term$12, Kind$Term$hol$(Bits$e));
                                    var _term$14 = Kind$Term$app$(_term$13, _pair$11);
                                    var _term$15 = Kind$Term$app$(_term$14, (() => {
                                        var self = _result$2;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $1598 = self.fst;
                                                var $1599 = $1598;
                                                return $1599;
                                        };
                                    })());
                                    var $1597 = Kind$Parser$dom$gen_prop$go$($1589, Pair$new$(_term$15, (() => {
                                        var self = _result$2;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $1600 = self.snd;
                                                var $1601 = $1600;
                                                return $1601;
                                        };
                                    })()));
                                    var $1593 = $1597;
                                };
                                var $1590 = $1593;
                                break;
                        };
                        return $1590;
                    case 'List.nil':
                        var $1602 = _result$2;
                        return $1602;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Parser$dom$gen_prop$go = x0 => x1 => Kind$Parser$dom$gen_prop$go$(x0, x1);

    function Kind$Parser$dom$gen_prop$(_values$1) {
        var _empty_list$2 = Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e));
        var _empty_map$3 = Kind$Term$app$(Kind$Term$ref$("Map.new"), Kind$Term$hol$(Bits$e));
        var self = Kind$Parser$dom$gen_prop$go$(_values$1, Pair$new$(_empty_list$2, _empty_map$3));
        switch (self._) {
            case 'Pair.new':
                var $1604 = self.fst;
                var $1605 = self.snd;
                var _term_prop$6 = Kind$Term$ref$("Map.from_list");
                var _term_prop$7 = Kind$Term$app$(_term_prop$6, Kind$Term$hol$(Bits$e));
                var _term_prop$8 = Kind$Term$app$(_term_prop$7, $1604);
                var $1606 = Pair$new$(_term_prop$8, $1605);
                var $1603 = $1606;
                break;
        };
        return $1603;
    };
    const Kind$Parser$dom$gen_prop = x0 => Kind$Parser$dom$gen_prop$(x0);
    const Kind$Parser$dom$for = Kind$Parser$block("for_dom")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1608 = self.err;
                var _reply$7 = Kind$Parser$text$("for ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1610 = self.err;
                        var self = $1608;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1612 = self.value;
                                var $1613 = Parser$Reply$error$(Parser$Error$combine$($1612, $1610));
                                var $1611 = $1613;
                                break;
                            case 'Maybe.none':
                                var $1614 = Parser$Reply$error$($1610);
                                var $1611 = $1614;
                                break;
                        };
                        var $1609 = $1611;
                        break;
                    case 'Parser.Reply.value':
                        var $1615 = self.pst;
                        var self = $1615;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1617 = self.err;
                                var $1618 = self.nam;
                                var $1619 = self.ini;
                                var $1620 = self.idx;
                                var $1621 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1608, $1617), $1618, $1619, $1620, $1621);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1623 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1625 = self.err;
                                                var self = $1623;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1627 = self.value;
                                                        var $1628 = Parser$Reply$error$(Parser$Error$combine$($1627, $1625));
                                                        var $1626 = $1628;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1629 = Parser$Reply$error$($1625);
                                                        var $1626 = $1629;
                                                        break;
                                                };
                                                var $1624 = $1626;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1630 = self.pst;
                                                var $1631 = self.val;
                                                var self = $1630;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1633 = self.err;
                                                        var $1634 = self.nam;
                                                        var $1635 = self.ini;
                                                        var $1636 = self.idx;
                                                        var $1637 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1623, $1633), $1634, $1635, $1636, $1637);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1639 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("in", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1641 = self.err;
                                                                        var self = $1639;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1643 = self.value;
                                                                                var $1644 = Parser$Reply$error$(Parser$Error$combine$($1643, $1641));
                                                                                var $1642 = $1644;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1645 = Parser$Reply$error$($1641);
                                                                                var $1642 = $1645;
                                                                                break;
                                                                        };
                                                                        var $1640 = $1642;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1646 = self.pst;
                                                                        var self = $1646;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1648 = self.err;
                                                                                var $1649 = self.nam;
                                                                                var $1650 = self.ini;
                                                                                var $1651 = self.idx;
                                                                                var $1652 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1639, $1648), $1649, $1650, $1651, $1652);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1654 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1656 = self.err;
                                                                                                var self = $1654;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1658 = self.value;
                                                                                                        var $1659 = Parser$Reply$error$(Parser$Error$combine$($1658, $1656));
                                                                                                        var $1657 = $1659;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1660 = Parser$Reply$error$($1656);
                                                                                                        var $1657 = $1660;
                                                                                                        break;
                                                                                                };
                                                                                                var $1655 = $1657;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1661 = self.pst;
                                                                                                var $1662 = self.val;
                                                                                                var self = $1661;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1664 = self.err;
                                                                                                        var $1665 = self.nam;
                                                                                                        var $1666 = self.ini;
                                                                                                        var $1667 = self.idx;
                                                                                                        var $1668 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($1654, $1664), $1665, $1666, $1667, $1668);
                                                                                                        var _empty_list$58 = Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e));
                                                                                                        var _list_cons$59 = Kind$Term$app$(Kind$Term$ref$("List.cons"), Kind$Term$hol$(Bits$e));
                                                                                                        var _empty_map$60 = Kind$Term$app$(Kind$Term$ref$("Map.new"), Kind$Term$hol$(Bits$e));
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1670 = self.err;
                                                                                                                var _reply$66 = Kind$Parser$text$(":", _reply$pst$57);
                                                                                                                var self = _reply$66;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1672 = self.err;
                                                                                                                        var self = $1670;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1674 = self.value;
                                                                                                                                var $1675 = Parser$Reply$error$(Parser$Error$combine$($1674, $1672));
                                                                                                                                var $1673 = $1675;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1676 = Parser$Reply$error$($1672);
                                                                                                                                var $1673 = $1676;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1671 = $1673;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1677 = self.pst;
                                                                                                                        var self = $1677;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1679 = self.err;
                                                                                                                                var $1680 = self.nam;
                                                                                                                                var $1681 = self.ini;
                                                                                                                                var $1682 = self.idx;
                                                                                                                                var $1683 = self.str;
                                                                                                                                var _reply$pst$74 = Parser$State$new$(Parser$Error$maybe_combine$($1670, $1679), $1680, $1681, $1682, $1683);
                                                                                                                                var self = _reply$pst$74;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1685 = self.err;
                                                                                                                                        var _reply$80 = Kind$Parser$term(_reply$pst$74);
                                                                                                                                        var self = _reply$80;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1687 = self.err;
                                                                                                                                                var self = $1685;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1689 = self.value;
                                                                                                                                                        var $1690 = Parser$Reply$error$(Parser$Error$combine$($1689, $1687));
                                                                                                                                                        var $1688 = $1690;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1691 = Parser$Reply$error$($1687);
                                                                                                                                                        var $1688 = $1691;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1686 = $1688;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1692 = self.pst;
                                                                                                                                                var $1693 = self.val;
                                                                                                                                                var self = $1692;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1695 = self.err;
                                                                                                                                                        var $1696 = self.nam;
                                                                                                                                                        var $1697 = self.ini;
                                                                                                                                                        var $1698 = self.idx;
                                                                                                                                                        var $1699 = self.str;
                                                                                                                                                        var _reply$pst$88 = Parser$State$new$(Parser$Error$maybe_combine$($1685, $1695), $1696, $1697, $1698, $1699);
                                                                                                                                                        var _term$89 = Kind$Term$ref$("List.fold");
                                                                                                                                                        var _term$90 = Kind$Term$app$(_term$89, Kind$Term$hol$(Bits$e));
                                                                                                                                                        var _term$91 = Kind$Term$app$(_term$90, $1662);
                                                                                                                                                        var _term$92 = Kind$Term$app$(_term$91, Kind$Term$hol$(Bits$e));
                                                                                                                                                        var _term$93 = Kind$Term$app$(_term$92, _empty_list$58);
                                                                                                                                                        var _lamb$94 = Kind$Term$lam$($1631, (_i$94 => {
                                                                                                                                                            var $1701 = Kind$Term$lam$("placeholder", (_b$95 => {
                                                                                                                                                                var $1702 = Kind$Term$app$(Kind$Term$app$(_list_cons$59, $1693), _b$95);
                                                                                                                                                                return $1702;
                                                                                                                                                            }));
                                                                                                                                                            return $1701;
                                                                                                                                                        }));
                                                                                                                                                        var _term$95 = Kind$Term$app$(_term$93, _lamb$94);
                                                                                                                                                        var _display_content$96 = Kind$Term$app$(Kind$Term$ref$("Map.set"), Kind$Term$hol$(Bits$e));
                                                                                                                                                        var _display_content$97 = Kind$Term$app$(_display_content$96, Kind$Term$str$("display"));
                                                                                                                                                        var _display_content$98 = Kind$Term$app$(_display_content$97, Kind$Term$str$("contents"));
                                                                                                                                                        var _display_content$99 = Kind$Term$app$(_display_content$98, _empty_map$60);
                                                                                                                                                        var _root$100 = Kind$Term$ref$("DOM.node");
                                                                                                                                                        var _root$101 = Kind$Term$app$(_root$100, Kind$Term$str$("div"));
                                                                                                                                                        var _root$102 = Kind$Term$app$(_root$101, _empty_map$60);
                                                                                                                                                        var _root$103 = Kind$Term$app$(_root$102, _display_content$99);
                                                                                                                                                        var _root$104 = Kind$Term$app$(_root$103, _term$95);
                                                                                                                                                        var $1700 = Parser$Reply$value$(_reply$pst$88, _root$104);
                                                                                                                                                        var $1694 = $1700;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1686 = $1694;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1684 = $1686;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1678 = $1684;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1671 = $1678;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1669 = $1671;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1663 = $1669;
                                                                                                        break;
                                                                                                };
                                                                                                var $1655 = $1663;
                                                                                                break;
                                                                                        };
                                                                                        var $1653 = $1655;
                                                                                        break;
                                                                                };
                                                                                var $1647 = $1653;
                                                                                break;
                                                                        };
                                                                        var $1640 = $1647;
                                                                        break;
                                                                };
                                                                var $1638 = $1640;
                                                                break;
                                                        };
                                                        var $1632 = $1638;
                                                        break;
                                                };
                                                var $1624 = $1632;
                                                break;
                                        };
                                        var $1622 = $1624;
                                        break;
                                };
                                var $1616 = $1622;
                                break;
                        };
                        var $1609 = $1616;
                        break;
                };
                var $1607 = $1609;
                break;
        };
        return $1607;
    }));
    const Kind$Parser$dom$dynamic = Kind$Parser$block("DOM_dynamic")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1704 = self.err;
                var _reply$7 = Kind$Parser$text$("{", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1706 = self.err;
                        var self = $1704;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1708 = self.value;
                                var $1709 = Parser$Reply$error$(Parser$Error$combine$($1708, $1706));
                                var $1707 = $1709;
                                break;
                            case 'Maybe.none':
                                var $1710 = Parser$Reply$error$($1706);
                                var $1707 = $1710;
                                break;
                        };
                        var $1705 = $1707;
                        break;
                    case 'Parser.Reply.value':
                        var $1711 = self.pst;
                        var self = $1711;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1713 = self.err;
                                var $1714 = self.nam;
                                var $1715 = self.ini;
                                var $1716 = self.idx;
                                var $1717 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1704, $1713), $1714, $1715, $1716, $1717);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1719 = self.err;
                                        var _reply$21 = Parser$choice$(List$cons$(Kind$Parser$term, List$nil), _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1721 = self.err;
                                                var self = $1719;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1723 = self.value;
                                                        var $1724 = Parser$Reply$error$(Parser$Error$combine$($1723, $1721));
                                                        var $1722 = $1724;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1725 = Parser$Reply$error$($1721);
                                                        var $1722 = $1725;
                                                        break;
                                                };
                                                var $1720 = $1722;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1726 = self.pst;
                                                var $1727 = self.val;
                                                var self = $1726;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1729 = self.err;
                                                        var $1730 = self.nam;
                                                        var $1731 = self.ini;
                                                        var $1732 = self.idx;
                                                        var $1733 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1719, $1729), $1730, $1731, $1732, $1733);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1735 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("}", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1737 = self.err;
                                                                        var self = $1735;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1739 = self.value;
                                                                                var $1740 = Parser$Reply$error$(Parser$Error$combine$($1739, $1737));
                                                                                var $1738 = $1740;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1741 = Parser$Reply$error$($1737);
                                                                                var $1738 = $1741;
                                                                                break;
                                                                        };
                                                                        var $1736 = $1738;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1742 = self.pst;
                                                                        var self = $1742;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1744 = self.err;
                                                                                var $1745 = self.nam;
                                                                                var $1746 = self.ini;
                                                                                var $1747 = self.idx;
                                                                                var $1748 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1735, $1744), $1745, $1746, $1747, $1748);
                                                                                var $1749 = Parser$Reply$value$(_reply$pst$43, $1727);
                                                                                var $1743 = $1749;
                                                                                break;
                                                                        };
                                                                        var $1736 = $1743;
                                                                        break;
                                                                };
                                                                var $1734 = $1736;
                                                                break;
                                                        };
                                                        var $1728 = $1734;
                                                        break;
                                                };
                                                var $1720 = $1728;
                                                break;
                                        };
                                        var $1718 = $1720;
                                        break;
                                };
                                var $1712 = $1718;
                                break;
                        };
                        var $1705 = $1712;
                        break;
                };
                var $1703 = $1705;
                break;
        };
        return $1703;
    }));
    const Kind$Parser$dom$text = Kind$Parser$block("DOM_text")((() => {
        var _term$1 = Kind$Term$ref$("DOM.text");
        var $1750 = (_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $1752 = self.err;
                    var _reply$8 = Kind$Parser$term(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1754 = self.err;
                            var self = $1752;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1756 = self.value;
                                    var $1757 = Parser$Reply$error$(Parser$Error$combine$($1756, $1754));
                                    var $1755 = $1757;
                                    break;
                                case 'Maybe.none':
                                    var $1758 = Parser$Reply$error$($1754);
                                    var $1755 = $1758;
                                    break;
                            };
                            var $1753 = $1755;
                            break;
                        case 'Parser.Reply.value':
                            var $1759 = self.pst;
                            var $1760 = self.val;
                            var self = $1759;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1762 = self.err;
                                    var $1763 = self.nam;
                                    var $1764 = self.ini;
                                    var $1765 = self.idx;
                                    var $1766 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1752, $1762), $1763, $1764, $1765, $1766);
                                    var _term$17 = Kind$Term$app$(_term$1, $1760);
                                    var $1767 = Parser$Reply$value$(_reply$pst$16, _term$17);
                                    var $1761 = $1767;
                                    break;
                            };
                            var $1753 = $1761;
                            break;
                    };
                    var $1751 = $1753;
                    break;
            };
            return $1751;
        });
        return $1750;
    })());
    const Kind$Parser$dom$leaf = Kind$Parser$block("DOM_leaf")(Parser$choice(List$cons$(Kind$Parser$dom$for, List$cons$(Kind$Parser$dom$dynamic, List$cons$(Kind$Parser$dom$text, List$nil)))));

    function Kind$Parser$dom$transform_children$(_a$1) {
        var self = _a$1;
        switch (self._) {
            case 'List.cons':
                var $1769 = self.head;
                var $1770 = self.tail;
                var _term$4 = Kind$Term$app$(Kind$Term$ref$("List.cons"), Kind$Term$hol$(Bits$e));
                var _term$5 = Kind$Term$app$(_term$4, $1769);
                var _term$6 = Kind$Term$app$(_term$5, Kind$Parser$dom$transform_children$($1770));
                var $1771 = _term$6;
                var $1768 = $1771;
                break;
            case 'List.nil':
                var $1772 = Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e));
                var $1768 = $1772;
                break;
        };
        return $1768;
    };
    const Kind$Parser$dom$transform_children = x0 => Kind$Parser$dom$transform_children$(x0);
    const Kind$Parser$dom$node = Kind$Parser$block("DOM.node")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1774 = self.err;
                var _reply$7 = Kind$Parser$text$("<", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1776 = self.err;
                        var self = $1774;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1778 = self.value;
                                var $1779 = Parser$Reply$error$(Parser$Error$combine$($1778, $1776));
                                var $1777 = $1779;
                                break;
                            case 'Maybe.none':
                                var $1780 = Parser$Reply$error$($1776);
                                var $1777 = $1780;
                                break;
                        };
                        var $1775 = $1777;
                        break;
                    case 'Parser.Reply.value':
                        var $1781 = self.pst;
                        var self = $1781;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1783 = self.err;
                                var $1784 = self.nam;
                                var $1785 = self.ini;
                                var $1786 = self.idx;
                                var $1787 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1774, $1783), $1784, $1785, $1786, $1787);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1789 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1791 = self.err;
                                                var self = $1789;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1793 = self.value;
                                                        var $1794 = Parser$Reply$error$(Parser$Error$combine$($1793, $1791));
                                                        var $1792 = $1794;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1795 = Parser$Reply$error$($1791);
                                                        var $1792 = $1795;
                                                        break;
                                                };
                                                var $1790 = $1792;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1796 = self.pst;
                                                var $1797 = self.val;
                                                var self = $1796;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1799 = self.err;
                                                        var $1800 = self.nam;
                                                        var $1801 = self.ini;
                                                        var $1802 = self.idx;
                                                        var $1803 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1789, $1799), $1800, $1801, $1802, $1803);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1805 = self.err;
                                                                var _reply$35 = Kind$Parser$spaces(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1807 = self.err;
                                                                        var self = $1805;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1809 = self.value;
                                                                                var $1810 = Parser$Reply$error$(Parser$Error$combine$($1809, $1807));
                                                                                var $1808 = $1810;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1811 = Parser$Reply$error$($1807);
                                                                                var $1808 = $1811;
                                                                                break;
                                                                        };
                                                                        var $1806 = $1808;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1812 = self.pst;
                                                                        var self = $1812;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1814 = self.err;
                                                                                var $1815 = self.nam;
                                                                                var $1816 = self.ini;
                                                                                var $1817 = self.idx;
                                                                                var $1818 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1805, $1814), $1815, $1816, $1817, $1818);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1820 = self.err;
                                                                                        var _reply$49 = Parser$until$(Kind$Parser$text(">"), Kind$Parser$dom$prop)(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1822 = self.err;
                                                                                                var self = $1820;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1824 = self.value;
                                                                                                        var $1825 = Parser$Reply$error$(Parser$Error$combine$($1824, $1822));
                                                                                                        var $1823 = $1825;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1826 = Parser$Reply$error$($1822);
                                                                                                        var $1823 = $1826;
                                                                                                        break;
                                                                                                };
                                                                                                var $1821 = $1823;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1827 = self.pst;
                                                                                                var $1828 = self.val;
                                                                                                var self = $1827;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1830 = self.err;
                                                                                                        var $1831 = self.nam;
                                                                                                        var $1832 = self.ini;
                                                                                                        var $1833 = self.idx;
                                                                                                        var $1834 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($1820, $1830), $1831, $1832, $1833, $1834);
                                                                                                        var _props$58 = Kind$Parser$dom$gen_prop$($1828);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1836 = self.err;
                                                                                                                var _reply$64 = Parser$many$(Parser$choice(List$cons$(Kind$Parser$dom$node, List$cons$(Kind$Parser$dom$leaf, List$nil))))(_reply$pst$57);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1838 = self.err;
                                                                                                                        var self = $1836;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1840 = self.value;
                                                                                                                                var $1841 = Parser$Reply$error$(Parser$Error$combine$($1840, $1838));
                                                                                                                                var $1839 = $1841;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1842 = Parser$Reply$error$($1838);
                                                                                                                                var $1839 = $1842;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1837 = $1839;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1843 = self.pst;
                                                                                                                        var $1844 = self.val;
                                                                                                                        var self = $1843;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1846 = self.err;
                                                                                                                                var $1847 = self.nam;
                                                                                                                                var $1848 = self.ini;
                                                                                                                                var $1849 = self.idx;
                                                                                                                                var $1850 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1836, $1846), $1847, $1848, $1849, $1850);
                                                                                                                                var _children$73 = Kind$Parser$dom$transform_children$($1844);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1852 = self.err;
                                                                                                                                        var _reply$79 = Kind$Parser$text$(("</" + ($1797 + ">")), _reply$pst$72);
                                                                                                                                        var self = _reply$79;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1854 = self.err;
                                                                                                                                                var self = $1852;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1856 = self.value;
                                                                                                                                                        var $1857 = Parser$Reply$error$(Parser$Error$combine$($1856, $1854));
                                                                                                                                                        var $1855 = $1857;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1858 = Parser$Reply$error$($1854);
                                                                                                                                                        var $1855 = $1858;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1853 = $1855;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1859 = self.pst;
                                                                                                                                                var self = $1859;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1861 = self.err;
                                                                                                                                                        var $1862 = self.nam;
                                                                                                                                                        var $1863 = self.ini;
                                                                                                                                                        var $1864 = self.idx;
                                                                                                                                                        var $1865 = self.str;
                                                                                                                                                        var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($1852, $1861), $1862, $1863, $1864, $1865);
                                                                                                                                                        var _term$88 = Kind$Term$ref$("DOM.node");
                                                                                                                                                        var _term$89 = Kind$Term$app$(_term$88, Kind$Term$str$($1797));
                                                                                                                                                        var _term$90 = Kind$Term$app$(_term$89, (() => {
                                                                                                                                                            var self = _props$58;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Pair.new':
                                                                                                                                                                    var $1867 = self.fst;
                                                                                                                                                                    var $1868 = $1867;
                                                                                                                                                                    return $1868;
                                                                                                                                                            };
                                                                                                                                                        })());
                                                                                                                                                        var _term$91 = Kind$Term$app$(_term$90, (() => {
                                                                                                                                                            var self = _props$58;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Pair.new':
                                                                                                                                                                    var $1869 = self.snd;
                                                                                                                                                                    var $1870 = $1869;
                                                                                                                                                                    return $1870;
                                                                                                                                                            };
                                                                                                                                                        })());
                                                                                                                                                        var _term$92 = Kind$Term$app$(_term$91, _children$73);
                                                                                                                                                        var $1866 = Parser$Reply$value$(_reply$pst$87, _term$92);
                                                                                                                                                        var $1860 = $1866;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1853 = $1860;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1851 = $1853;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1845 = $1851;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1837 = $1845;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1835 = $1837;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1829 = $1835;
                                                                                                        break;
                                                                                                };
                                                                                                var $1821 = $1829;
                                                                                                break;
                                                                                        };
                                                                                        var $1819 = $1821;
                                                                                        break;
                                                                                };
                                                                                var $1813 = $1819;
                                                                                break;
                                                                        };
                                                                        var $1806 = $1813;
                                                                        break;
                                                                };
                                                                var $1804 = $1806;
                                                                break;
                                                        };
                                                        var $1798 = $1804;
                                                        break;
                                                };
                                                var $1790 = $1798;
                                                break;
                                        };
                                        var $1788 = $1790;
                                        break;
                                };
                                var $1782 = $1788;
                                break;
                        };
                        var $1775 = $1782;
                        break;
                };
                var $1773 = $1775;
                break;
        };
        return $1773;
    }));
    const Kind$Parser$dom = Kind$Parser$dom$node;
    const Kind$Parser$forall = Kind$Parser$block("forall")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1872 = self.err;
                var _reply$7 = Kind$Parser$name$(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1874 = self.err;
                        var self = $1872;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1876 = self.value;
                                var $1877 = Parser$Reply$error$(Parser$Error$combine$($1876, $1874));
                                var $1875 = $1877;
                                break;
                            case 'Maybe.none':
                                var $1878 = Parser$Reply$error$($1874);
                                var $1875 = $1878;
                                break;
                        };
                        var $1873 = $1875;
                        break;
                    case 'Parser.Reply.value':
                        var $1879 = self.pst;
                        var $1880 = self.val;
                        var self = $1879;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1882 = self.err;
                                var $1883 = self.nam;
                                var $1884 = self.ini;
                                var $1885 = self.idx;
                                var $1886 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1872, $1882), $1883, $1884, $1885, $1886);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1888 = self.err;
                                        var _reply$21 = Kind$Parser$binder$(":", _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1890 = self.err;
                                                var self = $1888;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1892 = self.value;
                                                        var $1893 = Parser$Reply$error$(Parser$Error$combine$($1892, $1890));
                                                        var $1891 = $1893;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1894 = Parser$Reply$error$($1890);
                                                        var $1891 = $1894;
                                                        break;
                                                };
                                                var $1889 = $1891;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1895 = self.pst;
                                                var $1896 = self.val;
                                                var self = $1895;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1898 = self.err;
                                                        var $1899 = self.nam;
                                                        var $1900 = self.ini;
                                                        var $1901 = self.idx;
                                                        var $1902 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1888, $1898), $1899, $1900, $1901, $1902);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1904 = self.err;
                                                                var _reply$35 = Parser$maybe$(Kind$Parser$text("->"), _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1906 = self.err;
                                                                        var self = $1904;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1908 = self.value;
                                                                                var $1909 = Parser$Reply$error$(Parser$Error$combine$($1908, $1906));
                                                                                var $1907 = $1909;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1910 = Parser$Reply$error$($1906);
                                                                                var $1907 = $1910;
                                                                                break;
                                                                        };
                                                                        var $1905 = $1907;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1911 = self.pst;
                                                                        var self = $1911;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1913 = self.err;
                                                                                var $1914 = self.nam;
                                                                                var $1915 = self.ini;
                                                                                var $1916 = self.idx;
                                                                                var $1917 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1904, $1913), $1914, $1915, $1916, $1917);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1919 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1921 = self.err;
                                                                                                var self = $1919;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1923 = self.value;
                                                                                                        var $1924 = Parser$Reply$error$(Parser$Error$combine$($1923, $1921));
                                                                                                        var $1922 = $1924;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1925 = Parser$Reply$error$($1921);
                                                                                                        var $1922 = $1925;
                                                                                                        break;
                                                                                                };
                                                                                                var $1920 = $1922;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1926 = self.pst;
                                                                                                var $1927 = self.val;
                                                                                                var self = $1926;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1929 = self.err;
                                                                                                        var $1930 = self.nam;
                                                                                                        var $1931 = self.ini;
                                                                                                        var $1932 = self.idx;
                                                                                                        var $1933 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($1919, $1929), $1930, $1931, $1932, $1933);
                                                                                                        var _term$58 = List$fold$($1896, $1927, (_x$58 => _t$59 => {
                                                                                                            var self = _x$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Kind.Binder.new':
                                                                                                                    var $1936 = self.eras;
                                                                                                                    var $1937 = self.name;
                                                                                                                    var $1938 = self.term;
                                                                                                                    var $1939 = Kind$Term$all$($1936, "", $1937, $1938, (_s$63 => _x$64 => {
                                                                                                                        var $1940 = _t$59;
                                                                                                                        return $1940;
                                                                                                                    }));
                                                                                                                    var $1935 = $1939;
                                                                                                                    break;
                                                                                                            };
                                                                                                            return $1935;
                                                                                                        }));
                                                                                                        var $1934 = Parser$Reply$value$(_reply$pst$57, (() => {
                                                                                                            var self = _term$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Kind.Term.all':
                                                                                                                    var $1941 = self.eras;
                                                                                                                    var $1942 = self.name;
                                                                                                                    var $1943 = self.xtyp;
                                                                                                                    var $1944 = self.body;
                                                                                                                    var $1945 = Kind$Term$all$($1941, $1880, $1942, $1943, $1944);
                                                                                                                    return $1945;
                                                                                                                case 'Kind.Term.var':
                                                                                                                case 'Kind.Term.ref':
                                                                                                                case 'Kind.Term.typ':
                                                                                                                case 'Kind.Term.lam':
                                                                                                                case 'Kind.Term.app':
                                                                                                                case 'Kind.Term.let':
                                                                                                                case 'Kind.Term.def':
                                                                                                                case 'Kind.Term.ann':
                                                                                                                case 'Kind.Term.gol':
                                                                                                                case 'Kind.Term.hol':
                                                                                                                case 'Kind.Term.nat':
                                                                                                                case 'Kind.Term.chr':
                                                                                                                case 'Kind.Term.str':
                                                                                                                case 'Kind.Term.num':
                                                                                                                case 'Kind.Term.cse':
                                                                                                                case 'Kind.Term.new':
                                                                                                                case 'Kind.Term.get':
                                                                                                                case 'Kind.Term.set':
                                                                                                                case 'Kind.Term.ope':
                                                                                                                case 'Kind.Term.ori':
                                                                                                                    var $1946 = _term$58;
                                                                                                                    return $1946;
                                                                                                            };
                                                                                                        })());
                                                                                                        var $1928 = $1934;
                                                                                                        break;
                                                                                                };
                                                                                                var $1920 = $1928;
                                                                                                break;
                                                                                        };
                                                                                        var $1918 = $1920;
                                                                                        break;
                                                                                };
                                                                                var $1912 = $1918;
                                                                                break;
                                                                        };
                                                                        var $1905 = $1912;
                                                                        break;
                                                                };
                                                                var $1903 = $1905;
                                                                break;
                                                        };
                                                        var $1897 = $1903;
                                                        break;
                                                };
                                                var $1889 = $1897;
                                                break;
                                        };
                                        var $1887 = $1889;
                                        break;
                                };
                                var $1881 = $1887;
                                break;
                        };
                        var $1873 = $1881;
                        break;
                };
                var $1871 = $1873;
                break;
        };
        return $1871;
    }));

    function Parser$wrap$(_opens$2, _parse$3, _close$4, _pst$5) {
        var self = _pst$5;
        switch (self._) {
            case 'Parser.State.new':
                var $1948 = self.err;
                var _reply$11 = _opens$2(_pst$5);
                var self = _reply$11;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1950 = self.err;
                        var self = $1948;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1952 = self.value;
                                var $1953 = Parser$Reply$error$(Parser$Error$combine$($1952, $1950));
                                var $1951 = $1953;
                                break;
                            case 'Maybe.none':
                                var $1954 = Parser$Reply$error$($1950);
                                var $1951 = $1954;
                                break;
                        };
                        var $1949 = $1951;
                        break;
                    case 'Parser.Reply.value':
                        var $1955 = self.pst;
                        var self = $1955;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1957 = self.err;
                                var $1958 = self.nam;
                                var $1959 = self.ini;
                                var $1960 = self.idx;
                                var $1961 = self.str;
                                var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($1948, $1957), $1958, $1959, $1960, $1961);
                                var $1962 = Parser$until$(_close$4, _parse$3)(_reply$pst$19);
                                var $1956 = $1962;
                                break;
                        };
                        var $1949 = $1956;
                        break;
                };
                var $1947 = $1949;
                break;
        };
        return $1947;
    };
    const Parser$wrap = x0 => x1 => x2 => x3 => Parser$wrap$(x0, x1, x2, x3);

    function Kind$Parser$items$(_ini$2, _parser$3, _end$4) {
        var $1963 = Parser$wrap(Kind$Parser$text(_ini$2))((_pst$5 => {
            var self = _pst$5;
            switch (self._) {
                case 'Parser.State.new':
                    var $1965 = self.err;
                    var _reply$11 = Kind$Parser$spaces(_pst$5);
                    var self = _reply$11;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1967 = self.err;
                            var self = $1965;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1969 = self.value;
                                    var $1970 = Parser$Reply$error$(Parser$Error$combine$($1969, $1967));
                                    var $1968 = $1970;
                                    break;
                                case 'Maybe.none':
                                    var $1971 = Parser$Reply$error$($1967);
                                    var $1968 = $1971;
                                    break;
                            };
                            var $1966 = $1968;
                            break;
                        case 'Parser.Reply.value':
                            var $1972 = self.pst;
                            var self = $1972;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1974 = self.err;
                                    var $1975 = self.nam;
                                    var $1976 = self.ini;
                                    var $1977 = self.idx;
                                    var $1978 = self.str;
                                    var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($1965, $1974), $1975, $1976, $1977, $1978);
                                    var self = _reply$pst$19;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $1980 = self.err;
                                            var _reply$25 = _parser$3(_reply$pst$19);
                                            var self = _reply$25;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $1982 = self.err;
                                                    var self = $1980;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $1984 = self.value;
                                                            var $1985 = Parser$Reply$error$(Parser$Error$combine$($1984, $1982));
                                                            var $1983 = $1985;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $1986 = Parser$Reply$error$($1982);
                                                            var $1983 = $1986;
                                                            break;
                                                    };
                                                    var $1981 = $1983;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $1987 = self.pst;
                                                    var $1988 = self.val;
                                                    var self = $1987;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $1990 = self.err;
                                                            var $1991 = self.nam;
                                                            var $1992 = self.ini;
                                                            var $1993 = self.idx;
                                                            var $1994 = self.str;
                                                            var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($1980, $1990), $1991, $1992, $1993, $1994);
                                                            var self = _reply$pst$33;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1996 = self.err;
                                                                    var _reply$39 = Parser$maybe$(Kind$Parser$text(","), _reply$pst$33);
                                                                    var self = _reply$39;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $1998 = self.err;
                                                                            var self = $1996;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2000 = self.value;
                                                                                    var $2001 = Parser$Reply$error$(Parser$Error$combine$($2000, $1998));
                                                                                    var $1999 = $2001;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2002 = Parser$Reply$error$($1998);
                                                                                    var $1999 = $2002;
                                                                                    break;
                                                                            };
                                                                            var $1997 = $1999;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2003 = self.pst;
                                                                            var self = $2003;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2005 = self.err;
                                                                                    var $2006 = self.nam;
                                                                                    var $2007 = self.ini;
                                                                                    var $2008 = self.idx;
                                                                                    var $2009 = self.str;
                                                                                    var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($1996, $2005), $2006, $2007, $2008, $2009);
                                                                                    var $2010 = Parser$Reply$value$(_reply$pst$47, $1988);
                                                                                    var $2004 = $2010;
                                                                                    break;
                                                                            };
                                                                            var $1997 = $2004;
                                                                            break;
                                                                    };
                                                                    var $1995 = $1997;
                                                                    break;
                                                            };
                                                            var $1989 = $1995;
                                                            break;
                                                    };
                                                    var $1981 = $1989;
                                                    break;
                                            };
                                            var $1979 = $1981;
                                            break;
                                    };
                                    var $1973 = $1979;
                                    break;
                            };
                            var $1966 = $1973;
                            break;
                    };
                    var $1964 = $1966;
                    break;
            };
            return $1964;
        }))(Kind$Parser$text(_end$4));
        return $1963;
    };
    const Kind$Parser$items = x0 => x1 => x2 => Kind$Parser$items$(x0, x1, x2);

    function Kind$Parser$lambda$make$(_names$1, _body$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.cons':
                var $2012 = self.head;
                var $2013 = self.tail;
                var $2014 = Kind$Term$lam$($2012, (_x$5 => {
                    var $2015 = Kind$Parser$lambda$make$($2013, _body$2);
                    return $2015;
                }));
                var $2011 = $2014;
                break;
            case 'List.nil':
                var $2016 = _body$2;
                var $2011 = $2016;
                break;
        };
        return $2011;
    };
    const Kind$Parser$lambda$make = x0 => x1 => Kind$Parser$lambda$make$(x0, x1);

    function Kind$Parser$lambda$make$start$(_names$1, _body$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.nil':
                var $2018 = Kind$Term$lam$("", (_x$3 => {
                    var $2019 = _body$2;
                    return $2019;
                }));
                var $2017 = $2018;
                break;
            case 'List.cons':
                var $2020 = Kind$Parser$lambda$make$(_names$1, _body$2);
                var $2017 = $2020;
                break;
        };
        return $2017;
    };
    const Kind$Parser$lambda$make$start = x0 => x1 => Kind$Parser$lambda$make$start$(x0, x1);
    const Kind$Parser$lambda = Kind$Parser$block("lambda")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $2022 = self.err;
                var _reply$7 = Kind$Parser$items$("(", Kind$Parser$name1, ")")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2024 = self.err;
                        var self = $2022;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2026 = self.value;
                                var $2027 = Parser$Reply$error$(Parser$Error$combine$($2026, $2024));
                                var $2025 = $2027;
                                break;
                            case 'Maybe.none':
                                var $2028 = Parser$Reply$error$($2024);
                                var $2025 = $2028;
                                break;
                        };
                        var $2023 = $2025;
                        break;
                    case 'Parser.Reply.value':
                        var $2029 = self.pst;
                        var $2030 = self.val;
                        var self = $2029;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2032 = self.err;
                                var $2033 = self.nam;
                                var $2034 = self.ini;
                                var $2035 = self.idx;
                                var $2036 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($2022, $2032), $2033, $2034, $2035, $2036);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2038 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2040 = self.err;
                                                var self = $2038;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2042 = self.value;
                                                        var $2043 = Parser$Reply$error$(Parser$Error$combine$($2042, $2040));
                                                        var $2041 = $2043;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2044 = Parser$Reply$error$($2040);
                                                        var $2041 = $2044;
                                                        break;
                                                };
                                                var $2039 = $2041;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2045 = self.pst;
                                                var $2046 = self.val;
                                                var self = $2045;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2048 = self.err;
                                                        var $2049 = self.nam;
                                                        var $2050 = self.ini;
                                                        var $2051 = self.idx;
                                                        var $2052 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($2038, $2048), $2049, $2050, $2051, $2052);
                                                        var $2053 = Parser$Reply$value$(_reply$pst$29, Kind$Parser$lambda$make$start$($2030, $2046));
                                                        var $2047 = $2053;
                                                        break;
                                                };
                                                var $2039 = $2047;
                                                break;
                                        };
                                        var $2037 = $2039;
                                        break;
                                };
                                var $2031 = $2037;
                                break;
                        };
                        var $2023 = $2031;
                        break;
                };
                var $2021 = $2023;
                break;
        };
        return $2021;
    }));
    const Kind$Parser$lambda$erased = Kind$Parser$block("lambda")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $2055 = self.err;
                var _reply$7 = Kind$Parser$items$("<", Kind$Parser$name1, ">")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2057 = self.err;
                        var self = $2055;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2059 = self.value;
                                var $2060 = Parser$Reply$error$(Parser$Error$combine$($2059, $2057));
                                var $2058 = $2060;
                                break;
                            case 'Maybe.none':
                                var $2061 = Parser$Reply$error$($2057);
                                var $2058 = $2061;
                                break;
                        };
                        var $2056 = $2058;
                        break;
                    case 'Parser.Reply.value':
                        var $2062 = self.pst;
                        var $2063 = self.val;
                        var self = $2062;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2065 = self.err;
                                var $2066 = self.nam;
                                var $2067 = self.ini;
                                var $2068 = self.idx;
                                var $2069 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($2055, $2065), $2066, $2067, $2068, $2069);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2071 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2073 = self.err;
                                                var self = $2071;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2075 = self.value;
                                                        var $2076 = Parser$Reply$error$(Parser$Error$combine$($2075, $2073));
                                                        var $2074 = $2076;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2077 = Parser$Reply$error$($2073);
                                                        var $2074 = $2077;
                                                        break;
                                                };
                                                var $2072 = $2074;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2078 = self.pst;
                                                var $2079 = self.val;
                                                var self = $2078;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2081 = self.err;
                                                        var $2082 = self.nam;
                                                        var $2083 = self.ini;
                                                        var $2084 = self.idx;
                                                        var $2085 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($2071, $2081), $2082, $2083, $2084, $2085);
                                                        var $2086 = Parser$Reply$value$(_reply$pst$29, Kind$Parser$lambda$make$start$($2063, $2079));
                                                        var $2080 = $2086;
                                                        break;
                                                };
                                                var $2072 = $2080;
                                                break;
                                        };
                                        var $2070 = $2072;
                                        break;
                                };
                                var $2064 = $2070;
                                break;
                        };
                        var $2056 = $2064;
                        break;
                };
                var $2054 = $2056;
                break;
        };
        return $2054;
    }));
    const Kind$Parser$parenthesis = Kind$Parser$block("parenthesis")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $2088 = self.err;
                var _reply$7 = Kind$Parser$text$("(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2090 = self.err;
                        var self = $2088;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2092 = self.value;
                                var $2093 = Parser$Reply$error$(Parser$Error$combine$($2092, $2090));
                                var $2091 = $2093;
                                break;
                            case 'Maybe.none':
                                var $2094 = Parser$Reply$error$($2090);
                                var $2091 = $2094;
                                break;
                        };
                        var $2089 = $2091;
                        break;
                    case 'Parser.Reply.value':
                        var $2095 = self.pst;
                        var self = $2095;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2097 = self.err;
                                var $2098 = self.nam;
                                var $2099 = self.ini;
                                var $2100 = self.idx;
                                var $2101 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($2088, $2097), $2098, $2099, $2100, $2101);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2103 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2105 = self.err;
                                                var self = $2103;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2107 = self.value;
                                                        var $2108 = Parser$Reply$error$(Parser$Error$combine$($2107, $2105));
                                                        var $2106 = $2108;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2109 = Parser$Reply$error$($2105);
                                                        var $2106 = $2109;
                                                        break;
                                                };
                                                var $2104 = $2106;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2110 = self.pst;
                                                var $2111 = self.val;
                                                var self = $2110;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2113 = self.err;
                                                        var $2114 = self.nam;
                                                        var $2115 = self.ini;
                                                        var $2116 = self.idx;
                                                        var $2117 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($2103, $2113), $2114, $2115, $2116, $2117);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2119 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2121 = self.err;
                                                                        var self = $2119;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2123 = self.value;
                                                                                var $2124 = Parser$Reply$error$(Parser$Error$combine$($2123, $2121));
                                                                                var $2122 = $2124;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2125 = Parser$Reply$error$($2121);
                                                                                var $2122 = $2125;
                                                                                break;
                                                                        };
                                                                        var $2120 = $2122;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2126 = self.pst;
                                                                        var self = $2126;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2128 = self.err;
                                                                                var $2129 = self.nam;
                                                                                var $2130 = self.ini;
                                                                                var $2131 = self.idx;
                                                                                var $2132 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($2119, $2128), $2129, $2130, $2131, $2132);
                                                                                var $2133 = Parser$Reply$value$(_reply$pst$43, $2111);
                                                                                var $2127 = $2133;
                                                                                break;
                                                                        };
                                                                        var $2120 = $2127;
                                                                        break;
                                                                };
                                                                var $2118 = $2120;
                                                                break;
                                                        };
                                                        var $2112 = $2118;
                                                        break;
                                                };
                                                var $2104 = $2112;
                                                break;
                                        };
                                        var $2102 = $2104;
                                        break;
                                };
                                var $2096 = $2102;
                                break;
                        };
                        var $2089 = $2096;
                        break;
                };
                var $2087 = $2089;
                break;
        };
        return $2087;
    }));

    function Kind$Parser$letforrange$(_typename$1, _body$2) {
        var $2134 = Kind$Parser$block("let-for")((_pst$3 => {
            var self = _pst$3;
            switch (self._) {
                case 'Parser.State.new':
                    var $2136 = self.err;
                    var _reply$9 = Kind$Parser$text$("let ", _pst$3);
                    var self = _reply$9;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2138 = self.err;
                            var self = $2136;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2140 = self.value;
                                    var $2141 = Parser$Reply$error$(Parser$Error$combine$($2140, $2138));
                                    var $2139 = $2141;
                                    break;
                                case 'Maybe.none':
                                    var $2142 = Parser$Reply$error$($2138);
                                    var $2139 = $2142;
                                    break;
                            };
                            var $2137 = $2139;
                            break;
                        case 'Parser.Reply.value':
                            var $2143 = self.pst;
                            var self = $2143;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2145 = self.err;
                                    var $2146 = self.nam;
                                    var $2147 = self.ini;
                                    var $2148 = self.idx;
                                    var $2149 = self.str;
                                    var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($2136, $2145), $2146, $2147, $2148, $2149);
                                    var self = _reply$pst$17;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2151 = self.err;
                                            var _reply$23 = Kind$Parser$name1$(_reply$pst$17);
                                            var self = _reply$23;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2153 = self.err;
                                                    var self = $2151;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2155 = self.value;
                                                            var $2156 = Parser$Reply$error$(Parser$Error$combine$($2155, $2153));
                                                            var $2154 = $2156;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2157 = Parser$Reply$error$($2153);
                                                            var $2154 = $2157;
                                                            break;
                                                    };
                                                    var $2152 = $2154;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2158 = self.pst;
                                                    var $2159 = self.val;
                                                    var self = $2158;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2161 = self.err;
                                                            var $2162 = self.nam;
                                                            var $2163 = self.ini;
                                                            var $2164 = self.idx;
                                                            var $2165 = self.str;
                                                            var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($2151, $2161), $2162, $2163, $2164, $2165);
                                                            var self = _reply$pst$31;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2167 = self.err;
                                                                    var _reply$37 = Kind$Parser$text$("=", _reply$pst$31);
                                                                    var self = _reply$37;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2169 = self.err;
                                                                            var self = $2167;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2171 = self.value;
                                                                                    var $2172 = Parser$Reply$error$(Parser$Error$combine$($2171, $2169));
                                                                                    var $2170 = $2172;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2173 = Parser$Reply$error$($2169);
                                                                                    var $2170 = $2173;
                                                                                    break;
                                                                            };
                                                                            var $2168 = $2170;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2174 = self.pst;
                                                                            var self = $2174;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2176 = self.err;
                                                                                    var $2177 = self.nam;
                                                                                    var $2178 = self.ini;
                                                                                    var $2179 = self.idx;
                                                                                    var $2180 = self.str;
                                                                                    var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($2167, $2176), $2177, $2178, $2179, $2180);
                                                                                    var self = _reply$pst$45;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2182 = self.err;
                                                                                            var _reply$51 = Kind$Parser$text$("for ", _reply$pst$45);
                                                                                            var self = _reply$51;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2184 = self.err;
                                                                                                    var self = $2182;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2186 = self.value;
                                                                                                            var $2187 = Parser$Reply$error$(Parser$Error$combine$($2186, $2184));
                                                                                                            var $2185 = $2187;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2188 = Parser$Reply$error$($2184);
                                                                                                            var $2185 = $2188;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2183 = $2185;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2189 = self.pst;
                                                                                                    var self = $2189;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2191 = self.err;
                                                                                                            var $2192 = self.nam;
                                                                                                            var $2193 = self.ini;
                                                                                                            var $2194 = self.idx;
                                                                                                            var $2195 = self.str;
                                                                                                            var _reply$pst$59 = Parser$State$new$(Parser$Error$maybe_combine$($2182, $2191), $2192, $2193, $2194, $2195);
                                                                                                            var self = _reply$pst$59;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $2197 = self.err;
                                                                                                                    var _reply$65 = Kind$Parser$name1$(_reply$pst$59);
                                                                                                                    var self = _reply$65;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $2199 = self.err;
                                                                                                                            var self = $2197;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $2201 = self.value;
                                                                                                                                    var $2202 = Parser$Reply$error$(Parser$Error$combine$($2201, $2199));
                                                                                                                                    var $2200 = $2202;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $2203 = Parser$Reply$error$($2199);
                                                                                                                                    var $2200 = $2203;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2198 = $2200;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $2204 = self.pst;
                                                                                                                            var $2205 = self.val;
                                                                                                                            var self = $2204;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $2207 = self.err;
                                                                                                                                    var $2208 = self.nam;
                                                                                                                                    var $2209 = self.ini;
                                                                                                                                    var $2210 = self.idx;
                                                                                                                                    var $2211 = self.str;
                                                                                                                                    var _reply$pst$73 = Parser$State$new$(Parser$Error$maybe_combine$($2197, $2207), $2208, $2209, $2210, $2211);
                                                                                                                                    var self = _reply$pst$73;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $2213 = self.err;
                                                                                                                                            var _reply$79 = Kind$Parser$text$(":", _reply$pst$73);
                                                                                                                                            var self = _reply$79;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $2215 = self.err;
                                                                                                                                                    var self = $2213;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $2217 = self.value;
                                                                                                                                                            var $2218 = Parser$Reply$error$(Parser$Error$combine$($2217, $2215));
                                                                                                                                                            var $2216 = $2218;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $2219 = Parser$Reply$error$($2215);
                                                                                                                                                            var $2216 = $2219;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2214 = $2216;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $2220 = self.pst;
                                                                                                                                                    var self = $2220;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $2222 = self.err;
                                                                                                                                                            var $2223 = self.nam;
                                                                                                                                                            var $2224 = self.ini;
                                                                                                                                                            var $2225 = self.idx;
                                                                                                                                                            var $2226 = self.str;
                                                                                                                                                            var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($2213, $2222), $2223, $2224, $2225, $2226);
                                                                                                                                                            var self = _reply$pst$87;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $2228 = self.err;
                                                                                                                                                                    var _reply$93 = Kind$Parser$text$(_typename$1, _reply$pst$87);
                                                                                                                                                                    var self = _reply$93;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $2230 = self.err;
                                                                                                                                                                            var self = $2228;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $2232 = self.value;
                                                                                                                                                                                    var $2233 = Parser$Reply$error$(Parser$Error$combine$($2232, $2230));
                                                                                                                                                                                    var $2231 = $2233;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $2234 = Parser$Reply$error$($2230);
                                                                                                                                                                                    var $2231 = $2234;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2229 = $2231;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $2235 = self.pst;
                                                                                                                                                                            var self = $2235;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $2237 = self.err;
                                                                                                                                                                                    var $2238 = self.nam;
                                                                                                                                                                                    var $2239 = self.ini;
                                                                                                                                                                                    var $2240 = self.idx;
                                                                                                                                                                                    var $2241 = self.str;
                                                                                                                                                                                    var _reply$pst$101 = Parser$State$new$(Parser$Error$maybe_combine$($2228, $2237), $2238, $2239, $2240, $2241);
                                                                                                                                                                                    var self = _reply$pst$101;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $2243 = self.err;
                                                                                                                                                                                            var _reply$107 = Kind$Parser$text$("from", _reply$pst$101);
                                                                                                                                                                                            var self = _reply$107;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $2245 = self.err;
                                                                                                                                                                                                    var self = $2243;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $2247 = self.value;
                                                                                                                                                                                                            var $2248 = Parser$Reply$error$(Parser$Error$combine$($2247, $2245));
                                                                                                                                                                                                            var $2246 = $2248;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $2249 = Parser$Reply$error$($2245);
                                                                                                                                                                                                            var $2246 = $2249;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2244 = $2246;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $2250 = self.pst;
                                                                                                                                                                                                    var self = $2250;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $2252 = self.err;
                                                                                                                                                                                                            var $2253 = self.nam;
                                                                                                                                                                                                            var $2254 = self.ini;
                                                                                                                                                                                                            var $2255 = self.idx;
                                                                                                                                                                                                            var $2256 = self.str;
                                                                                                                                                                                                            var _reply$pst$115 = Parser$State$new$(Parser$Error$maybe_combine$($2243, $2252), $2253, $2254, $2255, $2256);
                                                                                                                                                                                                            var self = _reply$pst$115;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $2258 = self.err;
                                                                                                                                                                                                                    var _reply$121 = Kind$Parser$term(_reply$pst$115);
                                                                                                                                                                                                                    var self = _reply$121;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $2260 = self.err;
                                                                                                                                                                                                                            var self = $2258;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $2262 = self.value;
                                                                                                                                                                                                                                    var $2263 = Parser$Reply$error$(Parser$Error$combine$($2262, $2260));
                                                                                                                                                                                                                                    var $2261 = $2263;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $2264 = Parser$Reply$error$($2260);
                                                                                                                                                                                                                                    var $2261 = $2264;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2259 = $2261;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $2265 = self.pst;
                                                                                                                                                                                                                            var $2266 = self.val;
                                                                                                                                                                                                                            var self = $2265;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $2268 = self.err;
                                                                                                                                                                                                                                    var $2269 = self.nam;
                                                                                                                                                                                                                                    var $2270 = self.ini;
                                                                                                                                                                                                                                    var $2271 = self.idx;
                                                                                                                                                                                                                                    var $2272 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$129 = Parser$State$new$(Parser$Error$maybe_combine$($2258, $2268), $2269, $2270, $2271, $2272);
                                                                                                                                                                                                                                    var self = _reply$pst$129;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $2274 = self.err;
                                                                                                                                                                                                                                            var _reply$135 = Kind$Parser$text$("to", _reply$pst$129);
                                                                                                                                                                                                                                            var self = _reply$135;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $2276 = self.err;
                                                                                                                                                                                                                                                    var self = $2274;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $2278 = self.value;
                                                                                                                                                                                                                                                            var $2279 = Parser$Reply$error$(Parser$Error$combine$($2278, $2276));
                                                                                                                                                                                                                                                            var $2277 = $2279;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $2280 = Parser$Reply$error$($2276);
                                                                                                                                                                                                                                                            var $2277 = $2280;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2275 = $2277;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $2281 = self.pst;
                                                                                                                                                                                                                                                    var self = $2281;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $2283 = self.err;
                                                                                                                                                                                                                                                            var $2284 = self.nam;
                                                                                                                                                                                                                                                            var $2285 = self.ini;
                                                                                                                                                                                                                                                            var $2286 = self.idx;
                                                                                                                                                                                                                                                            var $2287 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$143 = Parser$State$new$(Parser$Error$maybe_combine$($2274, $2283), $2284, $2285, $2286, $2287);
                                                                                                                                                                                                                                                            var self = _reply$pst$143;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $2289 = self.err;
                                                                                                                                                                                                                                                                    var _reply$149 = Kind$Parser$term(_reply$pst$143);
                                                                                                                                                                                                                                                                    var self = _reply$149;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $2291 = self.err;
                                                                                                                                                                                                                                                                            var self = $2289;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $2293 = self.value;
                                                                                                                                                                                                                                                                                    var $2294 = Parser$Reply$error$(Parser$Error$combine$($2293, $2291));
                                                                                                                                                                                                                                                                                    var $2292 = $2294;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $2295 = Parser$Reply$error$($2291);
                                                                                                                                                                                                                                                                                    var $2292 = $2295;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2290 = $2292;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $2296 = self.pst;
                                                                                                                                                                                                                                                                            var $2297 = self.val;
                                                                                                                                                                                                                                                                            var self = $2296;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $2299 = self.err;
                                                                                                                                                                                                                                                                                    var $2300 = self.nam;
                                                                                                                                                                                                                                                                                    var $2301 = self.ini;
                                                                                                                                                                                                                                                                                    var $2302 = self.idx;
                                                                                                                                                                                                                                                                                    var $2303 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$157 = Parser$State$new$(Parser$Error$maybe_combine$($2289, $2299), $2300, $2301, $2302, $2303);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$157;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $2305 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$163 = Kind$Parser$text$(":", _reply$pst$157);
                                                                                                                                                                                                                                                                                            var self = _reply$163;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $2307 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $2305;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $2309 = self.value;
                                                                                                                                                                                                                                                                                                            var $2310 = Parser$Reply$error$(Parser$Error$combine$($2309, $2307));
                                                                                                                                                                                                                                                                                                            var $2308 = $2310;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $2311 = Parser$Reply$error$($2307);
                                                                                                                                                                                                                                                                                                            var $2308 = $2311;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2306 = $2308;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $2312 = self.pst;
                                                                                                                                                                                                                                                                                                    var self = $2312;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $2314 = self.err;
                                                                                                                                                                                                                                                                                                            var $2315 = self.nam;
                                                                                                                                                                                                                                                                                                            var $2316 = self.ini;
                                                                                                                                                                                                                                                                                                            var $2317 = self.idx;
                                                                                                                                                                                                                                                                                                            var $2318 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$171 = Parser$State$new$(Parser$Error$maybe_combine$($2305, $2314), $2315, $2316, $2317, $2318);
                                                                                                                                                                                                                                                                                                            var self = _reply$pst$171;
                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                    var $2320 = self.err;
                                                                                                                                                                                                                                                                                                                    var _reply$177 = Kind$Parser$term(_reply$pst$171);
                                                                                                                                                                                                                                                                                                                    var self = _reply$177;
                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                            var $2322 = self.err;
                                                                                                                                                                                                                                                                                                                            var self = $2320;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                    var $2324 = self.value;
                                                                                                                                                                                                                                                                                                                                    var $2325 = Parser$Reply$error$(Parser$Error$combine$($2324, $2322));
                                                                                                                                                                                                                                                                                                                                    var $2323 = $2325;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                    var $2326 = Parser$Reply$error$($2322);
                                                                                                                                                                                                                                                                                                                                    var $2323 = $2326;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2321 = $2323;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                            var $2327 = self.pst;
                                                                                                                                                                                                                                                                                                                            var $2328 = self.val;
                                                                                                                                                                                                                                                                                                                            var self = $2327;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                    var $2330 = self.err;
                                                                                                                                                                                                                                                                                                                                    var $2331 = self.nam;
                                                                                                                                                                                                                                                                                                                                    var $2332 = self.ini;
                                                                                                                                                                                                                                                                                                                                    var $2333 = self.idx;
                                                                                                                                                                                                                                                                                                                                    var $2334 = self.str;
                                                                                                                                                                                                                                                                                                                                    var _reply$pst$185 = Parser$State$new$(Parser$Error$maybe_combine$($2320, $2330), $2331, $2332, $2333, $2334);
                                                                                                                                                                                                                                                                                                                                    var self = _reply$pst$185;
                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                            var $2336 = self.err;
                                                                                                                                                                                                                                                                                                                                            var _reply$191 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$185);
                                                                                                                                                                                                                                                                                                                                            var self = _reply$191;
                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                                                    var $2338 = self.err;
                                                                                                                                                                                                                                                                                                                                                    var self = $2336;
                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                                            var $2340 = self.value;
                                                                                                                                                                                                                                                                                                                                                            var $2341 = Parser$Reply$error$(Parser$Error$combine$($2340, $2338));
                                                                                                                                                                                                                                                                                                                                                            var $2339 = $2341;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                                            var $2342 = Parser$Reply$error$($2338);
                                                                                                                                                                                                                                                                                                                                                            var $2339 = $2342;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                    var $2337 = $2339;
                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                                                    var $2343 = self.pst;
                                                                                                                                                                                                                                                                                                                                                    var self = $2343;
                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                                            var $2345 = self.err;
                                                                                                                                                                                                                                                                                                                                                            var $2346 = self.nam;
                                                                                                                                                                                                                                                                                                                                                            var $2347 = self.ini;
                                                                                                                                                                                                                                                                                                                                                            var $2348 = self.idx;
                                                                                                                                                                                                                                                                                                                                                            var $2349 = self.str;
                                                                                                                                                                                                                                                                                                                                                            var _reply$pst$199 = Parser$State$new$(Parser$Error$maybe_combine$($2336, $2345), $2346, $2347, $2348, $2349);
                                                                                                                                                                                                                                                                                                                                                            var self = _reply$pst$199;
                                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                                                    var $2351 = self.err;
                                                                                                                                                                                                                                                                                                                                                                    var _reply$205 = _body$2(Unit$new)(_reply$pst$199);
                                                                                                                                                                                                                                                                                                                                                                    var self = _reply$205;
                                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                                                                            var $2353 = self.err;
                                                                                                                                                                                                                                                                                                                                                                            var self = $2351;
                                                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                                                                    var $2355 = self.value;
                                                                                                                                                                                                                                                                                                                                                                                    var $2356 = Parser$Reply$error$(Parser$Error$combine$($2355, $2353));
                                                                                                                                                                                                                                                                                                                                                                                    var $2354 = $2356;
                                                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                                                                    var $2357 = Parser$Reply$error$($2353);
                                                                                                                                                                                                                                                                                                                                                                                    var $2354 = $2357;
                                                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                                                            var $2352 = $2354;
                                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                                                                            var $2358 = self.pst;
                                                                                                                                                                                                                                                                                                                                                                            var $2359 = self.val;
                                                                                                                                                                                                                                                                                                                                                                            var self = $2358;
                                                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                                                                    var $2361 = self.err;
                                                                                                                                                                                                                                                                                                                                                                                    var $2362 = self.nam;
                                                                                                                                                                                                                                                                                                                                                                                    var $2363 = self.ini;
                                                                                                                                                                                                                                                                                                                                                                                    var $2364 = self.idx;
                                                                                                                                                                                                                                                                                                                                                                                    var $2365 = self.str;
                                                                                                                                                                                                                                                                                                                                                                                    var _reply$pst$213 = Parser$State$new$(Parser$Error$maybe_combine$($2351, $2361), $2362, $2363, $2364, $2365);
                                                                                                                                                                                                                                                                                                                                                                                    var _term$214 = Kind$Term$ref$((_typename$1 + ".for"));
                                                                                                                                                                                                                                                                                                                                                                                    var _term$215 = Kind$Term$app$(_term$214, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                                                                    var _term$216 = Kind$Term$app$(_term$215, Kind$Term$ref$($2159));
                                                                                                                                                                                                                                                                                                                                                                                    var _term$217 = Kind$Term$app$(_term$216, $2266);
                                                                                                                                                                                                                                                                                                                                                                                    var _term$218 = Kind$Term$app$(_term$217, $2297);
                                                                                                                                                                                                                                                                                                                                                                                    var _lamb$219 = Kind$Term$lam$($2205, (_e$219 => {
                                                                                                                                                                                                                                                                                                                                                                                        var $2367 = Kind$Term$lam$($2159, (_s$220 => {
                                                                                                                                                                                                                                                                                                                                                                                            var $2368 = $2328;
                                                                                                                                                                                                                                                                                                                                                                                            return $2368;
                                                                                                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                                                                                                        return $2367;
                                                                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                                                                    var _term$220 = Kind$Term$app$(_term$218, _lamb$219);
                                                                                                                                                                                                                                                                                                                                                                                    var _term$221 = Kind$Term$let$($2159, _term$220, (_x$221 => {
                                                                                                                                                                                                                                                                                                                                                                                        var $2369 = $2359;
                                                                                                                                                                                                                                                                                                                                                                                        return $2369;
                                                                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                                                                    var $2366 = Parser$Reply$value$(_reply$pst$213, _term$221);
                                                                                                                                                                                                                                                                                                                                                                                    var $2360 = $2366;
                                                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                                                            var $2352 = $2360;
                                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                                    var $2350 = $2352;
                                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                                            var $2344 = $2350;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                    var $2337 = $2344;
                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                            var $2335 = $2337;
                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                    var $2329 = $2335;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2321 = $2329;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                    var $2319 = $2321;
                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                            var $2313 = $2319;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2306 = $2313;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $2304 = $2306;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $2298 = $2304;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2290 = $2298;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $2288 = $2290;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $2282 = $2288;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2275 = $2282;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $2273 = $2275;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $2267 = $2273;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2259 = $2267;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $2257 = $2259;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $2251 = $2257;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2244 = $2251;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $2242 = $2244;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $2236 = $2242;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2229 = $2236;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $2227 = $2229;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $2221 = $2227;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2214 = $2221;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $2212 = $2214;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $2206 = $2212;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2198 = $2206;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $2196 = $2198;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $2190 = $2196;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2183 = $2190;
                                                                                                    break;
                                                                                            };
                                                                                            var $2181 = $2183;
                                                                                            break;
                                                                                    };
                                                                                    var $2175 = $2181;
                                                                                    break;
                                                                            };
                                                                            var $2168 = $2175;
                                                                            break;
                                                                    };
                                                                    var $2166 = $2168;
                                                                    break;
                                                            };
                                                            var $2160 = $2166;
                                                            break;
                                                    };
                                                    var $2152 = $2160;
                                                    break;
                                            };
                                            var $2150 = $2152;
                                            break;
                                    };
                                    var $2144 = $2150;
                                    break;
                            };
                            var $2137 = $2144;
                            break;
                    };
                    var $2135 = $2137;
                    break;
            };
            return $2135;
        }));
        return $2134;
    };
    const Kind$Parser$letforrange = x0 => x1 => Kind$Parser$letforrange$(x0, x1);

    function Kind$Parser$letforrange$u32$(_body$1) {
        var $2370 = Kind$Parser$letforrange$("U32", _body$1);
        return $2370;
    };
    const Kind$Parser$letforrange$u32 = x0 => Kind$Parser$letforrange$u32$(x0);

    function Kind$Parser$letforrange$with$(_typename$1, _body$2) {
        var $2371 = Kind$Parser$block("for")((_pst$3 => {
            var self = _pst$3;
            switch (self._) {
                case 'Parser.State.new':
                    var $2373 = self.err;
                    var _reply$9 = Kind$Parser$text$("for ", _pst$3);
                    var self = _reply$9;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2375 = self.err;
                            var self = $2373;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2377 = self.value;
                                    var $2378 = Parser$Reply$error$(Parser$Error$combine$($2377, $2375));
                                    var $2376 = $2378;
                                    break;
                                case 'Maybe.none':
                                    var $2379 = Parser$Reply$error$($2375);
                                    var $2376 = $2379;
                                    break;
                            };
                            var $2374 = $2376;
                            break;
                        case 'Parser.Reply.value':
                            var $2380 = self.pst;
                            var self = $2380;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2382 = self.err;
                                    var $2383 = self.nam;
                                    var $2384 = self.ini;
                                    var $2385 = self.idx;
                                    var $2386 = self.str;
                                    var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($2373, $2382), $2383, $2384, $2385, $2386);
                                    var self = _reply$pst$17;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2388 = self.err;
                                            var _reply$23 = Kind$Parser$name1$(_reply$pst$17);
                                            var self = _reply$23;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2390 = self.err;
                                                    var self = $2388;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2392 = self.value;
                                                            var $2393 = Parser$Reply$error$(Parser$Error$combine$($2392, $2390));
                                                            var $2391 = $2393;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2394 = Parser$Reply$error$($2390);
                                                            var $2391 = $2394;
                                                            break;
                                                    };
                                                    var $2389 = $2391;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2395 = self.pst;
                                                    var $2396 = self.val;
                                                    var self = $2395;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2398 = self.err;
                                                            var $2399 = self.nam;
                                                            var $2400 = self.ini;
                                                            var $2401 = self.idx;
                                                            var $2402 = self.str;
                                                            var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($2388, $2398), $2399, $2400, $2401, $2402);
                                                            var self = _reply$pst$31;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2404 = self.err;
                                                                    var _reply$37 = Kind$Parser$text$(":", _reply$pst$31);
                                                                    var self = _reply$37;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2406 = self.err;
                                                                            var self = $2404;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2408 = self.value;
                                                                                    var $2409 = Parser$Reply$error$(Parser$Error$combine$($2408, $2406));
                                                                                    var $2407 = $2409;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2410 = Parser$Reply$error$($2406);
                                                                                    var $2407 = $2410;
                                                                                    break;
                                                                            };
                                                                            var $2405 = $2407;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2411 = self.pst;
                                                                            var self = $2411;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2413 = self.err;
                                                                                    var $2414 = self.nam;
                                                                                    var $2415 = self.ini;
                                                                                    var $2416 = self.idx;
                                                                                    var $2417 = self.str;
                                                                                    var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($2404, $2413), $2414, $2415, $2416, $2417);
                                                                                    var self = _reply$pst$45;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2419 = self.err;
                                                                                            var _reply$51 = Kind$Parser$text$(_typename$1, _reply$pst$45);
                                                                                            var self = _reply$51;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2421 = self.err;
                                                                                                    var self = $2419;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2423 = self.value;
                                                                                                            var $2424 = Parser$Reply$error$(Parser$Error$combine$($2423, $2421));
                                                                                                            var $2422 = $2424;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2425 = Parser$Reply$error$($2421);
                                                                                                            var $2422 = $2425;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2420 = $2422;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2426 = self.pst;
                                                                                                    var self = $2426;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2428 = self.err;
                                                                                                            var $2429 = self.nam;
                                                                                                            var $2430 = self.ini;
                                                                                                            var $2431 = self.idx;
                                                                                                            var $2432 = self.str;
                                                                                                            var _reply$pst$59 = Parser$State$new$(Parser$Error$maybe_combine$($2419, $2428), $2429, $2430, $2431, $2432);
                                                                                                            var self = _reply$pst$59;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $2434 = self.err;
                                                                                                                    var _reply$65 = Kind$Parser$text$("from", _reply$pst$59);
                                                                                                                    var self = _reply$65;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $2436 = self.err;
                                                                                                                            var self = $2434;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $2438 = self.value;
                                                                                                                                    var $2439 = Parser$Reply$error$(Parser$Error$combine$($2438, $2436));
                                                                                                                                    var $2437 = $2439;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $2440 = Parser$Reply$error$($2436);
                                                                                                                                    var $2437 = $2440;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2435 = $2437;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $2441 = self.pst;
                                                                                                                            var self = $2441;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $2443 = self.err;
                                                                                                                                    var $2444 = self.nam;
                                                                                                                                    var $2445 = self.ini;
                                                                                                                                    var $2446 = self.idx;
                                                                                                                                    var $2447 = self.str;
                                                                                                                                    var _reply$pst$73 = Parser$State$new$(Parser$Error$maybe_combine$($2434, $2443), $2444, $2445, $2446, $2447);
                                                                                                                                    var self = _reply$pst$73;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $2449 = self.err;
                                                                                                                                            var _reply$79 = Kind$Parser$term(_reply$pst$73);
                                                                                                                                            var self = _reply$79;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $2451 = self.err;
                                                                                                                                                    var self = $2449;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $2453 = self.value;
                                                                                                                                                            var $2454 = Parser$Reply$error$(Parser$Error$combine$($2453, $2451));
                                                                                                                                                            var $2452 = $2454;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $2455 = Parser$Reply$error$($2451);
                                                                                                                                                            var $2452 = $2455;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2450 = $2452;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $2456 = self.pst;
                                                                                                                                                    var $2457 = self.val;
                                                                                                                                                    var self = $2456;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $2459 = self.err;
                                                                                                                                                            var $2460 = self.nam;
                                                                                                                                                            var $2461 = self.ini;
                                                                                                                                                            var $2462 = self.idx;
                                                                                                                                                            var $2463 = self.str;
                                                                                                                                                            var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($2449, $2459), $2460, $2461, $2462, $2463);
                                                                                                                                                            var self = _reply$pst$87;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $2465 = self.err;
                                                                                                                                                                    var _reply$93 = Kind$Parser$text$("to", _reply$pst$87);
                                                                                                                                                                    var self = _reply$93;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $2467 = self.err;
                                                                                                                                                                            var self = $2465;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $2469 = self.value;
                                                                                                                                                                                    var $2470 = Parser$Reply$error$(Parser$Error$combine$($2469, $2467));
                                                                                                                                                                                    var $2468 = $2470;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $2471 = Parser$Reply$error$($2467);
                                                                                                                                                                                    var $2468 = $2471;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2466 = $2468;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $2472 = self.pst;
                                                                                                                                                                            var self = $2472;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $2474 = self.err;
                                                                                                                                                                                    var $2475 = self.nam;
                                                                                                                                                                                    var $2476 = self.ini;
                                                                                                                                                                                    var $2477 = self.idx;
                                                                                                                                                                                    var $2478 = self.str;
                                                                                                                                                                                    var _reply$pst$101 = Parser$State$new$(Parser$Error$maybe_combine$($2465, $2474), $2475, $2476, $2477, $2478);
                                                                                                                                                                                    var self = _reply$pst$101;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $2480 = self.err;
                                                                                                                                                                                            var _reply$107 = Kind$Parser$term(_reply$pst$101);
                                                                                                                                                                                            var self = _reply$107;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $2482 = self.err;
                                                                                                                                                                                                    var self = $2480;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $2484 = self.value;
                                                                                                                                                                                                            var $2485 = Parser$Reply$error$(Parser$Error$combine$($2484, $2482));
                                                                                                                                                                                                            var $2483 = $2485;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $2486 = Parser$Reply$error$($2482);
                                                                                                                                                                                                            var $2483 = $2486;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2481 = $2483;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $2487 = self.pst;
                                                                                                                                                                                                    var $2488 = self.val;
                                                                                                                                                                                                    var self = $2487;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $2490 = self.err;
                                                                                                                                                                                                            var $2491 = self.nam;
                                                                                                                                                                                                            var $2492 = self.ini;
                                                                                                                                                                                                            var $2493 = self.idx;
                                                                                                                                                                                                            var $2494 = self.str;
                                                                                                                                                                                                            var _reply$pst$115 = Parser$State$new$(Parser$Error$maybe_combine$($2480, $2490), $2491, $2492, $2493, $2494);
                                                                                                                                                                                                            var self = _reply$pst$115;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $2496 = self.err;
                                                                                                                                                                                                                    var _reply$121 = Kind$Parser$text$("with ", _reply$pst$115);
                                                                                                                                                                                                                    var self = _reply$121;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $2498 = self.err;
                                                                                                                                                                                                                            var self = $2496;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $2500 = self.value;
                                                                                                                                                                                                                                    var $2501 = Parser$Reply$error$(Parser$Error$combine$($2500, $2498));
                                                                                                                                                                                                                                    var $2499 = $2501;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $2502 = Parser$Reply$error$($2498);
                                                                                                                                                                                                                                    var $2499 = $2502;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2497 = $2499;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $2503 = self.pst;
                                                                                                                                                                                                                            var self = $2503;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $2505 = self.err;
                                                                                                                                                                                                                                    var $2506 = self.nam;
                                                                                                                                                                                                                                    var $2507 = self.ini;
                                                                                                                                                                                                                                    var $2508 = self.idx;
                                                                                                                                                                                                                                    var $2509 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$129 = Parser$State$new$(Parser$Error$maybe_combine$($2496, $2505), $2506, $2507, $2508, $2509);
                                                                                                                                                                                                                                    var self = _reply$pst$129;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $2511 = self.err;
                                                                                                                                                                                                                                            var _reply$135 = Kind$Parser$name1$(_reply$pst$129);
                                                                                                                                                                                                                                            var self = _reply$135;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $2513 = self.err;
                                                                                                                                                                                                                                                    var self = $2511;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $2515 = self.value;
                                                                                                                                                                                                                                                            var $2516 = Parser$Reply$error$(Parser$Error$combine$($2515, $2513));
                                                                                                                                                                                                                                                            var $2514 = $2516;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $2517 = Parser$Reply$error$($2513);
                                                                                                                                                                                                                                                            var $2514 = $2517;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2512 = $2514;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $2518 = self.pst;
                                                                                                                                                                                                                                                    var $2519 = self.val;
                                                                                                                                                                                                                                                    var self = $2518;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $2521 = self.err;
                                                                                                                                                                                                                                                            var $2522 = self.nam;
                                                                                                                                                                                                                                                            var $2523 = self.ini;
                                                                                                                                                                                                                                                            var $2524 = self.idx;
                                                                                                                                                                                                                                                            var $2525 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$143 = Parser$State$new$(Parser$Error$maybe_combine$($2511, $2521), $2522, $2523, $2524, $2525);
                                                                                                                                                                                                                                                            var self = _reply$pst$143;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $2527 = self.err;
                                                                                                                                                                                                                                                                    var _reply$149 = Kind$Parser$text$(":", _reply$pst$143);
                                                                                                                                                                                                                                                                    var self = _reply$149;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $2529 = self.err;
                                                                                                                                                                                                                                                                            var self = $2527;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $2531 = self.value;
                                                                                                                                                                                                                                                                                    var $2532 = Parser$Reply$error$(Parser$Error$combine$($2531, $2529));
                                                                                                                                                                                                                                                                                    var $2530 = $2532;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $2533 = Parser$Reply$error$($2529);
                                                                                                                                                                                                                                                                                    var $2530 = $2533;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2528 = $2530;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $2534 = self.pst;
                                                                                                                                                                                                                                                                            var self = $2534;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $2536 = self.err;
                                                                                                                                                                                                                                                                                    var $2537 = self.nam;
                                                                                                                                                                                                                                                                                    var $2538 = self.ini;
                                                                                                                                                                                                                                                                                    var $2539 = self.idx;
                                                                                                                                                                                                                                                                                    var $2540 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$157 = Parser$State$new$(Parser$Error$maybe_combine$($2527, $2536), $2537, $2538, $2539, $2540);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$157;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $2542 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$163 = Kind$Parser$term(_reply$pst$157);
                                                                                                                                                                                                                                                                                            var self = _reply$163;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $2544 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $2542;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $2546 = self.value;
                                                                                                                                                                                                                                                                                                            var $2547 = Parser$Reply$error$(Parser$Error$combine$($2546, $2544));
                                                                                                                                                                                                                                                                                                            var $2545 = $2547;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $2548 = Parser$Reply$error$($2544);
                                                                                                                                                                                                                                                                                                            var $2545 = $2548;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2543 = $2545;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $2549 = self.pst;
                                                                                                                                                                                                                                                                                                    var $2550 = self.val;
                                                                                                                                                                                                                                                                                                    var self = $2549;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $2552 = self.err;
                                                                                                                                                                                                                                                                                                            var $2553 = self.nam;
                                                                                                                                                                                                                                                                                                            var $2554 = self.ini;
                                                                                                                                                                                                                                                                                                            var $2555 = self.idx;
                                                                                                                                                                                                                                                                                                            var $2556 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$171 = Parser$State$new$(Parser$Error$maybe_combine$($2542, $2552), $2553, $2554, $2555, $2556);
                                                                                                                                                                                                                                                                                                            var self = _reply$pst$171;
                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                    var $2558 = self.err;
                                                                                                                                                                                                                                                                                                                    var _reply$177 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$171);
                                                                                                                                                                                                                                                                                                                    var self = _reply$177;
                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                            var $2560 = self.err;
                                                                                                                                                                                                                                                                                                                            var self = $2558;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                    var $2562 = self.value;
                                                                                                                                                                                                                                                                                                                                    var $2563 = Parser$Reply$error$(Parser$Error$combine$($2562, $2560));
                                                                                                                                                                                                                                                                                                                                    var $2561 = $2563;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                    var $2564 = Parser$Reply$error$($2560);
                                                                                                                                                                                                                                                                                                                                    var $2561 = $2564;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2559 = $2561;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                            var $2565 = self.pst;
                                                                                                                                                                                                                                                                                                                            var self = $2565;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                    var $2567 = self.err;
                                                                                                                                                                                                                                                                                                                                    var $2568 = self.nam;
                                                                                                                                                                                                                                                                                                                                    var $2569 = self.ini;
                                                                                                                                                                                                                                                                                                                                    var $2570 = self.idx;
                                                                                                                                                                                                                                                                                                                                    var $2571 = self.str;
                                                                                                                                                                                                                                                                                                                                    var _reply$pst$185 = Parser$State$new$(Parser$Error$maybe_combine$($2558, $2567), $2568, $2569, $2570, $2571);
                                                                                                                                                                                                                                                                                                                                    var self = _reply$pst$185;
                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                            var $2573 = self.err;
                                                                                                                                                                                                                                                                                                                                            var _reply$191 = _body$2(Unit$new)(_reply$pst$185);
                                                                                                                                                                                                                                                                                                                                            var self = _reply$191;
                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                                                    var $2575 = self.err;
                                                                                                                                                                                                                                                                                                                                                    var self = $2573;
                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                                            var $2577 = self.value;
                                                                                                                                                                                                                                                                                                                                                            var $2578 = Parser$Reply$error$(Parser$Error$combine$($2577, $2575));
                                                                                                                                                                                                                                                                                                                                                            var $2576 = $2578;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                                            var $2579 = Parser$Reply$error$($2575);
                                                                                                                                                                                                                                                                                                                                                            var $2576 = $2579;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                    var $2574 = $2576;
                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                                                    var $2580 = self.pst;
                                                                                                                                                                                                                                                                                                                                                    var $2581 = self.val;
                                                                                                                                                                                                                                                                                                                                                    var self = $2580;
                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                                            var $2583 = self.err;
                                                                                                                                                                                                                                                                                                                                                            var $2584 = self.nam;
                                                                                                                                                                                                                                                                                                                                                            var $2585 = self.ini;
                                                                                                                                                                                                                                                                                                                                                            var $2586 = self.idx;
                                                                                                                                                                                                                                                                                                                                                            var $2587 = self.str;
                                                                                                                                                                                                                                                                                                                                                            var _reply$pst$199 = Parser$State$new$(Parser$Error$maybe_combine$($2573, $2583), $2584, $2585, $2586, $2587);
                                                                                                                                                                                                                                                                                                                                                            var _term$200 = Kind$Term$ref$((_typename$1 + ".for"));
                                                                                                                                                                                                                                                                                                                                                            var _term$201 = Kind$Term$app$(_term$200, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                                            var _term$202 = Kind$Term$app$(_term$201, Kind$Term$ref$($2519));
                                                                                                                                                                                                                                                                                                                                                            var _term$203 = Kind$Term$app$(_term$202, $2457);
                                                                                                                                                                                                                                                                                                                                                            var _term$204 = Kind$Term$app$(_term$203, $2488);
                                                                                                                                                                                                                                                                                                                                                            var _lamb$205 = Kind$Term$lam$($2396, (_e$205 => {
                                                                                                                                                                                                                                                                                                                                                                var $2589 = Kind$Term$lam$($2519, (_s$206 => {
                                                                                                                                                                                                                                                                                                                                                                    var $2590 = $2550;
                                                                                                                                                                                                                                                                                                                                                                    return $2590;
                                                                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                                                                return $2589;
                                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                                            var _term$206 = Kind$Term$app$(_term$204, _lamb$205);
                                                                                                                                                                                                                                                                                                                                                            var _term$207 = Kind$Term$let$($2519, _term$206, (_x$207 => {
                                                                                                                                                                                                                                                                                                                                                                var $2591 = $2581;
                                                                                                                                                                                                                                                                                                                                                                return $2591;
                                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                                            var $2588 = Parser$Reply$value$(_reply$pst$199, _term$207);
                                                                                                                                                                                                                                                                                                                                                            var $2582 = $2588;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                    var $2574 = $2582;
                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                            var $2572 = $2574;
                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                    var $2566 = $2572;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2559 = $2566;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                    var $2557 = $2559;
                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                            var $2551 = $2557;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2543 = $2551;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $2541 = $2543;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $2535 = $2541;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2528 = $2535;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $2526 = $2528;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $2520 = $2526;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2512 = $2520;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $2510 = $2512;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $2504 = $2510;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2497 = $2504;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $2495 = $2497;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $2489 = $2495;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2481 = $2489;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $2479 = $2481;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $2473 = $2479;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2466 = $2473;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $2464 = $2466;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $2458 = $2464;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2450 = $2458;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $2448 = $2450;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $2442 = $2448;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2435 = $2442;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $2433 = $2435;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $2427 = $2433;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2420 = $2427;
                                                                                                    break;
                                                                                            };
                                                                                            var $2418 = $2420;
                                                                                            break;
                                                                                    };
                                                                                    var $2412 = $2418;
                                                                                    break;
                                                                            };
                                                                            var $2405 = $2412;
                                                                            break;
                                                                    };
                                                                    var $2403 = $2405;
                                                                    break;
                                                            };
                                                            var $2397 = $2403;
                                                            break;
                                                    };
                                                    var $2389 = $2397;
                                                    break;
                                            };
                                            var $2387 = $2389;
                                            break;
                                    };
                                    var $2381 = $2387;
                                    break;
                            };
                            var $2374 = $2381;
                            break;
                    };
                    var $2372 = $2374;
                    break;
            };
            return $2372;
        }));
        return $2371;
    };
    const Kind$Parser$letforrange$with = x0 => x1 => Kind$Parser$letforrange$with$(x0, x1);

    function Kind$Parser$letforrange$u32$with$(_body$1) {
        var $2592 = Kind$Parser$letforrange$with$("U32", _body$1);
        return $2592;
    };
    const Kind$Parser$letforrange$u32$with = x0 => Kind$Parser$letforrange$u32$with$(x0);

    function Kind$Parser$letforrange$i32$(_body$1) {
        var $2593 = Kind$Parser$letforrange$("I32", _body$1);
        return $2593;
    };
    const Kind$Parser$letforrange$i32 = x0 => Kind$Parser$letforrange$i32$(x0);

    function Kind$Parser$letforrange$i32$with$(_body$1) {
        var $2594 = Kind$Parser$letforrange$with$("I32", _body$1);
        return $2594;
    };
    const Kind$Parser$letforrange$i32$with = x0 => Kind$Parser$letforrange$i32$with$(x0);

    function Kind$Parser$letforrange$nat$(_body$1) {
        var $2595 = Kind$Parser$block("let-for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2597 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2599 = self.err;
                            var self = $2597;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2601 = self.value;
                                    var $2602 = Parser$Reply$error$(Parser$Error$combine$($2601, $2599));
                                    var $2600 = $2602;
                                    break;
                                case 'Maybe.none':
                                    var $2603 = Parser$Reply$error$($2599);
                                    var $2600 = $2603;
                                    break;
                            };
                            var $2598 = $2600;
                            break;
                        case 'Parser.Reply.value':
                            var $2604 = self.pst;
                            var self = $2604;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2606 = self.err;
                                    var $2607 = self.nam;
                                    var $2608 = self.ini;
                                    var $2609 = self.idx;
                                    var $2610 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2597, $2606), $2607, $2608, $2609, $2610);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2612 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2614 = self.err;
                                                    var self = $2612;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2616 = self.value;
                                                            var $2617 = Parser$Reply$error$(Parser$Error$combine$($2616, $2614));
                                                            var $2615 = $2617;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2618 = Parser$Reply$error$($2614);
                                                            var $2615 = $2618;
                                                            break;
                                                    };
                                                    var $2613 = $2615;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2619 = self.pst;
                                                    var $2620 = self.val;
                                                    var self = $2619;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2622 = self.err;
                                                            var $2623 = self.nam;
                                                            var $2624 = self.ini;
                                                            var $2625 = self.idx;
                                                            var $2626 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2612, $2622), $2623, $2624, $2625, $2626);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2628 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2630 = self.err;
                                                                            var self = $2628;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2632 = self.value;
                                                                                    var $2633 = Parser$Reply$error$(Parser$Error$combine$($2632, $2630));
                                                                                    var $2631 = $2633;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2634 = Parser$Reply$error$($2630);
                                                                                    var $2631 = $2634;
                                                                                    break;
                                                                            };
                                                                            var $2629 = $2631;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2635 = self.pst;
                                                                            var self = $2635;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2637 = self.err;
                                                                                    var $2638 = self.nam;
                                                                                    var $2639 = self.ini;
                                                                                    var $2640 = self.idx;
                                                                                    var $2641 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2628, $2637), $2638, $2639, $2640, $2641);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2643 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$("for ", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2645 = self.err;
                                                                                                    var self = $2643;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2647 = self.value;
                                                                                                            var $2648 = Parser$Reply$error$(Parser$Error$combine$($2647, $2645));
                                                                                                            var $2646 = $2648;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2649 = Parser$Reply$error$($2645);
                                                                                                            var $2646 = $2649;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2644 = $2646;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2650 = self.pst;
                                                                                                    var self = $2650;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2652 = self.err;
                                                                                                            var $2653 = self.nam;
                                                                                                            var $2654 = self.ini;
                                                                                                            var $2655 = self.idx;
                                                                                                            var $2656 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2643, $2652), $2653, $2654, $2655, $2656);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $2658 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $2660 = self.err;
                                                                                                                            var self = $2658;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $2662 = self.value;
                                                                                                                                    var $2663 = Parser$Reply$error$(Parser$Error$combine$($2662, $2660));
                                                                                                                                    var $2661 = $2663;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $2664 = Parser$Reply$error$($2660);
                                                                                                                                    var $2661 = $2664;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2659 = $2661;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $2665 = self.pst;
                                                                                                                            var $2666 = self.val;
                                                                                                                            var self = $2665;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $2668 = self.err;
                                                                                                                                    var $2669 = self.nam;
                                                                                                                                    var $2670 = self.ini;
                                                                                                                                    var $2671 = self.idx;
                                                                                                                                    var $2672 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2658, $2668), $2669, $2670, $2671, $2672);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $2674 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("from", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $2676 = self.err;
                                                                                                                                                    var self = $2674;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $2678 = self.value;
                                                                                                                                                            var $2679 = Parser$Reply$error$(Parser$Error$combine$($2678, $2676));
                                                                                                                                                            var $2677 = $2679;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $2680 = Parser$Reply$error$($2676);
                                                                                                                                                            var $2677 = $2680;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2675 = $2677;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $2681 = self.pst;
                                                                                                                                                    var self = $2681;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $2683 = self.err;
                                                                                                                                                            var $2684 = self.nam;
                                                                                                                                                            var $2685 = self.ini;
                                                                                                                                                            var $2686 = self.idx;
                                                                                                                                                            var $2687 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2674, $2683), $2684, $2685, $2686, $2687);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $2689 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $2691 = self.err;
                                                                                                                                                                            var self = $2689;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $2693 = self.value;
                                                                                                                                                                                    var $2694 = Parser$Reply$error$(Parser$Error$combine$($2693, $2691));
                                                                                                                                                                                    var $2692 = $2694;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $2695 = Parser$Reply$error$($2691);
                                                                                                                                                                                    var $2692 = $2695;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2690 = $2692;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $2696 = self.pst;
                                                                                                                                                                            var $2697 = self.val;
                                                                                                                                                                            var self = $2696;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $2699 = self.err;
                                                                                                                                                                                    var $2700 = self.nam;
                                                                                                                                                                                    var $2701 = self.ini;
                                                                                                                                                                                    var $2702 = self.idx;
                                                                                                                                                                                    var $2703 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($2689, $2699), $2700, $2701, $2702, $2703);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $2705 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$text$("to", _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $2707 = self.err;
                                                                                                                                                                                                    var self = $2705;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $2709 = self.value;
                                                                                                                                                                                                            var $2710 = Parser$Reply$error$(Parser$Error$combine$($2709, $2707));
                                                                                                                                                                                                            var $2708 = $2710;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $2711 = Parser$Reply$error$($2707);
                                                                                                                                                                                                            var $2708 = $2711;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2706 = $2708;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $2712 = self.pst;
                                                                                                                                                                                                    var self = $2712;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $2714 = self.err;
                                                                                                                                                                                                            var $2715 = self.nam;
                                                                                                                                                                                                            var $2716 = self.ini;
                                                                                                                                                                                                            var $2717 = self.idx;
                                                                                                                                                                                                            var $2718 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($2705, $2714), $2715, $2716, $2717, $2718);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $2720 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$term(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $2722 = self.err;
                                                                                                                                                                                                                            var self = $2720;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $2724 = self.value;
                                                                                                                                                                                                                                    var $2725 = Parser$Reply$error$(Parser$Error$combine$($2724, $2722));
                                                                                                                                                                                                                                    var $2723 = $2725;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $2726 = Parser$Reply$error$($2722);
                                                                                                                                                                                                                                    var $2723 = $2726;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2721 = $2723;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $2727 = self.pst;
                                                                                                                                                                                                                            var $2728 = self.val;
                                                                                                                                                                                                                            var self = $2727;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $2730 = self.err;
                                                                                                                                                                                                                                    var $2731 = self.nam;
                                                                                                                                                                                                                                    var $2732 = self.ini;
                                                                                                                                                                                                                                    var $2733 = self.idx;
                                                                                                                                                                                                                                    var $2734 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($2720, $2730), $2731, $2732, $2733, $2734);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $2736 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Kind$Parser$text$(":", _reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $2738 = self.err;
                                                                                                                                                                                                                                                    var self = $2736;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $2740 = self.value;
                                                                                                                                                                                                                                                            var $2741 = Parser$Reply$error$(Parser$Error$combine$($2740, $2738));
                                                                                                                                                                                                                                                            var $2739 = $2741;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $2742 = Parser$Reply$error$($2738);
                                                                                                                                                                                                                                                            var $2739 = $2742;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2737 = $2739;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $2743 = self.pst;
                                                                                                                                                                                                                                                    var self = $2743;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $2745 = self.err;
                                                                                                                                                                                                                                                            var $2746 = self.nam;
                                                                                                                                                                                                                                                            var $2747 = self.ini;
                                                                                                                                                                                                                                                            var $2748 = self.idx;
                                                                                                                                                                                                                                                            var $2749 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($2736, $2745), $2746, $2747, $2748, $2749);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $2751 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = Kind$Parser$term(_reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $2753 = self.err;
                                                                                                                                                                                                                                                                            var self = $2751;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $2755 = self.value;
                                                                                                                                                                                                                                                                                    var $2756 = Parser$Reply$error$(Parser$Error$combine$($2755, $2753));
                                                                                                                                                                                                                                                                                    var $2754 = $2756;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $2757 = Parser$Reply$error$($2753);
                                                                                                                                                                                                                                                                                    var $2754 = $2757;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2752 = $2754;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $2758 = self.pst;
                                                                                                                                                                                                                                                                            var $2759 = self.val;
                                                                                                                                                                                                                                                                            var self = $2758;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $2761 = self.err;
                                                                                                                                                                                                                                                                                    var $2762 = self.nam;
                                                                                                                                                                                                                                                                                    var $2763 = self.ini;
                                                                                                                                                                                                                                                                                    var $2764 = self.idx;
                                                                                                                                                                                                                                                                                    var $2765 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($2751, $2761), $2762, $2763, $2764, $2765);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $2767 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$162 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$156);
                                                                                                                                                                                                                                                                                            var self = _reply$162;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $2769 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $2767;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $2771 = self.value;
                                                                                                                                                                                                                                                                                                            var $2772 = Parser$Reply$error$(Parser$Error$combine$($2771, $2769));
                                                                                                                                                                                                                                                                                                            var $2770 = $2772;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $2773 = Parser$Reply$error$($2769);
                                                                                                                                                                                                                                                                                                            var $2770 = $2773;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2768 = $2770;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $2774 = self.pst;
                                                                                                                                                                                                                                                                                                    var self = $2774;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $2776 = self.err;
                                                                                                                                                                                                                                                                                                            var $2777 = self.nam;
                                                                                                                                                                                                                                                                                                            var $2778 = self.ini;
                                                                                                                                                                                                                                                                                                            var $2779 = self.idx;
                                                                                                                                                                                                                                                                                                            var $2780 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($2767, $2776), $2777, $2778, $2779, $2780);
                                                                                                                                                                                                                                                                                                            var self = _reply$pst$170;
                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                    var $2782 = self.err;
                                                                                                                                                                                                                                                                                                                    var _reply$176 = _body$1(Unit$new)(_reply$pst$170);
                                                                                                                                                                                                                                                                                                                    var self = _reply$176;
                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                            var $2784 = self.err;
                                                                                                                                                                                                                                                                                                                            var self = $2782;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                    var $2786 = self.value;
                                                                                                                                                                                                                                                                                                                                    var $2787 = Parser$Reply$error$(Parser$Error$combine$($2786, $2784));
                                                                                                                                                                                                                                                                                                                                    var $2785 = $2787;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                    var $2788 = Parser$Reply$error$($2784);
                                                                                                                                                                                                                                                                                                                                    var $2785 = $2788;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2783 = $2785;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                            var $2789 = self.pst;
                                                                                                                                                                                                                                                                                                                            var $2790 = self.val;
                                                                                                                                                                                                                                                                                                                            var self = $2789;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                    var $2792 = self.err;
                                                                                                                                                                                                                                                                                                                                    var $2793 = self.nam;
                                                                                                                                                                                                                                                                                                                                    var $2794 = self.ini;
                                                                                                                                                                                                                                                                                                                                    var $2795 = self.idx;
                                                                                                                                                                                                                                                                                                                                    var $2796 = self.str;
                                                                                                                                                                                                                                                                                                                                    var _reply$pst$184 = Parser$State$new$(Parser$Error$maybe_combine$($2782, $2792), $2793, $2794, $2795, $2796);
                                                                                                                                                                                                                                                                                                                                    var _term$185 = Kind$Term$ref$("Nat.for");
                                                                                                                                                                                                                                                                                                                                    var _term$186 = Kind$Term$app$(_term$185, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                    var _term$187 = Kind$Term$app$(_term$186, Kind$Term$ref$($2620));
                                                                                                                                                                                                                                                                                                                                    var _term$188 = Kind$Term$app$(_term$187, $2697);
                                                                                                                                                                                                                                                                                                                                    var _term$189 = Kind$Term$app$(_term$188, $2728);
                                                                                                                                                                                                                                                                                                                                    var _lamb$190 = Kind$Term$lam$($2666, (_e$190 => {
                                                                                                                                                                                                                                                                                                                                        var $2798 = Kind$Term$lam$($2620, (_s$191 => {
                                                                                                                                                                                                                                                                                                                                            var $2799 = $2759;
                                                                                                                                                                                                                                                                                                                                            return $2799;
                                                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                                                        return $2798;
                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                    var _term$191 = Kind$Term$app$(_term$189, _lamb$190);
                                                                                                                                                                                                                                                                                                                                    var _term$192 = Kind$Term$let$($2620, _term$191, (_x$192 => {
                                                                                                                                                                                                                                                                                                                                        var $2800 = $2790;
                                                                                                                                                                                                                                                                                                                                        return $2800;
                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                    var $2797 = Parser$Reply$value$(_reply$pst$184, _term$192);
                                                                                                                                                                                                                                                                                                                                    var $2791 = $2797;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2783 = $2791;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                    var $2781 = $2783;
                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                            var $2775 = $2781;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2768 = $2775;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $2766 = $2768;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $2760 = $2766;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2752 = $2760;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $2750 = $2752;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $2744 = $2750;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2737 = $2744;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $2735 = $2737;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $2729 = $2735;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2721 = $2729;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $2719 = $2721;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $2713 = $2719;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2706 = $2713;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $2704 = $2706;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $2698 = $2704;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2690 = $2698;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $2688 = $2690;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $2682 = $2688;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2675 = $2682;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $2673 = $2675;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $2667 = $2673;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2659 = $2667;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $2657 = $2659;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $2651 = $2657;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2644 = $2651;
                                                                                                    break;
                                                                                            };
                                                                                            var $2642 = $2644;
                                                                                            break;
                                                                                    };
                                                                                    var $2636 = $2642;
                                                                                    break;
                                                                            };
                                                                            var $2629 = $2636;
                                                                            break;
                                                                    };
                                                                    var $2627 = $2629;
                                                                    break;
                                                            };
                                                            var $2621 = $2627;
                                                            break;
                                                    };
                                                    var $2613 = $2621;
                                                    break;
                                            };
                                            var $2611 = $2613;
                                            break;
                                    };
                                    var $2605 = $2611;
                                    break;
                            };
                            var $2598 = $2605;
                            break;
                    };
                    var $2596 = $2598;
                    break;
            };
            return $2596;
        }));
        return $2595;
    };
    const Kind$Parser$letforrange$nat = x0 => Kind$Parser$letforrange$nat$(x0);

    function Kind$Parser$letforrange$nat$with$(_body$1) {
        var $2801 = Kind$Parser$block("for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2803 = self.err;
                    var _reply$8 = Kind$Parser$text$("for ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2805 = self.err;
                            var self = $2803;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2807 = self.value;
                                    var $2808 = Parser$Reply$error$(Parser$Error$combine$($2807, $2805));
                                    var $2806 = $2808;
                                    break;
                                case 'Maybe.none':
                                    var $2809 = Parser$Reply$error$($2805);
                                    var $2806 = $2809;
                                    break;
                            };
                            var $2804 = $2806;
                            break;
                        case 'Parser.Reply.value':
                            var $2810 = self.pst;
                            var self = $2810;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2812 = self.err;
                                    var $2813 = self.nam;
                                    var $2814 = self.ini;
                                    var $2815 = self.idx;
                                    var $2816 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2803, $2812), $2813, $2814, $2815, $2816);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2818 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2820 = self.err;
                                                    var self = $2818;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2822 = self.value;
                                                            var $2823 = Parser$Reply$error$(Parser$Error$combine$($2822, $2820));
                                                            var $2821 = $2823;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2824 = Parser$Reply$error$($2820);
                                                            var $2821 = $2824;
                                                            break;
                                                    };
                                                    var $2819 = $2821;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2825 = self.pst;
                                                    var $2826 = self.val;
                                                    var self = $2825;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2828 = self.err;
                                                            var $2829 = self.nam;
                                                            var $2830 = self.ini;
                                                            var $2831 = self.idx;
                                                            var $2832 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2818, $2828), $2829, $2830, $2831, $2832);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2834 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("from", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2836 = self.err;
                                                                            var self = $2834;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2838 = self.value;
                                                                                    var $2839 = Parser$Reply$error$(Parser$Error$combine$($2838, $2836));
                                                                                    var $2837 = $2839;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2840 = Parser$Reply$error$($2836);
                                                                                    var $2837 = $2840;
                                                                                    break;
                                                                            };
                                                                            var $2835 = $2837;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2841 = self.pst;
                                                                            var self = $2841;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2843 = self.err;
                                                                                    var $2844 = self.nam;
                                                                                    var $2845 = self.ini;
                                                                                    var $2846 = self.idx;
                                                                                    var $2847 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2834, $2843), $2844, $2845, $2846, $2847);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2849 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2851 = self.err;
                                                                                                    var self = $2849;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2853 = self.value;
                                                                                                            var $2854 = Parser$Reply$error$(Parser$Error$combine$($2853, $2851));
                                                                                                            var $2852 = $2854;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2855 = Parser$Reply$error$($2851);
                                                                                                            var $2852 = $2855;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2850 = $2852;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2856 = self.pst;
                                                                                                    var $2857 = self.val;
                                                                                                    var self = $2856;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2859 = self.err;
                                                                                                            var $2860 = self.nam;
                                                                                                            var $2861 = self.ini;
                                                                                                            var $2862 = self.idx;
                                                                                                            var $2863 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2849, $2859), $2860, $2861, $2862, $2863);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $2865 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("to", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $2867 = self.err;
                                                                                                                            var self = $2865;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $2869 = self.value;
                                                                                                                                    var $2870 = Parser$Reply$error$(Parser$Error$combine$($2869, $2867));
                                                                                                                                    var $2868 = $2870;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $2871 = Parser$Reply$error$($2867);
                                                                                                                                    var $2868 = $2871;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2866 = $2868;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $2872 = self.pst;
                                                                                                                            var self = $2872;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $2874 = self.err;
                                                                                                                                    var $2875 = self.nam;
                                                                                                                                    var $2876 = self.ini;
                                                                                                                                    var $2877 = self.idx;
                                                                                                                                    var $2878 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2865, $2874), $2875, $2876, $2877, $2878);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $2880 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$term(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $2882 = self.err;
                                                                                                                                                    var self = $2880;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $2884 = self.value;
                                                                                                                                                            var $2885 = Parser$Reply$error$(Parser$Error$combine$($2884, $2882));
                                                                                                                                                            var $2883 = $2885;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $2886 = Parser$Reply$error$($2882);
                                                                                                                                                            var $2883 = $2886;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2881 = $2883;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $2887 = self.pst;
                                                                                                                                                    var $2888 = self.val;
                                                                                                                                                    var self = $2887;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $2890 = self.err;
                                                                                                                                                            var $2891 = self.nam;
                                                                                                                                                            var $2892 = self.ini;
                                                                                                                                                            var $2893 = self.idx;
                                                                                                                                                            var $2894 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2880, $2890), $2891, $2892, $2893, $2894);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $2896 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$("with ", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $2898 = self.err;
                                                                                                                                                                            var self = $2896;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $2900 = self.value;
                                                                                                                                                                                    var $2901 = Parser$Reply$error$(Parser$Error$combine$($2900, $2898));
                                                                                                                                                                                    var $2899 = $2901;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $2902 = Parser$Reply$error$($2898);
                                                                                                                                                                                    var $2899 = $2902;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2897 = $2899;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $2903 = self.pst;
                                                                                                                                                                            var self = $2903;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $2905 = self.err;
                                                                                                                                                                                    var $2906 = self.nam;
                                                                                                                                                                                    var $2907 = self.ini;
                                                                                                                                                                                    var $2908 = self.idx;
                                                                                                                                                                                    var $2909 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($2896, $2905), $2906, $2907, $2908, $2909);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $2911 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$name1$(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $2913 = self.err;
                                                                                                                                                                                                    var self = $2911;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $2915 = self.value;
                                                                                                                                                                                                            var $2916 = Parser$Reply$error$(Parser$Error$combine$($2915, $2913));
                                                                                                                                                                                                            var $2914 = $2916;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $2917 = Parser$Reply$error$($2913);
                                                                                                                                                                                                            var $2914 = $2917;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2912 = $2914;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $2918 = self.pst;
                                                                                                                                                                                                    var $2919 = self.val;
                                                                                                                                                                                                    var self = $2918;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $2921 = self.err;
                                                                                                                                                                                                            var $2922 = self.nam;
                                                                                                                                                                                                            var $2923 = self.ini;
                                                                                                                                                                                                            var $2924 = self.idx;
                                                                                                                                                                                                            var $2925 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($2911, $2921), $2922, $2923, $2924, $2925);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $2927 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$text$(":", _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $2929 = self.err;
                                                                                                                                                                                                                            var self = $2927;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $2931 = self.value;
                                                                                                                                                                                                                                    var $2932 = Parser$Reply$error$(Parser$Error$combine$($2931, $2929));
                                                                                                                                                                                                                                    var $2930 = $2932;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $2933 = Parser$Reply$error$($2929);
                                                                                                                                                                                                                                    var $2930 = $2933;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2928 = $2930;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $2934 = self.pst;
                                                                                                                                                                                                                            var self = $2934;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $2936 = self.err;
                                                                                                                                                                                                                                    var $2937 = self.nam;
                                                                                                                                                                                                                                    var $2938 = self.ini;
                                                                                                                                                                                                                                    var $2939 = self.idx;
                                                                                                                                                                                                                                    var $2940 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($2927, $2936), $2937, $2938, $2939, $2940);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $2942 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Kind$Parser$term(_reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $2944 = self.err;
                                                                                                                                                                                                                                                    var self = $2942;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $2946 = self.value;
                                                                                                                                                                                                                                                            var $2947 = Parser$Reply$error$(Parser$Error$combine$($2946, $2944));
                                                                                                                                                                                                                                                            var $2945 = $2947;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $2948 = Parser$Reply$error$($2944);
                                                                                                                                                                                                                                                            var $2945 = $2948;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2943 = $2945;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $2949 = self.pst;
                                                                                                                                                                                                                                                    var $2950 = self.val;
                                                                                                                                                                                                                                                    var self = $2949;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $2952 = self.err;
                                                                                                                                                                                                                                                            var $2953 = self.nam;
                                                                                                                                                                                                                                                            var $2954 = self.ini;
                                                                                                                                                                                                                                                            var $2955 = self.idx;
                                                                                                                                                                                                                                                            var $2956 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($2942, $2952), $2953, $2954, $2955, $2956);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $2958 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $2960 = self.err;
                                                                                                                                                                                                                                                                            var self = $2958;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $2962 = self.value;
                                                                                                                                                                                                                                                                                    var $2963 = Parser$Reply$error$(Parser$Error$combine$($2962, $2960));
                                                                                                                                                                                                                                                                                    var $2961 = $2963;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $2964 = Parser$Reply$error$($2960);
                                                                                                                                                                                                                                                                                    var $2961 = $2964;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2959 = $2961;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $2965 = self.pst;
                                                                                                                                                                                                                                                                            var self = $2965;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $2967 = self.err;
                                                                                                                                                                                                                                                                                    var $2968 = self.nam;
                                                                                                                                                                                                                                                                                    var $2969 = self.ini;
                                                                                                                                                                                                                                                                                    var $2970 = self.idx;
                                                                                                                                                                                                                                                                                    var $2971 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($2958, $2967), $2968, $2969, $2970, $2971);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $2973 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$162 = _body$1(Unit$new)(_reply$pst$156);
                                                                                                                                                                                                                                                                                            var self = _reply$162;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $2975 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $2973;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $2977 = self.value;
                                                                                                                                                                                                                                                                                                            var $2978 = Parser$Reply$error$(Parser$Error$combine$($2977, $2975));
                                                                                                                                                                                                                                                                                                            var $2976 = $2978;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $2979 = Parser$Reply$error$($2975);
                                                                                                                                                                                                                                                                                                            var $2976 = $2979;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2974 = $2976;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $2980 = self.pst;
                                                                                                                                                                                                                                                                                                    var $2981 = self.val;
                                                                                                                                                                                                                                                                                                    var self = $2980;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $2983 = self.err;
                                                                                                                                                                                                                                                                                                            var $2984 = self.nam;
                                                                                                                                                                                                                                                                                                            var $2985 = self.ini;
                                                                                                                                                                                                                                                                                                            var $2986 = self.idx;
                                                                                                                                                                                                                                                                                                            var $2987 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($2973, $2983), $2984, $2985, $2986, $2987);
                                                                                                                                                                                                                                                                                                            var _term$171 = Kind$Term$ref$("Nat.for");
                                                                                                                                                                                                                                                                                                            var _term$172 = Kind$Term$app$(_term$171, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                            var _term$173 = Kind$Term$app$(_term$172, Kind$Term$ref$($2919));
                                                                                                                                                                                                                                                                                                            var _term$174 = Kind$Term$app$(_term$173, $2857);
                                                                                                                                                                                                                                                                                                            var _term$175 = Kind$Term$app$(_term$174, $2888);
                                                                                                                                                                                                                                                                                                            var _lamb$176 = Kind$Term$lam$($2826, (_e$176 => {
                                                                                                                                                                                                                                                                                                                var $2989 = Kind$Term$lam$($2919, (_s$177 => {
                                                                                                                                                                                                                                                                                                                    var $2990 = $2950;
                                                                                                                                                                                                                                                                                                                    return $2990;
                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                return $2989;
                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                            var _term$177 = Kind$Term$app$(_term$175, _lamb$176);
                                                                                                                                                                                                                                                                                                            var _term$178 = Kind$Term$let$($2919, _term$177, (_x$178 => {
                                                                                                                                                                                                                                                                                                                var $2991 = $2981;
                                                                                                                                                                                                                                                                                                                return $2991;
                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                            var $2988 = Parser$Reply$value$(_reply$pst$170, _term$178);
                                                                                                                                                                                                                                                                                                            var $2982 = $2988;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2974 = $2982;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $2972 = $2974;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $2966 = $2972;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2959 = $2966;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $2957 = $2959;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $2951 = $2957;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2943 = $2951;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $2941 = $2943;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $2935 = $2941;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2928 = $2935;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $2926 = $2928;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $2920 = $2926;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2912 = $2920;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $2910 = $2912;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $2904 = $2910;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2897 = $2904;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $2895 = $2897;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $2889 = $2895;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2881 = $2889;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $2879 = $2881;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $2873 = $2879;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2866 = $2873;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $2864 = $2866;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $2858 = $2864;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2850 = $2858;
                                                                                                    break;
                                                                                            };
                                                                                            var $2848 = $2850;
                                                                                            break;
                                                                                    };
                                                                                    var $2842 = $2848;
                                                                                    break;
                                                                            };
                                                                            var $2835 = $2842;
                                                                            break;
                                                                    };
                                                                    var $2833 = $2835;
                                                                    break;
                                                            };
                                                            var $2827 = $2833;
                                                            break;
                                                    };
                                                    var $2819 = $2827;
                                                    break;
                                            };
                                            var $2817 = $2819;
                                            break;
                                    };
                                    var $2811 = $2817;
                                    break;
                            };
                            var $2804 = $2811;
                            break;
                    };
                    var $2802 = $2804;
                    break;
            };
            return $2802;
        }));
        return $2801;
    };
    const Kind$Parser$letforrange$nat$with = x0 => Kind$Parser$letforrange$nat$with$(x0);

    function Kind$Parser$letforin$(_body$1) {
        var $2992 = Kind$Parser$block("let-for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2994 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2996 = self.err;
                            var self = $2994;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2998 = self.value;
                                    var $2999 = Parser$Reply$error$(Parser$Error$combine$($2998, $2996));
                                    var $2997 = $2999;
                                    break;
                                case 'Maybe.none':
                                    var $3000 = Parser$Reply$error$($2996);
                                    var $2997 = $3000;
                                    break;
                            };
                            var $2995 = $2997;
                            break;
                        case 'Parser.Reply.value':
                            var $3001 = self.pst;
                            var self = $3001;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3003 = self.err;
                                    var $3004 = self.nam;
                                    var $3005 = self.ini;
                                    var $3006 = self.idx;
                                    var $3007 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2994, $3003), $3004, $3005, $3006, $3007);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3009 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3011 = self.err;
                                                    var self = $3009;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3013 = self.value;
                                                            var $3014 = Parser$Reply$error$(Parser$Error$combine$($3013, $3011));
                                                            var $3012 = $3014;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3015 = Parser$Reply$error$($3011);
                                                            var $3012 = $3015;
                                                            break;
                                                    };
                                                    var $3010 = $3012;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3016 = self.pst;
                                                    var $3017 = self.val;
                                                    var self = $3016;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3019 = self.err;
                                                            var $3020 = self.nam;
                                                            var $3021 = self.ini;
                                                            var $3022 = self.idx;
                                                            var $3023 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3009, $3019), $3020, $3021, $3022, $3023);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3025 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3027 = self.err;
                                                                            var self = $3025;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3029 = self.value;
                                                                                    var $3030 = Parser$Reply$error$(Parser$Error$combine$($3029, $3027));
                                                                                    var $3028 = $3030;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3031 = Parser$Reply$error$($3027);
                                                                                    var $3028 = $3031;
                                                                                    break;
                                                                            };
                                                                            var $3026 = $3028;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3032 = self.pst;
                                                                            var self = $3032;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3034 = self.err;
                                                                                    var $3035 = self.nam;
                                                                                    var $3036 = self.ini;
                                                                                    var $3037 = self.idx;
                                                                                    var $3038 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3025, $3034), $3035, $3036, $3037, $3038);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3040 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$("for ", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3042 = self.err;
                                                                                                    var self = $3040;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3044 = self.value;
                                                                                                            var $3045 = Parser$Reply$error$(Parser$Error$combine$($3044, $3042));
                                                                                                            var $3043 = $3045;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3046 = Parser$Reply$error$($3042);
                                                                                                            var $3043 = $3046;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3041 = $3043;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3047 = self.pst;
                                                                                                    var self = $3047;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3049 = self.err;
                                                                                                            var $3050 = self.nam;
                                                                                                            var $3051 = self.ini;
                                                                                                            var $3052 = self.idx;
                                                                                                            var $3053 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3040, $3049), $3050, $3051, $3052, $3053);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3055 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3057 = self.err;
                                                                                                                            var self = $3055;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3059 = self.value;
                                                                                                                                    var $3060 = Parser$Reply$error$(Parser$Error$combine$($3059, $3057));
                                                                                                                                    var $3058 = $3060;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3061 = Parser$Reply$error$($3057);
                                                                                                                                    var $3058 = $3061;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3056 = $3058;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3062 = self.pst;
                                                                                                                            var $3063 = self.val;
                                                                                                                            var self = $3062;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3065 = self.err;
                                                                                                                                    var $3066 = self.nam;
                                                                                                                                    var $3067 = self.ini;
                                                                                                                                    var $3068 = self.idx;
                                                                                                                                    var $3069 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3055, $3065), $3066, $3067, $3068, $3069);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3071 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("in", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3073 = self.err;
                                                                                                                                                    var self = $3071;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3075 = self.value;
                                                                                                                                                            var $3076 = Parser$Reply$error$(Parser$Error$combine$($3075, $3073));
                                                                                                                                                            var $3074 = $3076;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3077 = Parser$Reply$error$($3073);
                                                                                                                                                            var $3074 = $3077;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3072 = $3074;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3078 = self.pst;
                                                                                                                                                    var self = $3078;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3080 = self.err;
                                                                                                                                                            var $3081 = self.nam;
                                                                                                                                                            var $3082 = self.ini;
                                                                                                                                                            var $3083 = self.idx;
                                                                                                                                                            var $3084 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3071, $3080), $3081, $3082, $3083, $3084);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3086 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3088 = self.err;
                                                                                                                                                                            var self = $3086;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3090 = self.value;
                                                                                                                                                                                    var $3091 = Parser$Reply$error$(Parser$Error$combine$($3090, $3088));
                                                                                                                                                                                    var $3089 = $3091;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3092 = Parser$Reply$error$($3088);
                                                                                                                                                                                    var $3089 = $3092;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3087 = $3089;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3093 = self.pst;
                                                                                                                                                                            var $3094 = self.val;
                                                                                                                                                                            var self = $3093;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3096 = self.err;
                                                                                                                                                                                    var $3097 = self.nam;
                                                                                                                                                                                    var $3098 = self.ini;
                                                                                                                                                                                    var $3099 = self.idx;
                                                                                                                                                                                    var $3100 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3086, $3096), $3097, $3098, $3099, $3100);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3102 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$text$(":", _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3104 = self.err;
                                                                                                                                                                                                    var self = $3102;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3106 = self.value;
                                                                                                                                                                                                            var $3107 = Parser$Reply$error$(Parser$Error$combine$($3106, $3104));
                                                                                                                                                                                                            var $3105 = $3107;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3108 = Parser$Reply$error$($3104);
                                                                                                                                                                                                            var $3105 = $3108;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3103 = $3105;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3109 = self.pst;
                                                                                                                                                                                                    var self = $3109;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3111 = self.err;
                                                                                                                                                                                                            var $3112 = self.nam;
                                                                                                                                                                                                            var $3113 = self.ini;
                                                                                                                                                                                                            var $3114 = self.idx;
                                                                                                                                                                                                            var $3115 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3102, $3111), $3112, $3113, $3114, $3115);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $3117 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$term(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $3119 = self.err;
                                                                                                                                                                                                                            var self = $3117;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3121 = self.value;
                                                                                                                                                                                                                                    var $3122 = Parser$Reply$error$(Parser$Error$combine$($3121, $3119));
                                                                                                                                                                                                                                    var $3120 = $3122;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3123 = Parser$Reply$error$($3119);
                                                                                                                                                                                                                                    var $3120 = $3123;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3118 = $3120;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3124 = self.pst;
                                                                                                                                                                                                                            var $3125 = self.val;
                                                                                                                                                                                                                            var self = $3124;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3127 = self.err;
                                                                                                                                                                                                                                    var $3128 = self.nam;
                                                                                                                                                                                                                                    var $3129 = self.ini;
                                                                                                                                                                                                                                    var $3130 = self.idx;
                                                                                                                                                                                                                                    var $3131 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($3117, $3127), $3128, $3129, $3130, $3131);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $3133 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $3135 = self.err;
                                                                                                                                                                                                                                                    var self = $3133;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $3137 = self.value;
                                                                                                                                                                                                                                                            var $3138 = Parser$Reply$error$(Parser$Error$combine$($3137, $3135));
                                                                                                                                                                                                                                                            var $3136 = $3138;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $3139 = Parser$Reply$error$($3135);
                                                                                                                                                                                                                                                            var $3136 = $3139;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3134 = $3136;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $3140 = self.pst;
                                                                                                                                                                                                                                                    var self = $3140;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $3142 = self.err;
                                                                                                                                                                                                                                                            var $3143 = self.nam;
                                                                                                                                                                                                                                                            var $3144 = self.ini;
                                                                                                                                                                                                                                                            var $3145 = self.idx;
                                                                                                                                                                                                                                                            var $3146 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($3133, $3142), $3143, $3144, $3145, $3146);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $3148 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = _body$1(Unit$new)(_reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $3150 = self.err;
                                                                                                                                                                                                                                                                            var self = $3148;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $3152 = self.value;
                                                                                                                                                                                                                                                                                    var $3153 = Parser$Reply$error$(Parser$Error$combine$($3152, $3150));
                                                                                                                                                                                                                                                                                    var $3151 = $3153;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $3154 = Parser$Reply$error$($3150);
                                                                                                                                                                                                                                                                                    var $3151 = $3154;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $3149 = $3151;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $3155 = self.pst;
                                                                                                                                                                                                                                                                            var $3156 = self.val;
                                                                                                                                                                                                                                                                            var self = $3155;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $3158 = self.err;
                                                                                                                                                                                                                                                                                    var $3159 = self.nam;
                                                                                                                                                                                                                                                                                    var $3160 = self.ini;
                                                                                                                                                                                                                                                                                    var $3161 = self.idx;
                                                                                                                                                                                                                                                                                    var $3162 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($3148, $3158), $3159, $3160, $3161, $3162);
                                                                                                                                                                                                                                                                                    var _term$157 = Kind$Term$ref$("List.for");
                                                                                                                                                                                                                                                                                    var _term$158 = Kind$Term$app$(_term$157, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                    var _term$159 = Kind$Term$app$(_term$158, $3094);
                                                                                                                                                                                                                                                                                    var _term$160 = Kind$Term$app$(_term$159, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                    var _term$161 = Kind$Term$app$(_term$160, Kind$Term$ref$($3017));
                                                                                                                                                                                                                                                                                    var _lamb$162 = Kind$Term$lam$($3063, (_i$162 => {
                                                                                                                                                                                                                                                                                        var $3164 = Kind$Term$lam$($3017, (_x$163 => {
                                                                                                                                                                                                                                                                                            var $3165 = $3125;
                                                                                                                                                                                                                                                                                            return $3165;
                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                        return $3164;
                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                    var _term$163 = Kind$Term$app$(_term$161, _lamb$162);
                                                                                                                                                                                                                                                                                    var _term$164 = Kind$Term$let$($3017, _term$163, (_x$164 => {
                                                                                                                                                                                                                                                                                        var $3166 = $3156;
                                                                                                                                                                                                                                                                                        return $3166;
                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                    var $3163 = Parser$Reply$value$(_reply$pst$156, _term$164);
                                                                                                                                                                                                                                                                                    var $3157 = $3163;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $3149 = $3157;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $3147 = $3149;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $3141 = $3147;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3134 = $3141;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $3132 = $3134;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $3126 = $3132;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3118 = $3126;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $3116 = $3118;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $3110 = $3116;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3103 = $3110;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3101 = $3103;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3095 = $3101;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3087 = $3095;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3085 = $3087;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3079 = $3085;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3072 = $3079;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3070 = $3072;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3064 = $3070;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3056 = $3064;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3054 = $3056;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3048 = $3054;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3041 = $3048;
                                                                                                    break;
                                                                                            };
                                                                                            var $3039 = $3041;
                                                                                            break;
                                                                                    };
                                                                                    var $3033 = $3039;
                                                                                    break;
                                                                            };
                                                                            var $3026 = $3033;
                                                                            break;
                                                                    };
                                                                    var $3024 = $3026;
                                                                    break;
                                                            };
                                                            var $3018 = $3024;
                                                            break;
                                                    };
                                                    var $3010 = $3018;
                                                    break;
                                            };
                                            var $3008 = $3010;
                                            break;
                                    };
                                    var $3002 = $3008;
                                    break;
                            };
                            var $2995 = $3002;
                            break;
                    };
                    var $2993 = $2995;
                    break;
            };
            return $2993;
        }));
        return $2992;
    };
    const Kind$Parser$letforin = x0 => Kind$Parser$letforin$(x0);

    function Kind$Parser$letforin$with$(_body$1) {
        var $3167 = Kind$Parser$block("for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3169 = self.err;
                    var _reply$8 = Kind$Parser$text$("for ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3171 = self.err;
                            var self = $3169;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3173 = self.value;
                                    var $3174 = Parser$Reply$error$(Parser$Error$combine$($3173, $3171));
                                    var $3172 = $3174;
                                    break;
                                case 'Maybe.none':
                                    var $3175 = Parser$Reply$error$($3171);
                                    var $3172 = $3175;
                                    break;
                            };
                            var $3170 = $3172;
                            break;
                        case 'Parser.Reply.value':
                            var $3176 = self.pst;
                            var self = $3176;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3178 = self.err;
                                    var $3179 = self.nam;
                                    var $3180 = self.ini;
                                    var $3181 = self.idx;
                                    var $3182 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3169, $3178), $3179, $3180, $3181, $3182);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3184 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3186 = self.err;
                                                    var self = $3184;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3188 = self.value;
                                                            var $3189 = Parser$Reply$error$(Parser$Error$combine$($3188, $3186));
                                                            var $3187 = $3189;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3190 = Parser$Reply$error$($3186);
                                                            var $3187 = $3190;
                                                            break;
                                                    };
                                                    var $3185 = $3187;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3191 = self.pst;
                                                    var $3192 = self.val;
                                                    var self = $3191;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3194 = self.err;
                                                            var $3195 = self.nam;
                                                            var $3196 = self.ini;
                                                            var $3197 = self.idx;
                                                            var $3198 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3184, $3194), $3195, $3196, $3197, $3198);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3200 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("in", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3202 = self.err;
                                                                            var self = $3200;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3204 = self.value;
                                                                                    var $3205 = Parser$Reply$error$(Parser$Error$combine$($3204, $3202));
                                                                                    var $3203 = $3205;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3206 = Parser$Reply$error$($3202);
                                                                                    var $3203 = $3206;
                                                                                    break;
                                                                            };
                                                                            var $3201 = $3203;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3207 = self.pst;
                                                                            var self = $3207;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3209 = self.err;
                                                                                    var $3210 = self.nam;
                                                                                    var $3211 = self.ini;
                                                                                    var $3212 = self.idx;
                                                                                    var $3213 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3200, $3209), $3210, $3211, $3212, $3213);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3215 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3217 = self.err;
                                                                                                    var self = $3215;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3219 = self.value;
                                                                                                            var $3220 = Parser$Reply$error$(Parser$Error$combine$($3219, $3217));
                                                                                                            var $3218 = $3220;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3221 = Parser$Reply$error$($3217);
                                                                                                            var $3218 = $3221;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3216 = $3218;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3222 = self.pst;
                                                                                                    var $3223 = self.val;
                                                                                                    var self = $3222;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3225 = self.err;
                                                                                                            var $3226 = self.nam;
                                                                                                            var $3227 = self.ini;
                                                                                                            var $3228 = self.idx;
                                                                                                            var $3229 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3215, $3225), $3226, $3227, $3228, $3229);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3231 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("with", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3233 = self.err;
                                                                                                                            var self = $3231;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3235 = self.value;
                                                                                                                                    var $3236 = Parser$Reply$error$(Parser$Error$combine$($3235, $3233));
                                                                                                                                    var $3234 = $3236;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3237 = Parser$Reply$error$($3233);
                                                                                                                                    var $3234 = $3237;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3232 = $3234;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3238 = self.pst;
                                                                                                                            var self = $3238;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3240 = self.err;
                                                                                                                                    var $3241 = self.nam;
                                                                                                                                    var $3242 = self.ini;
                                                                                                                                    var $3243 = self.idx;
                                                                                                                                    var $3244 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3231, $3240), $3241, $3242, $3243, $3244);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3246 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$name1$(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3248 = self.err;
                                                                                                                                                    var self = $3246;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3250 = self.value;
                                                                                                                                                            var $3251 = Parser$Reply$error$(Parser$Error$combine$($3250, $3248));
                                                                                                                                                            var $3249 = $3251;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3252 = Parser$Reply$error$($3248);
                                                                                                                                                            var $3249 = $3252;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3247 = $3249;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3253 = self.pst;
                                                                                                                                                    var $3254 = self.val;
                                                                                                                                                    var self = $3253;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3256 = self.err;
                                                                                                                                                            var $3257 = self.nam;
                                                                                                                                                            var $3258 = self.ini;
                                                                                                                                                            var $3259 = self.idx;
                                                                                                                                                            var $3260 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3246, $3256), $3257, $3258, $3259, $3260);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3262 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$(":", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3264 = self.err;
                                                                                                                                                                            var self = $3262;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3266 = self.value;
                                                                                                                                                                                    var $3267 = Parser$Reply$error$(Parser$Error$combine$($3266, $3264));
                                                                                                                                                                                    var $3265 = $3267;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3268 = Parser$Reply$error$($3264);
                                                                                                                                                                                    var $3265 = $3268;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3263 = $3265;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3269 = self.pst;
                                                                                                                                                                            var self = $3269;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3271 = self.err;
                                                                                                                                                                                    var $3272 = self.nam;
                                                                                                                                                                                    var $3273 = self.ini;
                                                                                                                                                                                    var $3274 = self.idx;
                                                                                                                                                                                    var $3275 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3262, $3271), $3272, $3273, $3274, $3275);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3277 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$term(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3279 = self.err;
                                                                                                                                                                                                    var self = $3277;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3281 = self.value;
                                                                                                                                                                                                            var $3282 = Parser$Reply$error$(Parser$Error$combine$($3281, $3279));
                                                                                                                                                                                                            var $3280 = $3282;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3283 = Parser$Reply$error$($3279);
                                                                                                                                                                                                            var $3280 = $3283;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3278 = $3280;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3284 = self.pst;
                                                                                                                                                                                                    var $3285 = self.val;
                                                                                                                                                                                                    var self = $3284;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3287 = self.err;
                                                                                                                                                                                                            var $3288 = self.nam;
                                                                                                                                                                                                            var $3289 = self.ini;
                                                                                                                                                                                                            var $3290 = self.idx;
                                                                                                                                                                                                            var $3291 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3277, $3287), $3288, $3289, $3290, $3291);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $3293 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $3295 = self.err;
                                                                                                                                                                                                                            var self = $3293;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3297 = self.value;
                                                                                                                                                                                                                                    var $3298 = Parser$Reply$error$(Parser$Error$combine$($3297, $3295));
                                                                                                                                                                                                                                    var $3296 = $3298;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3299 = Parser$Reply$error$($3295);
                                                                                                                                                                                                                                    var $3296 = $3299;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3294 = $3296;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3300 = self.pst;
                                                                                                                                                                                                                            var self = $3300;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3302 = self.err;
                                                                                                                                                                                                                                    var $3303 = self.nam;
                                                                                                                                                                                                                                    var $3304 = self.ini;
                                                                                                                                                                                                                                    var $3305 = self.idx;
                                                                                                                                                                                                                                    var $3306 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($3293, $3302), $3303, $3304, $3305, $3306);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $3308 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = _body$1(Unit$new)(_reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $3310 = self.err;
                                                                                                                                                                                                                                                    var self = $3308;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $3312 = self.value;
                                                                                                                                                                                                                                                            var $3313 = Parser$Reply$error$(Parser$Error$combine$($3312, $3310));
                                                                                                                                                                                                                                                            var $3311 = $3313;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $3314 = Parser$Reply$error$($3310);
                                                                                                                                                                                                                                                            var $3311 = $3314;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3309 = $3311;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $3315 = self.pst;
                                                                                                                                                                                                                                                    var $3316 = self.val;
                                                                                                                                                                                                                                                    var self = $3315;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $3318 = self.err;
                                                                                                                                                                                                                                                            var $3319 = self.nam;
                                                                                                                                                                                                                                                            var $3320 = self.ini;
                                                                                                                                                                                                                                                            var $3321 = self.idx;
                                                                                                                                                                                                                                                            var $3322 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($3308, $3318), $3319, $3320, $3321, $3322);
                                                                                                                                                                                                                                                            var _term$143 = Kind$Term$ref$("List.for");
                                                                                                                                                                                                                                                            var _term$144 = Kind$Term$app$(_term$143, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                            var _term$145 = Kind$Term$app$(_term$144, $3223);
                                                                                                                                                                                                                                                            var _term$146 = Kind$Term$app$(_term$145, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                            var _term$147 = Kind$Term$app$(_term$146, Kind$Term$ref$($3254));
                                                                                                                                                                                                                                                            var _lamb$148 = Kind$Term$lam$($3192, (_i$148 => {
                                                                                                                                                                                                                                                                var $3324 = Kind$Term$lam$($3254, (_x$149 => {
                                                                                                                                                                                                                                                                    var $3325 = $3285;
                                                                                                                                                                                                                                                                    return $3325;
                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                return $3324;
                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                            var _term$149 = Kind$Term$app$(_term$147, _lamb$148);
                                                                                                                                                                                                                                                            var _term$150 = Kind$Term$let$($3254, _term$149, (_x$150 => {
                                                                                                                                                                                                                                                                var $3326 = $3316;
                                                                                                                                                                                                                                                                return $3326;
                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                            var $3323 = Parser$Reply$value$(_reply$pst$142, _term$150);
                                                                                                                                                                                                                                                            var $3317 = $3323;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3309 = $3317;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $3307 = $3309;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $3301 = $3307;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3294 = $3301;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $3292 = $3294;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $3286 = $3292;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3278 = $3286;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3276 = $3278;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3270 = $3276;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3263 = $3270;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3261 = $3263;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3255 = $3261;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3247 = $3255;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3245 = $3247;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3239 = $3245;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3232 = $3239;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3230 = $3232;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3224 = $3230;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3216 = $3224;
                                                                                                    break;
                                                                                            };
                                                                                            var $3214 = $3216;
                                                                                            break;
                                                                                    };
                                                                                    var $3208 = $3214;
                                                                                    break;
                                                                            };
                                                                            var $3201 = $3208;
                                                                            break;
                                                                    };
                                                                    var $3199 = $3201;
                                                                    break;
                                                            };
                                                            var $3193 = $3199;
                                                            break;
                                                    };
                                                    var $3185 = $3193;
                                                    break;
                                            };
                                            var $3183 = $3185;
                                            break;
                                    };
                                    var $3177 = $3183;
                                    break;
                            };
                            var $3170 = $3177;
                            break;
                    };
                    var $3168 = $3170;
                    break;
            };
            return $3168;
        }));
        return $3167;
    };
    const Kind$Parser$letforin$with = x0 => Kind$Parser$letforin$with$(x0);

    function Kind$Parser$letwhile$(_body$1) {
        var $3327 = Kind$Parser$block("let-while")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3329 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3331 = self.err;
                            var self = $3329;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3333 = self.value;
                                    var $3334 = Parser$Reply$error$(Parser$Error$combine$($3333, $3331));
                                    var $3332 = $3334;
                                    break;
                                case 'Maybe.none':
                                    var $3335 = Parser$Reply$error$($3331);
                                    var $3332 = $3335;
                                    break;
                            };
                            var $3330 = $3332;
                            break;
                        case 'Parser.Reply.value':
                            var $3336 = self.pst;
                            var self = $3336;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3338 = self.err;
                                    var $3339 = self.nam;
                                    var $3340 = self.ini;
                                    var $3341 = self.idx;
                                    var $3342 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3329, $3338), $3339, $3340, $3341, $3342);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3344 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3346 = self.err;
                                                    var self = $3344;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3348 = self.value;
                                                            var $3349 = Parser$Reply$error$(Parser$Error$combine$($3348, $3346));
                                                            var $3347 = $3349;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3350 = Parser$Reply$error$($3346);
                                                            var $3347 = $3350;
                                                            break;
                                                    };
                                                    var $3345 = $3347;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3351 = self.pst;
                                                    var $3352 = self.val;
                                                    var self = $3351;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3354 = self.err;
                                                            var $3355 = self.nam;
                                                            var $3356 = self.ini;
                                                            var $3357 = self.idx;
                                                            var $3358 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3344, $3354), $3355, $3356, $3357, $3358);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3360 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3362 = self.err;
                                                                            var self = $3360;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3364 = self.value;
                                                                                    var $3365 = Parser$Reply$error$(Parser$Error$combine$($3364, $3362));
                                                                                    var $3363 = $3365;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3366 = Parser$Reply$error$($3362);
                                                                                    var $3363 = $3366;
                                                                                    break;
                                                                            };
                                                                            var $3361 = $3363;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3367 = self.pst;
                                                                            var self = $3367;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3369 = self.err;
                                                                                    var $3370 = self.nam;
                                                                                    var $3371 = self.ini;
                                                                                    var $3372 = self.idx;
                                                                                    var $3373 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3360, $3369), $3370, $3371, $3372, $3373);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3375 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$("while ", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3377 = self.err;
                                                                                                    var self = $3375;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3379 = self.value;
                                                                                                            var $3380 = Parser$Reply$error$(Parser$Error$combine$($3379, $3377));
                                                                                                            var $3378 = $3380;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3381 = Parser$Reply$error$($3377);
                                                                                                            var $3378 = $3381;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3376 = $3378;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3382 = self.pst;
                                                                                                    var self = $3382;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3384 = self.err;
                                                                                                            var $3385 = self.nam;
                                                                                                            var $3386 = self.ini;
                                                                                                            var $3387 = self.idx;
                                                                                                            var $3388 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3375, $3384), $3385, $3386, $3387, $3388);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3390 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$term(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3392 = self.err;
                                                                                                                            var self = $3390;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3394 = self.value;
                                                                                                                                    var $3395 = Parser$Reply$error$(Parser$Error$combine$($3394, $3392));
                                                                                                                                    var $3393 = $3395;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3396 = Parser$Reply$error$($3392);
                                                                                                                                    var $3393 = $3396;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3391 = $3393;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3397 = self.pst;
                                                                                                                            var $3398 = self.val;
                                                                                                                            var self = $3397;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3400 = self.err;
                                                                                                                                    var $3401 = self.nam;
                                                                                                                                    var $3402 = self.ini;
                                                                                                                                    var $3403 = self.idx;
                                                                                                                                    var $3404 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3390, $3400), $3401, $3402, $3403, $3404);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3406 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$(":", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3408 = self.err;
                                                                                                                                                    var self = $3406;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3410 = self.value;
                                                                                                                                                            var $3411 = Parser$Reply$error$(Parser$Error$combine$($3410, $3408));
                                                                                                                                                            var $3409 = $3411;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3412 = Parser$Reply$error$($3408);
                                                                                                                                                            var $3409 = $3412;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3407 = $3409;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3413 = self.pst;
                                                                                                                                                    var self = $3413;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3415 = self.err;
                                                                                                                                                            var $3416 = self.nam;
                                                                                                                                                            var $3417 = self.ini;
                                                                                                                                                            var $3418 = self.idx;
                                                                                                                                                            var $3419 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3406, $3415), $3416, $3417, $3418, $3419);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3421 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3423 = self.err;
                                                                                                                                                                            var self = $3421;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3425 = self.value;
                                                                                                                                                                                    var $3426 = Parser$Reply$error$(Parser$Error$combine$($3425, $3423));
                                                                                                                                                                                    var $3424 = $3426;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3427 = Parser$Reply$error$($3423);
                                                                                                                                                                                    var $3424 = $3427;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3422 = $3424;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3428 = self.pst;
                                                                                                                                                                            var $3429 = self.val;
                                                                                                                                                                            var self = $3428;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3431 = self.err;
                                                                                                                                                                                    var $3432 = self.nam;
                                                                                                                                                                                    var $3433 = self.ini;
                                                                                                                                                                                    var $3434 = self.idx;
                                                                                                                                                                                    var $3435 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3421, $3431), $3432, $3433, $3434, $3435);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3437 = self.err;
                                                                                                                                                                                            var _reply$106 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3439 = self.err;
                                                                                                                                                                                                    var self = $3437;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3441 = self.value;
                                                                                                                                                                                                            var $3442 = Parser$Reply$error$(Parser$Error$combine$($3441, $3439));
                                                                                                                                                                                                            var $3440 = $3442;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3443 = Parser$Reply$error$($3439);
                                                                                                                                                                                                            var $3440 = $3443;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3438 = $3440;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3444 = self.pst;
                                                                                                                                                                                                    var self = $3444;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3446 = self.err;
                                                                                                                                                                                                            var $3447 = self.nam;
                                                                                                                                                                                                            var $3448 = self.ini;
                                                                                                                                                                                                            var $3449 = self.idx;
                                                                                                                                                                                                            var $3450 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3437, $3446), $3447, $3448, $3449, $3450);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $3452 = self.err;
                                                                                                                                                                                                                    var _reply$120 = _body$1(Unit$new)(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $3454 = self.err;
                                                                                                                                                                                                                            var self = $3452;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3456 = self.value;
                                                                                                                                                                                                                                    var $3457 = Parser$Reply$error$(Parser$Error$combine$($3456, $3454));
                                                                                                                                                                                                                                    var $3455 = $3457;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3458 = Parser$Reply$error$($3454);
                                                                                                                                                                                                                                    var $3455 = $3458;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3453 = $3455;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3459 = self.pst;
                                                                                                                                                                                                                            var $3460 = self.val;
                                                                                                                                                                                                                            var self = $3459;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3462 = self.err;
                                                                                                                                                                                                                                    var $3463 = self.nam;
                                                                                                                                                                                                                                    var $3464 = self.ini;
                                                                                                                                                                                                                                    var $3465 = self.idx;
                                                                                                                                                                                                                                    var $3466 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($3452, $3462), $3463, $3464, $3465, $3466);
                                                                                                                                                                                                                                    var _term$129 = Kind$Term$ref$("Function.while");
                                                                                                                                                                                                                                    var _term$130 = Kind$Term$app$(_term$129, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                    var _term$131 = Kind$Term$app$(_term$130, Kind$Term$ref$($3352));
                                                                                                                                                                                                                                    var _term$132 = Kind$Term$app$(_term$131, Kind$Term$lam$($3352, (_s$132 => {
                                                                                                                                                                                                                                        var $3468 = $3398;
                                                                                                                                                                                                                                        return $3468;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var _term$133 = Kind$Term$app$(_term$132, Kind$Term$lam$($3352, (_s$133 => {
                                                                                                                                                                                                                                        var $3469 = $3429;
                                                                                                                                                                                                                                        return $3469;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var _term$134 = Kind$Term$let$($3352, _term$133, (_x$134 => {
                                                                                                                                                                                                                                        var $3470 = $3460;
                                                                                                                                                                                                                                        return $3470;
                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                    var $3467 = Parser$Reply$value$(_reply$pst$128, _term$134);
                                                                                                                                                                                                                                    var $3461 = $3467;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3453 = $3461;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $3451 = $3453;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $3445 = $3451;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3438 = $3445;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3436 = $3438;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3430 = $3436;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3422 = $3430;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3420 = $3422;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3414 = $3420;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3407 = $3414;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3405 = $3407;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3399 = $3405;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3391 = $3399;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3389 = $3391;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3383 = $3389;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3376 = $3383;
                                                                                                    break;
                                                                                            };
                                                                                            var $3374 = $3376;
                                                                                            break;
                                                                                    };
                                                                                    var $3368 = $3374;
                                                                                    break;
                                                                            };
                                                                            var $3361 = $3368;
                                                                            break;
                                                                    };
                                                                    var $3359 = $3361;
                                                                    break;
                                                            };
                                                            var $3353 = $3359;
                                                            break;
                                                    };
                                                    var $3345 = $3353;
                                                    break;
                                            };
                                            var $3343 = $3345;
                                            break;
                                    };
                                    var $3337 = $3343;
                                    break;
                            };
                            var $3330 = $3337;
                            break;
                    };
                    var $3328 = $3330;
                    break;
            };
            return $3328;
        }));
        return $3327;
    };
    const Kind$Parser$letwhile = x0 => Kind$Parser$letwhile$(x0);

    function Kind$Parser$letwhile$with$(_body$1) {
        var $3471 = Kind$Parser$block("let-while")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3473 = self.err;
                    var _reply$8 = Kind$Parser$text$("while ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3475 = self.err;
                            var self = $3473;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3477 = self.value;
                                    var $3478 = Parser$Reply$error$(Parser$Error$combine$($3477, $3475));
                                    var $3476 = $3478;
                                    break;
                                case 'Maybe.none':
                                    var $3479 = Parser$Reply$error$($3475);
                                    var $3476 = $3479;
                                    break;
                            };
                            var $3474 = $3476;
                            break;
                        case 'Parser.Reply.value':
                            var $3480 = self.pst;
                            var self = $3480;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3482 = self.err;
                                    var $3483 = self.nam;
                                    var $3484 = self.ini;
                                    var $3485 = self.idx;
                                    var $3486 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3473, $3482), $3483, $3484, $3485, $3486);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3488 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3490 = self.err;
                                                    var self = $3488;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3492 = self.value;
                                                            var $3493 = Parser$Reply$error$(Parser$Error$combine$($3492, $3490));
                                                            var $3491 = $3493;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3494 = Parser$Reply$error$($3490);
                                                            var $3491 = $3494;
                                                            break;
                                                    };
                                                    var $3489 = $3491;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3495 = self.pst;
                                                    var $3496 = self.val;
                                                    var self = $3495;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3498 = self.err;
                                                            var $3499 = self.nam;
                                                            var $3500 = self.ini;
                                                            var $3501 = self.idx;
                                                            var $3502 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3488, $3498), $3499, $3500, $3501, $3502);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3504 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("with ", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3506 = self.err;
                                                                            var self = $3504;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3508 = self.value;
                                                                                    var $3509 = Parser$Reply$error$(Parser$Error$combine$($3508, $3506));
                                                                                    var $3507 = $3509;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3510 = Parser$Reply$error$($3506);
                                                                                    var $3507 = $3510;
                                                                                    break;
                                                                            };
                                                                            var $3505 = $3507;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3511 = self.pst;
                                                                            var self = $3511;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3513 = self.err;
                                                                                    var $3514 = self.nam;
                                                                                    var $3515 = self.ini;
                                                                                    var $3516 = self.idx;
                                                                                    var $3517 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3504, $3513), $3514, $3515, $3516, $3517);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3519 = self.err;
                                                                                            var _reply$50 = Kind$Parser$name1$(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3521 = self.err;
                                                                                                    var self = $3519;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3523 = self.value;
                                                                                                            var $3524 = Parser$Reply$error$(Parser$Error$combine$($3523, $3521));
                                                                                                            var $3522 = $3524;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3525 = Parser$Reply$error$($3521);
                                                                                                            var $3522 = $3525;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3520 = $3522;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3526 = self.pst;
                                                                                                    var $3527 = self.val;
                                                                                                    var self = $3526;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3529 = self.err;
                                                                                                            var $3530 = self.nam;
                                                                                                            var $3531 = self.ini;
                                                                                                            var $3532 = self.idx;
                                                                                                            var $3533 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3519, $3529), $3530, $3531, $3532, $3533);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3535 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$(":", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3537 = self.err;
                                                                                                                            var self = $3535;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3539 = self.value;
                                                                                                                                    var $3540 = Parser$Reply$error$(Parser$Error$combine$($3539, $3537));
                                                                                                                                    var $3538 = $3540;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3541 = Parser$Reply$error$($3537);
                                                                                                                                    var $3538 = $3541;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3536 = $3538;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3542 = self.pst;
                                                                                                                            var self = $3542;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3544 = self.err;
                                                                                                                                    var $3545 = self.nam;
                                                                                                                                    var $3546 = self.ini;
                                                                                                                                    var $3547 = self.idx;
                                                                                                                                    var $3548 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3535, $3544), $3545, $3546, $3547, $3548);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3550 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$term(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3552 = self.err;
                                                                                                                                                    var self = $3550;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3554 = self.value;
                                                                                                                                                            var $3555 = Parser$Reply$error$(Parser$Error$combine$($3554, $3552));
                                                                                                                                                            var $3553 = $3555;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3556 = Parser$Reply$error$($3552);
                                                                                                                                                            var $3553 = $3556;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3551 = $3553;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3557 = self.pst;
                                                                                                                                                    var $3558 = self.val;
                                                                                                                                                    var self = $3557;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3560 = self.err;
                                                                                                                                                            var $3561 = self.nam;
                                                                                                                                                            var $3562 = self.ini;
                                                                                                                                                            var $3563 = self.idx;
                                                                                                                                                            var $3564 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3550, $3560), $3561, $3562, $3563, $3564);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3566 = self.err;
                                                                                                                                                                    var _reply$92 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3568 = self.err;
                                                                                                                                                                            var self = $3566;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3570 = self.value;
                                                                                                                                                                                    var $3571 = Parser$Reply$error$(Parser$Error$combine$($3570, $3568));
                                                                                                                                                                                    var $3569 = $3571;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3572 = Parser$Reply$error$($3568);
                                                                                                                                                                                    var $3569 = $3572;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3567 = $3569;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3573 = self.pst;
                                                                                                                                                                            var self = $3573;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3575 = self.err;
                                                                                                                                                                                    var $3576 = self.nam;
                                                                                                                                                                                    var $3577 = self.ini;
                                                                                                                                                                                    var $3578 = self.idx;
                                                                                                                                                                                    var $3579 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3566, $3575), $3576, $3577, $3578, $3579);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3581 = self.err;
                                                                                                                                                                                            var _reply$106 = _body$1(Unit$new)(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3583 = self.err;
                                                                                                                                                                                                    var self = $3581;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3585 = self.value;
                                                                                                                                                                                                            var $3586 = Parser$Reply$error$(Parser$Error$combine$($3585, $3583));
                                                                                                                                                                                                            var $3584 = $3586;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3587 = Parser$Reply$error$($3583);
                                                                                                                                                                                                            var $3584 = $3587;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3582 = $3584;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3588 = self.pst;
                                                                                                                                                                                                    var $3589 = self.val;
                                                                                                                                                                                                    var self = $3588;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3591 = self.err;
                                                                                                                                                                                                            var $3592 = self.nam;
                                                                                                                                                                                                            var $3593 = self.ini;
                                                                                                                                                                                                            var $3594 = self.idx;
                                                                                                                                                                                                            var $3595 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3581, $3591), $3592, $3593, $3594, $3595);
                                                                                                                                                                                                            var _term$115 = Kind$Term$ref$("Function.while");
                                                                                                                                                                                                            var _term$116 = Kind$Term$app$(_term$115, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                            var _term$117 = Kind$Term$app$(_term$116, Kind$Term$ref$($3527));
                                                                                                                                                                                                            var _term$118 = Kind$Term$app$(_term$117, Kind$Term$lam$($3527, (_s$118 => {
                                                                                                                                                                                                                var $3597 = $3496;
                                                                                                                                                                                                                return $3597;
                                                                                                                                                                                                            })));
                                                                                                                                                                                                            var _term$119 = Kind$Term$app$(_term$118, Kind$Term$lam$($3527, (_s$119 => {
                                                                                                                                                                                                                var $3598 = $3558;
                                                                                                                                                                                                                return $3598;
                                                                                                                                                                                                            })));
                                                                                                                                                                                                            var _term$120 = Kind$Term$let$($3527, _term$119, (_x$120 => {
                                                                                                                                                                                                                var $3599 = $3589;
                                                                                                                                                                                                                return $3599;
                                                                                                                                                                                                            }));
                                                                                                                                                                                                            var $3596 = Parser$Reply$value$(_reply$pst$114, _term$120);
                                                                                                                                                                                                            var $3590 = $3596;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3582 = $3590;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3580 = $3582;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3574 = $3580;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3567 = $3574;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3565 = $3567;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3559 = $3565;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3551 = $3559;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3549 = $3551;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3543 = $3549;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3536 = $3543;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3534 = $3536;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3528 = $3534;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3520 = $3528;
                                                                                                    break;
                                                                                            };
                                                                                            var $3518 = $3520;
                                                                                            break;
                                                                                    };
                                                                                    var $3512 = $3518;
                                                                                    break;
                                                                            };
                                                                            var $3505 = $3512;
                                                                            break;
                                                                    };
                                                                    var $3503 = $3505;
                                                                    break;
                                                            };
                                                            var $3497 = $3503;
                                                            break;
                                                    };
                                                    var $3489 = $3497;
                                                    break;
                                            };
                                            var $3487 = $3489;
                                            break;
                                    };
                                    var $3481 = $3487;
                                    break;
                            };
                            var $3474 = $3481;
                            break;
                    };
                    var $3472 = $3474;
                    break;
            };
            return $3472;
        }));
        return $3471;
    };
    const Kind$Parser$letwhile$with = x0 => Kind$Parser$letwhile$with$(x0);

    function Kind$Parser$let$(_body$1) {
        var $3600 = Kind$Parser$block("let")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3602 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3604 = self.err;
                            var self = $3602;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3606 = self.value;
                                    var $3607 = Parser$Reply$error$(Parser$Error$combine$($3606, $3604));
                                    var $3605 = $3607;
                                    break;
                                case 'Maybe.none':
                                    var $3608 = Parser$Reply$error$($3604);
                                    var $3605 = $3608;
                                    break;
                            };
                            var $3603 = $3605;
                            break;
                        case 'Parser.Reply.value':
                            var $3609 = self.pst;
                            var self = $3609;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3611 = self.err;
                                    var $3612 = self.nam;
                                    var $3613 = self.ini;
                                    var $3614 = self.idx;
                                    var $3615 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3602, $3611), $3612, $3613, $3614, $3615);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3617 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3619 = self.err;
                                                    var self = $3617;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3621 = self.value;
                                                            var $3622 = Parser$Reply$error$(Parser$Error$combine$($3621, $3619));
                                                            var $3620 = $3622;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3623 = Parser$Reply$error$($3619);
                                                            var $3620 = $3623;
                                                            break;
                                                    };
                                                    var $3618 = $3620;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3624 = self.pst;
                                                    var $3625 = self.val;
                                                    var self = $3624;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3627 = self.err;
                                                            var $3628 = self.nam;
                                                            var $3629 = self.ini;
                                                            var $3630 = self.idx;
                                                            var $3631 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3617, $3627), $3628, $3629, $3630, $3631);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3633 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3635 = self.err;
                                                                            var self = $3633;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3637 = self.value;
                                                                                    var $3638 = Parser$Reply$error$(Parser$Error$combine$($3637, $3635));
                                                                                    var $3636 = $3638;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3639 = Parser$Reply$error$($3635);
                                                                                    var $3636 = $3639;
                                                                                    break;
                                                                            };
                                                                            var $3634 = $3636;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3640 = self.pst;
                                                                            var self = $3640;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3642 = self.err;
                                                                                    var $3643 = self.nam;
                                                                                    var $3644 = self.ini;
                                                                                    var $3645 = self.idx;
                                                                                    var $3646 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3633, $3642), $3643, $3644, $3645, $3646);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3648 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3650 = self.err;
                                                                                                    var self = $3648;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3652 = self.value;
                                                                                                            var $3653 = Parser$Reply$error$(Parser$Error$combine$($3652, $3650));
                                                                                                            var $3651 = $3653;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3654 = Parser$Reply$error$($3650);
                                                                                                            var $3651 = $3654;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3649 = $3651;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3655 = self.pst;
                                                                                                    var $3656 = self.val;
                                                                                                    var self = $3655;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3658 = self.err;
                                                                                                            var $3659 = self.nam;
                                                                                                            var $3660 = self.ini;
                                                                                                            var $3661 = self.idx;
                                                                                                            var $3662 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3648, $3658), $3659, $3660, $3661, $3662);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3664 = self.err;
                                                                                                                    var _reply$64 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3666 = self.err;
                                                                                                                            var self = $3664;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3668 = self.value;
                                                                                                                                    var $3669 = Parser$Reply$error$(Parser$Error$combine$($3668, $3666));
                                                                                                                                    var $3667 = $3669;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3670 = Parser$Reply$error$($3666);
                                                                                                                                    var $3667 = $3670;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3665 = $3667;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3671 = self.pst;
                                                                                                                            var self = $3671;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3673 = self.err;
                                                                                                                                    var $3674 = self.nam;
                                                                                                                                    var $3675 = self.ini;
                                                                                                                                    var $3676 = self.idx;
                                                                                                                                    var $3677 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3664, $3673), $3674, $3675, $3676, $3677);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3679 = self.err;
                                                                                                                                            var _reply$78 = _body$1(Unit$new)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3681 = self.err;
                                                                                                                                                    var self = $3679;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3683 = self.value;
                                                                                                                                                            var $3684 = Parser$Reply$error$(Parser$Error$combine$($3683, $3681));
                                                                                                                                                            var $3682 = $3684;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3685 = Parser$Reply$error$($3681);
                                                                                                                                                            var $3682 = $3685;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3680 = $3682;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3686 = self.pst;
                                                                                                                                                    var $3687 = self.val;
                                                                                                                                                    var self = $3686;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3689 = self.err;
                                                                                                                                                            var $3690 = self.nam;
                                                                                                                                                            var $3691 = self.ini;
                                                                                                                                                            var $3692 = self.idx;
                                                                                                                                                            var $3693 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3679, $3689), $3690, $3691, $3692, $3693);
                                                                                                                                                            var $3694 = Parser$Reply$value$(_reply$pst$86, Kind$Term$let$($3625, $3656, (_x$87 => {
                                                                                                                                                                var $3695 = $3687;
                                                                                                                                                                return $3695;
                                                                                                                                                            })));
                                                                                                                                                            var $3688 = $3694;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3680 = $3688;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3678 = $3680;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3672 = $3678;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3665 = $3672;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3663 = $3665;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3657 = $3663;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3649 = $3657;
                                                                                                    break;
                                                                                            };
                                                                                            var $3647 = $3649;
                                                                                            break;
                                                                                    };
                                                                                    var $3641 = $3647;
                                                                                    break;
                                                                            };
                                                                            var $3634 = $3641;
                                                                            break;
                                                                    };
                                                                    var $3632 = $3634;
                                                                    break;
                                                            };
                                                            var $3626 = $3632;
                                                            break;
                                                    };
                                                    var $3618 = $3626;
                                                    break;
                                            };
                                            var $3616 = $3618;
                                            break;
                                    };
                                    var $3610 = $3616;
                                    break;
                            };
                            var $3603 = $3610;
                            break;
                    };
                    var $3601 = $3603;
                    break;
            };
            return $3601;
        }));
        return $3600;
    };
    const Kind$Parser$let = x0 => Kind$Parser$let$(x0);

    function Kind$Parser$let$omit$(_body$1) {
        var $3696 = Kind$Parser$block("let")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3698 = self.err;
                    var _reply$8 = Kind$Parser$name1$(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3700 = self.err;
                            var self = $3698;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3702 = self.value;
                                    var $3703 = Parser$Reply$error$(Parser$Error$combine$($3702, $3700));
                                    var $3701 = $3703;
                                    break;
                                case 'Maybe.none':
                                    var $3704 = Parser$Reply$error$($3700);
                                    var $3701 = $3704;
                                    break;
                            };
                            var $3699 = $3701;
                            break;
                        case 'Parser.Reply.value':
                            var $3705 = self.pst;
                            var $3706 = self.val;
                            var self = $3705;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3708 = self.err;
                                    var $3709 = self.nam;
                                    var $3710 = self.ini;
                                    var $3711 = self.idx;
                                    var $3712 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3698, $3708), $3709, $3710, $3711, $3712);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3714 = self.err;
                                            var _reply$22 = Kind$Parser$text$("= ", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3716 = self.err;
                                                    var self = $3714;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3718 = self.value;
                                                            var $3719 = Parser$Reply$error$(Parser$Error$combine$($3718, $3716));
                                                            var $3717 = $3719;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3720 = Parser$Reply$error$($3716);
                                                            var $3717 = $3720;
                                                            break;
                                                    };
                                                    var $3715 = $3717;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3721 = self.pst;
                                                    var self = $3721;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3723 = self.err;
                                                            var $3724 = self.nam;
                                                            var $3725 = self.ini;
                                                            var $3726 = self.idx;
                                                            var $3727 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3714, $3723), $3724, $3725, $3726, $3727);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3729 = self.err;
                                                                    var _reply$36 = Kind$Parser$term(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3731 = self.err;
                                                                            var self = $3729;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3733 = self.value;
                                                                                    var $3734 = Parser$Reply$error$(Parser$Error$combine$($3733, $3731));
                                                                                    var $3732 = $3734;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3735 = Parser$Reply$error$($3731);
                                                                                    var $3732 = $3735;
                                                                                    break;
                                                                            };
                                                                            var $3730 = $3732;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3736 = self.pst;
                                                                            var $3737 = self.val;
                                                                            var self = $3736;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3739 = self.err;
                                                                                    var $3740 = self.nam;
                                                                                    var $3741 = self.ini;
                                                                                    var $3742 = self.idx;
                                                                                    var $3743 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3729, $3739), $3740, $3741, $3742, $3743);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3745 = self.err;
                                                                                            var _reply$50 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3747 = self.err;
                                                                                                    var self = $3745;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3749 = self.value;
                                                                                                            var $3750 = Parser$Reply$error$(Parser$Error$combine$($3749, $3747));
                                                                                                            var $3748 = $3750;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3751 = Parser$Reply$error$($3747);
                                                                                                            var $3748 = $3751;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3746 = $3748;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3752 = self.pst;
                                                                                                    var self = $3752;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3754 = self.err;
                                                                                                            var $3755 = self.nam;
                                                                                                            var $3756 = self.ini;
                                                                                                            var $3757 = self.idx;
                                                                                                            var $3758 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3745, $3754), $3755, $3756, $3757, $3758);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3760 = self.err;
                                                                                                                    var _reply$64 = _body$1(Unit$new)(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3762 = self.err;
                                                                                                                            var self = $3760;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3764 = self.value;
                                                                                                                                    var $3765 = Parser$Reply$error$(Parser$Error$combine$($3764, $3762));
                                                                                                                                    var $3763 = $3765;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3766 = Parser$Reply$error$($3762);
                                                                                                                                    var $3763 = $3766;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3761 = $3763;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3767 = self.pst;
                                                                                                                            var $3768 = self.val;
                                                                                                                            var self = $3767;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3770 = self.err;
                                                                                                                                    var $3771 = self.nam;
                                                                                                                                    var $3772 = self.ini;
                                                                                                                                    var $3773 = self.idx;
                                                                                                                                    var $3774 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3760, $3770), $3771, $3772, $3773, $3774);
                                                                                                                                    var $3775 = Parser$Reply$value$(_reply$pst$72, Kind$Term$let$($3706, $3737, (_x$73 => {
                                                                                                                                        var $3776 = $3768;
                                                                                                                                        return $3776;
                                                                                                                                    })));
                                                                                                                                    var $3769 = $3775;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3761 = $3769;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3759 = $3761;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3753 = $3759;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3746 = $3753;
                                                                                                    break;
                                                                                            };
                                                                                            var $3744 = $3746;
                                                                                            break;
                                                                                    };
                                                                                    var $3738 = $3744;
                                                                                    break;
                                                                            };
                                                                            var $3730 = $3738;
                                                                            break;
                                                                    };
                                                                    var $3728 = $3730;
                                                                    break;
                                                            };
                                                            var $3722 = $3728;
                                                            break;
                                                    };
                                                    var $3715 = $3722;
                                                    break;
                                            };
                                            var $3713 = $3715;
                                            break;
                                    };
                                    var $3707 = $3713;
                                    break;
                            };
                            var $3699 = $3707;
                            break;
                    };
                    var $3697 = $3699;
                    break;
            };
            return $3697;
        }));
        return $3696;
    };
    const Kind$Parser$let$omit = x0 => Kind$Parser$let$omit$(x0);

    function Kind$Parser$getwhile$(_body$1) {
        var $3777 = Kind$Parser$block("let-while")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3779 = self.err;
                    var _reply$8 = Parser$maybe$(Kind$Parser$text("let "), _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3781 = self.err;
                            var self = $3779;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3783 = self.value;
                                    var $3784 = Parser$Reply$error$(Parser$Error$combine$($3783, $3781));
                                    var $3782 = $3784;
                                    break;
                                case 'Maybe.none':
                                    var $3785 = Parser$Reply$error$($3781);
                                    var $3782 = $3785;
                                    break;
                            };
                            var $3780 = $3782;
                            break;
                        case 'Parser.Reply.value':
                            var $3786 = self.pst;
                            var self = $3786;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3788 = self.err;
                                    var $3789 = self.nam;
                                    var $3790 = self.ini;
                                    var $3791 = self.idx;
                                    var $3792 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3779, $3788), $3789, $3790, $3791, $3792);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3794 = self.err;
                                            var _reply$22 = Kind$Parser$text$("{", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3796 = self.err;
                                                    var self = $3794;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3798 = self.value;
                                                            var $3799 = Parser$Reply$error$(Parser$Error$combine$($3798, $3796));
                                                            var $3797 = $3799;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3800 = Parser$Reply$error$($3796);
                                                            var $3797 = $3800;
                                                            break;
                                                    };
                                                    var $3795 = $3797;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3801 = self.pst;
                                                    var self = $3801;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3803 = self.err;
                                                            var $3804 = self.nam;
                                                            var $3805 = self.ini;
                                                            var $3806 = self.idx;
                                                            var $3807 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3794, $3803), $3804, $3805, $3806, $3807);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3809 = self.err;
                                                                    var _reply$36 = Kind$Parser$name1$(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3811 = self.err;
                                                                            var self = $3809;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3813 = self.value;
                                                                                    var $3814 = Parser$Reply$error$(Parser$Error$combine$($3813, $3811));
                                                                                    var $3812 = $3814;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3815 = Parser$Reply$error$($3811);
                                                                                    var $3812 = $3815;
                                                                                    break;
                                                                            };
                                                                            var $3810 = $3812;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3816 = self.pst;
                                                                            var $3817 = self.val;
                                                                            var self = $3816;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3819 = self.err;
                                                                                    var $3820 = self.nam;
                                                                                    var $3821 = self.ini;
                                                                                    var $3822 = self.idx;
                                                                                    var $3823 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3809, $3819), $3820, $3821, $3822, $3823);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3825 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$(",", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3827 = self.err;
                                                                                                    var self = $3825;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3829 = self.value;
                                                                                                            var $3830 = Parser$Reply$error$(Parser$Error$combine$($3829, $3827));
                                                                                                            var $3828 = $3830;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3831 = Parser$Reply$error$($3827);
                                                                                                            var $3828 = $3831;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3826 = $3828;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3832 = self.pst;
                                                                                                    var self = $3832;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3834 = self.err;
                                                                                                            var $3835 = self.nam;
                                                                                                            var $3836 = self.ini;
                                                                                                            var $3837 = self.idx;
                                                                                                            var $3838 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3825, $3834), $3835, $3836, $3837, $3838);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3840 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3842 = self.err;
                                                                                                                            var self = $3840;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3844 = self.value;
                                                                                                                                    var $3845 = Parser$Reply$error$(Parser$Error$combine$($3844, $3842));
                                                                                                                                    var $3843 = $3845;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3846 = Parser$Reply$error$($3842);
                                                                                                                                    var $3843 = $3846;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3841 = $3843;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3847 = self.pst;
                                                                                                                            var $3848 = self.val;
                                                                                                                            var self = $3847;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3850 = self.err;
                                                                                                                                    var $3851 = self.nam;
                                                                                                                                    var $3852 = self.ini;
                                                                                                                                    var $3853 = self.idx;
                                                                                                                                    var $3854 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3840, $3850), $3851, $3852, $3853, $3854);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3856 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("}", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3858 = self.err;
                                                                                                                                                    var self = $3856;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3860 = self.value;
                                                                                                                                                            var $3861 = Parser$Reply$error$(Parser$Error$combine$($3860, $3858));
                                                                                                                                                            var $3859 = $3861;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3862 = Parser$Reply$error$($3858);
                                                                                                                                                            var $3859 = $3862;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3857 = $3859;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3863 = self.pst;
                                                                                                                                                    var self = $3863;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3865 = self.err;
                                                                                                                                                            var $3866 = self.nam;
                                                                                                                                                            var $3867 = self.ini;
                                                                                                                                                            var $3868 = self.idx;
                                                                                                                                                            var $3869 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3856, $3865), $3866, $3867, $3868, $3869);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3871 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$("=", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3873 = self.err;
                                                                                                                                                                            var self = $3871;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3875 = self.value;
                                                                                                                                                                                    var $3876 = Parser$Reply$error$(Parser$Error$combine$($3875, $3873));
                                                                                                                                                                                    var $3874 = $3876;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3877 = Parser$Reply$error$($3873);
                                                                                                                                                                                    var $3874 = $3877;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3872 = $3874;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3878 = self.pst;
                                                                                                                                                                            var self = $3878;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3880 = self.err;
                                                                                                                                                                                    var $3881 = self.nam;
                                                                                                                                                                                    var $3882 = self.ini;
                                                                                                                                                                                    var $3883 = self.idx;
                                                                                                                                                                                    var $3884 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3871, $3880), $3881, $3882, $3883, $3884);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3886 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$text$("while ", _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3888 = self.err;
                                                                                                                                                                                                    var self = $3886;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3890 = self.value;
                                                                                                                                                                                                            var $3891 = Parser$Reply$error$(Parser$Error$combine$($3890, $3888));
                                                                                                                                                                                                            var $3889 = $3891;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3892 = Parser$Reply$error$($3888);
                                                                                                                                                                                                            var $3889 = $3892;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3887 = $3889;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3893 = self.pst;
                                                                                                                                                                                                    var self = $3893;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3895 = self.err;
                                                                                                                                                                                                            var $3896 = self.nam;
                                                                                                                                                                                                            var $3897 = self.ini;
                                                                                                                                                                                                            var $3898 = self.idx;
                                                                                                                                                                                                            var $3899 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3886, $3895), $3896, $3897, $3898, $3899);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $3901 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$term(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $3903 = self.err;
                                                                                                                                                                                                                            var self = $3901;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3905 = self.value;
                                                                                                                                                                                                                                    var $3906 = Parser$Reply$error$(Parser$Error$combine$($3905, $3903));
                                                                                                                                                                                                                                    var $3904 = $3906;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3907 = Parser$Reply$error$($3903);
                                                                                                                                                                                                                                    var $3904 = $3907;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3902 = $3904;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3908 = self.pst;
                                                                                                                                                                                                                            var $3909 = self.val;
                                                                                                                                                                                                                            var self = $3908;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3911 = self.err;
                                                                                                                                                                                                                                    var $3912 = self.nam;
                                                                                                                                                                                                                                    var $3913 = self.ini;
                                                                                                                                                                                                                                    var $3914 = self.idx;
                                                                                                                                                                                                                                    var $3915 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($3901, $3911), $3912, $3913, $3914, $3915);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $3917 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Kind$Parser$text$(":", _reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $3919 = self.err;
                                                                                                                                                                                                                                                    var self = $3917;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $3921 = self.value;
                                                                                                                                                                                                                                                            var $3922 = Parser$Reply$error$(Parser$Error$combine$($3921, $3919));
                                                                                                                                                                                                                                                            var $3920 = $3922;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $3923 = Parser$Reply$error$($3919);
                                                                                                                                                                                                                                                            var $3920 = $3923;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3918 = $3920;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $3924 = self.pst;
                                                                                                                                                                                                                                                    var self = $3924;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $3926 = self.err;
                                                                                                                                                                                                                                                            var $3927 = self.nam;
                                                                                                                                                                                                                                                            var $3928 = self.ini;
                                                                                                                                                                                                                                                            var $3929 = self.idx;
                                                                                                                                                                                                                                                            var $3930 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($3917, $3926), $3927, $3928, $3929, $3930);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $3932 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = Kind$Parser$term(_reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $3934 = self.err;
                                                                                                                                                                                                                                                                            var self = $3932;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $3936 = self.value;
                                                                                                                                                                                                                                                                                    var $3937 = Parser$Reply$error$(Parser$Error$combine$($3936, $3934));
                                                                                                                                                                                                                                                                                    var $3935 = $3937;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $3938 = Parser$Reply$error$($3934);
                                                                                                                                                                                                                                                                                    var $3935 = $3938;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $3933 = $3935;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $3939 = self.pst;
                                                                                                                                                                                                                                                                            var $3940 = self.val;
                                                                                                                                                                                                                                                                            var self = $3939;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $3942 = self.err;
                                                                                                                                                                                                                                                                                    var $3943 = self.nam;
                                                                                                                                                                                                                                                                                    var $3944 = self.ini;
                                                                                                                                                                                                                                                                                    var $3945 = self.idx;
                                                                                                                                                                                                                                                                                    var $3946 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($3932, $3942), $3943, $3944, $3945, $3946);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $3948 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$162 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$156);
                                                                                                                                                                                                                                                                                            var self = _reply$162;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $3950 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $3948;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $3952 = self.value;
                                                                                                                                                                                                                                                                                                            var $3953 = Parser$Reply$error$(Parser$Error$combine$($3952, $3950));
                                                                                                                                                                                                                                                                                                            var $3951 = $3953;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $3954 = Parser$Reply$error$($3950);
                                                                                                                                                                                                                                                                                                            var $3951 = $3954;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $3949 = $3951;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $3955 = self.pst;
                                                                                                                                                                                                                                                                                                    var self = $3955;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $3957 = self.err;
                                                                                                                                                                                                                                                                                                            var $3958 = self.nam;
                                                                                                                                                                                                                                                                                                            var $3959 = self.ini;
                                                                                                                                                                                                                                                                                                            var $3960 = self.idx;
                                                                                                                                                                                                                                                                                                            var $3961 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($3948, $3957), $3958, $3959, $3960, $3961);
                                                                                                                                                                                                                                                                                                            var self = _reply$pst$170;
                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                    var $3963 = self.err;
                                                                                                                                                                                                                                                                                                                    var _reply$176 = _body$1(Unit$new)(_reply$pst$170);
                                                                                                                                                                                                                                                                                                                    var self = _reply$176;
                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                            var $3965 = self.err;
                                                                                                                                                                                                                                                                                                                            var self = $3963;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                    var $3967 = self.value;
                                                                                                                                                                                                                                                                                                                                    var $3968 = Parser$Reply$error$(Parser$Error$combine$($3967, $3965));
                                                                                                                                                                                                                                                                                                                                    var $3966 = $3968;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                    var $3969 = Parser$Reply$error$($3965);
                                                                                                                                                                                                                                                                                                                                    var $3966 = $3969;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $3964 = $3966;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                            var $3970 = self.pst;
                                                                                                                                                                                                                                                                                                                            var $3971 = self.val;
                                                                                                                                                                                                                                                                                                                            var self = $3970;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                    var $3973 = self.err;
                                                                                                                                                                                                                                                                                                                                    var $3974 = self.nam;
                                                                                                                                                                                                                                                                                                                                    var $3975 = self.ini;
                                                                                                                                                                                                                                                                                                                                    var $3976 = self.idx;
                                                                                                                                                                                                                                                                                                                                    var $3977 = self.str;
                                                                                                                                                                                                                                                                                                                                    var _reply$pst$184 = Parser$State$new$(Parser$Error$maybe_combine$($3963, $3973), $3974, $3975, $3976, $3977);
                                                                                                                                                                                                                                                                                                                                    var _moti$185 = Kind$Term$lam$("", (_x$185 => {
                                                                                                                                                                                                                                                                                                                                        var $3979 = Kind$Term$hol$(Bits$e);
                                                                                                                                                                                                                                                                                                                                        return $3979;
                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                    var _term$186 = Kind$Term$ref$("Function.while");
                                                                                                                                                                                                                                                                                                                                    var _term$187 = Kind$Term$app$(_term$186, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                    var _init$188 = Kind$Term$ref$("Pair.new");
                                                                                                                                                                                                                                                                                                                                    var _init$189 = Kind$Term$app$(_init$188, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                    var _init$190 = Kind$Term$app$(_init$189, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                    var _init$191 = Kind$Term$app$(_init$190, Kind$Term$ref$($3817));
                                                                                                                                                                                                                                                                                                                                    var _init$192 = Kind$Term$app$(_init$191, Kind$Term$ref$($3848));
                                                                                                                                                                                                                                                                                                                                    var _term$193 = Kind$Term$app$(_term$187, _init$192);
                                                                                                                                                                                                                                                                                                                                    var _term$194 = Kind$Term$app$(_term$193, Kind$Term$lam$("s", (_s$194 => {
                                                                                                                                                                                                                                                                                                                                        var $3980 = Kind$Term$app$(Kind$Term$app$(_s$194, _moti$185), Kind$Term$lam$($3817, (_x$195 => {
                                                                                                                                                                                                                                                                                                                                            var $3981 = Kind$Term$lam$($3848, (_y$196 => {
                                                                                                                                                                                                                                                                                                                                                var $3982 = $3909;
                                                                                                                                                                                                                                                                                                                                                return $3982;
                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                            return $3981;
                                                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                                                        return $3980;
                                                                                                                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                                                                                                                    var _term$195 = Kind$Term$app$(_term$194, Kind$Term$lam$("s", (_s$195 => {
                                                                                                                                                                                                                                                                                                                                        var $3983 = Kind$Term$app$(Kind$Term$app$(_s$195, _moti$185), Kind$Term$lam$($3817, (_x$196 => {
                                                                                                                                                                                                                                                                                                                                            var $3984 = Kind$Term$lam$($3848, (_y$197 => {
                                                                                                                                                                                                                                                                                                                                                var $3985 = $3940;
                                                                                                                                                                                                                                                                                                                                                return $3985;
                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                            return $3984;
                                                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                                                        return $3983;
                                                                                                                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                                                                                                                    var _term$196 = Kind$Term$app$(Kind$Term$app$(_term$195, _moti$185), Kind$Term$lam$($3817, (_x$196 => {
                                                                                                                                                                                                                                                                                                                                        var $3986 = Kind$Term$lam$($3848, (_y$197 => {
                                                                                                                                                                                                                                                                                                                                            var $3987 = $3971;
                                                                                                                                                                                                                                                                                                                                            return $3987;
                                                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                                                        return $3986;
                                                                                                                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                                                                                                                    var $3978 = Parser$Reply$value$(_reply$pst$184, _term$196);
                                                                                                                                                                                                                                                                                                                                    var $3972 = $3978;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $3964 = $3972;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                    var $3962 = $3964;
                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                            var $3956 = $3962;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $3949 = $3956;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $3947 = $3949;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $3941 = $3947;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $3933 = $3941;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $3931 = $3933;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $3925 = $3931;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3918 = $3925;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $3916 = $3918;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $3910 = $3916;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3902 = $3910;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $3900 = $3902;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $3894 = $3900;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3887 = $3894;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3885 = $3887;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3879 = $3885;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3872 = $3879;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3870 = $3872;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3864 = $3870;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3857 = $3864;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3855 = $3857;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3849 = $3855;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3841 = $3849;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3839 = $3841;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3833 = $3839;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3826 = $3833;
                                                                                                    break;
                                                                                            };
                                                                                            var $3824 = $3826;
                                                                                            break;
                                                                                    };
                                                                                    var $3818 = $3824;
                                                                                    break;
                                                                            };
                                                                            var $3810 = $3818;
                                                                            break;
                                                                    };
                                                                    var $3808 = $3810;
                                                                    break;
                                                            };
                                                            var $3802 = $3808;
                                                            break;
                                                    };
                                                    var $3795 = $3802;
                                                    break;
                                            };
                                            var $3793 = $3795;
                                            break;
                                    };
                                    var $3787 = $3793;
                                    break;
                            };
                            var $3780 = $3787;
                            break;
                    };
                    var $3778 = $3780;
                    break;
            };
            return $3778;
        }));
        return $3777;
    };
    const Kind$Parser$getwhile = x0 => Kind$Parser$getwhile$(x0);

    function Kind$Parser$getwhile$with$(_body$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $3989 = self.err;
                var _reply$8 = Kind$Parser$text$("while ", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $3991 = self.err;
                        var self = $3989;
                        switch (self._) {
                            case 'Maybe.some':
                                var $3993 = self.value;
                                var $3994 = Parser$Reply$error$(Parser$Error$combine$($3993, $3991));
                                var $3992 = $3994;
                                break;
                            case 'Maybe.none':
                                var $3995 = Parser$Reply$error$($3991);
                                var $3992 = $3995;
                                break;
                        };
                        var $3990 = $3992;
                        break;
                    case 'Parser.Reply.value':
                        var $3996 = self.pst;
                        var self = $3996;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $3998 = self.err;
                                var $3999 = self.nam;
                                var $4000 = self.ini;
                                var $4001 = self.idx;
                                var $4002 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3989, $3998), $3999, $4000, $4001, $4002);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $4004 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $4006 = self.err;
                                                var self = $4004;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $4008 = self.value;
                                                        var $4009 = Parser$Reply$error$(Parser$Error$combine$($4008, $4006));
                                                        var $4007 = $4009;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $4010 = Parser$Reply$error$($4006);
                                                        var $4007 = $4010;
                                                        break;
                                                };
                                                var $4005 = $4007;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $4011 = self.pst;
                                                var $4012 = self.val;
                                                var self = $4011;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $4014 = self.err;
                                                        var $4015 = self.nam;
                                                        var $4016 = self.ini;
                                                        var $4017 = self.idx;
                                                        var $4018 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4004, $4014), $4015, $4016, $4017, $4018);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $4020 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("with ", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $4022 = self.err;
                                                                        var self = $4020;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4024 = self.value;
                                                                                var $4025 = Parser$Reply$error$(Parser$Error$combine$($4024, $4022));
                                                                                var $4023 = $4025;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4026 = Parser$Reply$error$($4022);
                                                                                var $4023 = $4026;
                                                                                break;
                                                                        };
                                                                        var $4021 = $4023;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $4027 = self.pst;
                                                                        var self = $4027;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $4029 = self.err;
                                                                                var $4030 = self.nam;
                                                                                var $4031 = self.ini;
                                                                                var $4032 = self.idx;
                                                                                var $4033 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4020, $4029), $4030, $4031, $4032, $4033);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $4035 = self.err;
                                                                                        var _reply$50 = Kind$Parser$text$("{", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $4037 = self.err;
                                                                                                var self = $4035;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $4039 = self.value;
                                                                                                        var $4040 = Parser$Reply$error$(Parser$Error$combine$($4039, $4037));
                                                                                                        var $4038 = $4040;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $4041 = Parser$Reply$error$($4037);
                                                                                                        var $4038 = $4041;
                                                                                                        break;
                                                                                                };
                                                                                                var $4036 = $4038;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $4042 = self.pst;
                                                                                                var self = $4042;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $4044 = self.err;
                                                                                                        var $4045 = self.nam;
                                                                                                        var $4046 = self.ini;
                                                                                                        var $4047 = self.idx;
                                                                                                        var $4048 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4035, $4044), $4045, $4046, $4047, $4048);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $4050 = self.err;
                                                                                                                var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $4052 = self.err;
                                                                                                                        var self = $4050;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $4054 = self.value;
                                                                                                                                var $4055 = Parser$Reply$error$(Parser$Error$combine$($4054, $4052));
                                                                                                                                var $4053 = $4055;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $4056 = Parser$Reply$error$($4052);
                                                                                                                                var $4053 = $4056;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4051 = $4053;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $4057 = self.pst;
                                                                                                                        var $4058 = self.val;
                                                                                                                        var self = $4057;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $4060 = self.err;
                                                                                                                                var $4061 = self.nam;
                                                                                                                                var $4062 = self.ini;
                                                                                                                                var $4063 = self.idx;
                                                                                                                                var $4064 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4050, $4060), $4061, $4062, $4063, $4064);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $4066 = self.err;
                                                                                                                                        var _reply$78 = Kind$Parser$text$(",", _reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $4068 = self.err;
                                                                                                                                                var self = $4066;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $4070 = self.value;
                                                                                                                                                        var $4071 = Parser$Reply$error$(Parser$Error$combine$($4070, $4068));
                                                                                                                                                        var $4069 = $4071;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $4072 = Parser$Reply$error$($4068);
                                                                                                                                                        var $4069 = $4072;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4067 = $4069;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $4073 = self.pst;
                                                                                                                                                var self = $4073;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $4075 = self.err;
                                                                                                                                                        var $4076 = self.nam;
                                                                                                                                                        var $4077 = self.ini;
                                                                                                                                                        var $4078 = self.idx;
                                                                                                                                                        var $4079 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4066, $4075), $4076, $4077, $4078, $4079);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $4081 = self.err;
                                                                                                                                                                var _reply$92 = Kind$Parser$name1$(_reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $4083 = self.err;
                                                                                                                                                                        var self = $4081;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $4085 = self.value;
                                                                                                                                                                                var $4086 = Parser$Reply$error$(Parser$Error$combine$($4085, $4083));
                                                                                                                                                                                var $4084 = $4086;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $4087 = Parser$Reply$error$($4083);
                                                                                                                                                                                var $4084 = $4087;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $4082 = $4084;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $4088 = self.pst;
                                                                                                                                                                        var $4089 = self.val;
                                                                                                                                                                        var self = $4088;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $4091 = self.err;
                                                                                                                                                                                var $4092 = self.nam;
                                                                                                                                                                                var $4093 = self.ini;
                                                                                                                                                                                var $4094 = self.idx;
                                                                                                                                                                                var $4095 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($4081, $4091), $4092, $4093, $4094, $4095);
                                                                                                                                                                                var self = _reply$pst$100;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $4097 = self.err;
                                                                                                                                                                                        var _reply$106 = Kind$Parser$text$("}", _reply$pst$100);
                                                                                                                                                                                        var self = _reply$106;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $4099 = self.err;
                                                                                                                                                                                                var self = $4097;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $4101 = self.value;
                                                                                                                                                                                                        var $4102 = Parser$Reply$error$(Parser$Error$combine$($4101, $4099));
                                                                                                                                                                                                        var $4100 = $4102;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $4103 = Parser$Reply$error$($4099);
                                                                                                                                                                                                        var $4100 = $4103;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $4098 = $4100;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $4104 = self.pst;
                                                                                                                                                                                                var self = $4104;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $4106 = self.err;
                                                                                                                                                                                                        var $4107 = self.nam;
                                                                                                                                                                                                        var $4108 = self.ini;
                                                                                                                                                                                                        var $4109 = self.idx;
                                                                                                                                                                                                        var $4110 = self.str;
                                                                                                                                                                                                        var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($4097, $4106), $4107, $4108, $4109, $4110);
                                                                                                                                                                                                        var self = _reply$pst$114;
                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                var $4112 = self.err;
                                                                                                                                                                                                                var _reply$120 = Kind$Parser$text$(":", _reply$pst$114);
                                                                                                                                                                                                                var self = _reply$120;
                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                        var $4114 = self.err;
                                                                                                                                                                                                                        var self = $4112;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                var $4116 = self.value;
                                                                                                                                                                                                                                var $4117 = Parser$Reply$error$(Parser$Error$combine$($4116, $4114));
                                                                                                                                                                                                                                var $4115 = $4117;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                var $4118 = Parser$Reply$error$($4114);
                                                                                                                                                                                                                                var $4115 = $4118;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $4113 = $4115;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                        var $4119 = self.pst;
                                                                                                                                                                                                                        var self = $4119;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                var $4121 = self.err;
                                                                                                                                                                                                                                var $4122 = self.nam;
                                                                                                                                                                                                                                var $4123 = self.ini;
                                                                                                                                                                                                                                var $4124 = self.idx;
                                                                                                                                                                                                                                var $4125 = self.str;
                                                                                                                                                                                                                                var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($4112, $4121), $4122, $4123, $4124, $4125);
                                                                                                                                                                                                                                var self = _reply$pst$128;
                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                        var $4127 = self.err;
                                                                                                                                                                                                                                        var _reply$134 = Kind$Parser$term(_reply$pst$128);
                                                                                                                                                                                                                                        var self = _reply$134;
                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                                                                var $4129 = self.err;
                                                                                                                                                                                                                                                var self = $4127;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                                                                        var $4131 = self.value;
                                                                                                                                                                                                                                                        var $4132 = Parser$Reply$error$(Parser$Error$combine$($4131, $4129));
                                                                                                                                                                                                                                                        var $4130 = $4132;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                                                                        var $4133 = Parser$Reply$error$($4129);
                                                                                                                                                                                                                                                        var $4130 = $4133;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $4128 = $4130;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                                                                var $4134 = self.pst;
                                                                                                                                                                                                                                                var $4135 = self.val;
                                                                                                                                                                                                                                                var self = $4134;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                        var $4137 = self.err;
                                                                                                                                                                                                                                                        var $4138 = self.nam;
                                                                                                                                                                                                                                                        var $4139 = self.ini;
                                                                                                                                                                                                                                                        var $4140 = self.idx;
                                                                                                                                                                                                                                                        var $4141 = self.str;
                                                                                                                                                                                                                                                        var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($4127, $4137), $4138, $4139, $4140, $4141);
                                                                                                                                                                                                                                                        var self = _reply$pst$142;
                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                var $4143 = self.err;
                                                                                                                                                                                                                                                                var _reply$148 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$142);
                                                                                                                                                                                                                                                                var self = _reply$148;
                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                        var $4145 = self.err;
                                                                                                                                                                                                                                                                        var self = $4143;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                                                                var $4147 = self.value;
                                                                                                                                                                                                                                                                                var $4148 = Parser$Reply$error$(Parser$Error$combine$($4147, $4145));
                                                                                                                                                                                                                                                                                var $4146 = $4148;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                                                                var $4149 = Parser$Reply$error$($4145);
                                                                                                                                                                                                                                                                                var $4146 = $4149;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $4144 = $4146;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                        var $4150 = self.pst;
                                                                                                                                                                                                                                                                        var self = $4150;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                                var $4152 = self.err;
                                                                                                                                                                                                                                                                                var $4153 = self.nam;
                                                                                                                                                                                                                                                                                var $4154 = self.ini;
                                                                                                                                                                                                                                                                                var $4155 = self.idx;
                                                                                                                                                                                                                                                                                var $4156 = self.str;
                                                                                                                                                                                                                                                                                var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($4143, $4152), $4153, $4154, $4155, $4156);
                                                                                                                                                                                                                                                                                var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                                                        var $4158 = self.err;
                                                                                                                                                                                                                                                                                        var _reply$162 = _body$1(Unit$new)(_reply$pst$156);
                                                                                                                                                                                                                                                                                        var self = _reply$162;
                                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                var $4160 = self.err;
                                                                                                                                                                                                                                                                                                var self = $4158;
                                                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                                                                                                                        var $4162 = self.value;
                                                                                                                                                                                                                                                                                                        var $4163 = Parser$Reply$error$(Parser$Error$combine$($4162, $4160));
                                                                                                                                                                                                                                                                                                        var $4161 = $4163;
                                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                                                                                                                        var $4164 = Parser$Reply$error$($4160);
                                                                                                                                                                                                                                                                                                        var $4161 = $4164;
                                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                                                var $4159 = $4161;
                                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                var $4165 = self.pst;
                                                                                                                                                                                                                                                                                                var $4166 = self.val;
                                                                                                                                                                                                                                                                                                var self = $4165;
                                                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                        var $4168 = self.err;
                                                                                                                                                                                                                                                                                                        var $4169 = self.nam;
                                                                                                                                                                                                                                                                                                        var $4170 = self.ini;
                                                                                                                                                                                                                                                                                                        var $4171 = self.idx;
                                                                                                                                                                                                                                                                                                        var $4172 = self.str;
                                                                                                                                                                                                                                                                                                        var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($4158, $4168), $4169, $4170, $4171, $4172);
                                                                                                                                                                                                                                                                                                        var _moti$171 = Kind$Term$lam$("", (_x$171 => {
                                                                                                                                                                                                                                                                                                            var $4174 = Kind$Term$hol$(Bits$e);
                                                                                                                                                                                                                                                                                                            return $4174;
                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                        var _term$172 = Kind$Term$ref$("Function.while");
                                                                                                                                                                                                                                                                                                        var _term$173 = Kind$Term$app$(_term$172, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                        var _init$174 = Kind$Term$ref$("Pair.new");
                                                                                                                                                                                                                                                                                                        var _init$175 = Kind$Term$app$(_init$174, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                        var _init$176 = Kind$Term$app$(_init$175, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                        var _init$177 = Kind$Term$app$(_init$176, Kind$Term$ref$($4058));
                                                                                                                                                                                                                                                                                                        var _init$178 = Kind$Term$app$(_init$177, Kind$Term$ref$($4089));
                                                                                                                                                                                                                                                                                                        var _term$179 = Kind$Term$app$(_term$173, _init$178);
                                                                                                                                                                                                                                                                                                        var _term$180 = Kind$Term$app$(_term$179, Kind$Term$lam$("s", (_s$180 => {
                                                                                                                                                                                                                                                                                                            var $4175 = Kind$Term$app$(Kind$Term$app$(_s$180, _moti$171), Kind$Term$lam$($4058, (_x$181 => {
                                                                                                                                                                                                                                                                                                                var $4176 = Kind$Term$lam$($4089, (_y$182 => {
                                                                                                                                                                                                                                                                                                                    var $4177 = $4012;
                                                                                                                                                                                                                                                                                                                    return $4177;
                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                return $4176;
                                                                                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                                                                                            return $4175;
                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                        var _term$181 = Kind$Term$app$(_term$180, Kind$Term$lam$("s", (_s$181 => {
                                                                                                                                                                                                                                                                                                            var $4178 = Kind$Term$app$(Kind$Term$app$(_s$181, _moti$171), Kind$Term$lam$($4058, (_x$182 => {
                                                                                                                                                                                                                                                                                                                var $4179 = Kind$Term$lam$($4089, (_y$183 => {
                                                                                                                                                                                                                                                                                                                    var $4180 = $4135;
                                                                                                                                                                                                                                                                                                                    return $4180;
                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                return $4179;
                                                                                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                                                                                            return $4178;
                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                        var _term$182 = Kind$Term$app$(Kind$Term$app$(_term$181, _moti$171), Kind$Term$lam$($4058, (_x$182 => {
                                                                                                                                                                                                                                                                                                            var $4181 = Kind$Term$lam$($4089, (_y$183 => {
                                                                                                                                                                                                                                                                                                                var $4182 = $4166;
                                                                                                                                                                                                                                                                                                                return $4182;
                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                            return $4181;
                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                        var $4173 = Parser$Reply$value$(_reply$pst$170, _term$182);
                                                                                                                                                                                                                                                                                                        var $4167 = $4173;
                                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                                                var $4159 = $4167;
                                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                                        var $4157 = $4159;
                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                                var $4151 = $4157;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $4144 = $4151;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                var $4142 = $4144;
                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                        var $4136 = $4142;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $4128 = $4136;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                        var $4126 = $4128;
                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                var $4120 = $4126;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $4113 = $4120;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                };
                                                                                                                                                                                                                var $4111 = $4113;
                                                                                                                                                                                                                break;
                                                                                                                                                                                                        };
                                                                                                                                                                                                        var $4105 = $4111;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $4098 = $4105;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $4096 = $4098;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $4090 = $4096;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $4082 = $4090;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $4080 = $4082;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $4074 = $4080;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4067 = $4074;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $4065 = $4067;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $4059 = $4065;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4051 = $4059;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $4049 = $4051;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $4043 = $4049;
                                                                                                        break;
                                                                                                };
                                                                                                var $4036 = $4043;
                                                                                                break;
                                                                                        };
                                                                                        var $4034 = $4036;
                                                                                        break;
                                                                                };
                                                                                var $4028 = $4034;
                                                                                break;
                                                                        };
                                                                        var $4021 = $4028;
                                                                        break;
                                                                };
                                                                var $4019 = $4021;
                                                                break;
                                                        };
                                                        var $4013 = $4019;
                                                        break;
                                                };
                                                var $4005 = $4013;
                                                break;
                                        };
                                        var $4003 = $4005;
                                        break;
                                };
                                var $3997 = $4003;
                                break;
                        };
                        var $3990 = $3997;
                        break;
                };
                var $3988 = $3990;
                break;
        };
        return $3988;
    };
    const Kind$Parser$getwhile$with = x0 => x1 => Kind$Parser$getwhile$with$(x0, x1);

    function Kind$Parser$get$(_body$1) {
        var $4183 = Kind$Parser$block("let")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $4185 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $4187 = self.err;
                            var self = $4185;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $4189 = self.value;
                                    var $4190 = Parser$Reply$error$(Parser$Error$combine$($4189, $4187));
                                    var $4188 = $4190;
                                    break;
                                case 'Maybe.none':
                                    var $4191 = Parser$Reply$error$($4187);
                                    var $4188 = $4191;
                                    break;
                            };
                            var $4186 = $4188;
                            break;
                        case 'Parser.Reply.value':
                            var $4192 = self.pst;
                            var self = $4192;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4194 = self.err;
                                    var $4195 = self.nam;
                                    var $4196 = self.ini;
                                    var $4197 = self.idx;
                                    var $4198 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4185, $4194), $4195, $4196, $4197, $4198);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4200 = self.err;
                                            var _reply$22 = Kind$Parser$text$("{", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $4202 = self.err;
                                                    var self = $4200;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $4204 = self.value;
                                                            var $4205 = Parser$Reply$error$(Parser$Error$combine$($4204, $4202));
                                                            var $4203 = $4205;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $4206 = Parser$Reply$error$($4202);
                                                            var $4203 = $4206;
                                                            break;
                                                    };
                                                    var $4201 = $4203;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $4207 = self.pst;
                                                    var self = $4207;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $4209 = self.err;
                                                            var $4210 = self.nam;
                                                            var $4211 = self.ini;
                                                            var $4212 = self.idx;
                                                            var $4213 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4200, $4209), $4210, $4211, $4212, $4213);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $4215 = self.err;
                                                                    var _reply$36 = Kind$Parser$name1$(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $4217 = self.err;
                                                                            var self = $4215;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $4219 = self.value;
                                                                                    var $4220 = Parser$Reply$error$(Parser$Error$combine$($4219, $4217));
                                                                                    var $4218 = $4220;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $4221 = Parser$Reply$error$($4217);
                                                                                    var $4218 = $4221;
                                                                                    break;
                                                                            };
                                                                            var $4216 = $4218;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $4222 = self.pst;
                                                                            var $4223 = self.val;
                                                                            var self = $4222;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $4225 = self.err;
                                                                                    var $4226 = self.nam;
                                                                                    var $4227 = self.ini;
                                                                                    var $4228 = self.idx;
                                                                                    var $4229 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4215, $4225), $4226, $4227, $4228, $4229);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $4231 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$(",", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $4233 = self.err;
                                                                                                    var self = $4231;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $4235 = self.value;
                                                                                                            var $4236 = Parser$Reply$error$(Parser$Error$combine$($4235, $4233));
                                                                                                            var $4234 = $4236;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $4237 = Parser$Reply$error$($4233);
                                                                                                            var $4234 = $4237;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4232 = $4234;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $4238 = self.pst;
                                                                                                    var self = $4238;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $4240 = self.err;
                                                                                                            var $4241 = self.nam;
                                                                                                            var $4242 = self.ini;
                                                                                                            var $4243 = self.idx;
                                                                                                            var $4244 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4231, $4240), $4241, $4242, $4243, $4244);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $4246 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $4248 = self.err;
                                                                                                                            var self = $4246;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $4250 = self.value;
                                                                                                                                    var $4251 = Parser$Reply$error$(Parser$Error$combine$($4250, $4248));
                                                                                                                                    var $4249 = $4251;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $4252 = Parser$Reply$error$($4248);
                                                                                                                                    var $4249 = $4252;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4247 = $4249;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $4253 = self.pst;
                                                                                                                            var $4254 = self.val;
                                                                                                                            var self = $4253;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $4256 = self.err;
                                                                                                                                    var $4257 = self.nam;
                                                                                                                                    var $4258 = self.ini;
                                                                                                                                    var $4259 = self.idx;
                                                                                                                                    var $4260 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4246, $4256), $4257, $4258, $4259, $4260);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $4262 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("}", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $4264 = self.err;
                                                                                                                                                    var self = $4262;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $4266 = self.value;
                                                                                                                                                            var $4267 = Parser$Reply$error$(Parser$Error$combine$($4266, $4264));
                                                                                                                                                            var $4265 = $4267;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $4268 = Parser$Reply$error$($4264);
                                                                                                                                                            var $4265 = $4268;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4263 = $4265;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $4269 = self.pst;
                                                                                                                                                    var self = $4269;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $4271 = self.err;
                                                                                                                                                            var $4272 = self.nam;
                                                                                                                                                            var $4273 = self.ini;
                                                                                                                                                            var $4274 = self.idx;
                                                                                                                                                            var $4275 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4262, $4271), $4272, $4273, $4274, $4275);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $4277 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$("=", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $4279 = self.err;
                                                                                                                                                                            var self = $4277;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $4281 = self.value;
                                                                                                                                                                                    var $4282 = Parser$Reply$error$(Parser$Error$combine$($4281, $4279));
                                                                                                                                                                                    var $4280 = $4282;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $4283 = Parser$Reply$error$($4279);
                                                                                                                                                                                    var $4280 = $4283;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4278 = $4280;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $4284 = self.pst;
                                                                                                                                                                            var self = $4284;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $4286 = self.err;
                                                                                                                                                                                    var $4287 = self.nam;
                                                                                                                                                                                    var $4288 = self.ini;
                                                                                                                                                                                    var $4289 = self.idx;
                                                                                                                                                                                    var $4290 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($4277, $4286), $4287, $4288, $4289, $4290);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $4292 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$term(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $4294 = self.err;
                                                                                                                                                                                                    var self = $4292;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $4296 = self.value;
                                                                                                                                                                                                            var $4297 = Parser$Reply$error$(Parser$Error$combine$($4296, $4294));
                                                                                                                                                                                                            var $4295 = $4297;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $4298 = Parser$Reply$error$($4294);
                                                                                                                                                                                                            var $4295 = $4298;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4293 = $4295;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $4299 = self.pst;
                                                                                                                                                                                                    var $4300 = self.val;
                                                                                                                                                                                                    var self = $4299;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $4302 = self.err;
                                                                                                                                                                                                            var $4303 = self.nam;
                                                                                                                                                                                                            var $4304 = self.ini;
                                                                                                                                                                                                            var $4305 = self.idx;
                                                                                                                                                                                                            var $4306 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($4292, $4302), $4303, $4304, $4305, $4306);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $4308 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $4310 = self.err;
                                                                                                                                                                                                                            var self = $4308;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $4312 = self.value;
                                                                                                                                                                                                                                    var $4313 = Parser$Reply$error$(Parser$Error$combine$($4312, $4310));
                                                                                                                                                                                                                                    var $4311 = $4313;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $4314 = Parser$Reply$error$($4310);
                                                                                                                                                                                                                                    var $4311 = $4314;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4309 = $4311;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $4315 = self.pst;
                                                                                                                                                                                                                            var self = $4315;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $4317 = self.err;
                                                                                                                                                                                                                                    var $4318 = self.nam;
                                                                                                                                                                                                                                    var $4319 = self.ini;
                                                                                                                                                                                                                                    var $4320 = self.idx;
                                                                                                                                                                                                                                    var $4321 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($4308, $4317), $4318, $4319, $4320, $4321);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $4323 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = _body$1(Unit$new)(_reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $4325 = self.err;
                                                                                                                                                                                                                                                    var self = $4323;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $4327 = self.value;
                                                                                                                                                                                                                                                            var $4328 = Parser$Reply$error$(Parser$Error$combine$($4327, $4325));
                                                                                                                                                                                                                                                            var $4326 = $4328;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $4329 = Parser$Reply$error$($4325);
                                                                                                                                                                                                                                                            var $4326 = $4329;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $4324 = $4326;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $4330 = self.pst;
                                                                                                                                                                                                                                                    var $4331 = self.val;
                                                                                                                                                                                                                                                    var self = $4330;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $4333 = self.err;
                                                                                                                                                                                                                                                            var $4334 = self.nam;
                                                                                                                                                                                                                                                            var $4335 = self.ini;
                                                                                                                                                                                                                                                            var $4336 = self.idx;
                                                                                                                                                                                                                                                            var $4337 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($4323, $4333), $4334, $4335, $4336, $4337);
                                                                                                                                                                                                                                                            var _term$143 = $4300;
                                                                                                                                                                                                                                                            var _term$144 = Kind$Term$app$(_term$143, Kind$Term$lam$("", (_x$144 => {
                                                                                                                                                                                                                                                                var $4339 = Kind$Term$hol$(Bits$e);
                                                                                                                                                                                                                                                                return $4339;
                                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                                            var _term$145 = Kind$Term$app$(_term$144, Kind$Term$lam$($4223, (_x$145 => {
                                                                                                                                                                                                                                                                var $4340 = Kind$Term$lam$($4254, (_y$146 => {
                                                                                                                                                                                                                                                                    var $4341 = $4331;
                                                                                                                                                                                                                                                                    return $4341;
                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                return $4340;
                                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                                            var $4338 = Parser$Reply$value$(_reply$pst$142, _term$145);
                                                                                                                                                                                                                                                            var $4332 = $4338;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $4324 = $4332;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $4322 = $4324;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $4316 = $4322;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4309 = $4316;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $4307 = $4309;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $4301 = $4307;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4293 = $4301;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $4291 = $4293;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $4285 = $4291;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4278 = $4285;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $4276 = $4278;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $4270 = $4276;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4263 = $4270;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $4261 = $4263;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $4255 = $4261;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4247 = $4255;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $4245 = $4247;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $4239 = $4245;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4232 = $4239;
                                                                                                    break;
                                                                                            };
                                                                                            var $4230 = $4232;
                                                                                            break;
                                                                                    };
                                                                                    var $4224 = $4230;
                                                                                    break;
                                                                            };
                                                                            var $4216 = $4224;
                                                                            break;
                                                                    };
                                                                    var $4214 = $4216;
                                                                    break;
                                                            };
                                                            var $4208 = $4214;
                                                            break;
                                                    };
                                                    var $4201 = $4208;
                                                    break;
                                            };
                                            var $4199 = $4201;
                                            break;
                                    };
                                    var $4193 = $4199;
                                    break;
                            };
                            var $4186 = $4193;
                            break;
                    };
                    var $4184 = $4186;
                    break;
            };
            return $4184;
        }));
        return $4183;
    };
    const Kind$Parser$get = x0 => Kind$Parser$get$(x0);

    function Kind$Parser$get$omit$(_body$1) {
        var $4342 = Kind$Parser$block("let")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $4344 = self.err;
                    var _reply$8 = Kind$Parser$text$("{", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $4346 = self.err;
                            var self = $4344;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $4348 = self.value;
                                    var $4349 = Parser$Reply$error$(Parser$Error$combine$($4348, $4346));
                                    var $4347 = $4349;
                                    break;
                                case 'Maybe.none':
                                    var $4350 = Parser$Reply$error$($4346);
                                    var $4347 = $4350;
                                    break;
                            };
                            var $4345 = $4347;
                            break;
                        case 'Parser.Reply.value':
                            var $4351 = self.pst;
                            var self = $4351;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4353 = self.err;
                                    var $4354 = self.nam;
                                    var $4355 = self.ini;
                                    var $4356 = self.idx;
                                    var $4357 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4344, $4353), $4354, $4355, $4356, $4357);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4359 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $4361 = self.err;
                                                    var self = $4359;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $4363 = self.value;
                                                            var $4364 = Parser$Reply$error$(Parser$Error$combine$($4363, $4361));
                                                            var $4362 = $4364;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $4365 = Parser$Reply$error$($4361);
                                                            var $4362 = $4365;
                                                            break;
                                                    };
                                                    var $4360 = $4362;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $4366 = self.pst;
                                                    var $4367 = self.val;
                                                    var self = $4366;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $4369 = self.err;
                                                            var $4370 = self.nam;
                                                            var $4371 = self.ini;
                                                            var $4372 = self.idx;
                                                            var $4373 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4359, $4369), $4370, $4371, $4372, $4373);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $4375 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$(",", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $4377 = self.err;
                                                                            var self = $4375;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $4379 = self.value;
                                                                                    var $4380 = Parser$Reply$error$(Parser$Error$combine$($4379, $4377));
                                                                                    var $4378 = $4380;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $4381 = Parser$Reply$error$($4377);
                                                                                    var $4378 = $4381;
                                                                                    break;
                                                                            };
                                                                            var $4376 = $4378;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $4382 = self.pst;
                                                                            var self = $4382;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $4384 = self.err;
                                                                                    var $4385 = self.nam;
                                                                                    var $4386 = self.ini;
                                                                                    var $4387 = self.idx;
                                                                                    var $4388 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4375, $4384), $4385, $4386, $4387, $4388);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $4390 = self.err;
                                                                                            var _reply$50 = Kind$Parser$name1$(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $4392 = self.err;
                                                                                                    var self = $4390;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $4394 = self.value;
                                                                                                            var $4395 = Parser$Reply$error$(Parser$Error$combine$($4394, $4392));
                                                                                                            var $4393 = $4395;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $4396 = Parser$Reply$error$($4392);
                                                                                                            var $4393 = $4396;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4391 = $4393;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $4397 = self.pst;
                                                                                                    var $4398 = self.val;
                                                                                                    var self = $4397;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $4400 = self.err;
                                                                                                            var $4401 = self.nam;
                                                                                                            var $4402 = self.ini;
                                                                                                            var $4403 = self.idx;
                                                                                                            var $4404 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4390, $4400), $4401, $4402, $4403, $4404);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $4406 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("}", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $4408 = self.err;
                                                                                                                            var self = $4406;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $4410 = self.value;
                                                                                                                                    var $4411 = Parser$Reply$error$(Parser$Error$combine$($4410, $4408));
                                                                                                                                    var $4409 = $4411;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $4412 = Parser$Reply$error$($4408);
                                                                                                                                    var $4409 = $4412;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4407 = $4409;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $4413 = self.pst;
                                                                                                                            var self = $4413;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $4415 = self.err;
                                                                                                                                    var $4416 = self.nam;
                                                                                                                                    var $4417 = self.ini;
                                                                                                                                    var $4418 = self.idx;
                                                                                                                                    var $4419 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4406, $4415), $4416, $4417, $4418, $4419);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $4421 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("= ", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $4423 = self.err;
                                                                                                                                                    var self = $4421;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $4425 = self.value;
                                                                                                                                                            var $4426 = Parser$Reply$error$(Parser$Error$combine$($4425, $4423));
                                                                                                                                                            var $4424 = $4426;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $4427 = Parser$Reply$error$($4423);
                                                                                                                                                            var $4424 = $4427;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4422 = $4424;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $4428 = self.pst;
                                                                                                                                                    var self = $4428;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $4430 = self.err;
                                                                                                                                                            var $4431 = self.nam;
                                                                                                                                                            var $4432 = self.ini;
                                                                                                                                                            var $4433 = self.idx;
                                                                                                                                                            var $4434 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4421, $4430), $4431, $4432, $4433, $4434);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $4436 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $4438 = self.err;
                                                                                                                                                                            var self = $4436;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $4440 = self.value;
                                                                                                                                                                                    var $4441 = Parser$Reply$error$(Parser$Error$combine$($4440, $4438));
                                                                                                                                                                                    var $4439 = $4441;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $4442 = Parser$Reply$error$($4438);
                                                                                                                                                                                    var $4439 = $4442;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4437 = $4439;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $4443 = self.pst;
                                                                                                                                                                            var $4444 = self.val;
                                                                                                                                                                            var self = $4443;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $4446 = self.err;
                                                                                                                                                                                    var $4447 = self.nam;
                                                                                                                                                                                    var $4448 = self.ini;
                                                                                                                                                                                    var $4449 = self.idx;
                                                                                                                                                                                    var $4450 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($4436, $4446), $4447, $4448, $4449, $4450);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $4452 = self.err;
                                                                                                                                                                                            var _reply$106 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $4454 = self.err;
                                                                                                                                                                                                    var self = $4452;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $4456 = self.value;
                                                                                                                                                                                                            var $4457 = Parser$Reply$error$(Parser$Error$combine$($4456, $4454));
                                                                                                                                                                                                            var $4455 = $4457;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $4458 = Parser$Reply$error$($4454);
                                                                                                                                                                                                            var $4455 = $4458;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4453 = $4455;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $4459 = self.pst;
                                                                                                                                                                                                    var self = $4459;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $4461 = self.err;
                                                                                                                                                                                                            var $4462 = self.nam;
                                                                                                                                                                                                            var $4463 = self.ini;
                                                                                                                                                                                                            var $4464 = self.idx;
                                                                                                                                                                                                            var $4465 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($4452, $4461), $4462, $4463, $4464, $4465);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $4467 = self.err;
                                                                                                                                                                                                                    var _reply$120 = _body$1(Unit$new)(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $4469 = self.err;
                                                                                                                                                                                                                            var self = $4467;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $4471 = self.value;
                                                                                                                                                                                                                                    var $4472 = Parser$Reply$error$(Parser$Error$combine$($4471, $4469));
                                                                                                                                                                                                                                    var $4470 = $4472;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $4473 = Parser$Reply$error$($4469);
                                                                                                                                                                                                                                    var $4470 = $4473;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4468 = $4470;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $4474 = self.pst;
                                                                                                                                                                                                                            var $4475 = self.val;
                                                                                                                                                                                                                            var self = $4474;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $4477 = self.err;
                                                                                                                                                                                                                                    var $4478 = self.nam;
                                                                                                                                                                                                                                    var $4479 = self.ini;
                                                                                                                                                                                                                                    var $4480 = self.idx;
                                                                                                                                                                                                                                    var $4481 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($4467, $4477), $4478, $4479, $4480, $4481);
                                                                                                                                                                                                                                    var _term$129 = $4444;
                                                                                                                                                                                                                                    var _term$130 = Kind$Term$app$(_term$129, Kind$Term$lam$("", (_x$130 => {
                                                                                                                                                                                                                                        var $4483 = Kind$Term$hol$(Bits$e);
                                                                                                                                                                                                                                        return $4483;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var _term$131 = Kind$Term$app$(_term$130, Kind$Term$lam$($4367, (_x$131 => {
                                                                                                                                                                                                                                        var $4484 = Kind$Term$lam$($4398, (_y$132 => {
                                                                                                                                                                                                                                            var $4485 = $4475;
                                                                                                                                                                                                                                            return $4485;
                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                        return $4484;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var $4482 = Parser$Reply$value$(_reply$pst$128, _term$131);
                                                                                                                                                                                                                                    var $4476 = $4482;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4468 = $4476;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $4466 = $4468;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $4460 = $4466;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4453 = $4460;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $4451 = $4453;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $4445 = $4451;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4437 = $4445;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $4435 = $4437;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $4429 = $4435;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4422 = $4429;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $4420 = $4422;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $4414 = $4420;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4407 = $4414;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $4405 = $4407;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $4399 = $4405;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4391 = $4399;
                                                                                                    break;
                                                                                            };
                                                                                            var $4389 = $4391;
                                                                                            break;
                                                                                    };
                                                                                    var $4383 = $4389;
                                                                                    break;
                                                                            };
                                                                            var $4376 = $4383;
                                                                            break;
                                                                    };
                                                                    var $4374 = $4376;
                                                                    break;
                                                            };
                                                            var $4368 = $4374;
                                                            break;
                                                    };
                                                    var $4360 = $4368;
                                                    break;
                                            };
                                            var $4358 = $4360;
                                            break;
                                    };
                                    var $4352 = $4358;
                                    break;
                            };
                            var $4345 = $4352;
                            break;
                    };
                    var $4343 = $4345;
                    break;
            };
            return $4343;
        }));
        return $4342;
    };
    const Kind$Parser$get$omit = x0 => Kind$Parser$get$omit$(x0);

    function Kind$Parser$def$(_body$1) {
        var $4486 = Kind$Parser$block("def")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $4488 = self.err;
                    var _reply$8 = Kind$Parser$text$("def ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $4490 = self.err;
                            var self = $4488;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $4492 = self.value;
                                    var $4493 = Parser$Reply$error$(Parser$Error$combine$($4492, $4490));
                                    var $4491 = $4493;
                                    break;
                                case 'Maybe.none':
                                    var $4494 = Parser$Reply$error$($4490);
                                    var $4491 = $4494;
                                    break;
                            };
                            var $4489 = $4491;
                            break;
                        case 'Parser.Reply.value':
                            var $4495 = self.pst;
                            var self = $4495;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4497 = self.err;
                                    var $4498 = self.nam;
                                    var $4499 = self.ini;
                                    var $4500 = self.idx;
                                    var $4501 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4488, $4497), $4498, $4499, $4500, $4501);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4503 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $4505 = self.err;
                                                    var self = $4503;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $4507 = self.value;
                                                            var $4508 = Parser$Reply$error$(Parser$Error$combine$($4507, $4505));
                                                            var $4506 = $4508;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $4509 = Parser$Reply$error$($4505);
                                                            var $4506 = $4509;
                                                            break;
                                                    };
                                                    var $4504 = $4506;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $4510 = self.pst;
                                                    var $4511 = self.val;
                                                    var self = $4510;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $4513 = self.err;
                                                            var $4514 = self.nam;
                                                            var $4515 = self.ini;
                                                            var $4516 = self.idx;
                                                            var $4517 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4503, $4513), $4514, $4515, $4516, $4517);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $4519 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $4521 = self.err;
                                                                            var self = $4519;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $4523 = self.value;
                                                                                    var $4524 = Parser$Reply$error$(Parser$Error$combine$($4523, $4521));
                                                                                    var $4522 = $4524;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $4525 = Parser$Reply$error$($4521);
                                                                                    var $4522 = $4525;
                                                                                    break;
                                                                            };
                                                                            var $4520 = $4522;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $4526 = self.pst;
                                                                            var self = $4526;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $4528 = self.err;
                                                                                    var $4529 = self.nam;
                                                                                    var $4530 = self.ini;
                                                                                    var $4531 = self.idx;
                                                                                    var $4532 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4519, $4528), $4529, $4530, $4531, $4532);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $4534 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $4536 = self.err;
                                                                                                    var self = $4534;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $4538 = self.value;
                                                                                                            var $4539 = Parser$Reply$error$(Parser$Error$combine$($4538, $4536));
                                                                                                            var $4537 = $4539;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $4540 = Parser$Reply$error$($4536);
                                                                                                            var $4537 = $4540;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4535 = $4537;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $4541 = self.pst;
                                                                                                    var $4542 = self.val;
                                                                                                    var self = $4541;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $4544 = self.err;
                                                                                                            var $4545 = self.nam;
                                                                                                            var $4546 = self.ini;
                                                                                                            var $4547 = self.idx;
                                                                                                            var $4548 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4534, $4544), $4545, $4546, $4547, $4548);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $4550 = self.err;
                                                                                                                    var _reply$64 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $4552 = self.err;
                                                                                                                            var self = $4550;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $4554 = self.value;
                                                                                                                                    var $4555 = Parser$Reply$error$(Parser$Error$combine$($4554, $4552));
                                                                                                                                    var $4553 = $4555;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $4556 = Parser$Reply$error$($4552);
                                                                                                                                    var $4553 = $4556;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4551 = $4553;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $4557 = self.pst;
                                                                                                                            var self = $4557;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $4559 = self.err;
                                                                                                                                    var $4560 = self.nam;
                                                                                                                                    var $4561 = self.ini;
                                                                                                                                    var $4562 = self.idx;
                                                                                                                                    var $4563 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4550, $4559), $4560, $4561, $4562, $4563);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $4565 = self.err;
                                                                                                                                            var _reply$78 = _body$1(Unit$new)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $4567 = self.err;
                                                                                                                                                    var self = $4565;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $4569 = self.value;
                                                                                                                                                            var $4570 = Parser$Reply$error$(Parser$Error$combine$($4569, $4567));
                                                                                                                                                            var $4568 = $4570;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $4571 = Parser$Reply$error$($4567);
                                                                                                                                                            var $4568 = $4571;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4566 = $4568;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $4572 = self.pst;
                                                                                                                                                    var $4573 = self.val;
                                                                                                                                                    var self = $4572;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $4575 = self.err;
                                                                                                                                                            var $4576 = self.nam;
                                                                                                                                                            var $4577 = self.ini;
                                                                                                                                                            var $4578 = self.idx;
                                                                                                                                                            var $4579 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4565, $4575), $4576, $4577, $4578, $4579);
                                                                                                                                                            var $4580 = Parser$Reply$value$(_reply$pst$86, Kind$Term$def$($4511, $4542, (_x$87 => {
                                                                                                                                                                var $4581 = $4573;
                                                                                                                                                                return $4581;
                                                                                                                                                            })));
                                                                                                                                                            var $4574 = $4580;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4566 = $4574;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $4564 = $4566;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $4558 = $4564;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4551 = $4558;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $4549 = $4551;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $4543 = $4549;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4535 = $4543;
                                                                                                    break;
                                                                                            };
                                                                                            var $4533 = $4535;
                                                                                            break;
                                                                                    };
                                                                                    var $4527 = $4533;
                                                                                    break;
                                                                            };
                                                                            var $4520 = $4527;
                                                                            break;
                                                                    };
                                                                    var $4518 = $4520;
                                                                    break;
                                                            };
                                                            var $4512 = $4518;
                                                            break;
                                                    };
                                                    var $4504 = $4512;
                                                    break;
                                            };
                                            var $4502 = $4504;
                                            break;
                                    };
                                    var $4496 = $4502;
                                    break;
                            };
                            var $4489 = $4496;
                            break;
                    };
                    var $4487 = $4489;
                    break;
            };
            return $4487;
        }));
        return $4486;
    };
    const Kind$Parser$def = x0 => Kind$Parser$def$(x0);
    const Kind$Parser$goal_rewrite = Kind$Parser$block("goal-rewrite")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $4583 = self.err;
                var _reply$7 = Kind$Parser$text$("rewrite ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4585 = self.err;
                        var self = $4583;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4587 = self.value;
                                var $4588 = Parser$Reply$error$(Parser$Error$combine$($4587, $4585));
                                var $4586 = $4588;
                                break;
                            case 'Maybe.none':
                                var $4589 = Parser$Reply$error$($4585);
                                var $4586 = $4589;
                                break;
                        };
                        var $4584 = $4586;
                        break;
                    case 'Parser.Reply.value':
                        var $4590 = self.pst;
                        var self = $4590;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4592 = self.err;
                                var $4593 = self.nam;
                                var $4594 = self.ini;
                                var $4595 = self.idx;
                                var $4596 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($4583, $4592), $4593, $4594, $4595, $4596);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $4598 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $4600 = self.err;
                                                var self = $4598;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $4602 = self.value;
                                                        var $4603 = Parser$Reply$error$(Parser$Error$combine$($4602, $4600));
                                                        var $4601 = $4603;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $4604 = Parser$Reply$error$($4600);
                                                        var $4601 = $4604;
                                                        break;
                                                };
                                                var $4599 = $4601;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $4605 = self.pst;
                                                var $4606 = self.val;
                                                var self = $4605;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $4608 = self.err;
                                                        var $4609 = self.nam;
                                                        var $4610 = self.ini;
                                                        var $4611 = self.idx;
                                                        var $4612 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($4598, $4608), $4609, $4610, $4611, $4612);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $4614 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("in", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $4616 = self.err;
                                                                        var self = $4614;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4618 = self.value;
                                                                                var $4619 = Parser$Reply$error$(Parser$Error$combine$($4618, $4616));
                                                                                var $4617 = $4619;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4620 = Parser$Reply$error$($4616);
                                                                                var $4617 = $4620;
                                                                                break;
                                                                        };
                                                                        var $4615 = $4617;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $4621 = self.pst;
                                                                        var self = $4621;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $4623 = self.err;
                                                                                var $4624 = self.nam;
                                                                                var $4625 = self.ini;
                                                                                var $4626 = self.idx;
                                                                                var $4627 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($4614, $4623), $4624, $4625, $4626, $4627);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $4629 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $4631 = self.err;
                                                                                                var self = $4629;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $4633 = self.value;
                                                                                                        var $4634 = Parser$Reply$error$(Parser$Error$combine$($4633, $4631));
                                                                                                        var $4632 = $4634;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $4635 = Parser$Reply$error$($4631);
                                                                                                        var $4632 = $4635;
                                                                                                        break;
                                                                                                };
                                                                                                var $4630 = $4632;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $4636 = self.pst;
                                                                                                var $4637 = self.val;
                                                                                                var self = $4636;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $4639 = self.err;
                                                                                                        var $4640 = self.nam;
                                                                                                        var $4641 = self.ini;
                                                                                                        var $4642 = self.idx;
                                                                                                        var $4643 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($4629, $4639), $4640, $4641, $4642, $4643);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $4645 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$("with", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $4647 = self.err;
                                                                                                                        var self = $4645;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $4649 = self.value;
                                                                                                                                var $4650 = Parser$Reply$error$(Parser$Error$combine$($4649, $4647));
                                                                                                                                var $4648 = $4650;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $4651 = Parser$Reply$error$($4647);
                                                                                                                                var $4648 = $4651;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4646 = $4648;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $4652 = self.pst;
                                                                                                                        var self = $4652;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $4654 = self.err;
                                                                                                                                var $4655 = self.nam;
                                                                                                                                var $4656 = self.ini;
                                                                                                                                var $4657 = self.idx;
                                                                                                                                var $4658 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($4645, $4654), $4655, $4656, $4657, $4658);
                                                                                                                                var self = _reply$pst$71;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $4660 = self.err;
                                                                                                                                        var _reply$77 = Kind$Parser$term(_reply$pst$71);
                                                                                                                                        var self = _reply$77;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $4662 = self.err;
                                                                                                                                                var self = $4660;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $4664 = self.value;
                                                                                                                                                        var $4665 = Parser$Reply$error$(Parser$Error$combine$($4664, $4662));
                                                                                                                                                        var $4663 = $4665;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $4666 = Parser$Reply$error$($4662);
                                                                                                                                                        var $4663 = $4666;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4661 = $4663;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $4667 = self.pst;
                                                                                                                                                var $4668 = self.val;
                                                                                                                                                var self = $4667;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $4670 = self.err;
                                                                                                                                                        var $4671 = self.nam;
                                                                                                                                                        var $4672 = self.ini;
                                                                                                                                                        var $4673 = self.idx;
                                                                                                                                                        var $4674 = self.str;
                                                                                                                                                        var _reply$pst$85 = Parser$State$new$(Parser$Error$maybe_combine$($4660, $4670), $4671, $4672, $4673, $4674);
                                                                                                                                                        var self = _reply$pst$85;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $4676 = self.err;
                                                                                                                                                                var _reply$91 = Kind$Parser$term(_reply$pst$85);
                                                                                                                                                                var self = _reply$91;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $4678 = self.err;
                                                                                                                                                                        var self = $4676;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $4680 = self.value;
                                                                                                                                                                                var $4681 = Parser$Reply$error$(Parser$Error$combine$($4680, $4678));
                                                                                                                                                                                var $4679 = $4681;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $4682 = Parser$Reply$error$($4678);
                                                                                                                                                                                var $4679 = $4682;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $4677 = $4679;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $4683 = self.pst;
                                                                                                                                                                        var $4684 = self.val;
                                                                                                                                                                        var self = $4683;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $4686 = self.err;
                                                                                                                                                                                var $4687 = self.nam;
                                                                                                                                                                                var $4688 = self.ini;
                                                                                                                                                                                var $4689 = self.idx;
                                                                                                                                                                                var $4690 = self.str;
                                                                                                                                                                                var _reply$pst$99 = Parser$State$new$(Parser$Error$maybe_combine$($4676, $4686), $4687, $4688, $4689, $4690);
                                                                                                                                                                                var _moti$100 = Kind$Term$lam$($4606, (_s$100 => {
                                                                                                                                                                                    var $4692 = Kind$Term$lam$("", (_x$101 => {
                                                                                                                                                                                        var $4693 = $4637;
                                                                                                                                                                                        return $4693;
                                                                                                                                                                                    }));
                                                                                                                                                                                    return $4692;
                                                                                                                                                                                }));
                                                                                                                                                                                var _term$101 = Kind$Term$ref$("Equal.mirror");
                                                                                                                                                                                var _term$102 = Kind$Term$app$(_term$101, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$103 = Kind$Term$app$(_term$102, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$104 = Kind$Term$app$(_term$103, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$105 = Kind$Term$app$(_term$104, $4668);
                                                                                                                                                                                var _term$106 = Kind$Term$app$(_term$105, _moti$100);
                                                                                                                                                                                var _term$107 = Kind$Term$app$(_term$106, $4684);
                                                                                                                                                                                var $4691 = Parser$Reply$value$(_reply$pst$99, _term$107);
                                                                                                                                                                                var $4685 = $4691;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $4677 = $4685;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $4675 = $4677;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $4669 = $4675;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4661 = $4669;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $4659 = $4661;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $4653 = $4659;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4646 = $4653;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $4644 = $4646;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $4638 = $4644;
                                                                                                        break;
                                                                                                };
                                                                                                var $4630 = $4638;
                                                                                                break;
                                                                                        };
                                                                                        var $4628 = $4630;
                                                                                        break;
                                                                                };
                                                                                var $4622 = $4628;
                                                                                break;
                                                                        };
                                                                        var $4615 = $4622;
                                                                        break;
                                                                };
                                                                var $4613 = $4615;
                                                                break;
                                                        };
                                                        var $4607 = $4613;
                                                        break;
                                                };
                                                var $4599 = $4607;
                                                break;
                                        };
                                        var $4597 = $4599;
                                        break;
                                };
                                var $4591 = $4597;
                                break;
                        };
                        var $4584 = $4591;
                        break;
                };
                var $4582 = $4584;
                break;
        };
        return $4582;
    }));
    const Kind$Parser$if = Kind$Parser$block("if")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $4695 = self.err;
                var _reply$7 = Kind$Parser$text$("if ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4697 = self.err;
                        var self = $4695;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4699 = self.value;
                                var $4700 = Parser$Reply$error$(Parser$Error$combine$($4699, $4697));
                                var $4698 = $4700;
                                break;
                            case 'Maybe.none':
                                var $4701 = Parser$Reply$error$($4697);
                                var $4698 = $4701;
                                break;
                        };
                        var $4696 = $4698;
                        break;
                    case 'Parser.Reply.value':
                        var $4702 = self.pst;
                        var self = $4702;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4704 = self.err;
                                var $4705 = self.nam;
                                var $4706 = self.ini;
                                var $4707 = self.idx;
                                var $4708 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($4695, $4704), $4705, $4706, $4707, $4708);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $4710 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $4712 = self.err;
                                                var self = $4710;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $4714 = self.value;
                                                        var $4715 = Parser$Reply$error$(Parser$Error$combine$($4714, $4712));
                                                        var $4713 = $4715;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $4716 = Parser$Reply$error$($4712);
                                                        var $4713 = $4716;
                                                        break;
                                                };
                                                var $4711 = $4713;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $4717 = self.pst;
                                                var $4718 = self.val;
                                                var self = $4717;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $4720 = self.err;
                                                        var $4721 = self.nam;
                                                        var $4722 = self.ini;
                                                        var $4723 = self.idx;
                                                        var $4724 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($4710, $4720), $4721, $4722, $4723, $4724);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $4726 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("then", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $4728 = self.err;
                                                                        var self = $4726;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4730 = self.value;
                                                                                var $4731 = Parser$Reply$error$(Parser$Error$combine$($4730, $4728));
                                                                                var $4729 = $4731;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4732 = Parser$Reply$error$($4728);
                                                                                var $4729 = $4732;
                                                                                break;
                                                                        };
                                                                        var $4727 = $4729;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $4733 = self.pst;
                                                                        var self = $4733;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $4735 = self.err;
                                                                                var $4736 = self.nam;
                                                                                var $4737 = self.ini;
                                                                                var $4738 = self.idx;
                                                                                var $4739 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($4726, $4735), $4736, $4737, $4738, $4739);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $4741 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $4743 = self.err;
                                                                                                var self = $4741;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $4745 = self.value;
                                                                                                        var $4746 = Parser$Reply$error$(Parser$Error$combine$($4745, $4743));
                                                                                                        var $4744 = $4746;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $4747 = Parser$Reply$error$($4743);
                                                                                                        var $4744 = $4747;
                                                                                                        break;
                                                                                                };
                                                                                                var $4742 = $4744;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $4748 = self.pst;
                                                                                                var $4749 = self.val;
                                                                                                var self = $4748;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $4751 = self.err;
                                                                                                        var $4752 = self.nam;
                                                                                                        var $4753 = self.ini;
                                                                                                        var $4754 = self.idx;
                                                                                                        var $4755 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($4741, $4751), $4752, $4753, $4754, $4755);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $4757 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$("else", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $4759 = self.err;
                                                                                                                        var self = $4757;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $4761 = self.value;
                                                                                                                                var $4762 = Parser$Reply$error$(Parser$Error$combine$($4761, $4759));
                                                                                                                                var $4760 = $4762;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $4763 = Parser$Reply$error$($4759);
                                                                                                                                var $4760 = $4763;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4758 = $4760;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $4764 = self.pst;
                                                                                                                        var self = $4764;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $4766 = self.err;
                                                                                                                                var $4767 = self.nam;
                                                                                                                                var $4768 = self.ini;
                                                                                                                                var $4769 = self.idx;
                                                                                                                                var $4770 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($4757, $4766), $4767, $4768, $4769, $4770);
                                                                                                                                var self = _reply$pst$71;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $4772 = self.err;
                                                                                                                                        var _reply$77 = Kind$Parser$term(_reply$pst$71);
                                                                                                                                        var self = _reply$77;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $4774 = self.err;
                                                                                                                                                var self = $4772;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $4776 = self.value;
                                                                                                                                                        var $4777 = Parser$Reply$error$(Parser$Error$combine$($4776, $4774));
                                                                                                                                                        var $4775 = $4777;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $4778 = Parser$Reply$error$($4774);
                                                                                                                                                        var $4775 = $4778;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4773 = $4775;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $4779 = self.pst;
                                                                                                                                                var $4780 = self.val;
                                                                                                                                                var self = $4779;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $4782 = self.err;
                                                                                                                                                        var $4783 = self.nam;
                                                                                                                                                        var $4784 = self.ini;
                                                                                                                                                        var $4785 = self.idx;
                                                                                                                                                        var $4786 = self.str;
                                                                                                                                                        var _reply$pst$85 = Parser$State$new$(Parser$Error$maybe_combine$($4772, $4782), $4783, $4784, $4785, $4786);
                                                                                                                                                        var _term$86 = $4718;
                                                                                                                                                        var _term$87 = Kind$Term$app$(_term$86, Kind$Term$lam$("", (_x$87 => {
                                                                                                                                                            var $4788 = Kind$Term$hol$(Bits$e);
                                                                                                                                                            return $4788;
                                                                                                                                                        })));
                                                                                                                                                        var _term$88 = Kind$Term$app$(_term$87, $4749);
                                                                                                                                                        var _term$89 = Kind$Term$app$(_term$88, $4780);
                                                                                                                                                        var $4787 = Parser$Reply$value$(_reply$pst$85, _term$89);
                                                                                                                                                        var $4781 = $4787;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4773 = $4781;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $4771 = $4773;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $4765 = $4771;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4758 = $4765;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $4756 = $4758;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $4750 = $4756;
                                                                                                        break;
                                                                                                };
                                                                                                var $4742 = $4750;
                                                                                                break;
                                                                                        };
                                                                                        var $4740 = $4742;
                                                                                        break;
                                                                                };
                                                                                var $4734 = $4740;
                                                                                break;
                                                                        };
                                                                        var $4727 = $4734;
                                                                        break;
                                                                };
                                                                var $4725 = $4727;
                                                                break;
                                                        };
                                                        var $4719 = $4725;
                                                        break;
                                                };
                                                var $4711 = $4719;
                                                break;
                                        };
                                        var $4709 = $4711;
                                        break;
                                };
                                var $4703 = $4709;
                                break;
                        };
                        var $4696 = $4703;
                        break;
                };
                var $4694 = $4696;
                break;
        };
        return $4694;
    }));
    const Kind$Code$backslash = 92;
    const Kind$Code$escapes = List$cons$(Pair$new$("\\b", 8), List$cons$(Pair$new$("\\f", 12), List$cons$(Pair$new$("\\n", 10), List$cons$(Pair$new$("\\r", 13), List$cons$(Pair$new$("\\t", 9), List$cons$(Pair$new$("\\v", 11), List$cons$(Pair$new$(String$cons$(Kind$Code$backslash, String$cons$(Kind$Code$backslash, String$nil)), Kind$Code$backslash), List$cons$(Pair$new$("\\\"", 34), List$cons$(Pair$new$("\\0", 0), List$cons$(Pair$new$("\\\'", 39), List$nil))))))))));
    const Kind$Parser$char$single = Parser$choice(List$cons$(Parser$choice(List$mapped$(Kind$Code$escapes, (_esc$1 => {
        var self = _esc$1;
        switch (self._) {
            case 'Pair.new':
                var $4790 = self.fst;
                var $4791 = self.snd;
                var $4792 = (_pst$4 => {
                    var self = _pst$4;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $4794 = self.err;
                            var _reply$10 = Parser$text$($4790, _pst$4);
                            var self = _reply$10;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $4796 = self.err;
                                    var self = $4794;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $4798 = self.value;
                                            var $4799 = Parser$Reply$error$(Parser$Error$combine$($4798, $4796));
                                            var $4797 = $4799;
                                            break;
                                        case 'Maybe.none':
                                            var $4800 = Parser$Reply$error$($4796);
                                            var $4797 = $4800;
                                            break;
                                    };
                                    var $4795 = $4797;
                                    break;
                                case 'Parser.Reply.value':
                                    var $4801 = self.pst;
                                    var self = $4801;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4803 = self.err;
                                            var $4804 = self.nam;
                                            var $4805 = self.ini;
                                            var $4806 = self.idx;
                                            var $4807 = self.str;
                                            var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($4794, $4803), $4804, $4805, $4806, $4807);
                                            var $4808 = Parser$Reply$value$(_reply$pst$18, $4791);
                                            var $4802 = $4808;
                                            break;
                                    };
                                    var $4795 = $4802;
                                    break;
                            };
                            var $4793 = $4795;
                            break;
                    };
                    return $4793;
                });
                var $4789 = $4792;
                break;
        };
        return $4789;
    }))), List$cons$(Parser$one, List$nil)));
    const Kind$Parser$char = Kind$Parser$block("char")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $4810 = self.err;
                var _reply$7 = Kind$Parser$text$("\'", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4812 = self.err;
                        var self = $4810;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4814 = self.value;
                                var $4815 = Parser$Reply$error$(Parser$Error$combine$($4814, $4812));
                                var $4813 = $4815;
                                break;
                            case 'Maybe.none':
                                var $4816 = Parser$Reply$error$($4812);
                                var $4813 = $4816;
                                break;
                        };
                        var $4811 = $4813;
                        break;
                    case 'Parser.Reply.value':
                        var $4817 = self.pst;
                        var self = $4817;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4819 = self.err;
                                var $4820 = self.nam;
                                var $4821 = self.ini;
                                var $4822 = self.idx;
                                var $4823 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($4810, $4819), $4820, $4821, $4822, $4823);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $4825 = self.err;
                                        var _reply$21 = Kind$Parser$char$single(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $4827 = self.err;
                                                var self = $4825;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $4829 = self.value;
                                                        var $4830 = Parser$Reply$error$(Parser$Error$combine$($4829, $4827));
                                                        var $4828 = $4830;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $4831 = Parser$Reply$error$($4827);
                                                        var $4828 = $4831;
                                                        break;
                                                };
                                                var $4826 = $4828;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $4832 = self.pst;
                                                var $4833 = self.val;
                                                var self = $4832;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $4835 = self.err;
                                                        var $4836 = self.nam;
                                                        var $4837 = self.ini;
                                                        var $4838 = self.idx;
                                                        var $4839 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($4825, $4835), $4836, $4837, $4838, $4839);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $4841 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("\'", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $4843 = self.err;
                                                                        var self = $4841;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4845 = self.value;
                                                                                var $4846 = Parser$Reply$error$(Parser$Error$combine$($4845, $4843));
                                                                                var $4844 = $4846;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4847 = Parser$Reply$error$($4843);
                                                                                var $4844 = $4847;
                                                                                break;
                                                                        };
                                                                        var $4842 = $4844;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $4848 = self.pst;
                                                                        var self = $4848;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $4850 = self.err;
                                                                                var $4851 = self.nam;
                                                                                var $4852 = self.ini;
                                                                                var $4853 = self.idx;
                                                                                var $4854 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($4841, $4850), $4851, $4852, $4853, $4854);
                                                                                var $4855 = Parser$Reply$value$(_reply$pst$43, Kind$Term$chr$($4833));
                                                                                var $4849 = $4855;
                                                                                break;
                                                                        };
                                                                        var $4842 = $4849;
                                                                        break;
                                                                };
                                                                var $4840 = $4842;
                                                                break;
                                                        };
                                                        var $4834 = $4840;
                                                        break;
                                                };
                                                var $4826 = $4834;
                                                break;
                                        };
                                        var $4824 = $4826;
                                        break;
                                };
                                var $4818 = $4824;
                                break;
                        };
                        var $4811 = $4818;
                        break;
                };
                var $4809 = $4811;
                break;
        };
        return $4809;
    }));

    function String$reverse$go$(_xs$1, _res$2) {
        var String$reverse$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$reverse$go = _xs$1 => _res$2 => String$reverse$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $4856 = _res$2;
                    return $4856;
                } else {
                    var $4857 = self.charCodeAt(0);
                    var $4858 = self.slice(1);
                    var $4859 = String$reverse$go$($4858, String$cons$($4857, _res$2));
                    return $4859;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$reverse$go = x0 => x1 => String$reverse$go$(x0, x1);

    function String$reverse$(_xs$1) {
        var $4860 = String$reverse$go$(_xs$1, String$nil);
        return $4860;
    };
    const String$reverse = x0 => String$reverse$(x0);

    function Kind$Parser$string$go$(_delim$1, _str$2, _pst$3) {
        var Kind$Parser$string$go$ = (_delim$1, _str$2, _pst$3) => ({
            ctr: 'TCO',
            arg: [_delim$1, _str$2, _pst$3]
        });
        var Kind$Parser$string$go = _delim$1 => _str$2 => _pst$3 => Kind$Parser$string$go$(_delim$1, _str$2, _pst$3);
        var arg = [_delim$1, _str$2, _pst$3];
        while (true) {
            let [_delim$1, _str$2, _pst$3] = arg;
            var R = (() => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $4861 = self.err;
                        var $4862 = self.nam;
                        var $4863 = self.ini;
                        var $4864 = self.idx;
                        var $4865 = self.str;
                        var self = $4865;
                        if (self.length === 0) {
                            var $4867 = Parser$Reply$fail$($4862, $4863, $4864, "Non-terminating string.");
                            var $4866 = $4867;
                        } else {
                            var $4868 = self.charCodeAt(0);
                            var $4869 = self.slice(1);
                            var self = ($4868 === _delim$1);
                            if (self) {
                                var _pst$11 = Parser$State$new$($4861, $4862, $4863, Nat$succ$($4864), $4869);
                                var $4871 = Parser$Reply$value$(_pst$11, String$reverse$(_str$2));
                                var $4870 = $4871;
                            } else {
                                var self = Kind$Parser$char$single(_pst$3);
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $4873 = self.err;
                                        var $4874 = Parser$Reply$error$($4873);
                                        var $4872 = $4874;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $4875 = self.pst;
                                        var $4876 = self.val;
                                        var $4877 = Kind$Parser$string$go$(_delim$1, String$cons$($4876, _str$2), $4875);
                                        var $4872 = $4877;
                                        break;
                                };
                                var $4870 = $4872;
                            };
                            var $4866 = $4870;
                        };
                        return $4866;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Parser$string$go = x0 => x1 => x2 => Kind$Parser$string$go$(x0, x1, x2);

    function Kind$Parser$string$(_delim$1) {
        var $4878 = Kind$Parser$block("string")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $4880 = self.err;
                    var _reply$8 = Kind$Parser$text$(String$cons$(_delim$1, String$nil), _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $4882 = self.err;
                            var self = $4880;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $4884 = self.value;
                                    var $4885 = Parser$Reply$error$(Parser$Error$combine$($4884, $4882));
                                    var $4883 = $4885;
                                    break;
                                case 'Maybe.none':
                                    var $4886 = Parser$Reply$error$($4882);
                                    var $4883 = $4886;
                                    break;
                            };
                            var $4881 = $4883;
                            break;
                        case 'Parser.Reply.value':
                            var $4887 = self.pst;
                            var self = $4887;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4889 = self.err;
                                    var $4890 = self.nam;
                                    var $4891 = self.ini;
                                    var $4892 = self.idx;
                                    var $4893 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4880, $4889), $4890, $4891, $4892, $4893);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4895 = self.err;
                                            var _reply$22 = Kind$Parser$string$go$(_delim$1, "", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $4897 = self.err;
                                                    var self = $4895;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $4899 = self.value;
                                                            var $4900 = Parser$Reply$error$(Parser$Error$combine$($4899, $4897));
                                                            var $4898 = $4900;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $4901 = Parser$Reply$error$($4897);
                                                            var $4898 = $4901;
                                                            break;
                                                    };
                                                    var $4896 = $4898;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $4902 = self.pst;
                                                    var $4903 = self.val;
                                                    var self = $4902;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $4905 = self.err;
                                                            var $4906 = self.nam;
                                                            var $4907 = self.ini;
                                                            var $4908 = self.idx;
                                                            var $4909 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4895, $4905), $4906, $4907, $4908, $4909);
                                                            var $4910 = Parser$Reply$value$(_reply$pst$30, Kind$Term$str$($4903));
                                                            var $4904 = $4910;
                                                            break;
                                                    };
                                                    var $4896 = $4904;
                                                    break;
                                            };
                                            var $4894 = $4896;
                                            break;
                                    };
                                    var $4888 = $4894;
                                    break;
                            };
                            var $4881 = $4888;
                            break;
                    };
                    var $4879 = $4881;
                    break;
            };
            return $4879;
        }));
        return $4878;
    };
    const Kind$Parser$string = x0 => Kind$Parser$string$(x0);

    function Kind$Term$new$(_args$1) {
        var $4911 = ({
            _: 'Kind.Term.new',
            'args': _args$1
        });
        return $4911;
    };
    const Kind$Term$new = x0 => Kind$Term$new$(x0);
    const Kind$Parser$new = Kind$Parser$block("new-struct")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $4913 = self.err;
                var _reply$7 = Kind$Parser$items1$("{", Kind$Parser$term, "}")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4915 = self.err;
                        var self = $4913;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4917 = self.value;
                                var $4918 = Parser$Reply$error$(Parser$Error$combine$($4917, $4915));
                                var $4916 = $4918;
                                break;
                            case 'Maybe.none':
                                var $4919 = Parser$Reply$error$($4915);
                                var $4916 = $4919;
                                break;
                        };
                        var $4914 = $4916;
                        break;
                    case 'Parser.Reply.value':
                        var $4920 = self.pst;
                        var $4921 = self.val;
                        var self = $4920;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4923 = self.err;
                                var $4924 = self.nam;
                                var $4925 = self.ini;
                                var $4926 = self.idx;
                                var $4927 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($4913, $4923), $4924, $4925, $4926, $4927);
                                var $4928 = Parser$Reply$value$(_reply$pst$15, Kind$Term$new$($4921));
                                var $4922 = $4928;
                                break;
                        };
                        var $4914 = $4922;
                        break;
                };
                var $4912 = $4914;
                break;
        };
        return $4912;
    }));
    const Kind$Parser$sigma$type = Kind$Parser$block("sigma")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $4930 = self.err;
                var _reply$7 = Kind$Parser$text$("[", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4932 = self.err;
                        var self = $4930;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4934 = self.value;
                                var $4935 = Parser$Reply$error$(Parser$Error$combine$($4934, $4932));
                                var $4933 = $4935;
                                break;
                            case 'Maybe.none':
                                var $4936 = Parser$Reply$error$($4932);
                                var $4933 = $4936;
                                break;
                        };
                        var $4931 = $4933;
                        break;
                    case 'Parser.Reply.value':
                        var $4937 = self.pst;
                        var self = $4937;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4939 = self.err;
                                var $4940 = self.nam;
                                var $4941 = self.ini;
                                var $4942 = self.idx;
                                var $4943 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($4930, $4939), $4940, $4941, $4942, $4943);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $4945 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $4947 = self.err;
                                                var self = $4945;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $4949 = self.value;
                                                        var $4950 = Parser$Reply$error$(Parser$Error$combine$($4949, $4947));
                                                        var $4948 = $4950;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $4951 = Parser$Reply$error$($4947);
                                                        var $4948 = $4951;
                                                        break;
                                                };
                                                var $4946 = $4948;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $4952 = self.pst;
                                                var $4953 = self.val;
                                                var self = $4952;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $4955 = self.err;
                                                        var $4956 = self.nam;
                                                        var $4957 = self.ini;
                                                        var $4958 = self.idx;
                                                        var $4959 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($4945, $4955), $4956, $4957, $4958, $4959);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $4961 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(":", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $4963 = self.err;
                                                                        var self = $4961;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4965 = self.value;
                                                                                var $4966 = Parser$Reply$error$(Parser$Error$combine$($4965, $4963));
                                                                                var $4964 = $4966;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4967 = Parser$Reply$error$($4963);
                                                                                var $4964 = $4967;
                                                                                break;
                                                                        };
                                                                        var $4962 = $4964;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $4968 = self.pst;
                                                                        var self = $4968;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $4970 = self.err;
                                                                                var $4971 = self.nam;
                                                                                var $4972 = self.ini;
                                                                                var $4973 = self.idx;
                                                                                var $4974 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($4961, $4970), $4971, $4972, $4973, $4974);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $4976 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $4978 = self.err;
                                                                                                var self = $4976;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $4980 = self.value;
                                                                                                        var $4981 = Parser$Reply$error$(Parser$Error$combine$($4980, $4978));
                                                                                                        var $4979 = $4981;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $4982 = Parser$Reply$error$($4978);
                                                                                                        var $4979 = $4982;
                                                                                                        break;
                                                                                                };
                                                                                                var $4977 = $4979;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $4983 = self.pst;
                                                                                                var $4984 = self.val;
                                                                                                var self = $4983;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $4986 = self.err;
                                                                                                        var $4987 = self.nam;
                                                                                                        var $4988 = self.ini;
                                                                                                        var $4989 = self.idx;
                                                                                                        var $4990 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($4976, $4986), $4987, $4988, $4989, $4990);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $4992 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$("]", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $4994 = self.err;
                                                                                                                        var self = $4992;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $4996 = self.value;
                                                                                                                                var $4997 = Parser$Reply$error$(Parser$Error$combine$($4996, $4994));
                                                                                                                                var $4995 = $4997;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $4998 = Parser$Reply$error$($4994);
                                                                                                                                var $4995 = $4998;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4993 = $4995;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $4999 = self.pst;
                                                                                                                        var self = $4999;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $5001 = self.err;
                                                                                                                                var $5002 = self.nam;
                                                                                                                                var $5003 = self.ini;
                                                                                                                                var $5004 = self.idx;
                                                                                                                                var $5005 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($4992, $5001), $5002, $5003, $5004, $5005);
                                                                                                                                var self = _reply$pst$71;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $5007 = self.err;
                                                                                                                                        var _reply$77 = Kind$Parser$term(_reply$pst$71);
                                                                                                                                        var self = _reply$77;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $5009 = self.err;
                                                                                                                                                var self = $5007;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $5011 = self.value;
                                                                                                                                                        var $5012 = Parser$Reply$error$(Parser$Error$combine$($5011, $5009));
                                                                                                                                                        var $5010 = $5012;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $5013 = Parser$Reply$error$($5009);
                                                                                                                                                        var $5010 = $5013;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $5008 = $5010;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $5014 = self.pst;
                                                                                                                                                var $5015 = self.val;
                                                                                                                                                var self = $5014;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $5017 = self.err;
                                                                                                                                                        var $5018 = self.nam;
                                                                                                                                                        var $5019 = self.ini;
                                                                                                                                                        var $5020 = self.idx;
                                                                                                                                                        var $5021 = self.str;
                                                                                                                                                        var _reply$pst$85 = Parser$State$new$(Parser$Error$maybe_combine$($5007, $5017), $5018, $5019, $5020, $5021);
                                                                                                                                                        var _term$86 = Kind$Term$ref$("Sigma");
                                                                                                                                                        var _term$87 = Kind$Term$app$(_term$86, $4984);
                                                                                                                                                        var _term$88 = Kind$Term$app$(_term$87, Kind$Term$lam$($4953, (_x$88 => {
                                                                                                                                                            var $5023 = $5015;
                                                                                                                                                            return $5023;
                                                                                                                                                        })));
                                                                                                                                                        var $5022 = Parser$Reply$value$(_reply$pst$85, _term$88);
                                                                                                                                                        var $5016 = $5022;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $5008 = $5016;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $5006 = $5008;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $5000 = $5006;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4993 = $5000;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $4991 = $4993;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $4985 = $4991;
                                                                                                        break;
                                                                                                };
                                                                                                var $4977 = $4985;
                                                                                                break;
                                                                                        };
                                                                                        var $4975 = $4977;
                                                                                        break;
                                                                                };
                                                                                var $4969 = $4975;
                                                                                break;
                                                                        };
                                                                        var $4962 = $4969;
                                                                        break;
                                                                };
                                                                var $4960 = $4962;
                                                                break;
                                                        };
                                                        var $4954 = $4960;
                                                        break;
                                                };
                                                var $4946 = $4954;
                                                break;
                                        };
                                        var $4944 = $4946;
                                        break;
                                };
                                var $4938 = $4944;
                                break;
                        };
                        var $4931 = $4938;
                        break;
                };
                var $4929 = $4931;
                break;
        };
        return $4929;
    }));
    const Kind$Parser$some = Kind$Parser$block("some")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5025 = self.err;
                var _reply$7 = Kind$Parser$text$("some(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5027 = self.err;
                        var self = $5025;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5029 = self.value;
                                var $5030 = Parser$Reply$error$(Parser$Error$combine$($5029, $5027));
                                var $5028 = $5030;
                                break;
                            case 'Maybe.none':
                                var $5031 = Parser$Reply$error$($5027);
                                var $5028 = $5031;
                                break;
                        };
                        var $5026 = $5028;
                        break;
                    case 'Parser.Reply.value':
                        var $5032 = self.pst;
                        var self = $5032;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5034 = self.err;
                                var $5035 = self.nam;
                                var $5036 = self.ini;
                                var $5037 = self.idx;
                                var $5038 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5025, $5034), $5035, $5036, $5037, $5038);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5040 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5042 = self.err;
                                                var self = $5040;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5044 = self.value;
                                                        var $5045 = Parser$Reply$error$(Parser$Error$combine$($5044, $5042));
                                                        var $5043 = $5045;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5046 = Parser$Reply$error$($5042);
                                                        var $5043 = $5046;
                                                        break;
                                                };
                                                var $5041 = $5043;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5047 = self.pst;
                                                var $5048 = self.val;
                                                var self = $5047;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5050 = self.err;
                                                        var $5051 = self.nam;
                                                        var $5052 = self.ini;
                                                        var $5053 = self.idx;
                                                        var $5054 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5040, $5050), $5051, $5052, $5053, $5054);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5056 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5058 = self.err;
                                                                        var self = $5056;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5060 = self.value;
                                                                                var $5061 = Parser$Reply$error$(Parser$Error$combine$($5060, $5058));
                                                                                var $5059 = $5061;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5062 = Parser$Reply$error$($5058);
                                                                                var $5059 = $5062;
                                                                                break;
                                                                        };
                                                                        var $5057 = $5059;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5063 = self.pst;
                                                                        var self = $5063;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5065 = self.err;
                                                                                var $5066 = self.nam;
                                                                                var $5067 = self.ini;
                                                                                var $5068 = self.idx;
                                                                                var $5069 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5056, $5065), $5066, $5067, $5068, $5069);
                                                                                var _term$44 = Kind$Term$ref$("Maybe.some");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$hol$(Bits$e));
                                                                                var _term$46 = Kind$Term$app$(_term$45, $5048);
                                                                                var $5070 = Parser$Reply$value$(_reply$pst$43, _term$46);
                                                                                var $5064 = $5070;
                                                                                break;
                                                                        };
                                                                        var $5057 = $5064;
                                                                        break;
                                                                };
                                                                var $5055 = $5057;
                                                                break;
                                                        };
                                                        var $5049 = $5055;
                                                        break;
                                                };
                                                var $5041 = $5049;
                                                break;
                                        };
                                        var $5039 = $5041;
                                        break;
                                };
                                var $5033 = $5039;
                                break;
                        };
                        var $5026 = $5033;
                        break;
                };
                var $5024 = $5026;
                break;
        };
        return $5024;
    }));
    const Kind$Parser$not = Kind$Parser$block("not")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5072 = self.err;
                var _reply$7 = Kind$Parser$text$("not(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5074 = self.err;
                        var self = $5072;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5076 = self.value;
                                var $5077 = Parser$Reply$error$(Parser$Error$combine$($5076, $5074));
                                var $5075 = $5077;
                                break;
                            case 'Maybe.none':
                                var $5078 = Parser$Reply$error$($5074);
                                var $5075 = $5078;
                                break;
                        };
                        var $5073 = $5075;
                        break;
                    case 'Parser.Reply.value':
                        var $5079 = self.pst;
                        var self = $5079;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5081 = self.err;
                                var $5082 = self.nam;
                                var $5083 = self.ini;
                                var $5084 = self.idx;
                                var $5085 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5072, $5081), $5082, $5083, $5084, $5085);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5087 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5089 = self.err;
                                                var self = $5087;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5091 = self.value;
                                                        var $5092 = Parser$Reply$error$(Parser$Error$combine$($5091, $5089));
                                                        var $5090 = $5092;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5093 = Parser$Reply$error$($5089);
                                                        var $5090 = $5093;
                                                        break;
                                                };
                                                var $5088 = $5090;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5094 = self.pst;
                                                var $5095 = self.val;
                                                var self = $5094;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5097 = self.err;
                                                        var $5098 = self.nam;
                                                        var $5099 = self.ini;
                                                        var $5100 = self.idx;
                                                        var $5101 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5087, $5097), $5098, $5099, $5100, $5101);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5103 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5105 = self.err;
                                                                        var self = $5103;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5107 = self.value;
                                                                                var $5108 = Parser$Reply$error$(Parser$Error$combine$($5107, $5105));
                                                                                var $5106 = $5108;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5109 = Parser$Reply$error$($5105);
                                                                                var $5106 = $5109;
                                                                                break;
                                                                        };
                                                                        var $5104 = $5106;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5110 = self.pst;
                                                                        var self = $5110;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5112 = self.err;
                                                                                var $5113 = self.nam;
                                                                                var $5114 = self.ini;
                                                                                var $5115 = self.idx;
                                                                                var $5116 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5103, $5112), $5113, $5114, $5115, $5116);
                                                                                var _term$44 = Kind$Term$ref$("Bool.not");
                                                                                var _term$45 = Kind$Term$app$(_term$44, $5095);
                                                                                var $5117 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $5111 = $5117;
                                                                                break;
                                                                        };
                                                                        var $5104 = $5111;
                                                                        break;
                                                                };
                                                                var $5102 = $5104;
                                                                break;
                                                        };
                                                        var $5096 = $5102;
                                                        break;
                                                };
                                                var $5088 = $5096;
                                                break;
                                        };
                                        var $5086 = $5088;
                                        break;
                                };
                                var $5080 = $5086;
                                break;
                        };
                        var $5073 = $5080;
                        break;
                };
                var $5071 = $5073;
                break;
        };
        return $5071;
    }));
    const Kind$Parser$left = Kind$Parser$block("left")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5119 = self.err;
                var _reply$7 = Kind$Parser$text$("left(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5121 = self.err;
                        var self = $5119;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5123 = self.value;
                                var $5124 = Parser$Reply$error$(Parser$Error$combine$($5123, $5121));
                                var $5122 = $5124;
                                break;
                            case 'Maybe.none':
                                var $5125 = Parser$Reply$error$($5121);
                                var $5122 = $5125;
                                break;
                        };
                        var $5120 = $5122;
                        break;
                    case 'Parser.Reply.value':
                        var $5126 = self.pst;
                        var self = $5126;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5128 = self.err;
                                var $5129 = self.nam;
                                var $5130 = self.ini;
                                var $5131 = self.idx;
                                var $5132 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5119, $5128), $5129, $5130, $5131, $5132);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5134 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5136 = self.err;
                                                var self = $5134;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5138 = self.value;
                                                        var $5139 = Parser$Reply$error$(Parser$Error$combine$($5138, $5136));
                                                        var $5137 = $5139;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5140 = Parser$Reply$error$($5136);
                                                        var $5137 = $5140;
                                                        break;
                                                };
                                                var $5135 = $5137;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5141 = self.pst;
                                                var $5142 = self.val;
                                                var self = $5141;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5144 = self.err;
                                                        var $5145 = self.nam;
                                                        var $5146 = self.ini;
                                                        var $5147 = self.idx;
                                                        var $5148 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5134, $5144), $5145, $5146, $5147, $5148);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5150 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5152 = self.err;
                                                                        var self = $5150;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5154 = self.value;
                                                                                var $5155 = Parser$Reply$error$(Parser$Error$combine$($5154, $5152));
                                                                                var $5153 = $5155;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5156 = Parser$Reply$error$($5152);
                                                                                var $5153 = $5156;
                                                                                break;
                                                                        };
                                                                        var $5151 = $5153;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5157 = self.pst;
                                                                        var self = $5157;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5159 = self.err;
                                                                                var $5160 = self.nam;
                                                                                var $5161 = self.ini;
                                                                                var $5162 = self.idx;
                                                                                var $5163 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5150, $5159), $5160, $5161, $5162, $5163);
                                                                                var _term$44 = Kind$Term$ref$("Either.left");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$hol$(Bits$e));
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, $5142);
                                                                                var $5164 = Parser$Reply$value$(_reply$pst$43, _term$47);
                                                                                var $5158 = $5164;
                                                                                break;
                                                                        };
                                                                        var $5151 = $5158;
                                                                        break;
                                                                };
                                                                var $5149 = $5151;
                                                                break;
                                                        };
                                                        var $5143 = $5149;
                                                        break;
                                                };
                                                var $5135 = $5143;
                                                break;
                                        };
                                        var $5133 = $5135;
                                        break;
                                };
                                var $5127 = $5133;
                                break;
                        };
                        var $5120 = $5127;
                        break;
                };
                var $5118 = $5120;
                break;
        };
        return $5118;
    }));
    const Kind$Parser$right = Kind$Parser$block("right")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5166 = self.err;
                var _reply$7 = Kind$Parser$text$("right(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5168 = self.err;
                        var self = $5166;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5170 = self.value;
                                var $5171 = Parser$Reply$error$(Parser$Error$combine$($5170, $5168));
                                var $5169 = $5171;
                                break;
                            case 'Maybe.none':
                                var $5172 = Parser$Reply$error$($5168);
                                var $5169 = $5172;
                                break;
                        };
                        var $5167 = $5169;
                        break;
                    case 'Parser.Reply.value':
                        var $5173 = self.pst;
                        var self = $5173;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5175 = self.err;
                                var $5176 = self.nam;
                                var $5177 = self.ini;
                                var $5178 = self.idx;
                                var $5179 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5166, $5175), $5176, $5177, $5178, $5179);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5181 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5183 = self.err;
                                                var self = $5181;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5185 = self.value;
                                                        var $5186 = Parser$Reply$error$(Parser$Error$combine$($5185, $5183));
                                                        var $5184 = $5186;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5187 = Parser$Reply$error$($5183);
                                                        var $5184 = $5187;
                                                        break;
                                                };
                                                var $5182 = $5184;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5188 = self.pst;
                                                var $5189 = self.val;
                                                var self = $5188;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5191 = self.err;
                                                        var $5192 = self.nam;
                                                        var $5193 = self.ini;
                                                        var $5194 = self.idx;
                                                        var $5195 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5181, $5191), $5192, $5193, $5194, $5195);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5197 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5199 = self.err;
                                                                        var self = $5197;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5201 = self.value;
                                                                                var $5202 = Parser$Reply$error$(Parser$Error$combine$($5201, $5199));
                                                                                var $5200 = $5202;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5203 = Parser$Reply$error$($5199);
                                                                                var $5200 = $5203;
                                                                                break;
                                                                        };
                                                                        var $5198 = $5200;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5204 = self.pst;
                                                                        var self = $5204;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5206 = self.err;
                                                                                var $5207 = self.nam;
                                                                                var $5208 = self.ini;
                                                                                var $5209 = self.idx;
                                                                                var $5210 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5197, $5206), $5207, $5208, $5209, $5210);
                                                                                var _term$44 = Kind$Term$ref$("Either.right");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$hol$(Bits$e));
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, $5189);
                                                                                var $5211 = Parser$Reply$value$(_reply$pst$43, _term$47);
                                                                                var $5205 = $5211;
                                                                                break;
                                                                        };
                                                                        var $5198 = $5205;
                                                                        break;
                                                                };
                                                                var $5196 = $5198;
                                                                break;
                                                        };
                                                        var $5190 = $5196;
                                                        break;
                                                };
                                                var $5182 = $5190;
                                                break;
                                        };
                                        var $5180 = $5182;
                                        break;
                                };
                                var $5174 = $5180;
                                break;
                        };
                        var $5167 = $5174;
                        break;
                };
                var $5165 = $5167;
                break;
        };
        return $5165;
    }));
    const Kind$Parser$apply = Kind$Parser$block("apply")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5213 = self.err;
                var _reply$7 = Kind$Parser$text$("apply(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5215 = self.err;
                        var self = $5213;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5217 = self.value;
                                var $5218 = Parser$Reply$error$(Parser$Error$combine$($5217, $5215));
                                var $5216 = $5218;
                                break;
                            case 'Maybe.none':
                                var $5219 = Parser$Reply$error$($5215);
                                var $5216 = $5219;
                                break;
                        };
                        var $5214 = $5216;
                        break;
                    case 'Parser.Reply.value':
                        var $5220 = self.pst;
                        var self = $5220;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5222 = self.err;
                                var $5223 = self.nam;
                                var $5224 = self.ini;
                                var $5225 = self.idx;
                                var $5226 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5213, $5222), $5223, $5224, $5225, $5226);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5228 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5230 = self.err;
                                                var self = $5228;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5232 = self.value;
                                                        var $5233 = Parser$Reply$error$(Parser$Error$combine$($5232, $5230));
                                                        var $5231 = $5233;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5234 = Parser$Reply$error$($5230);
                                                        var $5231 = $5234;
                                                        break;
                                                };
                                                var $5229 = $5231;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5235 = self.pst;
                                                var $5236 = self.val;
                                                var self = $5235;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5238 = self.err;
                                                        var $5239 = self.nam;
                                                        var $5240 = self.ini;
                                                        var $5241 = self.idx;
                                                        var $5242 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5228, $5238), $5239, $5240, $5241, $5242);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5244 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(",", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5246 = self.err;
                                                                        var self = $5244;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5248 = self.value;
                                                                                var $5249 = Parser$Reply$error$(Parser$Error$combine$($5248, $5246));
                                                                                var $5247 = $5249;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5250 = Parser$Reply$error$($5246);
                                                                                var $5247 = $5250;
                                                                                break;
                                                                        };
                                                                        var $5245 = $5247;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5251 = self.pst;
                                                                        var self = $5251;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5253 = self.err;
                                                                                var $5254 = self.nam;
                                                                                var $5255 = self.ini;
                                                                                var $5256 = self.idx;
                                                                                var $5257 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5244, $5253), $5254, $5255, $5256, $5257);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $5259 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $5261 = self.err;
                                                                                                var self = $5259;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $5263 = self.value;
                                                                                                        var $5264 = Parser$Reply$error$(Parser$Error$combine$($5263, $5261));
                                                                                                        var $5262 = $5264;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $5265 = Parser$Reply$error$($5261);
                                                                                                        var $5262 = $5265;
                                                                                                        break;
                                                                                                };
                                                                                                var $5260 = $5262;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $5266 = self.pst;
                                                                                                var $5267 = self.val;
                                                                                                var self = $5266;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $5269 = self.err;
                                                                                                        var $5270 = self.nam;
                                                                                                        var $5271 = self.ini;
                                                                                                        var $5272 = self.idx;
                                                                                                        var $5273 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($5259, $5269), $5270, $5271, $5272, $5273);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $5275 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$(")", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $5277 = self.err;
                                                                                                                        var self = $5275;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $5279 = self.value;
                                                                                                                                var $5280 = Parser$Reply$error$(Parser$Error$combine$($5279, $5277));
                                                                                                                                var $5278 = $5280;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $5281 = Parser$Reply$error$($5277);
                                                                                                                                var $5278 = $5281;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5276 = $5278;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $5282 = self.pst;
                                                                                                                        var self = $5282;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $5284 = self.err;
                                                                                                                                var $5285 = self.nam;
                                                                                                                                var $5286 = self.ini;
                                                                                                                                var $5287 = self.idx;
                                                                                                                                var $5288 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($5275, $5284), $5285, $5286, $5287, $5288);
                                                                                                                                var _term$72 = Kind$Term$ref$("Equal.apply");
                                                                                                                                var _term$73 = Kind$Term$app$(_term$72, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$76 = Kind$Term$app$(_term$75, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$77 = Kind$Term$app$(_term$76, $5236);
                                                                                                                                var _term$78 = Kind$Term$app$(_term$77, $5267);
                                                                                                                                var $5289 = Parser$Reply$value$(_reply$pst$71, _term$78);
                                                                                                                                var $5283 = $5289;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5276 = $5283;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $5274 = $5276;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $5268 = $5274;
                                                                                                        break;
                                                                                                };
                                                                                                var $5260 = $5268;
                                                                                                break;
                                                                                        };
                                                                                        var $5258 = $5260;
                                                                                        break;
                                                                                };
                                                                                var $5252 = $5258;
                                                                                break;
                                                                        };
                                                                        var $5245 = $5252;
                                                                        break;
                                                                };
                                                                var $5243 = $5245;
                                                                break;
                                                        };
                                                        var $5237 = $5243;
                                                        break;
                                                };
                                                var $5229 = $5237;
                                                break;
                                        };
                                        var $5227 = $5229;
                                        break;
                                };
                                var $5221 = $5227;
                                break;
                        };
                        var $5214 = $5221;
                        break;
                };
                var $5212 = $5214;
                break;
        };
        return $5212;
    }));
    const Kind$Parser$chain = Kind$Parser$block("chain")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5291 = self.err;
                var _reply$7 = Kind$Parser$text$("chain(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5293 = self.err;
                        var self = $5291;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5295 = self.value;
                                var $5296 = Parser$Reply$error$(Parser$Error$combine$($5295, $5293));
                                var $5294 = $5296;
                                break;
                            case 'Maybe.none':
                                var $5297 = Parser$Reply$error$($5293);
                                var $5294 = $5297;
                                break;
                        };
                        var $5292 = $5294;
                        break;
                    case 'Parser.Reply.value':
                        var $5298 = self.pst;
                        var self = $5298;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5300 = self.err;
                                var $5301 = self.nam;
                                var $5302 = self.ini;
                                var $5303 = self.idx;
                                var $5304 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5291, $5300), $5301, $5302, $5303, $5304);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5306 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5308 = self.err;
                                                var self = $5306;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5310 = self.value;
                                                        var $5311 = Parser$Reply$error$(Parser$Error$combine$($5310, $5308));
                                                        var $5309 = $5311;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5312 = Parser$Reply$error$($5308);
                                                        var $5309 = $5312;
                                                        break;
                                                };
                                                var $5307 = $5309;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5313 = self.pst;
                                                var $5314 = self.val;
                                                var self = $5313;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5316 = self.err;
                                                        var $5317 = self.nam;
                                                        var $5318 = self.ini;
                                                        var $5319 = self.idx;
                                                        var $5320 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5306, $5316), $5317, $5318, $5319, $5320);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5322 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(",", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5324 = self.err;
                                                                        var self = $5322;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5326 = self.value;
                                                                                var $5327 = Parser$Reply$error$(Parser$Error$combine$($5326, $5324));
                                                                                var $5325 = $5327;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5328 = Parser$Reply$error$($5324);
                                                                                var $5325 = $5328;
                                                                                break;
                                                                        };
                                                                        var $5323 = $5325;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5329 = self.pst;
                                                                        var self = $5329;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5331 = self.err;
                                                                                var $5332 = self.nam;
                                                                                var $5333 = self.ini;
                                                                                var $5334 = self.idx;
                                                                                var $5335 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5322, $5331), $5332, $5333, $5334, $5335);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $5337 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $5339 = self.err;
                                                                                                var self = $5337;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $5341 = self.value;
                                                                                                        var $5342 = Parser$Reply$error$(Parser$Error$combine$($5341, $5339));
                                                                                                        var $5340 = $5342;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $5343 = Parser$Reply$error$($5339);
                                                                                                        var $5340 = $5343;
                                                                                                        break;
                                                                                                };
                                                                                                var $5338 = $5340;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $5344 = self.pst;
                                                                                                var $5345 = self.val;
                                                                                                var self = $5344;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $5347 = self.err;
                                                                                                        var $5348 = self.nam;
                                                                                                        var $5349 = self.ini;
                                                                                                        var $5350 = self.idx;
                                                                                                        var $5351 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($5337, $5347), $5348, $5349, $5350, $5351);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $5353 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$(")", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $5355 = self.err;
                                                                                                                        var self = $5353;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $5357 = self.value;
                                                                                                                                var $5358 = Parser$Reply$error$(Parser$Error$combine$($5357, $5355));
                                                                                                                                var $5356 = $5358;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $5359 = Parser$Reply$error$($5355);
                                                                                                                                var $5356 = $5359;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5354 = $5356;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $5360 = self.pst;
                                                                                                                        var self = $5360;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $5362 = self.err;
                                                                                                                                var $5363 = self.nam;
                                                                                                                                var $5364 = self.ini;
                                                                                                                                var $5365 = self.idx;
                                                                                                                                var $5366 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($5353, $5362), $5363, $5364, $5365, $5366);
                                                                                                                                var _term$72 = Kind$Term$ref$("Equal.chain");
                                                                                                                                var _term$73 = Kind$Term$app$(_term$72, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$76 = Kind$Term$app$(_term$75, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$77 = Kind$Term$app$(_term$76, $5314);
                                                                                                                                var _term$78 = Kind$Term$app$(_term$77, $5345);
                                                                                                                                var $5367 = Parser$Reply$value$(_reply$pst$71, _term$78);
                                                                                                                                var $5361 = $5367;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5354 = $5361;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $5352 = $5354;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $5346 = $5352;
                                                                                                        break;
                                                                                                };
                                                                                                var $5338 = $5346;
                                                                                                break;
                                                                                        };
                                                                                        var $5336 = $5338;
                                                                                        break;
                                                                                };
                                                                                var $5330 = $5336;
                                                                                break;
                                                                        };
                                                                        var $5323 = $5330;
                                                                        break;
                                                                };
                                                                var $5321 = $5323;
                                                                break;
                                                        };
                                                        var $5315 = $5321;
                                                        break;
                                                };
                                                var $5307 = $5315;
                                                break;
                                        };
                                        var $5305 = $5307;
                                        break;
                                };
                                var $5299 = $5305;
                                break;
                        };
                        var $5292 = $5299;
                        break;
                };
                var $5290 = $5292;
                break;
        };
        return $5290;
    }));
    const Kind$Parser$mirror = Kind$Parser$block("mirror")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5369 = self.err;
                var _reply$7 = Kind$Parser$text$("mirror(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5371 = self.err;
                        var self = $5369;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5373 = self.value;
                                var $5374 = Parser$Reply$error$(Parser$Error$combine$($5373, $5371));
                                var $5372 = $5374;
                                break;
                            case 'Maybe.none':
                                var $5375 = Parser$Reply$error$($5371);
                                var $5372 = $5375;
                                break;
                        };
                        var $5370 = $5372;
                        break;
                    case 'Parser.Reply.value':
                        var $5376 = self.pst;
                        var self = $5376;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5378 = self.err;
                                var $5379 = self.nam;
                                var $5380 = self.ini;
                                var $5381 = self.idx;
                                var $5382 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5369, $5378), $5379, $5380, $5381, $5382);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5384 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5386 = self.err;
                                                var self = $5384;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5388 = self.value;
                                                        var $5389 = Parser$Reply$error$(Parser$Error$combine$($5388, $5386));
                                                        var $5387 = $5389;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5390 = Parser$Reply$error$($5386);
                                                        var $5387 = $5390;
                                                        break;
                                                };
                                                var $5385 = $5387;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5391 = self.pst;
                                                var $5392 = self.val;
                                                var self = $5391;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5394 = self.err;
                                                        var $5395 = self.nam;
                                                        var $5396 = self.ini;
                                                        var $5397 = self.idx;
                                                        var $5398 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5384, $5394), $5395, $5396, $5397, $5398);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5400 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5402 = self.err;
                                                                        var self = $5400;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5404 = self.value;
                                                                                var $5405 = Parser$Reply$error$(Parser$Error$combine$($5404, $5402));
                                                                                var $5403 = $5405;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5406 = Parser$Reply$error$($5402);
                                                                                var $5403 = $5406;
                                                                                break;
                                                                        };
                                                                        var $5401 = $5403;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5407 = self.pst;
                                                                        var self = $5407;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5409 = self.err;
                                                                                var $5410 = self.nam;
                                                                                var $5411 = self.ini;
                                                                                var $5412 = self.idx;
                                                                                var $5413 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5400, $5409), $5410, $5411, $5412, $5413);
                                                                                var _term$44 = Kind$Term$ref$("Equal.mirror");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$hol$(Bits$e));
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, Kind$Term$hol$(Bits$e));
                                                                                var _term$48 = Kind$Term$app$(_term$47, $5392);
                                                                                var $5414 = Parser$Reply$value$(_reply$pst$43, _term$48);
                                                                                var $5408 = $5414;
                                                                                break;
                                                                        };
                                                                        var $5401 = $5408;
                                                                        break;
                                                                };
                                                                var $5399 = $5401;
                                                                break;
                                                        };
                                                        var $5393 = $5399;
                                                        break;
                                                };
                                                var $5385 = $5393;
                                                break;
                                        };
                                        var $5383 = $5385;
                                        break;
                                };
                                var $5377 = $5383;
                                break;
                        };
                        var $5370 = $5377;
                        break;
                };
                var $5368 = $5370;
                break;
        };
        return $5368;
    }));

    function Kind$Name$read$(_str$1) {
        var $5415 = _str$1;
        return $5415;
    };
    const Kind$Name$read = x0 => Kind$Name$read$(x0);
    const Kind$Parser$list = Kind$Parser$block("list")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5417 = self.err;
                var _reply$7 = Kind$Parser$items$("[", Kind$Parser$term, "]")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5419 = self.err;
                        var self = $5417;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5421 = self.value;
                                var $5422 = Parser$Reply$error$(Parser$Error$combine$($5421, $5419));
                                var $5420 = $5422;
                                break;
                            case 'Maybe.none':
                                var $5423 = Parser$Reply$error$($5419);
                                var $5420 = $5423;
                                break;
                        };
                        var $5418 = $5420;
                        break;
                    case 'Parser.Reply.value':
                        var $5424 = self.pst;
                        var $5425 = self.val;
                        var self = $5424;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5427 = self.err;
                                var $5428 = self.nam;
                                var $5429 = self.ini;
                                var $5430 = self.idx;
                                var $5431 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5417, $5427), $5428, $5429, $5430, $5431);
                                var $5432 = Parser$Reply$value$(_reply$pst$15, List$fold$($5425, Kind$Term$app$(Kind$Term$ref$(Kind$Name$read$("List.nil")), Kind$Term$hol$(Bits$e)), (_x$16 => _xs$17 => {
                                    var _term$18 = Kind$Term$ref$(Kind$Name$read$("List.cons"));
                                    var _term$19 = Kind$Term$app$(_term$18, Kind$Term$hol$(Bits$e));
                                    var _term$20 = Kind$Term$app$(_term$19, _x$16);
                                    var _term$21 = Kind$Term$app$(_term$20, _xs$17);
                                    var $5433 = _term$21;
                                    return $5433;
                                })));
                                var $5426 = $5432;
                                break;
                        };
                        var $5418 = $5426;
                        break;
                };
                var $5416 = $5418;
                break;
        };
        return $5416;
    }));
    const Kind$Parser$map = Kind$Parser$block("map")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5435 = self.err;
                var _reply$7 = Kind$Parser$items$("{", (_pst$7 => {
                    var self = _pst$7;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $5438 = self.err;
                            var _reply$13 = Kind$Parser$term(_pst$7);
                            var self = _reply$13;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $5440 = self.err;
                                    var self = $5438;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $5442 = self.value;
                                            var $5443 = Parser$Reply$error$(Parser$Error$combine$($5442, $5440));
                                            var $5441 = $5443;
                                            break;
                                        case 'Maybe.none':
                                            var $5444 = Parser$Reply$error$($5440);
                                            var $5441 = $5444;
                                            break;
                                    };
                                    var $5439 = $5441;
                                    break;
                                case 'Parser.Reply.value':
                                    var $5445 = self.pst;
                                    var $5446 = self.val;
                                    var self = $5445;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5448 = self.err;
                                            var $5449 = self.nam;
                                            var $5450 = self.ini;
                                            var $5451 = self.idx;
                                            var $5452 = self.str;
                                            var _reply$pst$21 = Parser$State$new$(Parser$Error$maybe_combine$($5438, $5448), $5449, $5450, $5451, $5452);
                                            var self = _reply$pst$21;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $5454 = self.err;
                                                    var _reply$27 = Kind$Parser$text$(":", _reply$pst$21);
                                                    var self = _reply$27;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $5456 = self.err;
                                                            var self = $5454;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $5458 = self.value;
                                                                    var $5459 = Parser$Reply$error$(Parser$Error$combine$($5458, $5456));
                                                                    var $5457 = $5459;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $5460 = Parser$Reply$error$($5456);
                                                                    var $5457 = $5460;
                                                                    break;
                                                            };
                                                            var $5455 = $5457;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $5461 = self.pst;
                                                            var self = $5461;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5463 = self.err;
                                                                    var $5464 = self.nam;
                                                                    var $5465 = self.ini;
                                                                    var $5466 = self.idx;
                                                                    var $5467 = self.str;
                                                                    var _reply$pst$35 = Parser$State$new$(Parser$Error$maybe_combine$($5454, $5463), $5464, $5465, $5466, $5467);
                                                                    var self = _reply$pst$35;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $5469 = self.err;
                                                                            var _reply$41 = Kind$Parser$term(_reply$pst$35);
                                                                            var self = _reply$41;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $5471 = self.err;
                                                                                    var self = $5469;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $5473 = self.value;
                                                                                            var $5474 = Parser$Reply$error$(Parser$Error$combine$($5473, $5471));
                                                                                            var $5472 = $5474;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $5475 = Parser$Reply$error$($5471);
                                                                                            var $5472 = $5475;
                                                                                            break;
                                                                                    };
                                                                                    var $5470 = $5472;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $5476 = self.pst;
                                                                                    var $5477 = self.val;
                                                                                    var self = $5476;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5479 = self.err;
                                                                                            var $5480 = self.nam;
                                                                                            var $5481 = self.ini;
                                                                                            var $5482 = self.idx;
                                                                                            var $5483 = self.str;
                                                                                            var _reply$pst$49 = Parser$State$new$(Parser$Error$maybe_combine$($5469, $5479), $5480, $5481, $5482, $5483);
                                                                                            var $5484 = Parser$Reply$value$(_reply$pst$49, Pair$new$($5446, $5477));
                                                                                            var $5478 = $5484;
                                                                                            break;
                                                                                    };
                                                                                    var $5470 = $5478;
                                                                                    break;
                                                                            };
                                                                            var $5468 = $5470;
                                                                            break;
                                                                    };
                                                                    var $5462 = $5468;
                                                                    break;
                                                            };
                                                            var $5455 = $5462;
                                                            break;
                                                    };
                                                    var $5453 = $5455;
                                                    break;
                                            };
                                            var $5447 = $5453;
                                            break;
                                    };
                                    var $5439 = $5447;
                                    break;
                            };
                            var $5437 = $5439;
                            break;
                    };
                    return $5437;
                }), "}")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5485 = self.err;
                        var self = $5435;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5487 = self.value;
                                var $5488 = Parser$Reply$error$(Parser$Error$combine$($5487, $5485));
                                var $5486 = $5488;
                                break;
                            case 'Maybe.none':
                                var $5489 = Parser$Reply$error$($5485);
                                var $5486 = $5489;
                                break;
                        };
                        var $5436 = $5486;
                        break;
                    case 'Parser.Reply.value':
                        var $5490 = self.pst;
                        var $5491 = self.val;
                        var self = $5490;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5493 = self.err;
                                var $5494 = self.nam;
                                var $5495 = self.ini;
                                var $5496 = self.idx;
                                var $5497 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5435, $5493), $5494, $5495, $5496, $5497);
                                var _list$16 = List$fold$($5491, Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e)), (_kv$16 => _xs$17 => {
                                    var self = _kv$16;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $5500 = self.fst;
                                            var $5501 = self.snd;
                                            var _pair$20 = Kind$Term$ref$("Pair.new");
                                            var _pair$21 = Kind$Term$app$(_pair$20, Kind$Term$hol$(Bits$e));
                                            var _pair$22 = Kind$Term$app$(_pair$21, Kind$Term$hol$(Bits$e));
                                            var _pair$23 = Kind$Term$app$(_pair$22, $5500);
                                            var _pair$24 = Kind$Term$app$(_pair$23, $5501);
                                            var _term$25 = Kind$Term$ref$("List.cons");
                                            var _term$26 = Kind$Term$app$(_term$25, Kind$Term$hol$(Bits$e));
                                            var _term$27 = Kind$Term$app$(_term$26, _pair$24);
                                            var _term$28 = Kind$Term$app$(_term$27, _xs$17);
                                            var $5502 = _term$28;
                                            var $5499 = $5502;
                                            break;
                                    };
                                    return $5499;
                                }));
                                var _term$17 = Kind$Term$ref$("Map.from_list");
                                var _term$18 = Kind$Term$app$(_term$17, Kind$Term$hol$(Bits$e));
                                var _term$19 = Kind$Term$app$(_term$18, _list$16);
                                var $5498 = Parser$Reply$value$(_reply$pst$15, _term$19);
                                var $5492 = $5498;
                                break;
                        };
                        var $5436 = $5492;
                        break;
                };
                var $5434 = $5436;
                break;
        };
        return $5434;
    }));

    function Kind$Parser$log$(_body$1) {
        var $5503 = Kind$Parser$block("log")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5505 = self.err;
                    var _reply$8 = Kind$Parser$text$("log(", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5507 = self.err;
                            var self = $5505;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5509 = self.value;
                                    var $5510 = Parser$Reply$error$(Parser$Error$combine$($5509, $5507));
                                    var $5508 = $5510;
                                    break;
                                case 'Maybe.none':
                                    var $5511 = Parser$Reply$error$($5507);
                                    var $5508 = $5511;
                                    break;
                            };
                            var $5506 = $5508;
                            break;
                        case 'Parser.Reply.value':
                            var $5512 = self.pst;
                            var self = $5512;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5514 = self.err;
                                    var $5515 = self.nam;
                                    var $5516 = self.ini;
                                    var $5517 = self.idx;
                                    var $5518 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5505, $5514), $5515, $5516, $5517, $5518);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5520 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5522 = self.err;
                                                    var self = $5520;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5524 = self.value;
                                                            var $5525 = Parser$Reply$error$(Parser$Error$combine$($5524, $5522));
                                                            var $5523 = $5525;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5526 = Parser$Reply$error$($5522);
                                                            var $5523 = $5526;
                                                            break;
                                                    };
                                                    var $5521 = $5523;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5527 = self.pst;
                                                    var $5528 = self.val;
                                                    var self = $5527;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5530 = self.err;
                                                            var $5531 = self.nam;
                                                            var $5532 = self.ini;
                                                            var $5533 = self.idx;
                                                            var $5534 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5520, $5530), $5531, $5532, $5533, $5534);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5536 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$(")", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5538 = self.err;
                                                                            var self = $5536;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5540 = self.value;
                                                                                    var $5541 = Parser$Reply$error$(Parser$Error$combine$($5540, $5538));
                                                                                    var $5539 = $5541;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5542 = Parser$Reply$error$($5538);
                                                                                    var $5539 = $5542;
                                                                                    break;
                                                                            };
                                                                            var $5537 = $5539;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5543 = self.pst;
                                                                            var self = $5543;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5545 = self.err;
                                                                                    var $5546 = self.nam;
                                                                                    var $5547 = self.ini;
                                                                                    var $5548 = self.idx;
                                                                                    var $5549 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5536, $5545), $5546, $5547, $5548, $5549);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5551 = self.err;
                                                                                            var _reply$50 = _body$1(Unit$new)(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $5553 = self.err;
                                                                                                    var self = $5551;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $5555 = self.value;
                                                                                                            var $5556 = Parser$Reply$error$(Parser$Error$combine$($5555, $5553));
                                                                                                            var $5554 = $5556;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $5557 = Parser$Reply$error$($5553);
                                                                                                            var $5554 = $5557;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5552 = $5554;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $5558 = self.pst;
                                                                                                    var $5559 = self.val;
                                                                                                    var self = $5558;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $5561 = self.err;
                                                                                                            var $5562 = self.nam;
                                                                                                            var $5563 = self.ini;
                                                                                                            var $5564 = self.idx;
                                                                                                            var $5565 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($5551, $5561), $5562, $5563, $5564, $5565);
                                                                                                            var _term$59 = Kind$Term$ref$("Debug.log");
                                                                                                            var _term$60 = Kind$Term$app$(_term$59, Kind$Term$hol$(Bits$e));
                                                                                                            var _term$61 = Kind$Term$app$(_term$60, $5528);
                                                                                                            var _term$62 = Kind$Term$app$(_term$61, Kind$Term$lam$("", (_x$62 => {
                                                                                                                var $5567 = $5559;
                                                                                                                return $5567;
                                                                                                            })));
                                                                                                            var $5566 = Parser$Reply$value$(_reply$pst$58, _term$62);
                                                                                                            var $5560 = $5566;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5552 = $5560;
                                                                                                    break;
                                                                                            };
                                                                                            var $5550 = $5552;
                                                                                            break;
                                                                                    };
                                                                                    var $5544 = $5550;
                                                                                    break;
                                                                            };
                                                                            var $5537 = $5544;
                                                                            break;
                                                                    };
                                                                    var $5535 = $5537;
                                                                    break;
                                                            };
                                                            var $5529 = $5535;
                                                            break;
                                                    };
                                                    var $5521 = $5529;
                                                    break;
                                            };
                                            var $5519 = $5521;
                                            break;
                                    };
                                    var $5513 = $5519;
                                    break;
                            };
                            var $5506 = $5513;
                            break;
                    };
                    var $5504 = $5506;
                    break;
            };
            return $5504;
        }));
        return $5503;
    };
    const Kind$Parser$log = x0 => Kind$Parser$log$(x0);

    function Char$to_upper$(_char$1) {
        var self = ((_char$1 >= 97) && (_char$1 <= 122));
        if (self) {
            var $5569 = ((_char$1 - 32) & 0xFFFF);
            var $5568 = $5569;
        } else {
            var $5570 = _char$1;
            var $5568 = $5570;
        };
        return $5568;
    };
    const Char$to_upper = x0 => Char$to_upper$(x0);

    function String$to_upper$(_str$1) {
        var $5571 = String$map$(Char$to_upper, _str$1);
        return $5571;
    };
    const String$to_upper = x0 => String$to_upper$(x0);

    function String$is_upper$(_str$1) {
        var $5572 = (String$to_upper$(_str$1) === _str$1);
        return $5572;
    };
    const String$is_upper = x0 => String$is_upper$(x0);

    function String$take$(_n$1, _xs$2) {
        var self = _xs$2;
        if (self.length === 0) {
            var $5574 = String$nil;
            var $5573 = $5574;
        } else {
            var $5575 = self.charCodeAt(0);
            var $5576 = self.slice(1);
            var self = _n$1;
            if (self === 0n) {
                var $5578 = String$nil;
                var $5577 = $5578;
            } else {
                var $5579 = (self - 1n);
                var $5580 = String$cons$($5575, String$take$($5579, $5576));
                var $5577 = $5580;
            };
            var $5573 = $5577;
        };
        return $5573;
    };
    const String$take = x0 => x1 => String$take$(x0, x1);
    const Nat$sub = a0 => a1 => (a0 - a1 <= 0n ? 0n : a0 - a1);

    function String$slice$(_i$1, _j$2, _xs$3) {
        var $5581 = String$take$((_j$2 - _i$1 <= 0n ? 0n : _j$2 - _i$1), String$drop$(_i$1, _xs$3));
        return $5581;
    };
    const String$slice = x0 => x1 => x2 => String$slice$(x0, x1, x2);

    function Kind$Term$unroll_nat$(_natx$1) {
        var self = _natx$1;
        if (self === 0n) {
            var $5583 = Kind$Term$ref$(Kind$Name$read$("Nat.zero"));
            var $5582 = $5583;
        } else {
            var $5584 = (self - 1n);
            var _func$3 = Kind$Term$ref$(Kind$Name$read$("Nat.succ"));
            var _argm$4 = Kind$Term$nat$($5584);
            var $5585 = Kind$Term$app$(_func$3, _argm$4);
            var $5582 = $5585;
        };
        return $5582;
    };
    const Kind$Term$unroll_nat = x0 => Kind$Term$unroll_nat$(x0);

    function Word$to_bits$(_a$2) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $5587 = self.pred;
                var $5588 = (Word$to_bits$($5587) + '0');
                var $5586 = $5588;
                break;
            case 'Word.i':
                var $5589 = self.pred;
                var $5590 = (Word$to_bits$($5589) + '1');
                var $5586 = $5590;
                break;
            case 'Word.e':
                var $5591 = Bits$e;
                var $5586 = $5591;
                break;
        };
        return $5586;
    };
    const Word$to_bits = x0 => Word$to_bits$(x0);
    const U16$to_bits = a0 => (u16_to_bits(a0));

    function Kind$Term$unroll_chr$bits$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $5593 = self.slice(0, -1);
                var $5594 = Kind$Term$app$(Kind$Term$ref$(Kind$Name$read$("Bits.o")), Kind$Term$unroll_chr$bits$($5593));
                var $5592 = $5594;
                break;
            case 'i':
                var $5595 = self.slice(0, -1);
                var $5596 = Kind$Term$app$(Kind$Term$ref$(Kind$Name$read$("Bits.i")), Kind$Term$unroll_chr$bits$($5595));
                var $5592 = $5596;
                break;
            case 'e':
                var $5597 = Kind$Term$ref$(Kind$Name$read$("Bits.e"));
                var $5592 = $5597;
                break;
        };
        return $5592;
    };
    const Kind$Term$unroll_chr$bits = x0 => Kind$Term$unroll_chr$bits$(x0);

    function Kind$Term$unroll_chr$(_chrx$1) {
        var _bits$2 = (u16_to_bits(_chrx$1));
        var _term$3 = Kind$Term$ref$(Kind$Name$read$("Word.from_bits"));
        var _term$4 = Kind$Term$app$(_term$3, Kind$Term$nat$(16n));
        var _term$5 = Kind$Term$app$(_term$4, Kind$Term$unroll_chr$bits$(_bits$2));
        var _term$6 = Kind$Term$app$(Kind$Term$ref$(Kind$Name$read$("U16.new")), _term$5);
        var $5598 = _term$6;
        return $5598;
    };
    const Kind$Term$unroll_chr = x0 => Kind$Term$unroll_chr$(x0);

    function Kind$Term$unroll_str$(_strx$1) {
        var self = _strx$1;
        if (self.length === 0) {
            var $5600 = Kind$Term$ref$(Kind$Name$read$("String.nil"));
            var $5599 = $5600;
        } else {
            var $5601 = self.charCodeAt(0);
            var $5602 = self.slice(1);
            var _char$4 = Kind$Term$chr$($5601);
            var _term$5 = Kind$Term$ref$(Kind$Name$read$("String.cons"));
            var _term$6 = Kind$Term$app$(_term$5, _char$4);
            var _term$7 = Kind$Term$app$(_term$6, Kind$Term$str$($5602));
            var $5603 = _term$7;
            var $5599 = $5603;
        };
        return $5599;
    };
    const Kind$Term$unroll_str = x0 => Kind$Term$unroll_str$(x0);

    function Kind$Term$reduce$(_term$1, _defs$2) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $5605 = self.name;
                var self = Kind$Map$get$($5605, _defs$2);
                switch (self._) {
                    case 'Maybe.some':
                        var $5607 = self.value;
                        var self = $5607;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $5609 = self.term;
                                var $5610 = Kind$Term$reduce$($5609, _defs$2);
                                var $5608 = $5610;
                                break;
                        };
                        var $5606 = $5608;
                        break;
                    case 'Maybe.none':
                        var $5611 = Kind$Term$ref$($5605);
                        var $5606 = $5611;
                        break;
                };
                var $5604 = $5606;
                break;
            case 'Kind.Term.app':
                var $5612 = self.func;
                var $5613 = self.argm;
                var _func$5 = Kind$Term$reduce$($5612, _defs$2);
                var self = _func$5;
                switch (self._) {
                    case 'Kind.Term.lam':
                        var $5615 = self.body;
                        var $5616 = Kind$Term$reduce$($5615($5613), _defs$2);
                        var $5614 = $5616;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $5617 = _term$1;
                        var $5614 = $5617;
                        break;
                };
                var $5604 = $5614;
                break;
            case 'Kind.Term.let':
                var $5618 = self.expr;
                var $5619 = self.body;
                var $5620 = Kind$Term$reduce$($5619($5618), _defs$2);
                var $5604 = $5620;
                break;
            case 'Kind.Term.def':
                var $5621 = self.expr;
                var $5622 = self.body;
                var $5623 = Kind$Term$reduce$($5622($5621), _defs$2);
                var $5604 = $5623;
                break;
            case 'Kind.Term.ann':
                var $5624 = self.term;
                var $5625 = Kind$Term$reduce$($5624, _defs$2);
                var $5604 = $5625;
                break;
            case 'Kind.Term.nat':
                var $5626 = self.natx;
                var $5627 = Kind$Term$reduce$(Kind$Term$unroll_nat$($5626), _defs$2);
                var $5604 = $5627;
                break;
            case 'Kind.Term.chr':
                var $5628 = self.chrx;
                var $5629 = Kind$Term$reduce$(Kind$Term$unroll_chr$($5628), _defs$2);
                var $5604 = $5629;
                break;
            case 'Kind.Term.str':
                var $5630 = self.strx;
                var $5631 = Kind$Term$reduce$(Kind$Term$unroll_str$($5630), _defs$2);
                var $5604 = $5631;
                break;
            case 'Kind.Term.ori':
                var $5632 = self.expr;
                var $5633 = Kind$Term$reduce$($5632, _defs$2);
                var $5604 = $5633;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $5634 = _term$1;
                var $5604 = $5634;
                break;
        };
        return $5604;
    };
    const Kind$Term$reduce = x0 => x1 => Kind$Term$reduce$(x0, x1);

    function Kind$Term$cse$(_path$1, _expr$2, _name$3, _with$4, _cses$5, _moti$6) {
        var $5635 = ({
            _: 'Kind.Term.cse',
            'path': _path$1,
            'expr': _expr$2,
            'name': _name$3,
            'with': _with$4,
            'cses': _cses$5,
            'moti': _moti$6
        });
        return $5635;
    };
    const Kind$Term$cse = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Term$cse$(x0, x1, x2, x3, x4, x5);

    function Kind$Parser$open$(_body$1) {
        var $5636 = Kind$Parser$block("open")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5638 = self.err;
                    var _reply$8 = Kind$Parser$text$("open ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5640 = self.err;
                            var self = $5638;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5642 = self.value;
                                    var $5643 = Parser$Reply$error$(Parser$Error$combine$($5642, $5640));
                                    var $5641 = $5643;
                                    break;
                                case 'Maybe.none':
                                    var $5644 = Parser$Reply$error$($5640);
                                    var $5641 = $5644;
                                    break;
                            };
                            var $5639 = $5641;
                            break;
                        case 'Parser.Reply.value':
                            var $5645 = self.pst;
                            var self = $5645;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5647 = self.err;
                                    var $5648 = self.nam;
                                    var $5649 = self.ini;
                                    var $5650 = self.idx;
                                    var $5651 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5638, $5647), $5648, $5649, $5650, $5651);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5653 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5655 = self.err;
                                                    var self = $5653;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5657 = self.value;
                                                            var $5658 = Parser$Reply$error$(Parser$Error$combine$($5657, $5655));
                                                            var $5656 = $5658;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5659 = Parser$Reply$error$($5655);
                                                            var $5656 = $5659;
                                                            break;
                                                    };
                                                    var $5654 = $5656;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5660 = self.pst;
                                                    var $5661 = self.val;
                                                    var self = $5660;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5663 = self.err;
                                                            var $5664 = self.nam;
                                                            var $5665 = self.ini;
                                                            var $5666 = self.idx;
                                                            var $5667 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5653, $5663), $5664, $5665, $5666, $5667);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5669 = self.err;
                                                                    var _reply$36 = Parser$maybe$((_pst$36 => {
                                                                        var self = _pst$36;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5672 = self.err;
                                                                                var _reply$42 = Kind$Parser$text$("as", _pst$36);
                                                                                var self = _reply$42;
                                                                                switch (self._) {
                                                                                    case 'Parser.Reply.error':
                                                                                        var $5674 = self.err;
                                                                                        var self = $5672;
                                                                                        switch (self._) {
                                                                                            case 'Maybe.some':
                                                                                                var $5676 = self.value;
                                                                                                var $5677 = Parser$Reply$error$(Parser$Error$combine$($5676, $5674));
                                                                                                var $5675 = $5677;
                                                                                                break;
                                                                                            case 'Maybe.none':
                                                                                                var $5678 = Parser$Reply$error$($5674);
                                                                                                var $5675 = $5678;
                                                                                                break;
                                                                                        };
                                                                                        var $5673 = $5675;
                                                                                        break;
                                                                                    case 'Parser.Reply.value':
                                                                                        var $5679 = self.pst;
                                                                                        var self = $5679;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $5681 = self.err;
                                                                                                var $5682 = self.nam;
                                                                                                var $5683 = self.ini;
                                                                                                var $5684 = self.idx;
                                                                                                var $5685 = self.str;
                                                                                                var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($5672, $5681), $5682, $5683, $5684, $5685);
                                                                                                var $5686 = Kind$Parser$name1$(_reply$pst$50);
                                                                                                var $5680 = $5686;
                                                                                                break;
                                                                                        };
                                                                                        var $5673 = $5680;
                                                                                        break;
                                                                                };
                                                                                var $5671 = $5673;
                                                                                break;
                                                                        };
                                                                        return $5671;
                                                                    }), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5687 = self.err;
                                                                            var self = $5669;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5689 = self.value;
                                                                                    var $5690 = Parser$Reply$error$(Parser$Error$combine$($5689, $5687));
                                                                                    var $5688 = $5690;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5691 = Parser$Reply$error$($5687);
                                                                                    var $5688 = $5691;
                                                                                    break;
                                                                            };
                                                                            var $5670 = $5688;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5692 = self.pst;
                                                                            var $5693 = self.val;
                                                                            var self = $5692;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5695 = self.err;
                                                                                    var $5696 = self.nam;
                                                                                    var $5697 = self.ini;
                                                                                    var $5698 = self.idx;
                                                                                    var $5699 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5669, $5695), $5696, $5697, $5698, $5699);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5701 = self.err;
                                                                                            var _reply$50 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $5703 = self.err;
                                                                                                    var self = $5701;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $5705 = self.value;
                                                                                                            var $5706 = Parser$Reply$error$(Parser$Error$combine$($5705, $5703));
                                                                                                            var $5704 = $5706;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $5707 = Parser$Reply$error$($5703);
                                                                                                            var $5704 = $5707;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5702 = $5704;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $5708 = self.pst;
                                                                                                    var self = $5708;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $5710 = self.err;
                                                                                                            var $5711 = self.nam;
                                                                                                            var $5712 = self.ini;
                                                                                                            var $5713 = self.idx;
                                                                                                            var $5714 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($5701, $5710), $5711, $5712, $5713, $5714);
                                                                                                            var self = $5693;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $5716 = self.value;
                                                                                                                    var $5717 = $5716;
                                                                                                                    var _name$59 = $5717;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var self = Kind$Term$reduce$($5661, Kind$Map$new);
                                                                                                                    switch (self._) {
                                                                                                                        case 'Kind.Term.var':
                                                                                                                            var $5719 = self.name;
                                                                                                                            var $5720 = $5719;
                                                                                                                            var $5718 = $5720;
                                                                                                                            break;
                                                                                                                        case 'Kind.Term.ref':
                                                                                                                            var $5721 = self.name;
                                                                                                                            var $5722 = $5721;
                                                                                                                            var $5718 = $5722;
                                                                                                                            break;
                                                                                                                        case 'Kind.Term.typ':
                                                                                                                        case 'Kind.Term.all':
                                                                                                                        case 'Kind.Term.lam':
                                                                                                                        case 'Kind.Term.app':
                                                                                                                        case 'Kind.Term.let':
                                                                                                                        case 'Kind.Term.def':
                                                                                                                        case 'Kind.Term.ann':
                                                                                                                        case 'Kind.Term.gol':
                                                                                                                        case 'Kind.Term.hol':
                                                                                                                        case 'Kind.Term.nat':
                                                                                                                        case 'Kind.Term.chr':
                                                                                                                        case 'Kind.Term.str':
                                                                                                                        case 'Kind.Term.num':
                                                                                                                        case 'Kind.Term.cse':
                                                                                                                        case 'Kind.Term.new':
                                                                                                                        case 'Kind.Term.get':
                                                                                                                        case 'Kind.Term.set':
                                                                                                                        case 'Kind.Term.ope':
                                                                                                                        case 'Kind.Term.ori':
                                                                                                                            var $5723 = Kind$Name$read$("self");
                                                                                                                            var $5718 = $5723;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var _name$59 = $5718;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var _wyth$60 = List$nil;
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $5724 = self.err;
                                                                                                                    var _reply$66 = _body$1(Unit$new)(_reply$pst$58);
                                                                                                                    var self = _reply$66;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $5726 = self.err;
                                                                                                                            var self = $5724;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $5728 = self.value;
                                                                                                                                    var $5729 = Parser$Reply$error$(Parser$Error$combine$($5728, $5726));
                                                                                                                                    var $5727 = $5729;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $5730 = Parser$Reply$error$($5726);
                                                                                                                                    var $5727 = $5730;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $5725 = $5727;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $5731 = self.pst;
                                                                                                                            var $5732 = self.val;
                                                                                                                            var self = $5731;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $5734 = self.err;
                                                                                                                                    var $5735 = self.nam;
                                                                                                                                    var $5736 = self.ini;
                                                                                                                                    var $5737 = self.idx;
                                                                                                                                    var $5738 = self.str;
                                                                                                                                    var _reply$pst$74 = Parser$State$new$(Parser$Error$maybe_combine$($5724, $5734), $5735, $5736, $5737, $5738);
                                                                                                                                    var _cses$75 = Kind$Map$set$("_", $5732, Kind$Map$new);
                                                                                                                                    var _moti$76 = Maybe$some$(Kind$Term$hol$(Bits$e));
                                                                                                                                    var $5739 = Parser$Reply$value$(_reply$pst$74, Kind$Term$cse$(Bits$e, $5661, _name$59, _wyth$60, _cses$75, _moti$76));
                                                                                                                                    var $5733 = $5739;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $5725 = $5733;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $5715 = $5725;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $5709 = $5715;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5702 = $5709;
                                                                                                    break;
                                                                                            };
                                                                                            var $5700 = $5702;
                                                                                            break;
                                                                                    };
                                                                                    var $5694 = $5700;
                                                                                    break;
                                                                            };
                                                                            var $5670 = $5694;
                                                                            break;
                                                                    };
                                                                    var $5668 = $5670;
                                                                    break;
                                                            };
                                                            var $5662 = $5668;
                                                            break;
                                                    };
                                                    var $5654 = $5662;
                                                    break;
                                            };
                                            var $5652 = $5654;
                                            break;
                                    };
                                    var $5646 = $5652;
                                    break;
                            };
                            var $5639 = $5646;
                            break;
                    };
                    var $5637 = $5639;
                    break;
            };
            return $5637;
        }));
        return $5636;
    };
    const Kind$Parser$open = x0 => Kind$Parser$open$(x0);

    function Kind$Parser$do$statements$(_monad_name$1) {
        var $5740 = Parser$choice(List$cons$(Kind$Parser$block("do-get")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5742 = self.err;
                    var _reply$8 = Parser$choice$(List$cons$(Kind$Parser$text("var "), List$cons$(Kind$Parser$text("get "), List$nil)), _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5744 = self.err;
                            var self = $5742;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5746 = self.value;
                                    var $5747 = Parser$Reply$error$(Parser$Error$combine$($5746, $5744));
                                    var $5745 = $5747;
                                    break;
                                case 'Maybe.none':
                                    var $5748 = Parser$Reply$error$($5744);
                                    var $5745 = $5748;
                                    break;
                            };
                            var $5743 = $5745;
                            break;
                        case 'Parser.Reply.value':
                            var $5749 = self.pst;
                            var self = $5749;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5751 = self.err;
                                    var $5752 = self.nam;
                                    var $5753 = self.ini;
                                    var $5754 = self.idx;
                                    var $5755 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5742, $5751), $5752, $5753, $5754, $5755);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5757 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5759 = self.err;
                                                    var self = $5757;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5761 = self.value;
                                                            var $5762 = Parser$Reply$error$(Parser$Error$combine$($5761, $5759));
                                                            var $5760 = $5762;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5763 = Parser$Reply$error$($5759);
                                                            var $5760 = $5763;
                                                            break;
                                                    };
                                                    var $5758 = $5760;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5764 = self.pst;
                                                    var $5765 = self.val;
                                                    var self = $5764;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5767 = self.err;
                                                            var $5768 = self.nam;
                                                            var $5769 = self.ini;
                                                            var $5770 = self.idx;
                                                            var $5771 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5757, $5767), $5768, $5769, $5770, $5771);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5773 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5775 = self.err;
                                                                            var self = $5773;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5777 = self.value;
                                                                                    var $5778 = Parser$Reply$error$(Parser$Error$combine$($5777, $5775));
                                                                                    var $5776 = $5778;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5779 = Parser$Reply$error$($5775);
                                                                                    var $5776 = $5779;
                                                                                    break;
                                                                            };
                                                                            var $5774 = $5776;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5780 = self.pst;
                                                                            var self = $5780;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5782 = self.err;
                                                                                    var $5783 = self.nam;
                                                                                    var $5784 = self.ini;
                                                                                    var $5785 = self.idx;
                                                                                    var $5786 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5773, $5782), $5783, $5784, $5785, $5786);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5788 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $5790 = self.err;
                                                                                                    var self = $5788;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $5792 = self.value;
                                                                                                            var $5793 = Parser$Reply$error$(Parser$Error$combine$($5792, $5790));
                                                                                                            var $5791 = $5793;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $5794 = Parser$Reply$error$($5790);
                                                                                                            var $5791 = $5794;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5789 = $5791;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $5795 = self.pst;
                                                                                                    var $5796 = self.val;
                                                                                                    var self = $5795;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $5798 = self.err;
                                                                                                            var $5799 = self.nam;
                                                                                                            var $5800 = self.ini;
                                                                                                            var $5801 = self.idx;
                                                                                                            var $5802 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($5788, $5798), $5799, $5800, $5801, $5802);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $5804 = self.err;
                                                                                                                    var _reply$64 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $5806 = self.err;
                                                                                                                            var self = $5804;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $5808 = self.value;
                                                                                                                                    var $5809 = Parser$Reply$error$(Parser$Error$combine$($5808, $5806));
                                                                                                                                    var $5807 = $5809;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $5810 = Parser$Reply$error$($5806);
                                                                                                                                    var $5807 = $5810;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $5805 = $5807;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $5811 = self.pst;
                                                                                                                            var self = $5811;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $5813 = self.err;
                                                                                                                                    var $5814 = self.nam;
                                                                                                                                    var $5815 = self.ini;
                                                                                                                                    var $5816 = self.idx;
                                                                                                                                    var $5817 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($5804, $5813), $5814, $5815, $5816, $5817);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $5819 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$do$statements$(_monad_name$1)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $5821 = self.err;
                                                                                                                                                    var self = $5819;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $5823 = self.value;
                                                                                                                                                            var $5824 = Parser$Reply$error$(Parser$Error$combine$($5823, $5821));
                                                                                                                                                            var $5822 = $5824;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $5825 = Parser$Reply$error$($5821);
                                                                                                                                                            var $5822 = $5825;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $5820 = $5822;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $5826 = self.pst;
                                                                                                                                                    var $5827 = self.val;
                                                                                                                                                    var self = $5826;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $5829 = self.err;
                                                                                                                                                            var $5830 = self.nam;
                                                                                                                                                            var $5831 = self.ini;
                                                                                                                                                            var $5832 = self.idx;
                                                                                                                                                            var $5833 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($5819, $5829), $5830, $5831, $5832, $5833);
                                                                                                                                                            var _term$87 = Kind$Term$app$(Kind$Term$ref$("Monad.bind"), Kind$Term$ref$(_monad_name$1));
                                                                                                                                                            var _term$88 = Kind$Term$app$(_term$87, Kind$Term$ref$((_monad_name$1 + ".monad")));
                                                                                                                                                            var _term$89 = Kind$Term$app$(_term$88, Kind$Term$hol$(Bits$e));
                                                                                                                                                            var _term$90 = Kind$Term$app$(_term$89, Kind$Term$hol$(Bits$e));
                                                                                                                                                            var _term$91 = Kind$Term$app$(_term$90, $5796);
                                                                                                                                                            var _term$92 = Kind$Term$app$(_term$91, Kind$Term$lam$($5765, (_x$92 => {
                                                                                                                                                                var $5835 = $5827;
                                                                                                                                                                return $5835;
                                                                                                                                                            })));
                                                                                                                                                            var $5834 = Parser$Reply$value$(_reply$pst$86, _term$92);
                                                                                                                                                            var $5828 = $5834;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $5820 = $5828;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $5818 = $5820;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $5812 = $5818;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $5805 = $5812;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $5803 = $5805;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $5797 = $5803;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5789 = $5797;
                                                                                                    break;
                                                                                            };
                                                                                            var $5787 = $5789;
                                                                                            break;
                                                                                    };
                                                                                    var $5781 = $5787;
                                                                                    break;
                                                                            };
                                                                            var $5774 = $5781;
                                                                            break;
                                                                    };
                                                                    var $5772 = $5774;
                                                                    break;
                                                            };
                                                            var $5766 = $5772;
                                                            break;
                                                    };
                                                    var $5758 = $5766;
                                                    break;
                                            };
                                            var $5756 = $5758;
                                            break;
                                    };
                                    var $5750 = $5756;
                                    break;
                            };
                            var $5743 = $5750;
                            break;
                    };
                    var $5741 = $5743;
                    break;
            };
            return $5741;
        })), List$cons$(Kind$Parser$block("do-return")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5837 = self.err;
                    var _reply$8 = Kind$Parser$text$("return ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5839 = self.err;
                            var self = $5837;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5841 = self.value;
                                    var $5842 = Parser$Reply$error$(Parser$Error$combine$($5841, $5839));
                                    var $5840 = $5842;
                                    break;
                                case 'Maybe.none':
                                    var $5843 = Parser$Reply$error$($5839);
                                    var $5840 = $5843;
                                    break;
                            };
                            var $5838 = $5840;
                            break;
                        case 'Parser.Reply.value':
                            var $5844 = self.pst;
                            var self = $5844;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5846 = self.err;
                                    var $5847 = self.nam;
                                    var $5848 = self.ini;
                                    var $5849 = self.idx;
                                    var $5850 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5837, $5846), $5847, $5848, $5849, $5850);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5852 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5854 = self.err;
                                                    var self = $5852;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5856 = self.value;
                                                            var $5857 = Parser$Reply$error$(Parser$Error$combine$($5856, $5854));
                                                            var $5855 = $5857;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5858 = Parser$Reply$error$($5854);
                                                            var $5855 = $5858;
                                                            break;
                                                    };
                                                    var $5853 = $5855;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5859 = self.pst;
                                                    var $5860 = self.val;
                                                    var self = $5859;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5862 = self.err;
                                                            var $5863 = self.nam;
                                                            var $5864 = self.ini;
                                                            var $5865 = self.idx;
                                                            var $5866 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5852, $5862), $5863, $5864, $5865, $5866);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5868 = self.err;
                                                                    var _reply$36 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5870 = self.err;
                                                                            var self = $5868;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5872 = self.value;
                                                                                    var $5873 = Parser$Reply$error$(Parser$Error$combine$($5872, $5870));
                                                                                    var $5871 = $5873;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5874 = Parser$Reply$error$($5870);
                                                                                    var $5871 = $5874;
                                                                                    break;
                                                                            };
                                                                            var $5869 = $5871;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5875 = self.pst;
                                                                            var self = $5875;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5877 = self.err;
                                                                                    var $5878 = self.nam;
                                                                                    var $5879 = self.ini;
                                                                                    var $5880 = self.idx;
                                                                                    var $5881 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5868, $5877), $5878, $5879, $5880, $5881);
                                                                                    var _term$45 = Kind$Term$app$(Kind$Term$ref$("Monad.pure"), Kind$Term$ref$(_monad_name$1));
                                                                                    var _term$46 = Kind$Term$app$(_term$45, Kind$Term$ref$((_monad_name$1 + ".monad")));
                                                                                    var _term$47 = Kind$Term$app$(_term$46, Kind$Term$hol$(Bits$e));
                                                                                    var _term$48 = Kind$Term$app$(_term$47, $5860);
                                                                                    var $5882 = Parser$Reply$value$(_reply$pst$44, _term$48);
                                                                                    var $5876 = $5882;
                                                                                    break;
                                                                            };
                                                                            var $5869 = $5876;
                                                                            break;
                                                                    };
                                                                    var $5867 = $5869;
                                                                    break;
                                                            };
                                                            var $5861 = $5867;
                                                            break;
                                                    };
                                                    var $5853 = $5861;
                                                    break;
                                            };
                                            var $5851 = $5853;
                                            break;
                                    };
                                    var $5845 = $5851;
                                    break;
                            };
                            var $5838 = $5845;
                            break;
                    };
                    var $5836 = $5838;
                    break;
            };
            return $5836;
        })), List$cons$(Kind$Parser$block("do-for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5884 = self.err;
                    var _reply$8 = Kind$Parser$text$("for ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5886 = self.err;
                            var self = $5884;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5888 = self.value;
                                    var $5889 = Parser$Reply$error$(Parser$Error$combine$($5888, $5886));
                                    var $5887 = $5889;
                                    break;
                                case 'Maybe.none':
                                    var $5890 = Parser$Reply$error$($5886);
                                    var $5887 = $5890;
                                    break;
                            };
                            var $5885 = $5887;
                            break;
                        case 'Parser.Reply.value':
                            var $5891 = self.pst;
                            var self = $5891;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5893 = self.err;
                                    var $5894 = self.nam;
                                    var $5895 = self.ini;
                                    var $5896 = self.idx;
                                    var $5897 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5884, $5893), $5894, $5895, $5896, $5897);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5899 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5901 = self.err;
                                                    var self = $5899;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5903 = self.value;
                                                            var $5904 = Parser$Reply$error$(Parser$Error$combine$($5903, $5901));
                                                            var $5902 = $5904;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5905 = Parser$Reply$error$($5901);
                                                            var $5902 = $5905;
                                                            break;
                                                    };
                                                    var $5900 = $5902;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5906 = self.pst;
                                                    var $5907 = self.val;
                                                    var self = $5906;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5909 = self.err;
                                                            var $5910 = self.nam;
                                                            var $5911 = self.ini;
                                                            var $5912 = self.idx;
                                                            var $5913 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5899, $5909), $5910, $5911, $5912, $5913);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5915 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("from", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5917 = self.err;
                                                                            var self = $5915;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5919 = self.value;
                                                                                    var $5920 = Parser$Reply$error$(Parser$Error$combine$($5919, $5917));
                                                                                    var $5918 = $5920;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5921 = Parser$Reply$error$($5917);
                                                                                    var $5918 = $5921;
                                                                                    break;
                                                                            };
                                                                            var $5916 = $5918;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5922 = self.pst;
                                                                            var self = $5922;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5924 = self.err;
                                                                                    var $5925 = self.nam;
                                                                                    var $5926 = self.ini;
                                                                                    var $5927 = self.idx;
                                                                                    var $5928 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5915, $5924), $5925, $5926, $5927, $5928);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5930 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $5932 = self.err;
                                                                                                    var self = $5930;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $5934 = self.value;
                                                                                                            var $5935 = Parser$Reply$error$(Parser$Error$combine$($5934, $5932));
                                                                                                            var $5933 = $5935;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $5936 = Parser$Reply$error$($5932);
                                                                                                            var $5933 = $5936;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5931 = $5933;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $5937 = self.pst;
                                                                                                    var $5938 = self.val;
                                                                                                    var self = $5937;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $5940 = self.err;
                                                                                                            var $5941 = self.nam;
                                                                                                            var $5942 = self.ini;
                                                                                                            var $5943 = self.idx;
                                                                                                            var $5944 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($5930, $5940), $5941, $5942, $5943, $5944);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $5946 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("to", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $5948 = self.err;
                                                                                                                            var self = $5946;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $5950 = self.value;
                                                                                                                                    var $5951 = Parser$Reply$error$(Parser$Error$combine$($5950, $5948));
                                                                                                                                    var $5949 = $5951;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $5952 = Parser$Reply$error$($5948);
                                                                                                                                    var $5949 = $5952;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $5947 = $5949;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $5953 = self.pst;
                                                                                                                            var self = $5953;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $5955 = self.err;
                                                                                                                                    var $5956 = self.nam;
                                                                                                                                    var $5957 = self.ini;
                                                                                                                                    var $5958 = self.idx;
                                                                                                                                    var $5959 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($5946, $5955), $5956, $5957, $5958, $5959);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $5961 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$term(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $5963 = self.err;
                                                                                                                                                    var self = $5961;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $5965 = self.value;
                                                                                                                                                            var $5966 = Parser$Reply$error$(Parser$Error$combine$($5965, $5963));
                                                                                                                                                            var $5964 = $5966;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $5967 = Parser$Reply$error$($5963);
                                                                                                                                                            var $5964 = $5967;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $5962 = $5964;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $5968 = self.pst;
                                                                                                                                                    var $5969 = self.val;
                                                                                                                                                    var self = $5968;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $5971 = self.err;
                                                                                                                                                            var $5972 = self.nam;
                                                                                                                                                            var $5973 = self.ini;
                                                                                                                                                            var $5974 = self.idx;
                                                                                                                                                            var $5975 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($5961, $5971), $5972, $5973, $5974, $5975);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $5977 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$(":", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $5979 = self.err;
                                                                                                                                                                            var self = $5977;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $5981 = self.value;
                                                                                                                                                                                    var $5982 = Parser$Reply$error$(Parser$Error$combine$($5981, $5979));
                                                                                                                                                                                    var $5980 = $5982;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $5983 = Parser$Reply$error$($5979);
                                                                                                                                                                                    var $5980 = $5983;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $5978 = $5980;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $5984 = self.pst;
                                                                                                                                                                            var self = $5984;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $5986 = self.err;
                                                                                                                                                                                    var $5987 = self.nam;
                                                                                                                                                                                    var $5988 = self.ini;
                                                                                                                                                                                    var $5989 = self.idx;
                                                                                                                                                                                    var $5990 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($5977, $5986), $5987, $5988, $5989, $5990);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $5992 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$term(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $5994 = self.err;
                                                                                                                                                                                                    var self = $5992;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $5996 = self.value;
                                                                                                                                                                                                            var $5997 = Parser$Reply$error$(Parser$Error$combine$($5996, $5994));
                                                                                                                                                                                                            var $5995 = $5997;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $5998 = Parser$Reply$error$($5994);
                                                                                                                                                                                                            var $5995 = $5998;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $5993 = $5995;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $5999 = self.pst;
                                                                                                                                                                                                    var $6000 = self.val;
                                                                                                                                                                                                    var self = $5999;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $6002 = self.err;
                                                                                                                                                                                                            var $6003 = self.nam;
                                                                                                                                                                                                            var $6004 = self.ini;
                                                                                                                                                                                                            var $6005 = self.idx;
                                                                                                                                                                                                            var $6006 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($5992, $6002), $6003, $6004, $6005, $6006);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $6008 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Parser$maybe$(Kind$Parser$do$statements$(_monad_name$1), _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $6010 = self.err;
                                                                                                                                                                                                                            var self = $6008;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $6012 = self.value;
                                                                                                                                                                                                                                    var $6013 = Parser$Reply$error$(Parser$Error$combine$($6012, $6010));
                                                                                                                                                                                                                                    var $6011 = $6013;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $6014 = Parser$Reply$error$($6010);
                                                                                                                                                                                                                                    var $6011 = $6014;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $6009 = $6011;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $6015 = self.pst;
                                                                                                                                                                                                                            var $6016 = self.val;
                                                                                                                                                                                                                            var self = $6015;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $6018 = self.err;
                                                                                                                                                                                                                                    var $6019 = self.nam;
                                                                                                                                                                                                                                    var $6020 = self.ini;
                                                                                                                                                                                                                                    var $6021 = self.idx;
                                                                                                                                                                                                                                    var $6022 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($6008, $6018), $6019, $6020, $6021, $6022);
                                                                                                                                                                                                                                    var _expr$129 = Kind$Term$ref$("Nat.for.io");
                                                                                                                                                                                                                                    var _expr$130 = Kind$Term$app$(_expr$129, $5938);
                                                                                                                                                                                                                                    var _expr$131 = Kind$Term$app$(_expr$130, $5969);
                                                                                                                                                                                                                                    var _expr$132 = Kind$Term$app$(_expr$131, Kind$Term$lam$($5907, (_x$132 => {
                                                                                                                                                                                                                                        var $6024 = $6000;
                                                                                                                                                                                                                                        return $6024;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var self = $6016;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                            var $6025 = self.value;
                                                                                                                                                                                                                                            var _term$134 = Kind$Term$app$(Kind$Term$ref$("Monad.bind"), Kind$Term$ref$(_monad_name$1));
                                                                                                                                                                                                                                            var _term$135 = Kind$Term$app$(_term$134, Kind$Term$ref$((_monad_name$1 + ".monad")));
                                                                                                                                                                                                                                            var _term$136 = Kind$Term$app$(_term$135, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                            var _term$137 = Kind$Term$app$(_term$136, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                            var _term$138 = Kind$Term$app$(_term$137, _expr$132);
                                                                                                                                                                                                                                            var _term$139 = Kind$Term$app$(_term$138, Kind$Term$lam$("", (_x$139 => {
                                                                                                                                                                                                                                                var $6027 = $6025;
                                                                                                                                                                                                                                                return $6027;
                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                            var $6026 = (_pst$140 => {
                                                                                                                                                                                                                                                var $6028 = Parser$Reply$value$(_pst$140, _term$139);
                                                                                                                                                                                                                                                return $6028;
                                                                                                                                                                                                                                            });
                                                                                                                                                                                                                                            var $6023 = $6026;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                            var $6029 = (_pst$133 => {
                                                                                                                                                                                                                                                var $6030 = Parser$Reply$value$(_pst$133, _expr$132);
                                                                                                                                                                                                                                                return $6030;
                                                                                                                                                                                                                                            });
                                                                                                                                                                                                                                            var $6023 = $6029;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $6023 = $6023(_reply$pst$128);
                                                                                                                                                                                                                                    var $6017 = $6023;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $6009 = $6017;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $6007 = $6009;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $6001 = $6007;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $5993 = $6001;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $5991 = $5993;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $5985 = $5991;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $5978 = $5985;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $5976 = $5978;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $5970 = $5976;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $5962 = $5970;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $5960 = $5962;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $5954 = $5960;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $5947 = $5954;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $5945 = $5947;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $5939 = $5945;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5931 = $5939;
                                                                                                    break;
                                                                                            };
                                                                                            var $5929 = $5931;
                                                                                            break;
                                                                                    };
                                                                                    var $5923 = $5929;
                                                                                    break;
                                                                            };
                                                                            var $5916 = $5923;
                                                                            break;
                                                                    };
                                                                    var $5914 = $5916;
                                                                    break;
                                                            };
                                                            var $5908 = $5914;
                                                            break;
                                                    };
                                                    var $5900 = $5908;
                                                    break;
                                            };
                                            var $5898 = $5900;
                                            break;
                                    };
                                    var $5892 = $5898;
                                    break;
                            };
                            var $5885 = $5892;
                            break;
                    };
                    var $5883 = $5885;
                    break;
            };
            return $5883;
        })), List$cons$(Kind$Parser$letforrange$u32$((_x$2 => {
            var $6031 = Kind$Parser$do$statements$(_monad_name$1);
            return $6031;
        })), List$cons$(Kind$Parser$letforrange$u32$with$((_x$2 => {
            var $6032 = Kind$Parser$do$statements$(_monad_name$1);
            return $6032;
        })), List$cons$(Kind$Parser$letforrange$nat$((_x$2 => {
            var $6033 = Kind$Parser$do$statements$(_monad_name$1);
            return $6033;
        })), List$cons$(Kind$Parser$letforrange$nat$with$((_x$2 => {
            var $6034 = Kind$Parser$do$statements$(_monad_name$1);
            return $6034;
        })), List$cons$(Kind$Parser$letforin$((_x$2 => {
            var $6035 = Kind$Parser$do$statements$(_monad_name$1);
            return $6035;
        })), List$cons$(Kind$Parser$letforin$with$((_x$2 => {
            var $6036 = Kind$Parser$do$statements$(_monad_name$1);
            return $6036;
        })), List$cons$(Kind$Parser$letwhile$((_x$2 => {
            var $6037 = Kind$Parser$do$statements$(_monad_name$1);
            return $6037;
        })), List$cons$(Kind$Parser$letwhile$with$((_x$2 => {
            var $6038 = Kind$Parser$do$statements$(_monad_name$1);
            return $6038;
        })), List$cons$(Kind$Parser$let$((_x$2 => {
            var $6039 = Kind$Parser$do$statements$(_monad_name$1);
            return $6039;
        })), List$cons$(Kind$Parser$getwhile$((_x$2 => {
            var $6040 = Kind$Parser$do$statements$(_monad_name$1);
            return $6040;
        })), List$cons$(Kind$Parser$getwhile$with((_x$2 => {
            var $6041 = Kind$Parser$do$statements$(_monad_name$1);
            return $6041;
        })), List$cons$(Kind$Parser$get$((_x$2 => {
            var $6042 = Kind$Parser$do$statements$(_monad_name$1);
            return $6042;
        })), List$cons$(Kind$Parser$def$((_x$2 => {
            var $6043 = Kind$Parser$do$statements$(_monad_name$1);
            return $6043;
        })), List$cons$(Kind$Parser$log$((_x$2 => {
            var $6044 = Kind$Parser$do$statements$(_monad_name$1);
            return $6044;
        })), List$cons$(Kind$Parser$open$((_x$2 => {
            var $6045 = Kind$Parser$do$statements$(_monad_name$1);
            return $6045;
        })), List$cons$(Kind$Parser$block("do-statement")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $6047 = self.err;
                    var _reply$8 = Kind$Parser$term(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $6049 = self.err;
                            var self = $6047;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $6051 = self.value;
                                    var $6052 = Parser$Reply$error$(Parser$Error$combine$($6051, $6049));
                                    var $6050 = $6052;
                                    break;
                                case 'Maybe.none':
                                    var $6053 = Parser$Reply$error$($6049);
                                    var $6050 = $6053;
                                    break;
                            };
                            var $6048 = $6050;
                            break;
                        case 'Parser.Reply.value':
                            var $6054 = self.pst;
                            var $6055 = self.val;
                            var self = $6054;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $6057 = self.err;
                                    var $6058 = self.nam;
                                    var $6059 = self.ini;
                                    var $6060 = self.idx;
                                    var $6061 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($6047, $6057), $6058, $6059, $6060, $6061);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $6063 = self.err;
                                            var _reply$22 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $6065 = self.err;
                                                    var self = $6063;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $6067 = self.value;
                                                            var $6068 = Parser$Reply$error$(Parser$Error$combine$($6067, $6065));
                                                            var $6066 = $6068;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $6069 = Parser$Reply$error$($6065);
                                                            var $6066 = $6069;
                                                            break;
                                                    };
                                                    var $6064 = $6066;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $6070 = self.pst;
                                                    var self = $6070;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $6072 = self.err;
                                                            var $6073 = self.nam;
                                                            var $6074 = self.ini;
                                                            var $6075 = self.idx;
                                                            var $6076 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6063, $6072), $6073, $6074, $6075, $6076);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $6078 = self.err;
                                                                    var _reply$36 = Kind$Parser$do$statements$(_monad_name$1)(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $6080 = self.err;
                                                                            var self = $6078;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $6082 = self.value;
                                                                                    var $6083 = Parser$Reply$error$(Parser$Error$combine$($6082, $6080));
                                                                                    var $6081 = $6083;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $6084 = Parser$Reply$error$($6080);
                                                                                    var $6081 = $6084;
                                                                                    break;
                                                                            };
                                                                            var $6079 = $6081;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $6085 = self.pst;
                                                                            var $6086 = self.val;
                                                                            var self = $6085;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $6088 = self.err;
                                                                                    var $6089 = self.nam;
                                                                                    var $6090 = self.ini;
                                                                                    var $6091 = self.idx;
                                                                                    var $6092 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6078, $6088), $6089, $6090, $6091, $6092);
                                                                                    var _term$45 = Kind$Term$app$(Kind$Term$ref$("Monad.bind"), Kind$Term$ref$(_monad_name$1));
                                                                                    var _term$46 = Kind$Term$app$(_term$45, Kind$Term$ref$((_monad_name$1 + ".monad")));
                                                                                    var _term$47 = Kind$Term$app$(_term$46, Kind$Term$hol$(Bits$e));
                                                                                    var _term$48 = Kind$Term$app$(_term$47, Kind$Term$hol$(Bits$e));
                                                                                    var _term$49 = Kind$Term$app$(_term$48, $6055);
                                                                                    var _term$50 = Kind$Term$app$(_term$49, Kind$Term$lam$("", (_x$50 => {
                                                                                        var $6094 = $6086;
                                                                                        return $6094;
                                                                                    })));
                                                                                    var $6093 = Parser$Reply$value$(_reply$pst$44, _term$50);
                                                                                    var $6087 = $6093;
                                                                                    break;
                                                                            };
                                                                            var $6079 = $6087;
                                                                            break;
                                                                    };
                                                                    var $6077 = $6079;
                                                                    break;
                                                            };
                                                            var $6071 = $6077;
                                                            break;
                                                    };
                                                    var $6064 = $6071;
                                                    break;
                                            };
                                            var $6062 = $6064;
                                            break;
                                    };
                                    var $6056 = $6062;
                                    break;
                            };
                            var $6048 = $6056;
                            break;
                    };
                    var $6046 = $6048;
                    break;
            };
            return $6046;
        })), List$cons$(Kind$Parser$block("do-end")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $6096 = self.err;
                    var _reply$8 = Kind$Parser$term(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $6098 = self.err;
                            var self = $6096;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $6100 = self.value;
                                    var $6101 = Parser$Reply$error$(Parser$Error$combine$($6100, $6098));
                                    var $6099 = $6101;
                                    break;
                                case 'Maybe.none':
                                    var $6102 = Parser$Reply$error$($6098);
                                    var $6099 = $6102;
                                    break;
                            };
                            var $6097 = $6099;
                            break;
                        case 'Parser.Reply.value':
                            var $6103 = self.pst;
                            var $6104 = self.val;
                            var self = $6103;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $6106 = self.err;
                                    var $6107 = self.nam;
                                    var $6108 = self.ini;
                                    var $6109 = self.idx;
                                    var $6110 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($6096, $6106), $6107, $6108, $6109, $6110);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $6112 = self.err;
                                            var _reply$22 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $6114 = self.err;
                                                    var self = $6112;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $6116 = self.value;
                                                            var $6117 = Parser$Reply$error$(Parser$Error$combine$($6116, $6114));
                                                            var $6115 = $6117;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $6118 = Parser$Reply$error$($6114);
                                                            var $6115 = $6118;
                                                            break;
                                                    };
                                                    var $6113 = $6115;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $6119 = self.pst;
                                                    var self = $6119;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $6121 = self.err;
                                                            var $6122 = self.nam;
                                                            var $6123 = self.ini;
                                                            var $6124 = self.idx;
                                                            var $6125 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6112, $6121), $6122, $6123, $6124, $6125);
                                                            var $6126 = Parser$Reply$value$(_reply$pst$30, $6104);
                                                            var $6120 = $6126;
                                                            break;
                                                    };
                                                    var $6113 = $6120;
                                                    break;
                                            };
                                            var $6111 = $6113;
                                            break;
                                    };
                                    var $6105 = $6111;
                                    break;
                            };
                            var $6097 = $6105;
                            break;
                    };
                    var $6095 = $6097;
                    break;
            };
            return $6095;
        })), List$nil)))))))))))))))))))));
        return $5740;
    };
    const Kind$Parser$do$statements = x0 => Kind$Parser$do$statements$(x0);
    const Kind$Parser$do = Kind$Parser$block("do")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6128 = self.err;
                var _reply$7 = Parser$maybe$(Kind$Parser$text("do "), _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6130 = self.err;
                        var self = $6128;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6132 = self.value;
                                var $6133 = Parser$Reply$error$(Parser$Error$combine$($6132, $6130));
                                var $6131 = $6133;
                                break;
                            case 'Maybe.none':
                                var $6134 = Parser$Reply$error$($6130);
                                var $6131 = $6134;
                                break;
                        };
                        var $6129 = $6131;
                        break;
                    case 'Parser.Reply.value':
                        var $6135 = self.pst;
                        var self = $6135;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6137 = self.err;
                                var $6138 = self.nam;
                                var $6139 = self.ini;
                                var $6140 = self.idx;
                                var $6141 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6128, $6137), $6138, $6139, $6140, $6141);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6143 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6145 = self.err;
                                                var self = $6143;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6147 = self.value;
                                                        var $6148 = Parser$Reply$error$(Parser$Error$combine$($6147, $6145));
                                                        var $6146 = $6148;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6149 = Parser$Reply$error$($6145);
                                                        var $6146 = $6149;
                                                        break;
                                                };
                                                var $6144 = $6146;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6150 = self.pst;
                                                var $6151 = self.val;
                                                var self = $6150;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6153 = self.err;
                                                        var $6154 = self.nam;
                                                        var $6155 = self.ini;
                                                        var $6156 = self.idx;
                                                        var $6157 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6143, $6153), $6154, $6155, $6156, $6157);
                                                        var self = String$is_upper$(String$slice$(0n, 1n, $6151));
                                                        if (self) {
                                                            var $6159 = (_pst$30 => {
                                                                var self = _pst$30;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $6161 = self.err;
                                                                        var _reply$36 = Parser$text$(" {", _pst$30);
                                                                        var self = _reply$36;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $6163 = self.err;
                                                                                var self = $6161;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $6165 = self.value;
                                                                                        var $6166 = Parser$Reply$error$(Parser$Error$combine$($6165, $6163));
                                                                                        var $6164 = $6166;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $6167 = Parser$Reply$error$($6163);
                                                                                        var $6164 = $6167;
                                                                                        break;
                                                                                };
                                                                                var $6162 = $6164;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $6168 = self.pst;
                                                                                var self = $6168;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6170 = self.err;
                                                                                        var $6171 = self.nam;
                                                                                        var $6172 = self.ini;
                                                                                        var $6173 = self.idx;
                                                                                        var $6174 = self.str;
                                                                                        var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6161, $6170), $6171, $6172, $6173, $6174);
                                                                                        var self = _reply$pst$44;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $6176 = self.err;
                                                                                                var _reply$50 = Kind$Parser$do$statements$($6151)(_reply$pst$44);
                                                                                                var self = _reply$50;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.Reply.error':
                                                                                                        var $6178 = self.err;
                                                                                                        var self = $6176;
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $6180 = self.value;
                                                                                                                var $6181 = Parser$Reply$error$(Parser$Error$combine$($6180, $6178));
                                                                                                                var $6179 = $6181;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $6182 = Parser$Reply$error$($6178);
                                                                                                                var $6179 = $6182;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6177 = $6179;
                                                                                                        break;
                                                                                                    case 'Parser.Reply.value':
                                                                                                        var $6183 = self.pst;
                                                                                                        var $6184 = self.val;
                                                                                                        var self = $6183;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6186 = self.err;
                                                                                                                var $6187 = self.nam;
                                                                                                                var $6188 = self.ini;
                                                                                                                var $6189 = self.idx;
                                                                                                                var $6190 = self.str;
                                                                                                                var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($6176, $6186), $6187, $6188, $6189, $6190);
                                                                                                                var self = _reply$pst$58;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.State.new':
                                                                                                                        var $6192 = self.err;
                                                                                                                        var _reply$64 = Kind$Parser$text$("}", _reply$pst$58);
                                                                                                                        var self = _reply$64;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                var $6194 = self.err;
                                                                                                                                var self = $6192;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Maybe.some':
                                                                                                                                        var $6196 = self.value;
                                                                                                                                        var $6197 = Parser$Reply$error$(Parser$Error$combine$($6196, $6194));
                                                                                                                                        var $6195 = $6197;
                                                                                                                                        break;
                                                                                                                                    case 'Maybe.none':
                                                                                                                                        var $6198 = Parser$Reply$error$($6194);
                                                                                                                                        var $6195 = $6198;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6193 = $6195;
                                                                                                                                break;
                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                var $6199 = self.pst;
                                                                                                                                var self = $6199;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $6201 = self.err;
                                                                                                                                        var $6202 = self.nam;
                                                                                                                                        var $6203 = self.ini;
                                                                                                                                        var $6204 = self.idx;
                                                                                                                                        var $6205 = self.str;
                                                                                                                                        var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($6192, $6201), $6202, $6203, $6204, $6205);
                                                                                                                                        var $6206 = Parser$Reply$value$(_reply$pst$72, $6184);
                                                                                                                                        var $6200 = $6206;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6193 = $6200;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6191 = $6193;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6185 = $6191;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6177 = $6185;
                                                                                                        break;
                                                                                                };
                                                                                                var $6175 = $6177;
                                                                                                break;
                                                                                        };
                                                                                        var $6169 = $6175;
                                                                                        break;
                                                                                };
                                                                                var $6162 = $6169;
                                                                                break;
                                                                        };
                                                                        var $6160 = $6162;
                                                                        break;
                                                                };
                                                                return $6160;
                                                            });
                                                            var $6158 = $6159;
                                                        } else {
                                                            var $6207 = Parser$fail("Not a do-block.");
                                                            var $6158 = $6207;
                                                        };
                                                        var $6158 = $6158(_reply$pst$29);
                                                        var $6152 = $6158;
                                                        break;
                                                };
                                                var $6144 = $6152;
                                                break;
                                        };
                                        var $6142 = $6144;
                                        break;
                                };
                                var $6136 = $6142;
                                break;
                        };
                        var $6129 = $6136;
                        break;
                };
                var $6127 = $6129;
                break;
        };
        return $6127;
    }));

    function Parser$try$(_parse$2, _pst$3) {
        var self = _parse$2(_pst$3);
        switch (self._) {
            case 'Parser.Reply.error':
                var $6209 = Parser$Reply$value$(_pst$3, Bool$false);
                var $6208 = $6209;
                break;
            case 'Parser.Reply.value':
                var $6210 = Parser$Reply$value$(_pst$3, Bool$true);
                var $6208 = $6210;
                break;
        };
        return $6208;
    };
    const Parser$try = x0 => x1 => Parser$try$(x0, x1);

    function Parser$avoiding$(_test$2, _parse$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $6212 = self.err;
                var _reply$10 = Parser$try$(_test$2, _pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6214 = self.err;
                        var self = $6212;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6216 = self.value;
                                var $6217 = Parser$Reply$error$(Parser$Error$combine$($6216, $6214));
                                var $6215 = $6217;
                                break;
                            case 'Maybe.none':
                                var $6218 = Parser$Reply$error$($6214);
                                var $6215 = $6218;
                                break;
                        };
                        var $6213 = $6215;
                        break;
                    case 'Parser.Reply.value':
                        var $6219 = self.pst;
                        var $6220 = self.val;
                        var self = $6219;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6222 = self.err;
                                var $6223 = self.nam;
                                var $6224 = self.ini;
                                var $6225 = self.idx;
                                var $6226 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($6212, $6222), $6223, $6224, $6225, $6226);
                                var self = $6220;
                                if (self) {
                                    var $6228 = Parser$fail("Avoided.");
                                    var $6227 = $6228;
                                } else {
                                    var $6229 = _parse$3;
                                    var $6227 = $6229;
                                };
                                var $6227 = $6227(_reply$pst$18);
                                var $6221 = $6227;
                                break;
                        };
                        var $6213 = $6221;
                        break;
                };
                var $6211 = $6213;
                break;
        };
        return $6211;
    };
    const Parser$avoiding = x0 => x1 => x2 => Parser$avoiding$(x0, x1, x2);

    function Kind$Term$extract_name$(_term$1) {
        var _term$2 = Kind$Term$reduce$(_term$1, Kind$Map$new);
        var self = _term$2;
        switch (self._) {
            case 'Kind.Term.var':
                var $6231 = self.name;
                var $6232 = $6231;
                var $6230 = $6232;
                break;
            case 'Kind.Term.ref':
                var $6233 = self.name;
                var $6234 = $6233;
                var $6230 = $6234;
                break;
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $6235 = "self";
                var $6230 = $6235;
                break;
        };
        return $6230;
    };
    const Kind$Term$extract_name = x0 => Kind$Term$extract_name$(x0);

    function Kind$Ann$new$(_name$1, _term$2, _type$3) {
        var $6236 = ({
            _: 'Kind.Ann.new',
            'name': _name$1,
            'term': _term$2,
            'type': _type$3
        });
        return $6236;
    };
    const Kind$Ann$new = x0 => x1 => x2 => Kind$Ann$new$(x0, x1, x2);
    const Kind$Parser$case$with = Parser$choice(List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6238 = self.err;
                var _reply$7 = Kind$Parser$text$("with ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6240 = self.err;
                        var self = $6238;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6242 = self.value;
                                var $6243 = Parser$Reply$error$(Parser$Error$combine$($6242, $6240));
                                var $6241 = $6243;
                                break;
                            case 'Maybe.none':
                                var $6244 = Parser$Reply$error$($6240);
                                var $6241 = $6244;
                                break;
                        };
                        var $6239 = $6241;
                        break;
                    case 'Parser.Reply.value':
                        var $6245 = self.pst;
                        var self = $6245;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6247 = self.err;
                                var $6248 = self.nam;
                                var $6249 = self.ini;
                                var $6250 = self.idx;
                                var $6251 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6238, $6247), $6248, $6249, $6250, $6251);
                                var $6252 = Parser$many$((_pst$16 => {
                                    var self = _pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $6254 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $6256 = self.err;
                                                    var self = $6254;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $6258 = self.value;
                                                            var $6259 = Parser$Reply$error$(Parser$Error$combine$($6258, $6256));
                                                            var $6257 = $6259;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $6260 = Parser$Reply$error$($6256);
                                                            var $6257 = $6260;
                                                            break;
                                                    };
                                                    var $6255 = $6257;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $6261 = self.pst;
                                                    var $6262 = self.val;
                                                    var self = $6261;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $6264 = self.err;
                                                            var $6265 = self.nam;
                                                            var $6266 = self.ini;
                                                            var $6267 = self.idx;
                                                            var $6268 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6254, $6264), $6265, $6266, $6267, $6268);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $6270 = self.err;
                                                                    var _reply$36 = Parser$maybe$((_pst$36 => {
                                                                        var self = _pst$36;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6273 = self.err;
                                                                                var _reply$42 = Kind$Parser$text$(":", _pst$36);
                                                                                var self = _reply$42;
                                                                                switch (self._) {
                                                                                    case 'Parser.Reply.error':
                                                                                        var $6275 = self.err;
                                                                                        var self = $6273;
                                                                                        switch (self._) {
                                                                                            case 'Maybe.some':
                                                                                                var $6277 = self.value;
                                                                                                var $6278 = Parser$Reply$error$(Parser$Error$combine$($6277, $6275));
                                                                                                var $6276 = $6278;
                                                                                                break;
                                                                                            case 'Maybe.none':
                                                                                                var $6279 = Parser$Reply$error$($6275);
                                                                                                var $6276 = $6279;
                                                                                                break;
                                                                                        };
                                                                                        var $6274 = $6276;
                                                                                        break;
                                                                                    case 'Parser.Reply.value':
                                                                                        var $6280 = self.pst;
                                                                                        var self = $6280;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $6282 = self.err;
                                                                                                var $6283 = self.nam;
                                                                                                var $6284 = self.ini;
                                                                                                var $6285 = self.idx;
                                                                                                var $6286 = self.str;
                                                                                                var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($6273, $6282), $6283, $6284, $6285, $6286);
                                                                                                var self = _reply$pst$50;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6288 = self.err;
                                                                                                        var _reply$56 = Kind$Parser$term(_reply$pst$50);
                                                                                                        var self = _reply$56;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.Reply.error':
                                                                                                                var $6290 = self.err;
                                                                                                                var self = $6288;
                                                                                                                switch (self._) {
                                                                                                                    case 'Maybe.some':
                                                                                                                        var $6292 = self.value;
                                                                                                                        var $6293 = Parser$Reply$error$(Parser$Error$combine$($6292, $6290));
                                                                                                                        var $6291 = $6293;
                                                                                                                        break;
                                                                                                                    case 'Maybe.none':
                                                                                                                        var $6294 = Parser$Reply$error$($6290);
                                                                                                                        var $6291 = $6294;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6289 = $6291;
                                                                                                                break;
                                                                                                            case 'Parser.Reply.value':
                                                                                                                var $6295 = self.pst;
                                                                                                                var $6296 = self.val;
                                                                                                                var self = $6295;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.State.new':
                                                                                                                        var $6298 = self.err;
                                                                                                                        var $6299 = self.nam;
                                                                                                                        var $6300 = self.ini;
                                                                                                                        var $6301 = self.idx;
                                                                                                                        var $6302 = self.str;
                                                                                                                        var _reply$pst$64 = Parser$State$new$(Parser$Error$maybe_combine$($6288, $6298), $6299, $6300, $6301, $6302);
                                                                                                                        var self = _reply$pst$64;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6304 = self.err;
                                                                                                                                var _reply$70 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$64);
                                                                                                                                var self = _reply$70;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                        var $6306 = self.err;
                                                                                                                                        var self = $6304;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Maybe.some':
                                                                                                                                                var $6308 = self.value;
                                                                                                                                                var $6309 = Parser$Reply$error$(Parser$Error$combine$($6308, $6306));
                                                                                                                                                var $6307 = $6309;
                                                                                                                                                break;
                                                                                                                                            case 'Maybe.none':
                                                                                                                                                var $6310 = Parser$Reply$error$($6306);
                                                                                                                                                var $6307 = $6310;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $6305 = $6307;
                                                                                                                                        break;
                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                        var $6311 = self.pst;
                                                                                                                                        var self = $6311;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                var $6313 = self.err;
                                                                                                                                                var $6314 = self.nam;
                                                                                                                                                var $6315 = self.ini;
                                                                                                                                                var $6316 = self.idx;
                                                                                                                                                var $6317 = self.str;
                                                                                                                                                var _reply$pst$78 = Parser$State$new$(Parser$Error$maybe_combine$($6304, $6313), $6314, $6315, $6316, $6317);
                                                                                                                                                var $6318 = Parser$Reply$value$(_reply$pst$78, $6296);
                                                                                                                                                var $6312 = $6318;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $6305 = $6312;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6303 = $6305;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6297 = $6303;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6289 = $6297;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6287 = $6289;
                                                                                                        break;
                                                                                                };
                                                                                                var $6281 = $6287;
                                                                                                break;
                                                                                        };
                                                                                        var $6274 = $6281;
                                                                                        break;
                                                                                };
                                                                                var $6272 = $6274;
                                                                                break;
                                                                        };
                                                                        return $6272;
                                                                    }), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $6319 = self.err;
                                                                            var self = $6270;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $6321 = self.value;
                                                                                    var $6322 = Parser$Reply$error$(Parser$Error$combine$($6321, $6319));
                                                                                    var $6320 = $6322;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $6323 = Parser$Reply$error$($6319);
                                                                                    var $6320 = $6323;
                                                                                    break;
                                                                            };
                                                                            var $6271 = $6320;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $6324 = self.pst;
                                                                            var $6325 = self.val;
                                                                            var self = $6324;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $6327 = self.err;
                                                                                    var $6328 = self.nam;
                                                                                    var $6329 = self.ini;
                                                                                    var $6330 = self.idx;
                                                                                    var $6331 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6270, $6327), $6328, $6329, $6330, $6331);
                                                                                    var $6332 = Parser$Reply$value$(_reply$pst$44, Kind$Ann$new$($6262, Kind$Term$ref$($6262), $6325));
                                                                                    var $6326 = $6332;
                                                                                    break;
                                                                            };
                                                                            var $6271 = $6326;
                                                                            break;
                                                                    };
                                                                    var $6269 = $6271;
                                                                    break;
                                                            };
                                                            var $6263 = $6269;
                                                            break;
                                                    };
                                                    var $6255 = $6263;
                                                    break;
                                            };
                                            var $6253 = $6255;
                                            break;
                                    };
                                    return $6253;
                                }))(_reply$pst$15);
                                var $6246 = $6252;
                                break;
                        };
                        var $6239 = $6246;
                        break;
                };
                var $6237 = $6239;
                break;
        };
        return $6237;
    }), List$cons$((_pst$1 => {
        var $6333 = Parser$Reply$value$(_pst$1, List$nil);
        return $6333;
    }), List$nil)));

    function Kind$Parser$case$case$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6335 = self.err;
                var _reply$7 = Parser$try$(Kind$Parser$text(":"), _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6337 = self.err;
                        var self = $6335;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6339 = self.value;
                                var $6340 = Parser$Reply$error$(Parser$Error$combine$($6339, $6337));
                                var $6338 = $6340;
                                break;
                            case 'Maybe.none':
                                var $6341 = Parser$Reply$error$($6337);
                                var $6338 = $6341;
                                break;
                        };
                        var $6336 = $6338;
                        break;
                    case 'Parser.Reply.value':
                        var $6342 = self.pst;
                        var $6343 = self.val;
                        var self = $6342;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6345 = self.err;
                                var $6346 = self.nam;
                                var $6347 = self.ini;
                                var $6348 = self.idx;
                                var $6349 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6335, $6345), $6346, $6347, $6348, $6349);
                                var self = $6343;
                                if (self) {
                                    var $6351 = (_pst$16 => {
                                        var self = _pst$16;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $6353 = self.err;
                                                var _reply$22 = Kind$Parser$spaces(_pst$16);
                                                var self = _reply$22;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $6355 = self.err;
                                                        var self = $6353;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $6357 = self.value;
                                                                var $6358 = Parser$Reply$error$(Parser$Error$combine$($6357, $6355));
                                                                var $6356 = $6358;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $6359 = Parser$Reply$error$($6355);
                                                                var $6356 = $6359;
                                                                break;
                                                        };
                                                        var $6354 = $6356;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $6360 = self.pst;
                                                        var self = $6360;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6362 = self.err;
                                                                var $6363 = self.nam;
                                                                var $6364 = self.ini;
                                                                var $6365 = self.idx;
                                                                var $6366 = self.str;
                                                                var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6353, $6362), $6363, $6364, $6365, $6366);
                                                                var $6367 = Parser$fail$("Expected constructor names.", _reply$pst$30);
                                                                var $6361 = $6367;
                                                                break;
                                                        };
                                                        var $6354 = $6361;
                                                        break;
                                                };
                                                var $6352 = $6354;
                                                break;
                                        };
                                        return $6352;
                                    });
                                    var $6350 = $6351;
                                } else {
                                    var $6368 = (_pst$16 => {
                                        var self = _pst$16;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $6370 = self.err;
                                                var _reply$22 = Parser$until$(Kind$Parser$text(":"), Kind$Parser$name1)(_pst$16);
                                                var self = _reply$22;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $6372 = self.err;
                                                        var self = $6370;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $6374 = self.value;
                                                                var $6375 = Parser$Reply$error$(Parser$Error$combine$($6374, $6372));
                                                                var $6373 = $6375;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $6376 = Parser$Reply$error$($6372);
                                                                var $6373 = $6376;
                                                                break;
                                                        };
                                                        var $6371 = $6373;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $6377 = self.pst;
                                                        var $6378 = self.val;
                                                        var self = $6377;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6380 = self.err;
                                                                var $6381 = self.nam;
                                                                var $6382 = self.ini;
                                                                var $6383 = self.idx;
                                                                var $6384 = self.str;
                                                                var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6370, $6380), $6381, $6382, $6383, $6384);
                                                                var self = _reply$pst$30;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $6386 = self.err;
                                                                        var _reply$36 = Kind$Parser$term(_reply$pst$30);
                                                                        var self = _reply$36;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $6388 = self.err;
                                                                                var self = $6386;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $6390 = self.value;
                                                                                        var $6391 = Parser$Reply$error$(Parser$Error$combine$($6390, $6388));
                                                                                        var $6389 = $6391;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $6392 = Parser$Reply$error$($6388);
                                                                                        var $6389 = $6392;
                                                                                        break;
                                                                                };
                                                                                var $6387 = $6389;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $6393 = self.pst;
                                                                                var $6394 = self.val;
                                                                                var self = $6393;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6396 = self.err;
                                                                                        var $6397 = self.nam;
                                                                                        var $6398 = self.ini;
                                                                                        var $6399 = self.idx;
                                                                                        var $6400 = self.str;
                                                                                        var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6386, $6396), $6397, $6398, $6399, $6400);
                                                                                        var self = _reply$pst$44;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $6402 = self.err;
                                                                                                var _reply$50 = Parser$maybe$(Kind$Parser$text(","), _reply$pst$44);
                                                                                                var self = _reply$50;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.Reply.error':
                                                                                                        var $6404 = self.err;
                                                                                                        var self = $6402;
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $6406 = self.value;
                                                                                                                var $6407 = Parser$Reply$error$(Parser$Error$combine$($6406, $6404));
                                                                                                                var $6405 = $6407;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $6408 = Parser$Reply$error$($6404);
                                                                                                                var $6405 = $6408;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6403 = $6405;
                                                                                                        break;
                                                                                                    case 'Parser.Reply.value':
                                                                                                        var $6409 = self.pst;
                                                                                                        var self = $6409;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6411 = self.err;
                                                                                                                var $6412 = self.nam;
                                                                                                                var $6413 = self.ini;
                                                                                                                var $6414 = self.idx;
                                                                                                                var $6415 = self.str;
                                                                                                                var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($6402, $6411), $6412, $6413, $6414, $6415);
                                                                                                                var $6416 = Parser$Reply$value$(_reply$pst$58, Pair$new$($6378, $6394));
                                                                                                                var $6410 = $6416;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6403 = $6410;
                                                                                                        break;
                                                                                                };
                                                                                                var $6401 = $6403;
                                                                                                break;
                                                                                        };
                                                                                        var $6395 = $6401;
                                                                                        break;
                                                                                };
                                                                                var $6387 = $6395;
                                                                                break;
                                                                        };
                                                                        var $6385 = $6387;
                                                                        break;
                                                                };
                                                                var $6379 = $6385;
                                                                break;
                                                        };
                                                        var $6371 = $6379;
                                                        break;
                                                };
                                                var $6369 = $6371;
                                                break;
                                        };
                                        return $6369;
                                    });
                                    var $6350 = $6368;
                                };
                                var $6350 = $6350(_reply$pst$15);
                                var $6344 = $6350;
                                break;
                        };
                        var $6336 = $6344;
                        break;
                };
                var $6334 = $6336;
                break;
        };
        return $6334;
    };
    const Kind$Parser$case$case = x0 => Kind$Parser$case$case$(x0);

    function Parser$append_error$(_parse$2, _msg$3, _pst$4) {
        var _reply$5 = _parse$2(_pst$4);
        var self = _reply$5;
        switch (self._) {
            case 'Parser.Reply.error':
                var $6418 = self.err;
                var self = $6418;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $6420 = self.nam;
                        var $6421 = self.ini;
                        var $6422 = self.idx;
                        var $6423 = self.msg;
                        var $6424 = Parser$Reply$fail$($6420, $6421, $6422, ($6423 + _msg$3));
                        var $6419 = $6424;
                        break;
                };
                var $6417 = $6419;
                break;
            case 'Parser.Reply.value':
                var $6425 = _reply$5;
                var $6417 = $6425;
                break;
        };
        return $6417;
    };
    const Parser$append_error = x0 => x1 => x2 => Parser$append_error$(x0, x1, x2);

    function Kind$Parser$case$group$(_dflt$1, _cses$2) {
        var self = _cses$2;
        switch (self._) {
            case 'List.cons':
                var $6427 = self.head;
                var $6428 = self.tail;
                var _map$5 = Kind$Parser$case$group$(_dflt$1, $6428);
                var self = $6427;
                switch (self._) {
                    case 'Pair.new':
                        var $6430 = self.fst;
                        var $6431 = self.snd;
                        var self = $6430;
                        switch (self._) {
                            case 'List.cons':
                                var $6433 = self.head;
                                var $6434 = self.tail;
                                var _rest$10 = Maybe$default$(Kind$Map$get$($6433, _map$5), List$nil);
                                var $6435 = Kind$Map$set$($6433, List$cons$(Pair$new$($6434, $6431), _rest$10), _map$5);
                                var $6432 = $6435;
                                break;
                            case 'List.nil':
                                var $6436 = _map$5;
                                var $6432 = $6436;
                                break;
                        };
                        var $6429 = $6432;
                        break;
                };
                var $6426 = $6429;
                break;
            case 'List.nil':
                var self = _dflt$1;
                switch (self._) {
                    case 'Maybe.some':
                        var $6438 = self.value;
                        var $6439 = Kind$Map$set$("_", List$cons$(Pair$new$(List$nil, $6438), List$nil), Kind$Map$new);
                        var $6437 = $6439;
                        break;
                    case 'Maybe.none':
                        var $6440 = Kind$Map$new;
                        var $6437 = $6440;
                        break;
                };
                var $6426 = $6437;
                break;
        };
        return $6426;
    };
    const Kind$Parser$case$group = x0 => x1 => Kind$Parser$case$group$(x0, x1);

    function BitsMap$map$(_fn$3, _map$4) {
        var self = _map$4;
        switch (self._) {
            case 'BitsMap.tie':
                var $6442 = self.val;
                var $6443 = self.lft;
                var $6444 = self.rgt;
                var self = $6442;
                switch (self._) {
                    case 'Maybe.some':
                        var $6446 = self.value;
                        var $6447 = Maybe$some$(_fn$3($6446));
                        var _val$8 = $6447;
                        break;
                    case 'Maybe.none':
                        var $6448 = Maybe$none;
                        var _val$8 = $6448;
                        break;
                };
                var _lft$9 = BitsMap$map$(_fn$3, $6443);
                var _rgt$10 = BitsMap$map$(_fn$3, $6444);
                var $6445 = BitsMap$tie$(_val$8, _lft$9, _rgt$10);
                var $6441 = $6445;
                break;
            case 'BitsMap.new':
                var $6449 = BitsMap$new;
                var $6441 = $6449;
                break;
        };
        return $6441;
    };
    const BitsMap$map = x0 => x1 => BitsMap$map$(x0, x1);

    function Kind$Map$map$(_fn$3, _map$4) {
        var $6450 = BitsMap$map$(_fn$3, _map$4);
        return $6450;
    };
    const Kind$Map$map = x0 => x1 => Kind$Map$map$(x0, x1);

    function Kind$Parser$case$build$(_vals$1, _wyth$2, _cses$3, _dflt$4, _moti$5) {
        var self = _vals$1;
        switch (self._) {
            case 'List.cons':
                var $6452 = self.head;
                var $6453 = self.tail;
                var _group$8 = Kind$Parser$case$group$(_dflt$4, _cses$3);
                var _name$9 = Pair$fst$($6452);
                var _expr$10 = Pair$snd$($6452);
                var _cses$11 = Kind$Map$map$((_cses$11 => {
                    var $6455 = Kind$Parser$case$build$($6453, _wyth$2, _cses$11, _dflt$4, _moti$5);
                    return $6455;
                }), _group$8);
                var $6454 = Kind$Term$cse$(Bits$e, _expr$10, _name$9, _wyth$2, _cses$11, _moti$5);
                var $6451 = $6454;
                break;
            case 'List.nil':
                var self = _cses$3;
                switch (self._) {
                    case 'List.cons':
                        var $6457 = self.head;
                        var $6458 = Pair$snd$($6457);
                        var $6456 = $6458;
                        break;
                    case 'List.nil':
                        var $6459 = Kind$Term$ref$("missing_case");
                        var $6456 = $6459;
                        break;
                };
                var $6451 = $6456;
                break;
        };
        return $6451;
    };
    const Kind$Parser$case$build = x0 => x1 => x2 => x3 => x4 => Kind$Parser$case$build$(x0, x1, x2, x3, x4);
    const Kind$Parser$case = Kind$Parser$block("case")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6461 = self.err;
                var _reply$7 = Kind$Parser$text$("case ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6463 = self.err;
                        var self = $6461;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6465 = self.value;
                                var $6466 = Parser$Reply$error$(Parser$Error$combine$($6465, $6463));
                                var $6464 = $6466;
                                break;
                            case 'Maybe.none':
                                var $6467 = Parser$Reply$error$($6463);
                                var $6464 = $6467;
                                break;
                        };
                        var $6462 = $6464;
                        break;
                    case 'Parser.Reply.value':
                        var $6468 = self.pst;
                        var self = $6468;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6470 = self.err;
                                var $6471 = self.nam;
                                var $6472 = self.ini;
                                var $6473 = self.idx;
                                var $6474 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6461, $6470), $6471, $6472, $6473, $6474);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6476 = self.err;
                                        var _reply$21 = Parser$many1$((_pst$21 => {
                                            var self = _pst$21;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $6479 = self.err;
                                                    var _reply$27 = Parser$avoiding$(Kind$Parser$text("{"), Kind$Parser$term, _pst$21);
                                                    var self = _reply$27;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $6481 = self.err;
                                                            var self = $6479;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $6483 = self.value;
                                                                    var $6484 = Parser$Reply$error$(Parser$Error$combine$($6483, $6481));
                                                                    var $6482 = $6484;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $6485 = Parser$Reply$error$($6481);
                                                                    var $6482 = $6485;
                                                                    break;
                                                            };
                                                            var $6480 = $6482;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $6486 = self.pst;
                                                            var $6487 = self.val;
                                                            var self = $6486;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $6489 = self.err;
                                                                    var $6490 = self.nam;
                                                                    var $6491 = self.ini;
                                                                    var $6492 = self.idx;
                                                                    var $6493 = self.str;
                                                                    var _reply$pst$35 = Parser$State$new$(Parser$Error$maybe_combine$($6479, $6489), $6490, $6491, $6492, $6493);
                                                                    var self = _reply$pst$35;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $6495 = self.err;
                                                                            var _reply$41 = Parser$maybe$((_pst$41 => {
                                                                                var self = _pst$41;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6498 = self.err;
                                                                                        var _reply$47 = Kind$Parser$text$("as", _pst$41);
                                                                                        var self = _reply$47;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $6500 = self.err;
                                                                                                var self = $6498;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $6502 = self.value;
                                                                                                        var $6503 = Parser$Reply$error$(Parser$Error$combine$($6502, $6500));
                                                                                                        var $6501 = $6503;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $6504 = Parser$Reply$error$($6500);
                                                                                                        var $6501 = $6504;
                                                                                                        break;
                                                                                                };
                                                                                                var $6499 = $6501;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $6505 = self.pst;
                                                                                                var self = $6505;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6507 = self.err;
                                                                                                        var $6508 = self.nam;
                                                                                                        var $6509 = self.ini;
                                                                                                        var $6510 = self.idx;
                                                                                                        var $6511 = self.str;
                                                                                                        var _reply$pst$55 = Parser$State$new$(Parser$Error$maybe_combine$($6498, $6507), $6508, $6509, $6510, $6511);
                                                                                                        var self = _reply$pst$55;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6513 = self.err;
                                                                                                                var _reply$61 = Kind$Parser$name1$(_reply$pst$55);
                                                                                                                var self = _reply$61;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $6515 = self.err;
                                                                                                                        var self = $6513;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $6517 = self.value;
                                                                                                                                var $6518 = Parser$Reply$error$(Parser$Error$combine$($6517, $6515));
                                                                                                                                var $6516 = $6518;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $6519 = Parser$Reply$error$($6515);
                                                                                                                                var $6516 = $6519;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6514 = $6516;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $6520 = self.pst;
                                                                                                                        var $6521 = self.val;
                                                                                                                        var self = $6520;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6523 = self.err;
                                                                                                                                var $6524 = self.nam;
                                                                                                                                var $6525 = self.ini;
                                                                                                                                var $6526 = self.idx;
                                                                                                                                var $6527 = self.str;
                                                                                                                                var _reply$pst$69 = Parser$State$new$(Parser$Error$maybe_combine$($6513, $6523), $6524, $6525, $6526, $6527);
                                                                                                                                var self = _reply$pst$69;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $6529 = self.err;
                                                                                                                                        var _reply$75 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$69);
                                                                                                                                        var self = _reply$75;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $6531 = self.err;
                                                                                                                                                var self = $6529;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $6533 = self.value;
                                                                                                                                                        var $6534 = Parser$Reply$error$(Parser$Error$combine$($6533, $6531));
                                                                                                                                                        var $6532 = $6534;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $6535 = Parser$Reply$error$($6531);
                                                                                                                                                        var $6532 = $6535;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $6530 = $6532;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $6536 = self.pst;
                                                                                                                                                var self = $6536;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $6538 = self.err;
                                                                                                                                                        var $6539 = self.nam;
                                                                                                                                                        var $6540 = self.ini;
                                                                                                                                                        var $6541 = self.idx;
                                                                                                                                                        var $6542 = self.str;
                                                                                                                                                        var _reply$pst$83 = Parser$State$new$(Parser$Error$maybe_combine$($6529, $6538), $6539, $6540, $6541, $6542);
                                                                                                                                                        var $6543 = Parser$Reply$value$(_reply$pst$83, $6521);
                                                                                                                                                        var $6537 = $6543;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $6530 = $6537;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $6528 = $6530;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6522 = $6528;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6514 = $6522;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6512 = $6514;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6506 = $6512;
                                                                                                        break;
                                                                                                };
                                                                                                var $6499 = $6506;
                                                                                                break;
                                                                                        };
                                                                                        var $6497 = $6499;
                                                                                        break;
                                                                                };
                                                                                return $6497;
                                                                            }), _reply$pst$35);
                                                                            var self = _reply$41;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $6544 = self.err;
                                                                                    var self = $6495;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $6546 = self.value;
                                                                                            var $6547 = Parser$Reply$error$(Parser$Error$combine$($6546, $6544));
                                                                                            var $6545 = $6547;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $6548 = Parser$Reply$error$($6544);
                                                                                            var $6545 = $6548;
                                                                                            break;
                                                                                    };
                                                                                    var $6496 = $6545;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $6549 = self.pst;
                                                                                    var $6550 = self.val;
                                                                                    var self = $6549;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $6552 = self.err;
                                                                                            var $6553 = self.nam;
                                                                                            var $6554 = self.ini;
                                                                                            var $6555 = self.idx;
                                                                                            var $6556 = self.str;
                                                                                            var _reply$pst$49 = Parser$State$new$(Parser$Error$maybe_combine$($6495, $6552), $6553, $6554, $6555, $6556);
                                                                                            var _name$50 = Maybe$default$($6550, Kind$Term$extract_name$($6487));
                                                                                            var $6557 = Parser$Reply$value$(_reply$pst$49, Pair$new$(_name$50, $6487));
                                                                                            var $6551 = $6557;
                                                                                            break;
                                                                                    };
                                                                                    var $6496 = $6551;
                                                                                    break;
                                                                            };
                                                                            var $6494 = $6496;
                                                                            break;
                                                                    };
                                                                    var $6488 = $6494;
                                                                    break;
                                                            };
                                                            var $6480 = $6488;
                                                            break;
                                                    };
                                                    var $6478 = $6480;
                                                    break;
                                            };
                                            return $6478;
                                        }), _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6558 = self.err;
                                                var self = $6476;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6560 = self.value;
                                                        var $6561 = Parser$Reply$error$(Parser$Error$combine$($6560, $6558));
                                                        var $6559 = $6561;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6562 = Parser$Reply$error$($6558);
                                                        var $6559 = $6562;
                                                        break;
                                                };
                                                var $6477 = $6559;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6563 = self.pst;
                                                var $6564 = self.val;
                                                var self = $6563;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6566 = self.err;
                                                        var $6567 = self.nam;
                                                        var $6568 = self.ini;
                                                        var $6569 = self.idx;
                                                        var $6570 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6476, $6566), $6567, $6568, $6569, $6570);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6572 = self.err;
                                                                var _reply$35 = Kind$Parser$case$with(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $6574 = self.err;
                                                                        var self = $6572;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $6576 = self.value;
                                                                                var $6577 = Parser$Reply$error$(Parser$Error$combine$($6576, $6574));
                                                                                var $6575 = $6577;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $6578 = Parser$Reply$error$($6574);
                                                                                var $6575 = $6578;
                                                                                break;
                                                                        };
                                                                        var $6573 = $6575;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $6579 = self.pst;
                                                                        var $6580 = self.val;
                                                                        var self = $6579;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6582 = self.err;
                                                                                var $6583 = self.nam;
                                                                                var $6584 = self.ini;
                                                                                var $6585 = self.idx;
                                                                                var $6586 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($6572, $6582), $6583, $6584, $6585, $6586);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6588 = self.err;
                                                                                        var _reply$49 = Kind$Parser$items$("{", Kind$Parser$case$case, "}")(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $6590 = self.err;
                                                                                                var self = $6588;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $6592 = self.value;
                                                                                                        var $6593 = Parser$Reply$error$(Parser$Error$combine$($6592, $6590));
                                                                                                        var $6591 = $6593;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $6594 = Parser$Reply$error$($6590);
                                                                                                        var $6591 = $6594;
                                                                                                        break;
                                                                                                };
                                                                                                var $6589 = $6591;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $6595 = self.pst;
                                                                                                var $6596 = self.val;
                                                                                                var self = $6595;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6598 = self.err;
                                                                                                        var $6599 = self.nam;
                                                                                                        var $6600 = self.ini;
                                                                                                        var $6601 = self.idx;
                                                                                                        var $6602 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($6588, $6598), $6599, $6600, $6601, $6602);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6604 = self.err;
                                                                                                                var _reply$63 = Parser$maybe$(Kind$Parser$text("!"), _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $6606 = self.err;
                                                                                                                        var self = $6604;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $6608 = self.value;
                                                                                                                                var $6609 = Parser$Reply$error$(Parser$Error$combine$($6608, $6606));
                                                                                                                                var $6607 = $6609;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $6610 = Parser$Reply$error$($6606);
                                                                                                                                var $6607 = $6610;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6605 = $6607;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $6611 = self.pst;
                                                                                                                        var $6612 = self.val;
                                                                                                                        var self = $6611;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6614 = self.err;
                                                                                                                                var $6615 = self.nam;
                                                                                                                                var $6616 = self.ini;
                                                                                                                                var $6617 = self.idx;
                                                                                                                                var $6618 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($6604, $6614), $6615, $6616, $6617, $6618);
                                                                                                                                var self = _reply$pst$71;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $6620 = self.err;
                                                                                                                                        var _reply$77 = Parser$maybe$((_pst$77 => {
                                                                                                                                            var self = _pst$77;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $6623 = self.err;
                                                                                                                                                    var _reply$83 = Kind$Parser$text$("default", _pst$77);
                                                                                                                                                    var self = _reply$83;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                            var $6625 = self.err;
                                                                                                                                                            var self = $6623;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                    var $6627 = self.value;
                                                                                                                                                                    var $6628 = Parser$Reply$error$(Parser$Error$combine$($6627, $6625));
                                                                                                                                                                    var $6626 = $6628;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                    var $6629 = Parser$Reply$error$($6625);
                                                                                                                                                                    var $6626 = $6629;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $6624 = $6626;
                                                                                                                                                            break;
                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                            var $6630 = self.pst;
                                                                                                                                                            var self = $6630;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $6632 = self.err;
                                                                                                                                                                    var $6633 = self.nam;
                                                                                                                                                                    var $6634 = self.ini;
                                                                                                                                                                    var $6635 = self.idx;
                                                                                                                                                                    var $6636 = self.str;
                                                                                                                                                                    var _reply$pst$91 = Parser$State$new$(Parser$Error$maybe_combine$($6623, $6632), $6633, $6634, $6635, $6636);
                                                                                                                                                                    var self = _reply$pst$91;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                            var $6638 = self.err;
                                                                                                                                                                            var _reply$97 = Kind$Parser$term(_reply$pst$91);
                                                                                                                                                                            var self = _reply$97;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                    var $6640 = self.err;
                                                                                                                                                                                    var self = $6638;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                            var $6642 = self.value;
                                                                                                                                                                                            var $6643 = Parser$Reply$error$(Parser$Error$combine$($6642, $6640));
                                                                                                                                                                                            var $6641 = $6643;
                                                                                                                                                                                            break;
                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                            var $6644 = Parser$Reply$error$($6640);
                                                                                                                                                                                            var $6641 = $6644;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6639 = $6641;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                    var $6645 = self.pst;
                                                                                                                                                                                    var $6646 = self.val;
                                                                                                                                                                                    var self = $6645;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $6648 = self.err;
                                                                                                                                                                                            var $6649 = self.nam;
                                                                                                                                                                                            var $6650 = self.ini;
                                                                                                                                                                                            var $6651 = self.idx;
                                                                                                                                                                                            var $6652 = self.str;
                                                                                                                                                                                            var _reply$pst$105 = Parser$State$new$(Parser$Error$maybe_combine$($6638, $6648), $6649, $6650, $6651, $6652);
                                                                                                                                                                                            var $6653 = Parser$Reply$value$(_reply$pst$105, $6646);
                                                                                                                                                                                            var $6647 = $6653;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6639 = $6647;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $6637 = $6639;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $6631 = $6637;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $6624 = $6631;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $6622 = $6624;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            return $6622;
                                                                                                                                        }), _reply$pst$71);
                                                                                                                                        var self = _reply$77;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $6654 = self.err;
                                                                                                                                                var self = $6620;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $6656 = self.value;
                                                                                                                                                        var $6657 = Parser$Reply$error$(Parser$Error$combine$($6656, $6654));
                                                                                                                                                        var $6655 = $6657;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $6658 = Parser$Reply$error$($6654);
                                                                                                                                                        var $6655 = $6658;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $6621 = $6655;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $6659 = self.pst;
                                                                                                                                                var $6660 = self.val;
                                                                                                                                                var self = $6659;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $6662 = self.err;
                                                                                                                                                        var $6663 = self.nam;
                                                                                                                                                        var $6664 = self.ini;
                                                                                                                                                        var $6665 = self.idx;
                                                                                                                                                        var $6666 = self.str;
                                                                                                                                                        var _reply$pst$85 = Parser$State$new$(Parser$Error$maybe_combine$($6620, $6662), $6663, $6664, $6665, $6666);
                                                                                                                                                        var self = _reply$pst$85;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $6668 = self.err;
                                                                                                                                                                var _reply$91 = Parser$maybe$((_pst$91 => {
                                                                                                                                                                    var self = _pst$91;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                            var $6671 = self.err;
                                                                                                                                                                            var _reply$97 = Kind$Parser$text$(":", _pst$91);
                                                                                                                                                                            var self = _reply$97;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                    var $6673 = self.err;
                                                                                                                                                                                    var self = $6671;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                            var $6675 = self.value;
                                                                                                                                                                                            var $6676 = Parser$Reply$error$(Parser$Error$combine$($6675, $6673));
                                                                                                                                                                                            var $6674 = $6676;
                                                                                                                                                                                            break;
                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                            var $6677 = Parser$Reply$error$($6673);
                                                                                                                                                                                            var $6674 = $6677;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6672 = $6674;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                    var $6678 = self.pst;
                                                                                                                                                                                    var self = $6678;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $6680 = self.err;
                                                                                                                                                                                            var $6681 = self.nam;
                                                                                                                                                                                            var $6682 = self.ini;
                                                                                                                                                                                            var $6683 = self.idx;
                                                                                                                                                                                            var $6684 = self.str;
                                                                                                                                                                                            var _reply$pst$105 = Parser$State$new$(Parser$Error$maybe_combine$($6671, $6680), $6681, $6682, $6683, $6684);
                                                                                                                                                                                            var $6685 = Parser$append_error$(Kind$Parser$term, "\u{a}Inside motive.", _reply$pst$105);
                                                                                                                                                                                            var $6679 = $6685;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6672 = $6679;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $6670 = $6672;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    return $6670;
                                                                                                                                                                }), _reply$pst$85);
                                                                                                                                                                var self = _reply$91;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $6686 = self.err;
                                                                                                                                                                        var self = $6668;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $6688 = self.value;
                                                                                                                                                                                var $6689 = Parser$Reply$error$(Parser$Error$combine$($6688, $6686));
                                                                                                                                                                                var $6687 = $6689;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $6690 = Parser$Reply$error$($6686);
                                                                                                                                                                                var $6687 = $6690;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $6669 = $6687;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $6691 = self.pst;
                                                                                                                                                                        var $6692 = self.val;
                                                                                                                                                                        var self = $6691;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $6694 = self.err;
                                                                                                                                                                                var $6695 = self.nam;
                                                                                                                                                                                var $6696 = self.ini;
                                                                                                                                                                                var $6697 = self.idx;
                                                                                                                                                                                var $6698 = self.str;
                                                                                                                                                                                var _reply$pst$99 = Parser$State$new$(Parser$Error$maybe_combine$($6668, $6694), $6695, $6696, $6697, $6698);
                                                                                                                                                                                var self = $6692;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                        var $6700 = self.value;
                                                                                                                                                                                        var $6701 = Maybe$some$($6700);
                                                                                                                                                                                        var _moti$100 = $6701;
                                                                                                                                                                                        break;
                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                        var self = $6612;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                var $6703 = Maybe$some$(Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                var $6702 = $6703;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                var $6704 = Maybe$none;
                                                                                                                                                                                                var $6702 = $6704;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var _moti$100 = $6702;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $6699 = Parser$Reply$value$(_reply$pst$99, Kind$Parser$case$build$($6564, $6580, $6596, $6660, _moti$100));
                                                                                                                                                                                var $6693 = $6699;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $6669 = $6693;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $6667 = $6669;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $6661 = $6667;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $6621 = $6661;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $6619 = $6621;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6613 = $6619;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6605 = $6613;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6603 = $6605;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6597 = $6603;
                                                                                                        break;
                                                                                                };
                                                                                                var $6589 = $6597;
                                                                                                break;
                                                                                        };
                                                                                        var $6587 = $6589;
                                                                                        break;
                                                                                };
                                                                                var $6581 = $6587;
                                                                                break;
                                                                        };
                                                                        var $6573 = $6581;
                                                                        break;
                                                                };
                                                                var $6571 = $6573;
                                                                break;
                                                        };
                                                        var $6565 = $6571;
                                                        break;
                                                };
                                                var $6477 = $6565;
                                                break;
                                        };
                                        var $6475 = $6477;
                                        break;
                                };
                                var $6469 = $6475;
                                break;
                        };
                        var $6462 = $6469;
                        break;
                };
                var $6460 = $6462;
                break;
        };
        return $6460;
    }));
    const Kind$Parser$without = Kind$Parser$block("without")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6706 = self.err;
                var _reply$7 = Kind$Parser$text$("without ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6708 = self.err;
                        var self = $6706;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6710 = self.value;
                                var $6711 = Parser$Reply$error$(Parser$Error$combine$($6710, $6708));
                                var $6709 = $6711;
                                break;
                            case 'Maybe.none':
                                var $6712 = Parser$Reply$error$($6708);
                                var $6709 = $6712;
                                break;
                        };
                        var $6707 = $6709;
                        break;
                    case 'Parser.Reply.value':
                        var $6713 = self.pst;
                        var self = $6713;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6715 = self.err;
                                var $6716 = self.nam;
                                var $6717 = self.ini;
                                var $6718 = self.idx;
                                var $6719 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6706, $6715), $6716, $6717, $6718, $6719);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6721 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6723 = self.err;
                                                var self = $6721;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6725 = self.value;
                                                        var $6726 = Parser$Reply$error$(Parser$Error$combine$($6725, $6723));
                                                        var $6724 = $6726;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6727 = Parser$Reply$error$($6723);
                                                        var $6724 = $6727;
                                                        break;
                                                };
                                                var $6722 = $6724;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6728 = self.pst;
                                                var $6729 = self.val;
                                                var self = $6728;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6731 = self.err;
                                                        var $6732 = self.nam;
                                                        var $6733 = self.ini;
                                                        var $6734 = self.idx;
                                                        var $6735 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6721, $6731), $6732, $6733, $6734, $6735);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6737 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(":", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $6739 = self.err;
                                                                        var self = $6737;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $6741 = self.value;
                                                                                var $6742 = Parser$Reply$error$(Parser$Error$combine$($6741, $6739));
                                                                                var $6740 = $6742;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $6743 = Parser$Reply$error$($6739);
                                                                                var $6740 = $6743;
                                                                                break;
                                                                        };
                                                                        var $6738 = $6740;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $6744 = self.pst;
                                                                        var self = $6744;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6746 = self.err;
                                                                                var $6747 = self.nam;
                                                                                var $6748 = self.ini;
                                                                                var $6749 = self.idx;
                                                                                var $6750 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($6737, $6746), $6747, $6748, $6749, $6750);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6752 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $6754 = self.err;
                                                                                                var self = $6752;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $6756 = self.value;
                                                                                                        var $6757 = Parser$Reply$error$(Parser$Error$combine$($6756, $6754));
                                                                                                        var $6755 = $6757;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $6758 = Parser$Reply$error$($6754);
                                                                                                        var $6755 = $6758;
                                                                                                        break;
                                                                                                };
                                                                                                var $6753 = $6755;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $6759 = self.pst;
                                                                                                var $6760 = self.val;
                                                                                                var self = $6759;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6762 = self.err;
                                                                                                        var $6763 = self.nam;
                                                                                                        var $6764 = self.ini;
                                                                                                        var $6765 = self.idx;
                                                                                                        var $6766 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($6752, $6762), $6763, $6764, $6765, $6766);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6768 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$term(_reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $6770 = self.err;
                                                                                                                        var self = $6768;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $6772 = self.value;
                                                                                                                                var $6773 = Parser$Reply$error$(Parser$Error$combine$($6772, $6770));
                                                                                                                                var $6771 = $6773;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $6774 = Parser$Reply$error$($6770);
                                                                                                                                var $6771 = $6774;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6769 = $6771;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $6775 = self.pst;
                                                                                                                        var $6776 = self.val;
                                                                                                                        var self = $6775;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6778 = self.err;
                                                                                                                                var $6779 = self.nam;
                                                                                                                                var $6780 = self.ini;
                                                                                                                                var $6781 = self.idx;
                                                                                                                                var $6782 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($6768, $6778), $6779, $6780, $6781, $6782);
                                                                                                                                var _term$72 = Kind$Term$ref$($6729);
                                                                                                                                var _term$73 = Kind$Term$app$(_term$72, Kind$Term$lam$("", (_x$73 => {
                                                                                                                                    var $6784 = Kind$Term$hol$(Bits$e);
                                                                                                                                    return $6784;
                                                                                                                                })));
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, $6760);
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, Kind$Term$lam$($6729, (_x$75 => {
                                                                                                                                    var $6785 = $6776;
                                                                                                                                    return $6785;
                                                                                                                                })));
                                                                                                                                var $6783 = Parser$Reply$value$(_reply$pst$71, _term$75);
                                                                                                                                var $6777 = $6783;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6769 = $6777;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6767 = $6769;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6761 = $6767;
                                                                                                        break;
                                                                                                };
                                                                                                var $6753 = $6761;
                                                                                                break;
                                                                                        };
                                                                                        var $6751 = $6753;
                                                                                        break;
                                                                                };
                                                                                var $6745 = $6751;
                                                                                break;
                                                                        };
                                                                        var $6738 = $6745;
                                                                        break;
                                                                };
                                                                var $6736 = $6738;
                                                                break;
                                                        };
                                                        var $6730 = $6736;
                                                        break;
                                                };
                                                var $6722 = $6730;
                                                break;
                                        };
                                        var $6720 = $6722;
                                        break;
                                };
                                var $6714 = $6720;
                                break;
                        };
                        var $6707 = $6714;
                        break;
                };
                var $6705 = $6707;
                break;
        };
        return $6705;
    }));

    function Kind$Parser$switch$case$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6787 = self.err;
                var _reply$7 = Kind$Parser$term(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6789 = self.err;
                        var self = $6787;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6791 = self.value;
                                var $6792 = Parser$Reply$error$(Parser$Error$combine$($6791, $6789));
                                var $6790 = $6792;
                                break;
                            case 'Maybe.none':
                                var $6793 = Parser$Reply$error$($6789);
                                var $6790 = $6793;
                                break;
                        };
                        var $6788 = $6790;
                        break;
                    case 'Parser.Reply.value':
                        var $6794 = self.pst;
                        var $6795 = self.val;
                        var self = $6794;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6797 = self.err;
                                var $6798 = self.nam;
                                var $6799 = self.ini;
                                var $6800 = self.idx;
                                var $6801 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6787, $6797), $6798, $6799, $6800, $6801);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6803 = self.err;
                                        var _reply$21 = Kind$Parser$text$(":", _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6805 = self.err;
                                                var self = $6803;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6807 = self.value;
                                                        var $6808 = Parser$Reply$error$(Parser$Error$combine$($6807, $6805));
                                                        var $6806 = $6808;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6809 = Parser$Reply$error$($6805);
                                                        var $6806 = $6809;
                                                        break;
                                                };
                                                var $6804 = $6806;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6810 = self.pst;
                                                var self = $6810;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6812 = self.err;
                                                        var $6813 = self.nam;
                                                        var $6814 = self.ini;
                                                        var $6815 = self.idx;
                                                        var $6816 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6803, $6812), $6813, $6814, $6815, $6816);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6818 = self.err;
                                                                var _reply$35 = Kind$Parser$term(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $6820 = self.err;
                                                                        var self = $6818;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $6822 = self.value;
                                                                                var $6823 = Parser$Reply$error$(Parser$Error$combine$($6822, $6820));
                                                                                var $6821 = $6823;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $6824 = Parser$Reply$error$($6820);
                                                                                var $6821 = $6824;
                                                                                break;
                                                                        };
                                                                        var $6819 = $6821;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $6825 = self.pst;
                                                                        var $6826 = self.val;
                                                                        var self = $6825;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6828 = self.err;
                                                                                var $6829 = self.nam;
                                                                                var $6830 = self.ini;
                                                                                var $6831 = self.idx;
                                                                                var $6832 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($6818, $6828), $6829, $6830, $6831, $6832);
                                                                                var $6833 = Parser$Reply$value$(_reply$pst$43, Pair$new$($6795, $6826));
                                                                                var $6827 = $6833;
                                                                                break;
                                                                        };
                                                                        var $6819 = $6827;
                                                                        break;
                                                                };
                                                                var $6817 = $6819;
                                                                break;
                                                        };
                                                        var $6811 = $6817;
                                                        break;
                                                };
                                                var $6804 = $6811;
                                                break;
                                        };
                                        var $6802 = $6804;
                                        break;
                                };
                                var $6796 = $6802;
                                break;
                        };
                        var $6788 = $6796;
                        break;
                };
                var $6786 = $6788;
                break;
        };
        return $6786;
    };
    const Kind$Parser$switch$case = x0 => Kind$Parser$switch$case$(x0);
    const Kind$Parser$switch = Kind$Parser$block("switch")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6835 = self.err;
                var _reply$7 = Kind$Parser$text$("switch", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6837 = self.err;
                        var self = $6835;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6839 = self.value;
                                var $6840 = Parser$Reply$error$(Parser$Error$combine$($6839, $6837));
                                var $6838 = $6840;
                                break;
                            case 'Maybe.none':
                                var $6841 = Parser$Reply$error$($6837);
                                var $6838 = $6841;
                                break;
                        };
                        var $6836 = $6838;
                        break;
                    case 'Parser.Reply.value':
                        var $6842 = self.pst;
                        var self = $6842;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6844 = self.err;
                                var $6845 = self.nam;
                                var $6846 = self.ini;
                                var $6847 = self.idx;
                                var $6848 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6835, $6844), $6845, $6846, $6847, $6848);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6850 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6852 = self.err;
                                                var self = $6850;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6854 = self.value;
                                                        var $6855 = Parser$Reply$error$(Parser$Error$combine$($6854, $6852));
                                                        var $6853 = $6855;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6856 = Parser$Reply$error$($6852);
                                                        var $6853 = $6856;
                                                        break;
                                                };
                                                var $6851 = $6853;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6857 = self.pst;
                                                var $6858 = self.val;
                                                var self = $6857;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6860 = self.err;
                                                        var $6861 = self.nam;
                                                        var $6862 = self.ini;
                                                        var $6863 = self.idx;
                                                        var $6864 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6850, $6860), $6861, $6862, $6863, $6864);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6866 = self.err;
                                                                var _reply$35 = Kind$Parser$items$("{", Kind$Parser$switch$case, "}")(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $6868 = self.err;
                                                                        var self = $6866;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $6870 = self.value;
                                                                                var $6871 = Parser$Reply$error$(Parser$Error$combine$($6870, $6868));
                                                                                var $6869 = $6871;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $6872 = Parser$Reply$error$($6868);
                                                                                var $6869 = $6872;
                                                                                break;
                                                                        };
                                                                        var $6867 = $6869;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $6873 = self.pst;
                                                                        var $6874 = self.val;
                                                                        var self = $6873;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6876 = self.err;
                                                                                var $6877 = self.nam;
                                                                                var $6878 = self.ini;
                                                                                var $6879 = self.idx;
                                                                                var $6880 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($6866, $6876), $6877, $6878, $6879, $6880);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6882 = self.err;
                                                                                        var _reply$49 = Kind$Parser$text$("default", _reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $6884 = self.err;
                                                                                                var self = $6882;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $6886 = self.value;
                                                                                                        var $6887 = Parser$Reply$error$(Parser$Error$combine$($6886, $6884));
                                                                                                        var $6885 = $6887;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $6888 = Parser$Reply$error$($6884);
                                                                                                        var $6885 = $6888;
                                                                                                        break;
                                                                                                };
                                                                                                var $6883 = $6885;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $6889 = self.pst;
                                                                                                var self = $6889;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6891 = self.err;
                                                                                                        var $6892 = self.nam;
                                                                                                        var $6893 = self.ini;
                                                                                                        var $6894 = self.idx;
                                                                                                        var $6895 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($6882, $6891), $6892, $6893, $6894, $6895);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6897 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$term(_reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $6899 = self.err;
                                                                                                                        var self = $6897;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $6901 = self.value;
                                                                                                                                var $6902 = Parser$Reply$error$(Parser$Error$combine$($6901, $6899));
                                                                                                                                var $6900 = $6902;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $6903 = Parser$Reply$error$($6899);
                                                                                                                                var $6900 = $6903;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6898 = $6900;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $6904 = self.pst;
                                                                                                                        var $6905 = self.val;
                                                                                                                        var self = $6904;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6907 = self.err;
                                                                                                                                var $6908 = self.nam;
                                                                                                                                var $6909 = self.ini;
                                                                                                                                var $6910 = self.idx;
                                                                                                                                var $6911 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($6897, $6907), $6908, $6909, $6910, $6911);
                                                                                                                                var _term$72 = List$fold$($6874, $6905, (_cse$72 => _rest$73 => {
                                                                                                                                    var self = _cse$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Pair.new':
                                                                                                                                            var $6914 = self.fst;
                                                                                                                                            var $6915 = self.snd;
                                                                                                                                            var _term$76 = Kind$Term$app$($6858, $6914);
                                                                                                                                            var _term$77 = Kind$Term$app$(_term$76, Kind$Term$lam$("", (_x$77 => {
                                                                                                                                                var $6917 = Kind$Term$hol$(Bits$e);
                                                                                                                                                return $6917;
                                                                                                                                            })));
                                                                                                                                            var _term$78 = Kind$Term$app$(_term$77, $6915);
                                                                                                                                            var _term$79 = Kind$Term$app$(_term$78, _rest$73);
                                                                                                                                            var $6916 = _term$79;
                                                                                                                                            var $6913 = $6916;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    return $6913;
                                                                                                                                }));
                                                                                                                                var $6912 = Parser$Reply$value$(_reply$pst$71, _term$72);
                                                                                                                                var $6906 = $6912;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6898 = $6906;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6896 = $6898;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6890 = $6896;
                                                                                                        break;
                                                                                                };
                                                                                                var $6883 = $6890;
                                                                                                break;
                                                                                        };
                                                                                        var $6881 = $6883;
                                                                                        break;
                                                                                };
                                                                                var $6875 = $6881;
                                                                                break;
                                                                        };
                                                                        var $6867 = $6875;
                                                                        break;
                                                                };
                                                                var $6865 = $6867;
                                                                break;
                                                        };
                                                        var $6859 = $6865;
                                                        break;
                                                };
                                                var $6851 = $6859;
                                                break;
                                        };
                                        var $6849 = $6851;
                                        break;
                                };
                                var $6843 = $6849;
                                break;
                        };
                        var $6836 = $6843;
                        break;
                };
                var $6834 = $6836;
                break;
        };
        return $6834;
    }));

    function Bits$tail$(_a$1) {
        var self = _a$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $6919 = self.slice(0, -1);
                var $6920 = $6919;
                var $6918 = $6920;
                break;
            case 'i':
                var $6921 = self.slice(0, -1);
                var $6922 = $6921;
                var $6918 = $6922;
                break;
            case 'e':
                var $6923 = Bits$e;
                var $6918 = $6923;
                break;
        };
        return $6918;
    };
    const Bits$tail = x0 => Bits$tail$(x0);

    function Bits$inc$(_a$1) {
        var self = _a$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $6925 = self.slice(0, -1);
                var $6926 = ($6925 + '1');
                var $6924 = $6926;
                break;
            case 'i':
                var $6927 = self.slice(0, -1);
                var $6928 = (Bits$inc$($6927) + '0');
                var $6924 = $6928;
                break;
            case 'e':
                var $6929 = (Bits$e + '1');
                var $6924 = $6929;
                break;
        };
        return $6924;
    };
    const Bits$inc = x0 => Bits$inc$(x0);
    const Nat$to_bits = a0 => (nat_to_bits(a0));

    function Maybe$is_some$(_m$2) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.none':
                var $6931 = Bool$false;
                var $6930 = $6931;
                break;
            case 'Maybe.some':
                var $6932 = Bool$true;
                var $6930 = $6932;
                break;
        };
        return $6930;
    };
    const Maybe$is_some = x0 => Maybe$is_some$(x0);

    function Kind$Term$gol$(_name$1, _dref$2, _verb$3) {
        var $6933 = ({
            _: 'Kind.Term.gol',
            'name': _name$1,
            'dref': _dref$2,
            'verb': _verb$3
        });
        return $6933;
    };
    const Kind$Term$gol = x0 => x1 => x2 => Kind$Term$gol$(x0, x1, x2);
    const Kind$Parser$goal = Kind$Parser$block("goal")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6935 = self.err;
                var _reply$7 = Kind$Parser$text$("?", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6937 = self.err;
                        var self = $6935;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6939 = self.value;
                                var $6940 = Parser$Reply$error$(Parser$Error$combine$($6939, $6937));
                                var $6938 = $6940;
                                break;
                            case 'Maybe.none':
                                var $6941 = Parser$Reply$error$($6937);
                                var $6938 = $6941;
                                break;
                        };
                        var $6936 = $6938;
                        break;
                    case 'Parser.Reply.value':
                        var $6942 = self.pst;
                        var self = $6942;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6944 = self.err;
                                var $6945 = self.nam;
                                var $6946 = self.ini;
                                var $6947 = self.idx;
                                var $6948 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6935, $6944), $6945, $6946, $6947, $6948);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6950 = self.err;
                                        var _reply$21 = Kind$Parser$name$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6952 = self.err;
                                                var self = $6950;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6954 = self.value;
                                                        var $6955 = Parser$Reply$error$(Parser$Error$combine$($6954, $6952));
                                                        var $6953 = $6955;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6956 = Parser$Reply$error$($6952);
                                                        var $6953 = $6956;
                                                        break;
                                                };
                                                var $6951 = $6953;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6957 = self.pst;
                                                var $6958 = self.val;
                                                var self = $6957;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6960 = self.err;
                                                        var $6961 = self.nam;
                                                        var $6962 = self.ini;
                                                        var $6963 = self.idx;
                                                        var $6964 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6950, $6960), $6961, $6962, $6963, $6964);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6966 = self.err;
                                                                var _reply$35 = Parser$many$((_pst$35 => {
                                                                    var self = _pst$35;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $6969 = self.err;
                                                                            var _reply$41 = Kind$Parser$text$("-", _pst$35);
                                                                            var self = _reply$41;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $6971 = self.err;
                                                                                    var self = $6969;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $6973 = self.value;
                                                                                            var $6974 = Parser$Reply$error$(Parser$Error$combine$($6973, $6971));
                                                                                            var $6972 = $6974;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $6975 = Parser$Reply$error$($6971);
                                                                                            var $6972 = $6975;
                                                                                            break;
                                                                                    };
                                                                                    var $6970 = $6972;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $6976 = self.pst;
                                                                                    var self = $6976;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $6978 = self.err;
                                                                                            var $6979 = self.nam;
                                                                                            var $6980 = self.ini;
                                                                                            var $6981 = self.idx;
                                                                                            var $6982 = self.str;
                                                                                            var _reply$pst$49 = Parser$State$new$(Parser$Error$maybe_combine$($6969, $6978), $6979, $6980, $6981, $6982);
                                                                                            var self = _reply$pst$49;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $6984 = self.err;
                                                                                                    var _reply$55 = Parser$nat$(_reply$pst$49);
                                                                                                    var self = _reply$55;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $6986 = self.err;
                                                                                                            var self = $6984;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $6988 = self.value;
                                                                                                                    var $6989 = Parser$Reply$error$(Parser$Error$combine$($6988, $6986));
                                                                                                                    var $6987 = $6989;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $6990 = Parser$Reply$error$($6986);
                                                                                                                    var $6987 = $6990;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $6985 = $6987;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $6991 = self.pst;
                                                                                                            var $6992 = self.val;
                                                                                                            var self = $6991;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $6994 = self.err;
                                                                                                                    var $6995 = self.nam;
                                                                                                                    var $6996 = self.ini;
                                                                                                                    var $6997 = self.idx;
                                                                                                                    var $6998 = self.str;
                                                                                                                    var _reply$pst$63 = Parser$State$new$(Parser$Error$maybe_combine$($6984, $6994), $6995, $6996, $6997, $6998);
                                                                                                                    var _bits$64 = Bits$reverse$(Bits$tail$(Bits$reverse$((nat_to_bits($6992)))));
                                                                                                                    var $6999 = Parser$Reply$value$(_reply$pst$63, _bits$64);
                                                                                                                    var $6993 = $6999;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $6985 = $6993;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $6983 = $6985;
                                                                                                    break;
                                                                                            };
                                                                                            var $6977 = $6983;
                                                                                            break;
                                                                                    };
                                                                                    var $6970 = $6977;
                                                                                    break;
                                                                            };
                                                                            var $6968 = $6970;
                                                                            break;
                                                                    };
                                                                    return $6968;
                                                                }))(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7000 = self.err;
                                                                        var self = $6966;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7002 = self.value;
                                                                                var $7003 = Parser$Reply$error$(Parser$Error$combine$($7002, $7000));
                                                                                var $7001 = $7003;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7004 = Parser$Reply$error$($7000);
                                                                                var $7001 = $7004;
                                                                                break;
                                                                        };
                                                                        var $6967 = $7001;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7005 = self.pst;
                                                                        var $7006 = self.val;
                                                                        var self = $7005;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7008 = self.err;
                                                                                var $7009 = self.nam;
                                                                                var $7010 = self.ini;
                                                                                var $7011 = self.idx;
                                                                                var $7012 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($6966, $7008), $7009, $7010, $7011, $7012);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7014 = self.err;
                                                                                        var self = _reply$pst$43;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $7016 = self.err;
                                                                                                var _reply$54 = Parser$maybe$(Parser$text("-"), _reply$pst$43);
                                                                                                var self = _reply$54;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.Reply.error':
                                                                                                        var $7018 = self.err;
                                                                                                        var self = $7016;
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $7020 = self.value;
                                                                                                                var $7021 = Parser$Reply$error$(Parser$Error$combine$($7020, $7018));
                                                                                                                var $7019 = $7021;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $7022 = Parser$Reply$error$($7018);
                                                                                                                var $7019 = $7022;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7017 = $7019;
                                                                                                        break;
                                                                                                    case 'Parser.Reply.value':
                                                                                                        var $7023 = self.pst;
                                                                                                        var $7024 = self.val;
                                                                                                        var self = $7023;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $7026 = self.err;
                                                                                                                var $7027 = self.nam;
                                                                                                                var $7028 = self.ini;
                                                                                                                var $7029 = self.idx;
                                                                                                                var $7030 = self.str;
                                                                                                                var _reply$pst$62 = Parser$State$new$(Parser$Error$maybe_combine$($7016, $7026), $7027, $7028, $7029, $7030);
                                                                                                                var $7031 = Parser$Reply$value$(_reply$pst$62, Maybe$is_some$($7024));
                                                                                                                var $7025 = $7031;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7017 = $7025;
                                                                                                        break;
                                                                                                };
                                                                                                var _reply$49 = $7017;
                                                                                                break;
                                                                                        };
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $7032 = self.err;
                                                                                                var self = $7014;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $7034 = self.value;
                                                                                                        var $7035 = Parser$Reply$error$(Parser$Error$combine$($7034, $7032));
                                                                                                        var $7033 = $7035;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $7036 = Parser$Reply$error$($7032);
                                                                                                        var $7033 = $7036;
                                                                                                        break;
                                                                                                };
                                                                                                var $7015 = $7033;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $7037 = self.pst;
                                                                                                var $7038 = self.val;
                                                                                                var self = $7037;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $7040 = self.err;
                                                                                                        var $7041 = self.nam;
                                                                                                        var $7042 = self.ini;
                                                                                                        var $7043 = self.idx;
                                                                                                        var $7044 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($7014, $7040), $7041, $7042, $7043, $7044);
                                                                                                        var $7045 = Parser$Reply$value$(_reply$pst$57, Kind$Term$gol$($6958, $7006, $7038));
                                                                                                        var $7039 = $7045;
                                                                                                        break;
                                                                                                };
                                                                                                var $7015 = $7039;
                                                                                                break;
                                                                                        };
                                                                                        var $7013 = $7015;
                                                                                        break;
                                                                                };
                                                                                var $7007 = $7013;
                                                                                break;
                                                                        };
                                                                        var $6967 = $7007;
                                                                        break;
                                                                };
                                                                var $6965 = $6967;
                                                                break;
                                                        };
                                                        var $6959 = $6965;
                                                        break;
                                                };
                                                var $6951 = $6959;
                                                break;
                                        };
                                        var $6949 = $6951;
                                        break;
                                };
                                var $6943 = $6949;
                                break;
                        };
                        var $6936 = $6943;
                        break;
                };
                var $6934 = $6936;
                break;
        };
        return $6934;
    }));
    const Kind$Parser$hole = Kind$Parser$block("hole")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7047 = self.err;
                var _reply$7 = Kind$Parser$text$("_", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7049 = self.err;
                        var self = $7047;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7051 = self.value;
                                var $7052 = Parser$Reply$error$(Parser$Error$combine$($7051, $7049));
                                var $7050 = $7052;
                                break;
                            case 'Maybe.none':
                                var $7053 = Parser$Reply$error$($7049);
                                var $7050 = $7053;
                                break;
                        };
                        var $7048 = $7050;
                        break;
                    case 'Parser.Reply.value':
                        var $7054 = self.pst;
                        var self = $7054;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7056 = self.err;
                                var $7057 = self.nam;
                                var $7058 = self.ini;
                                var $7059 = self.idx;
                                var $7060 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7047, $7056), $7057, $7058, $7059, $7060);
                                var $7061 = Parser$Reply$value$(_reply$pst$15, Kind$Term$hol$(Bits$e));
                                var $7055 = $7061;
                                break;
                        };
                        var $7048 = $7055;
                        break;
                };
                var $7046 = $7048;
                break;
        };
        return $7046;
    }));

    function Kind$Parser$float$sign$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7063 = self.nam;
                var $7064 = self.ini;
                var $7065 = self.idx;
                var $7066 = self.str;
                var self = $7066;
                if (self.length === 0) {
                    var $7068 = Parser$Reply$fail$($7063, $7064, $7065, "Expected \'+\' or \'-\'.");
                    var $7067 = $7068;
                } else {
                    var $7069 = self.charCodeAt(0);
                    var $7070 = self.slice(1);
                    var self = (($7069 === 43) || ($7069 === 45));
                    if (self) {
                        var $7072 = Parser$Reply$value$(_pst$1, $7069);
                        var $7071 = $7072;
                    } else {
                        var $7073 = Parser$Reply$fail$($7063, $7064, $7065, "Expected \'+\' ou \'-\'.");
                        var $7071 = $7073;
                    };
                    var $7067 = $7071;
                };
                var $7062 = $7067;
                break;
        };
        return $7062;
    };
    const Kind$Parser$float$sign = x0 => Kind$Parser$float$sign$(x0);

    function List$any$(_cond$2, _list$3) {
        var List$any$ = (_cond$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_cond$2, _list$3]
        });
        var List$any = _cond$2 => _list$3 => List$any$(_cond$2, _list$3);
        var arg = [_cond$2, _list$3];
        while (true) {
            let [_cond$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $7074 = self.head;
                        var $7075 = self.tail;
                        var self = _cond$2($7074);
                        if (self) {
                            var $7077 = Bool$true;
                            var $7076 = $7077;
                        } else {
                            var $7078 = List$any$(_cond$2, $7075);
                            var $7076 = $7078;
                        };
                        return $7076;
                    case 'List.nil':
                        var $7079 = Bool$false;
                        return $7079;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$any = x0 => x1 => List$any$(x0, x1);

    function Kind$Parser$float$str_digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7081 = self.err;
                var $7082 = self.nam;
                var $7083 = self.ini;
                var $7084 = self.idx;
                var $7085 = self.str;
                var self = $7085;
                if (self.length === 0) {
                    var $7087 = Parser$Reply$fail$($7082, $7083, $7084, "Not a digit.");
                    var $7086 = $7087;
                } else {
                    var $7088 = self.charCodeAt(0);
                    var $7089 = self.slice(1);
                    var _digits$9 = List$cons$(48, List$cons$(49, List$cons$(50, List$cons$(51, List$cons$(52, List$cons$(52, List$cons$(53, List$cons$(54, List$cons$(55, List$cons$(56, List$cons$(57, List$nil)))))))))));
                    var _pst$10 = Parser$State$new$($7081, $7082, $7083, Nat$succ$($7084), $7089);
                    var self = List$any$(a1 => ($7088 === a1), _digits$9);
                    if (self) {
                        var $7091 = Parser$Reply$value$(_pst$10, $7088);
                        var $7090 = $7091;
                    } else {
                        var $7092 = Parser$Reply$fail$($7082, $7083, $7084, "Not a digit.");
                        var $7090 = $7092;
                    };
                    var $7086 = $7090;
                };
                var $7080 = $7086;
                break;
        };
        return $7080;
    };
    const Kind$Parser$float$str_digit = x0 => Kind$Parser$float$str_digit$(x0);

    function String$from_list$(_xs$1) {
        var self = _xs$1;
        switch (self._) {
            case 'List.cons':
                var $7094 = self.head;
                var $7095 = self.tail;
                var $7096 = String$cons$($7094, String$from_list$($7095));
                var $7093 = $7096;
                break;
            case 'List.nil':
                var $7097 = String$nil;
                var $7093 = $7097;
                break;
        };
        return $7093;
    };
    const String$from_list = x0 => String$from_list$(x0);
    const Kind$Parser$float$64 = Kind$Parser$block("float")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7099 = self.err;
                var _reply$7 = Parser$maybe$(Kind$Parser$float$sign, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7101 = self.err;
                        var self = $7099;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7103 = self.value;
                                var $7104 = Parser$Reply$error$(Parser$Error$combine$($7103, $7101));
                                var $7102 = $7104;
                                break;
                            case 'Maybe.none':
                                var $7105 = Parser$Reply$error$($7101);
                                var $7102 = $7105;
                                break;
                        };
                        var $7100 = $7102;
                        break;
                    case 'Parser.Reply.value':
                        var $7106 = self.pst;
                        var $7107 = self.val;
                        var self = $7106;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7109 = self.err;
                                var $7110 = self.nam;
                                var $7111 = self.ini;
                                var $7112 = self.idx;
                                var $7113 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7099, $7109), $7110, $7111, $7112, $7113);
                                var _sign$16 = Maybe$default$($7107, 43);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7115 = self.err;
                                        var _reply$22 = Parser$many1$(Kind$Parser$float$str_digit, _reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7117 = self.err;
                                                var self = $7115;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7119 = self.value;
                                                        var $7120 = Parser$Reply$error$(Parser$Error$combine$($7119, $7117));
                                                        var $7118 = $7120;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7121 = Parser$Reply$error$($7117);
                                                        var $7118 = $7121;
                                                        break;
                                                };
                                                var $7116 = $7118;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7122 = self.pst;
                                                var $7123 = self.val;
                                                var self = $7122;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7125 = self.err;
                                                        var $7126 = self.nam;
                                                        var $7127 = self.ini;
                                                        var $7128 = self.idx;
                                                        var $7129 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($7115, $7125), $7126, $7127, $7128, $7129);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7131 = self.err;
                                                                var _reply$36 = Parser$text$(".", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7133 = self.err;
                                                                        var self = $7131;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7135 = self.value;
                                                                                var $7136 = Parser$Reply$error$(Parser$Error$combine$($7135, $7133));
                                                                                var $7134 = $7136;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7137 = Parser$Reply$error$($7133);
                                                                                var $7134 = $7137;
                                                                                break;
                                                                        };
                                                                        var $7132 = $7134;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7138 = self.pst;
                                                                        var self = $7138;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7140 = self.err;
                                                                                var $7141 = self.nam;
                                                                                var $7142 = self.ini;
                                                                                var $7143 = self.idx;
                                                                                var $7144 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($7131, $7140), $7141, $7142, $7143, $7144);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7146 = self.err;
                                                                                        var _reply$50 = Parser$many1$(Kind$Parser$float$str_digit, _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $7148 = self.err;
                                                                                                var self = $7146;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $7150 = self.value;
                                                                                                        var $7151 = Parser$Reply$error$(Parser$Error$combine$($7150, $7148));
                                                                                                        var $7149 = $7151;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $7152 = Parser$Reply$error$($7148);
                                                                                                        var $7149 = $7152;
                                                                                                        break;
                                                                                                };
                                                                                                var $7147 = $7149;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $7153 = self.pst;
                                                                                                var $7154 = self.val;
                                                                                                var self = $7153;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $7156 = self.err;
                                                                                                        var $7157 = self.nam;
                                                                                                        var $7158 = self.ini;
                                                                                                        var $7159 = self.idx;
                                                                                                        var $7160 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($7146, $7156), $7157, $7158, $7159, $7160);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $7162 = self.err;
                                                                                                                var _reply$64 = Parser$text$("#64", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $7164 = self.err;
                                                                                                                        var self = $7162;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $7166 = self.value;
                                                                                                                                var $7167 = Parser$Reply$error$(Parser$Error$combine$($7166, $7164));
                                                                                                                                var $7165 = $7167;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $7168 = Parser$Reply$error$($7164);
                                                                                                                                var $7165 = $7168;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7163 = $7165;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $7169 = self.pst;
                                                                                                                        var self = $7169;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $7171 = self.err;
                                                                                                                                var $7172 = self.nam;
                                                                                                                                var $7173 = self.ini;
                                                                                                                                var $7174 = self.idx;
                                                                                                                                var $7175 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($7162, $7171), $7172, $7173, $7174, $7175);
                                                                                                                                var _float_str$73 = Kind$Term$str$((String$cons$(_sign$16, String$from_list$($7123)) + ("." + String$from_list$($7154))));
                                                                                                                                var _conv$74 = Kind$Term$ref$("F64.parse");
                                                                                                                                var _term$75 = Kind$Term$app$(_conv$74, _float_str$73);
                                                                                                                                var $7176 = Parser$Reply$value$(_reply$pst$72, _term$75);
                                                                                                                                var $7170 = $7176;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7163 = $7170;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $7161 = $7163;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7155 = $7161;
                                                                                                        break;
                                                                                                };
                                                                                                var $7147 = $7155;
                                                                                                break;
                                                                                        };
                                                                                        var $7145 = $7147;
                                                                                        break;
                                                                                };
                                                                                var $7139 = $7145;
                                                                                break;
                                                                        };
                                                                        var $7132 = $7139;
                                                                        break;
                                                                };
                                                                var $7130 = $7132;
                                                                break;
                                                        };
                                                        var $7124 = $7130;
                                                        break;
                                                };
                                                var $7116 = $7124;
                                                break;
                                        };
                                        var $7114 = $7116;
                                        break;
                                };
                                var $7108 = $7114;
                                break;
                        };
                        var $7100 = $7108;
                        break;
                };
                var $7098 = $7100;
                break;
        };
        return $7098;
    }));
    const Kind$Parser$float$32 = Kind$Parser$block("float")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7178 = self.err;
                var _reply$7 = Parser$maybe$(Kind$Parser$float$sign, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7180 = self.err;
                        var self = $7178;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7182 = self.value;
                                var $7183 = Parser$Reply$error$(Parser$Error$combine$($7182, $7180));
                                var $7181 = $7183;
                                break;
                            case 'Maybe.none':
                                var $7184 = Parser$Reply$error$($7180);
                                var $7181 = $7184;
                                break;
                        };
                        var $7179 = $7181;
                        break;
                    case 'Parser.Reply.value':
                        var $7185 = self.pst;
                        var $7186 = self.val;
                        var self = $7185;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7188 = self.err;
                                var $7189 = self.nam;
                                var $7190 = self.ini;
                                var $7191 = self.idx;
                                var $7192 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7178, $7188), $7189, $7190, $7191, $7192);
                                var _sign$16 = Maybe$default$($7186, 43);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7194 = self.err;
                                        var _reply$22 = Parser$many1$(Kind$Parser$float$str_digit, _reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7196 = self.err;
                                                var self = $7194;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7198 = self.value;
                                                        var $7199 = Parser$Reply$error$(Parser$Error$combine$($7198, $7196));
                                                        var $7197 = $7199;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7200 = Parser$Reply$error$($7196);
                                                        var $7197 = $7200;
                                                        break;
                                                };
                                                var $7195 = $7197;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7201 = self.pst;
                                                var $7202 = self.val;
                                                var self = $7201;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7204 = self.err;
                                                        var $7205 = self.nam;
                                                        var $7206 = self.ini;
                                                        var $7207 = self.idx;
                                                        var $7208 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($7194, $7204), $7205, $7206, $7207, $7208);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7210 = self.err;
                                                                var _reply$36 = Parser$text$(".", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7212 = self.err;
                                                                        var self = $7210;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7214 = self.value;
                                                                                var $7215 = Parser$Reply$error$(Parser$Error$combine$($7214, $7212));
                                                                                var $7213 = $7215;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7216 = Parser$Reply$error$($7212);
                                                                                var $7213 = $7216;
                                                                                break;
                                                                        };
                                                                        var $7211 = $7213;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7217 = self.pst;
                                                                        var self = $7217;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7219 = self.err;
                                                                                var $7220 = self.nam;
                                                                                var $7221 = self.ini;
                                                                                var $7222 = self.idx;
                                                                                var $7223 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($7210, $7219), $7220, $7221, $7222, $7223);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7225 = self.err;
                                                                                        var _reply$50 = Parser$many1$(Kind$Parser$float$str_digit, _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $7227 = self.err;
                                                                                                var self = $7225;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $7229 = self.value;
                                                                                                        var $7230 = Parser$Reply$error$(Parser$Error$combine$($7229, $7227));
                                                                                                        var $7228 = $7230;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $7231 = Parser$Reply$error$($7227);
                                                                                                        var $7228 = $7231;
                                                                                                        break;
                                                                                                };
                                                                                                var $7226 = $7228;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $7232 = self.pst;
                                                                                                var $7233 = self.val;
                                                                                                var self = $7232;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $7235 = self.err;
                                                                                                        var $7236 = self.nam;
                                                                                                        var $7237 = self.ini;
                                                                                                        var $7238 = self.idx;
                                                                                                        var $7239 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($7225, $7235), $7236, $7237, $7238, $7239);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $7241 = self.err;
                                                                                                                var _reply$64 = Parser$text$("#32", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $7243 = self.err;
                                                                                                                        var self = $7241;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $7245 = self.value;
                                                                                                                                var $7246 = Parser$Reply$error$(Parser$Error$combine$($7245, $7243));
                                                                                                                                var $7244 = $7246;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $7247 = Parser$Reply$error$($7243);
                                                                                                                                var $7244 = $7247;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7242 = $7244;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $7248 = self.pst;
                                                                                                                        var self = $7248;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $7250 = self.err;
                                                                                                                                var $7251 = self.nam;
                                                                                                                                var $7252 = self.ini;
                                                                                                                                var $7253 = self.idx;
                                                                                                                                var $7254 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($7241, $7250), $7251, $7252, $7253, $7254);
                                                                                                                                var _float_str$73 = Kind$Term$str$((String$cons$(_sign$16, String$from_list$($7202)) + ("." + String$from_list$($7233))));
                                                                                                                                var _conv$74 = Kind$Term$ref$("F32.parse");
                                                                                                                                var _term$75 = Kind$Term$app$(_conv$74, _float_str$73);
                                                                                                                                var $7255 = Parser$Reply$value$(_reply$pst$72, _term$75);
                                                                                                                                var $7249 = $7255;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7242 = $7249;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $7240 = $7242;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7234 = $7240;
                                                                                                        break;
                                                                                                };
                                                                                                var $7226 = $7234;
                                                                                                break;
                                                                                        };
                                                                                        var $7224 = $7226;
                                                                                        break;
                                                                                };
                                                                                var $7218 = $7224;
                                                                                break;
                                                                        };
                                                                        var $7211 = $7218;
                                                                        break;
                                                                };
                                                                var $7209 = $7211;
                                                                break;
                                                        };
                                                        var $7203 = $7209;
                                                        break;
                                                };
                                                var $7195 = $7203;
                                                break;
                                        };
                                        var $7193 = $7195;
                                        break;
                                };
                                var $7187 = $7193;
                                break;
                        };
                        var $7179 = $7187;
                        break;
                };
                var $7177 = $7179;
                break;
        };
        return $7177;
    }));

    function Either$(_A$1, _B$2) {
        var $7256 = null;
        return $7256;
    };
    const Either = x0 => x1 => Either$(x0, x1);

    function Either$left$(_value$3) {
        var $7257 = ({
            _: 'Either.left',
            'value': _value$3
        });
        return $7257;
    };
    const Either$left = x0 => Either$left$(x0);

    function Either$right$(_value$3) {
        var $7258 = ({
            _: 'Either.right',
            'value': _value$3
        });
        return $7258;
    };
    const Either$right = x0 => Either$right$(x0);

    function Nat$sub_rem$(_n$1, _m$2) {
        var Nat$sub_rem$ = (_n$1, _m$2) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2]
        });
        var Nat$sub_rem = _n$1 => _m$2 => Nat$sub_rem$(_n$1, _m$2);
        var arg = [_n$1, _m$2];
        while (true) {
            let [_n$1, _m$2] = arg;
            var R = (() => {
                var self = _m$2;
                if (self === 0n) {
                    var $7259 = Either$left$(_n$1);
                    return $7259;
                } else {
                    var $7260 = (self - 1n);
                    var self = _n$1;
                    if (self === 0n) {
                        var $7262 = Either$right$(Nat$succ$($7260));
                        var $7261 = $7262;
                    } else {
                        var $7263 = (self - 1n);
                        var $7264 = Nat$sub_rem$($7263, $7260);
                        var $7261 = $7264;
                    };
                    return $7261;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$sub_rem = x0 => x1 => Nat$sub_rem$(x0, x1);

    function Nat$div_mod$go$(_n$1, _m$2, _d$3) {
        var Nat$div_mod$go$ = (_n$1, _m$2, _d$3) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2, _d$3]
        });
        var Nat$div_mod$go = _n$1 => _m$2 => _d$3 => Nat$div_mod$go$(_n$1, _m$2, _d$3);
        var arg = [_n$1, _m$2, _d$3];
        while (true) {
            let [_n$1, _m$2, _d$3] = arg;
            var R = (() => {
                var self = Nat$sub_rem$(_n$1, _m$2);
                switch (self._) {
                    case 'Either.left':
                        var $7265 = self.value;
                        var $7266 = Nat$div_mod$go$($7265, _m$2, Nat$succ$(_d$3));
                        return $7266;
                    case 'Either.right':
                        var $7267 = Pair$new$(_d$3, _n$1);
                        return $7267;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$div_mod$go = x0 => x1 => x2 => Nat$div_mod$go$(x0, x1, x2);
    const Nat$div_mod = a0 => a1 => (({
        _: 'Pair.new',
        'fst': a0 / a1,
        'snd': a0 % a1
    }));

    function Nat$to_base$go$(_base$1, _nat$2, _res$3) {
        var Nat$to_base$go$ = (_base$1, _nat$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_base$1, _nat$2, _res$3]
        });
        var Nat$to_base$go = _base$1 => _nat$2 => _res$3 => Nat$to_base$go$(_base$1, _nat$2, _res$3);
        var arg = [_base$1, _nat$2, _res$3];
        while (true) {
            let [_base$1, _nat$2, _res$3] = arg;
            var R = (() => {
                var self = (({
                    _: 'Pair.new',
                    'fst': _nat$2 / _base$1,
                    'snd': _nat$2 % _base$1
                }));
                switch (self._) {
                    case 'Pair.new':
                        var $7268 = self.fst;
                        var $7269 = self.snd;
                        var self = $7268;
                        if (self === 0n) {
                            var $7271 = List$cons$($7269, _res$3);
                            var $7270 = $7271;
                        } else {
                            var $7272 = (self - 1n);
                            var $7273 = Nat$to_base$go$(_base$1, $7268, List$cons$($7269, _res$3));
                            var $7270 = $7273;
                        };
                        return $7270;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$to_base$go = x0 => x1 => x2 => Nat$to_base$go$(x0, x1, x2);

    function Nat$to_base$(_base$1, _nat$2) {
        var $7274 = Nat$to_base$go$(_base$1, _nat$2, List$nil);
        return $7274;
    };
    const Nat$to_base = x0 => x1 => Nat$to_base$(x0, x1);

    function Nat$mod$go$(_n$1, _m$2, _r$3) {
        var Nat$mod$go$ = (_n$1, _m$2, _r$3) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2, _r$3]
        });
        var Nat$mod$go = _n$1 => _m$2 => _r$3 => Nat$mod$go$(_n$1, _m$2, _r$3);
        var arg = [_n$1, _m$2, _r$3];
        while (true) {
            let [_n$1, _m$2, _r$3] = arg;
            var R = (() => {
                var self = _m$2;
                if (self === 0n) {
                    var $7275 = Nat$mod$go$(_n$1, _r$3, _m$2);
                    return $7275;
                } else {
                    var $7276 = (self - 1n);
                    var self = _n$1;
                    if (self === 0n) {
                        var $7278 = _r$3;
                        var $7277 = $7278;
                    } else {
                        var $7279 = (self - 1n);
                        var $7280 = Nat$mod$go$($7279, $7276, Nat$succ$(_r$3));
                        var $7277 = $7280;
                    };
                    return $7277;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$mod$go = x0 => x1 => x2 => Nat$mod$go$(x0, x1, x2);
    const Nat$mod = a0 => a1 => (a0 % a1);
    const Nat$lte = a0 => a1 => (a0 <= a1);

    function List$at$(_index$2, _list$3) {
        var List$at$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$at = _index$2 => _list$3 => List$at$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $7281 = self.head;
                        var $7282 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $7284 = Maybe$some$($7281);
                            var $7283 = $7284;
                        } else {
                            var $7285 = (self - 1n);
                            var $7286 = List$at$($7285, $7282);
                            var $7283 = $7286;
                        };
                        return $7283;
                    case 'List.nil':
                        var $7287 = Maybe$none;
                        return $7287;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$at = x0 => x1 => List$at$(x0, x1);

    function Nat$show_digit$(_base$1, _n$2) {
        var _m$3 = (_n$2 % _base$1);
        var _base64$4 = List$cons$(48, List$cons$(49, List$cons$(50, List$cons$(51, List$cons$(52, List$cons$(53, List$cons$(54, List$cons$(55, List$cons$(56, List$cons$(57, List$cons$(97, List$cons$(98, List$cons$(99, List$cons$(100, List$cons$(101, List$cons$(102, List$cons$(103, List$cons$(104, List$cons$(105, List$cons$(106, List$cons$(107, List$cons$(108, List$cons$(109, List$cons$(110, List$cons$(111, List$cons$(112, List$cons$(113, List$cons$(114, List$cons$(115, List$cons$(116, List$cons$(117, List$cons$(118, List$cons$(119, List$cons$(120, List$cons$(121, List$cons$(122, List$cons$(65, List$cons$(66, List$cons$(67, List$cons$(68, List$cons$(69, List$cons$(70, List$cons$(71, List$cons$(72, List$cons$(73, List$cons$(74, List$cons$(75, List$cons$(76, List$cons$(77, List$cons$(78, List$cons$(79, List$cons$(80, List$cons$(81, List$cons$(82, List$cons$(83, List$cons$(84, List$cons$(85, List$cons$(86, List$cons$(87, List$cons$(88, List$cons$(89, List$cons$(90, List$cons$(43, List$cons$(47, List$nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
        var self = ((_base$1 > 0n) && (_base$1 <= 64n));
        if (self) {
            var self = List$at$(_m$3, _base64$4);
            switch (self._) {
                case 'Maybe.some':
                    var $7290 = self.value;
                    var $7291 = $7290;
                    var $7289 = $7291;
                    break;
                case 'Maybe.none':
                    var $7292 = 35;
                    var $7289 = $7292;
                    break;
            };
            var $7288 = $7289;
        } else {
            var $7293 = 35;
            var $7288 = $7293;
        };
        return $7288;
    };
    const Nat$show_digit = x0 => x1 => Nat$show_digit$(x0, x1);

    function Nat$to_string_base$(_base$1, _nat$2) {
        var $7294 = List$fold$(Nat$to_base$(_base$1, _nat$2), String$nil, (_n$3 => _str$4 => {
            var $7295 = String$cons$(Nat$show_digit$(_base$1, _n$3), _str$4);
            return $7295;
        }));
        return $7294;
    };
    const Nat$to_string_base = x0 => x1 => Nat$to_string_base$(x0, x1);

    function Nat$show$(_n$1) {
        var $7296 = Nat$to_string_base$(10n, _n$1);
        return $7296;
    };
    const Nat$show = x0 => Nat$show$(x0);

    function Kind$Parser$int_pos$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7298 = self.err;
                var _reply$7 = Parser$text$("+", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7300 = self.err;
                        var self = $7298;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7302 = self.value;
                                var $7303 = Parser$Reply$error$(Parser$Error$combine$($7302, $7300));
                                var $7301 = $7303;
                                break;
                            case 'Maybe.none':
                                var $7304 = Parser$Reply$error$($7300);
                                var $7301 = $7304;
                                break;
                        };
                        var $7299 = $7301;
                        break;
                    case 'Parser.Reply.value':
                        var $7305 = self.pst;
                        var self = $7305;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7307 = self.err;
                                var $7308 = self.nam;
                                var $7309 = self.ini;
                                var $7310 = self.idx;
                                var $7311 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7298, $7307), $7308, $7309, $7310, $7311);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7313 = self.err;
                                        var _reply$21 = Parser$many1$(Parser$digit, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7315 = self.err;
                                                var self = $7313;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7317 = self.value;
                                                        var $7318 = Parser$Reply$error$(Parser$Error$combine$($7317, $7315));
                                                        var $7316 = $7318;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7319 = Parser$Reply$error$($7315);
                                                        var $7316 = $7319;
                                                        break;
                                                };
                                                var $7314 = $7316;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7320 = self.pst;
                                                var $7321 = self.val;
                                                var self = $7320;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7323 = self.err;
                                                        var $7324 = self.nam;
                                                        var $7325 = self.ini;
                                                        var $7326 = self.idx;
                                                        var $7327 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7313, $7323), $7324, $7325, $7326, $7327);
                                                        var $7328 = Parser$Reply$value$(_reply$pst$29, Pair$new$(Bool$true, Nat$from_base$(10n, $7321)));
                                                        var $7322 = $7328;
                                                        break;
                                                };
                                                var $7314 = $7322;
                                                break;
                                        };
                                        var $7312 = $7314;
                                        break;
                                };
                                var $7306 = $7312;
                                break;
                        };
                        var $7299 = $7306;
                        break;
                };
                var $7297 = $7299;
                break;
        };
        return $7297;
    };
    const Kind$Parser$int_pos = x0 => Kind$Parser$int_pos$(x0);

    function Kind$Parser$int_neg$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7330 = self.err;
                var _reply$7 = Parser$text$("-", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7332 = self.err;
                        var self = $7330;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7334 = self.value;
                                var $7335 = Parser$Reply$error$(Parser$Error$combine$($7334, $7332));
                                var $7333 = $7335;
                                break;
                            case 'Maybe.none':
                                var $7336 = Parser$Reply$error$($7332);
                                var $7333 = $7336;
                                break;
                        };
                        var $7331 = $7333;
                        break;
                    case 'Parser.Reply.value':
                        var $7337 = self.pst;
                        var self = $7337;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7339 = self.err;
                                var $7340 = self.nam;
                                var $7341 = self.ini;
                                var $7342 = self.idx;
                                var $7343 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7330, $7339), $7340, $7341, $7342, $7343);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7345 = self.err;
                                        var _reply$21 = Parser$many1$(Parser$digit, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7347 = self.err;
                                                var self = $7345;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7349 = self.value;
                                                        var $7350 = Parser$Reply$error$(Parser$Error$combine$($7349, $7347));
                                                        var $7348 = $7350;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7351 = Parser$Reply$error$($7347);
                                                        var $7348 = $7351;
                                                        break;
                                                };
                                                var $7346 = $7348;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7352 = self.pst;
                                                var $7353 = self.val;
                                                var self = $7352;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7355 = self.err;
                                                        var $7356 = self.nam;
                                                        var $7357 = self.ini;
                                                        var $7358 = self.idx;
                                                        var $7359 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7345, $7355), $7356, $7357, $7358, $7359);
                                                        var $7360 = Parser$Reply$value$(_reply$pst$29, Pair$new$(Bool$false, Nat$from_base$(10n, $7353)));
                                                        var $7354 = $7360;
                                                        break;
                                                };
                                                var $7346 = $7354;
                                                break;
                                        };
                                        var $7344 = $7346;
                                        break;
                                };
                                var $7338 = $7344;
                                break;
                        };
                        var $7331 = $7338;
                        break;
                };
                var $7329 = $7331;
                break;
        };
        return $7329;
    };
    const Kind$Parser$int_neg = x0 => Kind$Parser$int_neg$(x0);

    function Kind$Parser$machine_integer$signed$(_size$1) {
        var $7361 = Kind$Parser$block("int")((() => {
            var _size_str$2 = Nat$show$(_size$1);
            var $7362 = (_pst$3 => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $7364 = self.err;
                        var _reply$9 = Kind$Parser$spaces(_pst$3);
                        var self = _reply$9;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $7366 = self.err;
                                var self = $7364;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $7368 = self.value;
                                        var $7369 = Parser$Reply$error$(Parser$Error$combine$($7368, $7366));
                                        var $7367 = $7369;
                                        break;
                                    case 'Maybe.none':
                                        var $7370 = Parser$Reply$error$($7366);
                                        var $7367 = $7370;
                                        break;
                                };
                                var $7365 = $7367;
                                break;
                            case 'Parser.Reply.value':
                                var $7371 = self.pst;
                                var self = $7371;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7373 = self.err;
                                        var $7374 = self.nam;
                                        var $7375 = self.ini;
                                        var $7376 = self.idx;
                                        var $7377 = self.str;
                                        var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($7364, $7373), $7374, $7375, $7376, $7377);
                                        var self = _reply$pst$17;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $7379 = self.err;
                                                var _reply$23 = Parser$choice$(List$cons$(Kind$Parser$int_pos, List$cons$(Kind$Parser$int_neg, List$nil)), _reply$pst$17);
                                                var self = _reply$23;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $7381 = self.err;
                                                        var self = $7379;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $7383 = self.value;
                                                                var $7384 = Parser$Reply$error$(Parser$Error$combine$($7383, $7381));
                                                                var $7382 = $7384;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $7385 = Parser$Reply$error$($7381);
                                                                var $7382 = $7385;
                                                                break;
                                                        };
                                                        var $7380 = $7382;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $7386 = self.pst;
                                                        var $7387 = self.val;
                                                        var self = $7386;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7389 = self.err;
                                                                var $7390 = self.nam;
                                                                var $7391 = self.ini;
                                                                var $7392 = self.idx;
                                                                var $7393 = self.str;
                                                                var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($7379, $7389), $7390, $7391, $7392, $7393);
                                                                var self = _reply$pst$31;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $7395 = self.err;
                                                                        var _reply$37 = Parser$text$(("#" + _size_str$2), _reply$pst$31);
                                                                        var self = _reply$37;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $7397 = self.err;
                                                                                var self = $7395;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $7399 = self.value;
                                                                                        var $7400 = Parser$Reply$error$(Parser$Error$combine$($7399, $7397));
                                                                                        var $7398 = $7400;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $7401 = Parser$Reply$error$($7397);
                                                                                        var $7398 = $7401;
                                                                                        break;
                                                                                };
                                                                                var $7396 = $7398;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $7402 = self.pst;
                                                                                var self = $7402;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7404 = self.err;
                                                                                        var $7405 = self.nam;
                                                                                        var $7406 = self.ini;
                                                                                        var $7407 = self.idx;
                                                                                        var $7408 = self.str;
                                                                                        var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($7395, $7404), $7405, $7406, $7407, $7408);
                                                                                        var $7409 = Parser$Reply$value$(_reply$pst$45, (() => {
                                                                                            var self = $7387;
                                                                                            switch (self._) {
                                                                                                case 'Pair.new':
                                                                                                    var $7410 = self.fst;
                                                                                                    var $7411 = self.snd;
                                                                                                    var _term$48 = Kind$Term$ref$(("I" + (_size_str$2 + ".from_nat")));
                                                                                                    var _term$49 = Kind$Term$app$(_term$48, Kind$Term$nat$($7411));
                                                                                                    var self = $7410;
                                                                                                    if (self) {
                                                                                                        var $7413 = _term$49;
                                                                                                        var _term$50 = $7413;
                                                                                                    } else {
                                                                                                        var $7414 = Kind$Term$app$(Kind$Term$ref$(("I" + (_size_str$2 + ".neg"))), _term$49);
                                                                                                        var _term$50 = $7414;
                                                                                                    };
                                                                                                    var $7412 = _term$50;
                                                                                                    return $7412;
                                                                                            };
                                                                                        })());
                                                                                        var $7403 = $7409;
                                                                                        break;
                                                                                };
                                                                                var $7396 = $7403;
                                                                                break;
                                                                        };
                                                                        var $7394 = $7396;
                                                                        break;
                                                                };
                                                                var $7388 = $7394;
                                                                break;
                                                        };
                                                        var $7380 = $7388;
                                                        break;
                                                };
                                                var $7378 = $7380;
                                                break;
                                        };
                                        var $7372 = $7378;
                                        break;
                                };
                                var $7365 = $7372;
                                break;
                        };
                        var $7363 = $7365;
                        break;
                };
                return $7363;
            });
            return $7362;
        })());
        return $7361;
    };
    const Kind$Parser$machine_integer$signed = x0 => Kind$Parser$machine_integer$signed$(x0);

    function Parser$hex_digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7416 = self.err;
                var $7417 = self.nam;
                var $7418 = self.ini;
                var $7419 = self.idx;
                var $7420 = self.str;
                var self = $7420;
                if (self.length === 0) {
                    var $7422 = Parser$Reply$fail$($7417, $7418, $7419, "Not a digit.");
                    var $7421 = $7422;
                } else {
                    var $7423 = self.charCodeAt(0);
                    var $7424 = self.slice(1);
                    var _pst$9 = Parser$State$new$($7416, $7417, $7418, Nat$succ$($7419), $7424);
                    var self = ($7423 === 48);
                    if (self) {
                        var $7426 = Parser$Reply$value$(_pst$9, 0n);
                        var $7425 = $7426;
                    } else {
                        var self = ($7423 === 49);
                        if (self) {
                            var $7428 = Parser$Reply$value$(_pst$9, 1n);
                            var $7427 = $7428;
                        } else {
                            var self = ($7423 === 50);
                            if (self) {
                                var $7430 = Parser$Reply$value$(_pst$9, 2n);
                                var $7429 = $7430;
                            } else {
                                var self = ($7423 === 51);
                                if (self) {
                                    var $7432 = Parser$Reply$value$(_pst$9, 3n);
                                    var $7431 = $7432;
                                } else {
                                    var self = ($7423 === 52);
                                    if (self) {
                                        var $7434 = Parser$Reply$value$(_pst$9, 4n);
                                        var $7433 = $7434;
                                    } else {
                                        var self = ($7423 === 53);
                                        if (self) {
                                            var $7436 = Parser$Reply$value$(_pst$9, 5n);
                                            var $7435 = $7436;
                                        } else {
                                            var self = ($7423 === 54);
                                            if (self) {
                                                var $7438 = Parser$Reply$value$(_pst$9, 6n);
                                                var $7437 = $7438;
                                            } else {
                                                var self = ($7423 === 55);
                                                if (self) {
                                                    var $7440 = Parser$Reply$value$(_pst$9, 7n);
                                                    var $7439 = $7440;
                                                } else {
                                                    var self = ($7423 === 56);
                                                    if (self) {
                                                        var $7442 = Parser$Reply$value$(_pst$9, 8n);
                                                        var $7441 = $7442;
                                                    } else {
                                                        var self = ($7423 === 57);
                                                        if (self) {
                                                            var $7444 = Parser$Reply$value$(_pst$9, 9n);
                                                            var $7443 = $7444;
                                                        } else {
                                                            var self = ($7423 === 97);
                                                            if (self) {
                                                                var $7446 = Parser$Reply$value$(_pst$9, 10n);
                                                                var $7445 = $7446;
                                                            } else {
                                                                var self = ($7423 === 98);
                                                                if (self) {
                                                                    var $7448 = Parser$Reply$value$(_pst$9, 11n);
                                                                    var $7447 = $7448;
                                                                } else {
                                                                    var self = ($7423 === 99);
                                                                    if (self) {
                                                                        var $7450 = Parser$Reply$value$(_pst$9, 12n);
                                                                        var $7449 = $7450;
                                                                    } else {
                                                                        var self = ($7423 === 100);
                                                                        if (self) {
                                                                            var $7452 = Parser$Reply$value$(_pst$9, 13n);
                                                                            var $7451 = $7452;
                                                                        } else {
                                                                            var self = ($7423 === 101);
                                                                            if (self) {
                                                                                var $7454 = Parser$Reply$value$(_pst$9, 14n);
                                                                                var $7453 = $7454;
                                                                            } else {
                                                                                var self = ($7423 === 102);
                                                                                if (self) {
                                                                                    var $7456 = Parser$Reply$value$(_pst$9, 15n);
                                                                                    var $7455 = $7456;
                                                                                } else {
                                                                                    var self = ($7423 === 65);
                                                                                    if (self) {
                                                                                        var $7458 = Parser$Reply$value$(_pst$9, 10n);
                                                                                        var $7457 = $7458;
                                                                                    } else {
                                                                                        var self = ($7423 === 66);
                                                                                        if (self) {
                                                                                            var $7460 = Parser$Reply$value$(_pst$9, 11n);
                                                                                            var $7459 = $7460;
                                                                                        } else {
                                                                                            var self = ($7423 === 67);
                                                                                            if (self) {
                                                                                                var $7462 = Parser$Reply$value$(_pst$9, 12n);
                                                                                                var $7461 = $7462;
                                                                                            } else {
                                                                                                var self = ($7423 === 68);
                                                                                                if (self) {
                                                                                                    var $7464 = Parser$Reply$value$(_pst$9, 13n);
                                                                                                    var $7463 = $7464;
                                                                                                } else {
                                                                                                    var self = ($7423 === 69);
                                                                                                    if (self) {
                                                                                                        var $7466 = Parser$Reply$value$(_pst$9, 14n);
                                                                                                        var $7465 = $7466;
                                                                                                    } else {
                                                                                                        var self = ($7423 === 70);
                                                                                                        if (self) {
                                                                                                            var $7468 = Parser$Reply$value$(_pst$9, 15n);
                                                                                                            var $7467 = $7468;
                                                                                                        } else {
                                                                                                            var $7469 = Parser$Reply$fail$($7417, $7418, $7419, "Not a digit.");
                                                                                                            var $7467 = $7469;
                                                                                                        };
                                                                                                        var $7465 = $7467;
                                                                                                    };
                                                                                                    var $7463 = $7465;
                                                                                                };
                                                                                                var $7461 = $7463;
                                                                                            };
                                                                                            var $7459 = $7461;
                                                                                        };
                                                                                        var $7457 = $7459;
                                                                                    };
                                                                                    var $7455 = $7457;
                                                                                };
                                                                                var $7453 = $7455;
                                                                            };
                                                                            var $7451 = $7453;
                                                                        };
                                                                        var $7449 = $7451;
                                                                    };
                                                                    var $7447 = $7449;
                                                                };
                                                                var $7445 = $7447;
                                                            };
                                                            var $7443 = $7445;
                                                        };
                                                        var $7441 = $7443;
                                                    };
                                                    var $7439 = $7441;
                                                };
                                                var $7437 = $7439;
                                            };
                                            var $7435 = $7437;
                                        };
                                        var $7433 = $7435;
                                    };
                                    var $7431 = $7433;
                                };
                                var $7429 = $7431;
                            };
                            var $7427 = $7429;
                        };
                        var $7425 = $7427;
                    };
                    var $7421 = $7425;
                };
                var $7415 = $7421;
                break;
        };
        return $7415;
    };
    const Parser$hex_digit = x0 => Parser$hex_digit$(x0);

    function Parser$hex_nat$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7471 = self.err;
                var _reply$7 = Parser$text$("0x", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7473 = self.err;
                        var self = $7471;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7475 = self.value;
                                var $7476 = Parser$Reply$error$(Parser$Error$combine$($7475, $7473));
                                var $7474 = $7476;
                                break;
                            case 'Maybe.none':
                                var $7477 = Parser$Reply$error$($7473);
                                var $7474 = $7477;
                                break;
                        };
                        var $7472 = $7474;
                        break;
                    case 'Parser.Reply.value':
                        var $7478 = self.pst;
                        var self = $7478;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7480 = self.err;
                                var $7481 = self.nam;
                                var $7482 = self.ini;
                                var $7483 = self.idx;
                                var $7484 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7471, $7480), $7481, $7482, $7483, $7484);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7486 = self.err;
                                        var _reply$21 = Parser$many1$(Parser$hex_digit, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7488 = self.err;
                                                var self = $7486;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7490 = self.value;
                                                        var $7491 = Parser$Reply$error$(Parser$Error$combine$($7490, $7488));
                                                        var $7489 = $7491;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7492 = Parser$Reply$error$($7488);
                                                        var $7489 = $7492;
                                                        break;
                                                };
                                                var $7487 = $7489;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7493 = self.pst;
                                                var $7494 = self.val;
                                                var self = $7493;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7496 = self.err;
                                                        var $7497 = self.nam;
                                                        var $7498 = self.ini;
                                                        var $7499 = self.idx;
                                                        var $7500 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7486, $7496), $7497, $7498, $7499, $7500);
                                                        var $7501 = Parser$Reply$value$(_reply$pst$29, Nat$from_base$(16n, $7494));
                                                        var $7495 = $7501;
                                                        break;
                                                };
                                                var $7487 = $7495;
                                                break;
                                        };
                                        var $7485 = $7487;
                                        break;
                                };
                                var $7479 = $7485;
                                break;
                        };
                        var $7472 = $7479;
                        break;
                };
                var $7470 = $7472;
                break;
        };
        return $7470;
    };
    const Parser$hex_nat = x0 => Parser$hex_nat$(x0);
    const Kind$Parser$nat = Kind$Parser$block("nat")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7503 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7505 = self.err;
                        var self = $7503;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7507 = self.value;
                                var $7508 = Parser$Reply$error$(Parser$Error$combine$($7507, $7505));
                                var $7506 = $7508;
                                break;
                            case 'Maybe.none':
                                var $7509 = Parser$Reply$error$($7505);
                                var $7506 = $7509;
                                break;
                        };
                        var $7504 = $7506;
                        break;
                    case 'Parser.Reply.value':
                        var $7510 = self.pst;
                        var self = $7510;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7512 = self.err;
                                var $7513 = self.nam;
                                var $7514 = self.ini;
                                var $7515 = self.idx;
                                var $7516 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7503, $7512), $7513, $7514, $7515, $7516);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7518 = self.err;
                                        var _reply$21 = Parser$choice$(List$cons$(Parser$hex_nat, List$cons$(Parser$nat, List$nil)), _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7520 = self.err;
                                                var self = $7518;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7522 = self.value;
                                                        var $7523 = Parser$Reply$error$(Parser$Error$combine$($7522, $7520));
                                                        var $7521 = $7523;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7524 = Parser$Reply$error$($7520);
                                                        var $7521 = $7524;
                                                        break;
                                                };
                                                var $7519 = $7521;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7525 = self.pst;
                                                var $7526 = self.val;
                                                var self = $7525;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7528 = self.err;
                                                        var $7529 = self.nam;
                                                        var $7530 = self.ini;
                                                        var $7531 = self.idx;
                                                        var $7532 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7518, $7528), $7529, $7530, $7531, $7532);
                                                        var $7533 = Parser$Reply$value$(_reply$pst$29, Kind$Term$nat$($7526));
                                                        var $7527 = $7533;
                                                        break;
                                                };
                                                var $7519 = $7527;
                                                break;
                                        };
                                        var $7517 = $7519;
                                        break;
                                };
                                var $7511 = $7517;
                                break;
                        };
                        var $7504 = $7511;
                        break;
                };
                var $7502 = $7504;
                break;
        };
        return $7502;
    }));

    function Kind$Parser$machine_integer$unsigned$(_size$1) {
        var $7534 = Kind$Parser$block("int")((() => {
            var _size_str$2 = Nat$show$(_size$1);
            var $7535 = (_pst$3 => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $7537 = self.err;
                        var _reply$9 = Kind$Parser$spaces(_pst$3);
                        var self = _reply$9;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $7539 = self.err;
                                var self = $7537;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $7541 = self.value;
                                        var $7542 = Parser$Reply$error$(Parser$Error$combine$($7541, $7539));
                                        var $7540 = $7542;
                                        break;
                                    case 'Maybe.none':
                                        var $7543 = Parser$Reply$error$($7539);
                                        var $7540 = $7543;
                                        break;
                                };
                                var $7538 = $7540;
                                break;
                            case 'Parser.Reply.value':
                                var $7544 = self.pst;
                                var self = $7544;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7546 = self.err;
                                        var $7547 = self.nam;
                                        var $7548 = self.ini;
                                        var $7549 = self.idx;
                                        var $7550 = self.str;
                                        var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($7537, $7546), $7547, $7548, $7549, $7550);
                                        var self = _reply$pst$17;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $7552 = self.err;
                                                var _reply$23 = Kind$Parser$nat(_reply$pst$17);
                                                var self = _reply$23;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $7554 = self.err;
                                                        var self = $7552;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $7556 = self.value;
                                                                var $7557 = Parser$Reply$error$(Parser$Error$combine$($7556, $7554));
                                                                var $7555 = $7557;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $7558 = Parser$Reply$error$($7554);
                                                                var $7555 = $7558;
                                                                break;
                                                        };
                                                        var $7553 = $7555;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $7559 = self.pst;
                                                        var $7560 = self.val;
                                                        var self = $7559;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7562 = self.err;
                                                                var $7563 = self.nam;
                                                                var $7564 = self.ini;
                                                                var $7565 = self.idx;
                                                                var $7566 = self.str;
                                                                var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($7552, $7562), $7563, $7564, $7565, $7566);
                                                                var self = _reply$pst$31;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $7568 = self.err;
                                                                        var _reply$37 = Parser$text$(("#" + Nat$show$(_size$1)), _reply$pst$31);
                                                                        var self = _reply$37;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $7570 = self.err;
                                                                                var self = $7568;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $7572 = self.value;
                                                                                        var $7573 = Parser$Reply$error$(Parser$Error$combine$($7572, $7570));
                                                                                        var $7571 = $7573;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $7574 = Parser$Reply$error$($7570);
                                                                                        var $7571 = $7574;
                                                                                        break;
                                                                                };
                                                                                var $7569 = $7571;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $7575 = self.pst;
                                                                                var self = $7575;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7577 = self.err;
                                                                                        var $7578 = self.nam;
                                                                                        var $7579 = self.ini;
                                                                                        var $7580 = self.idx;
                                                                                        var $7581 = self.str;
                                                                                        var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($7568, $7577), $7578, $7579, $7580, $7581);
                                                                                        var _term$46 = Kind$Term$ref$(("Nat.to_u" + Nat$show$(_size$1)));
                                                                                        var _term$47 = Kind$Term$app$(_term$46, $7560);
                                                                                        var $7582 = Parser$Reply$value$(_reply$pst$45, _term$47);
                                                                                        var $7576 = $7582;
                                                                                        break;
                                                                                };
                                                                                var $7569 = $7576;
                                                                                break;
                                                                        };
                                                                        var $7567 = $7569;
                                                                        break;
                                                                };
                                                                var $7561 = $7567;
                                                                break;
                                                        };
                                                        var $7553 = $7561;
                                                        break;
                                                };
                                                var $7551 = $7553;
                                                break;
                                        };
                                        var $7545 = $7551;
                                        break;
                                };
                                var $7538 = $7545;
                                break;
                        };
                        var $7536 = $7538;
                        break;
                };
                return $7536;
            });
            return $7535;
        })());
        return $7534;
    };
    const Kind$Parser$machine_integer$unsigned = x0 => Kind$Parser$machine_integer$unsigned$(x0);
    const Kind$Parser$u64 = Kind$Parser$block("u64")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7584 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7586 = self.err;
                        var self = $7584;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7588 = self.value;
                                var $7589 = Parser$Reply$error$(Parser$Error$combine$($7588, $7586));
                                var $7587 = $7589;
                                break;
                            case 'Maybe.none':
                                var $7590 = Parser$Reply$error$($7586);
                                var $7587 = $7590;
                                break;
                        };
                        var $7585 = $7587;
                        break;
                    case 'Parser.Reply.value':
                        var $7591 = self.pst;
                        var self = $7591;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7593 = self.err;
                                var $7594 = self.nam;
                                var $7595 = self.ini;
                                var $7596 = self.idx;
                                var $7597 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7584, $7593), $7594, $7595, $7596, $7597);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7599 = self.err;
                                        var _reply$21 = Parser$nat$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7601 = self.err;
                                                var self = $7599;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7603 = self.value;
                                                        var $7604 = Parser$Reply$error$(Parser$Error$combine$($7603, $7601));
                                                        var $7602 = $7604;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7605 = Parser$Reply$error$($7601);
                                                        var $7602 = $7605;
                                                        break;
                                                };
                                                var $7600 = $7602;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7606 = self.pst;
                                                var $7607 = self.val;
                                                var self = $7606;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7609 = self.err;
                                                        var $7610 = self.nam;
                                                        var $7611 = self.ini;
                                                        var $7612 = self.idx;
                                                        var $7613 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7599, $7609), $7610, $7611, $7612, $7613);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7615 = self.err;
                                                                var _reply$35 = Parser$text$("l", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7617 = self.err;
                                                                        var self = $7615;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7619 = self.value;
                                                                                var $7620 = Parser$Reply$error$(Parser$Error$combine$($7619, $7617));
                                                                                var $7618 = $7620;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7621 = Parser$Reply$error$($7617);
                                                                                var $7618 = $7621;
                                                                                break;
                                                                        };
                                                                        var $7616 = $7618;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7622 = self.pst;
                                                                        var self = $7622;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7624 = self.err;
                                                                                var $7625 = self.nam;
                                                                                var $7626 = self.ini;
                                                                                var $7627 = self.idx;
                                                                                var $7628 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7615, $7624), $7625, $7626, $7627, $7628);
                                                                                var _term$44 = Kind$Term$ref$("U64.from_nat");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$nat$($7607));
                                                                                var $7629 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $7623 = $7629;
                                                                                break;
                                                                        };
                                                                        var $7616 = $7623;
                                                                        break;
                                                                };
                                                                var $7614 = $7616;
                                                                break;
                                                        };
                                                        var $7608 = $7614;
                                                        break;
                                                };
                                                var $7600 = $7608;
                                                break;
                                        };
                                        var $7598 = $7600;
                                        break;
                                };
                                var $7592 = $7598;
                                break;
                        };
                        var $7585 = $7592;
                        break;
                };
                var $7583 = $7585;
                break;
        };
        return $7583;
    }));
    const Kind$Parser$u32 = Kind$Parser$block("u32")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7631 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7633 = self.err;
                        var self = $7631;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7635 = self.value;
                                var $7636 = Parser$Reply$error$(Parser$Error$combine$($7635, $7633));
                                var $7634 = $7636;
                                break;
                            case 'Maybe.none':
                                var $7637 = Parser$Reply$error$($7633);
                                var $7634 = $7637;
                                break;
                        };
                        var $7632 = $7634;
                        break;
                    case 'Parser.Reply.value':
                        var $7638 = self.pst;
                        var self = $7638;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7640 = self.err;
                                var $7641 = self.nam;
                                var $7642 = self.ini;
                                var $7643 = self.idx;
                                var $7644 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7631, $7640), $7641, $7642, $7643, $7644);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7646 = self.err;
                                        var _reply$21 = Parser$nat$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7648 = self.err;
                                                var self = $7646;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7650 = self.value;
                                                        var $7651 = Parser$Reply$error$(Parser$Error$combine$($7650, $7648));
                                                        var $7649 = $7651;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7652 = Parser$Reply$error$($7648);
                                                        var $7649 = $7652;
                                                        break;
                                                };
                                                var $7647 = $7649;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7653 = self.pst;
                                                var $7654 = self.val;
                                                var self = $7653;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7656 = self.err;
                                                        var $7657 = self.nam;
                                                        var $7658 = self.ini;
                                                        var $7659 = self.idx;
                                                        var $7660 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7646, $7656), $7657, $7658, $7659, $7660);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7662 = self.err;
                                                                var _reply$35 = Parser$text$("u", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7664 = self.err;
                                                                        var self = $7662;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7666 = self.value;
                                                                                var $7667 = Parser$Reply$error$(Parser$Error$combine$($7666, $7664));
                                                                                var $7665 = $7667;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7668 = Parser$Reply$error$($7664);
                                                                                var $7665 = $7668;
                                                                                break;
                                                                        };
                                                                        var $7663 = $7665;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7669 = self.pst;
                                                                        var self = $7669;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7671 = self.err;
                                                                                var $7672 = self.nam;
                                                                                var $7673 = self.ini;
                                                                                var $7674 = self.idx;
                                                                                var $7675 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7662, $7671), $7672, $7673, $7674, $7675);
                                                                                var _term$44 = Kind$Term$ref$("U32.from_nat");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$nat$($7654));
                                                                                var $7676 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $7670 = $7676;
                                                                                break;
                                                                        };
                                                                        var $7663 = $7670;
                                                                        break;
                                                                };
                                                                var $7661 = $7663;
                                                                break;
                                                        };
                                                        var $7655 = $7661;
                                                        break;
                                                };
                                                var $7647 = $7655;
                                                break;
                                        };
                                        var $7645 = $7647;
                                        break;
                                };
                                var $7639 = $7645;
                                break;
                        };
                        var $7632 = $7639;
                        break;
                };
                var $7630 = $7632;
                break;
        };
        return $7630;
    }));
    const Kind$Parser$u16 = Kind$Parser$block("u16")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7678 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7680 = self.err;
                        var self = $7678;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7682 = self.value;
                                var $7683 = Parser$Reply$error$(Parser$Error$combine$($7682, $7680));
                                var $7681 = $7683;
                                break;
                            case 'Maybe.none':
                                var $7684 = Parser$Reply$error$($7680);
                                var $7681 = $7684;
                                break;
                        };
                        var $7679 = $7681;
                        break;
                    case 'Parser.Reply.value':
                        var $7685 = self.pst;
                        var self = $7685;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7687 = self.err;
                                var $7688 = self.nam;
                                var $7689 = self.ini;
                                var $7690 = self.idx;
                                var $7691 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7678, $7687), $7688, $7689, $7690, $7691);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7693 = self.err;
                                        var _reply$21 = Parser$nat$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7695 = self.err;
                                                var self = $7693;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7697 = self.value;
                                                        var $7698 = Parser$Reply$error$(Parser$Error$combine$($7697, $7695));
                                                        var $7696 = $7698;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7699 = Parser$Reply$error$($7695);
                                                        var $7696 = $7699;
                                                        break;
                                                };
                                                var $7694 = $7696;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7700 = self.pst;
                                                var $7701 = self.val;
                                                var self = $7700;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7703 = self.err;
                                                        var $7704 = self.nam;
                                                        var $7705 = self.ini;
                                                        var $7706 = self.idx;
                                                        var $7707 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7693, $7703), $7704, $7705, $7706, $7707);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7709 = self.err;
                                                                var _reply$35 = Parser$text$("s", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7711 = self.err;
                                                                        var self = $7709;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7713 = self.value;
                                                                                var $7714 = Parser$Reply$error$(Parser$Error$combine$($7713, $7711));
                                                                                var $7712 = $7714;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7715 = Parser$Reply$error$($7711);
                                                                                var $7712 = $7715;
                                                                                break;
                                                                        };
                                                                        var $7710 = $7712;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7716 = self.pst;
                                                                        var self = $7716;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7718 = self.err;
                                                                                var $7719 = self.nam;
                                                                                var $7720 = self.ini;
                                                                                var $7721 = self.idx;
                                                                                var $7722 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7709, $7718), $7719, $7720, $7721, $7722);
                                                                                var _term$44 = Kind$Term$ref$("U16.from_nat");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$nat$($7701));
                                                                                var $7723 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $7717 = $7723;
                                                                                break;
                                                                        };
                                                                        var $7710 = $7717;
                                                                        break;
                                                                };
                                                                var $7708 = $7710;
                                                                break;
                                                        };
                                                        var $7702 = $7708;
                                                        break;
                                                };
                                                var $7694 = $7702;
                                                break;
                                        };
                                        var $7692 = $7694;
                                        break;
                                };
                                var $7686 = $7692;
                                break;
                        };
                        var $7679 = $7686;
                        break;
                };
                var $7677 = $7679;
                break;
        };
        return $7677;
    }));
    const Kind$Parser$u8 = Kind$Parser$block("u8")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7725 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7727 = self.err;
                        var self = $7725;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7729 = self.value;
                                var $7730 = Parser$Reply$error$(Parser$Error$combine$($7729, $7727));
                                var $7728 = $7730;
                                break;
                            case 'Maybe.none':
                                var $7731 = Parser$Reply$error$($7727);
                                var $7728 = $7731;
                                break;
                        };
                        var $7726 = $7728;
                        break;
                    case 'Parser.Reply.value':
                        var $7732 = self.pst;
                        var self = $7732;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7734 = self.err;
                                var $7735 = self.nam;
                                var $7736 = self.ini;
                                var $7737 = self.idx;
                                var $7738 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7725, $7734), $7735, $7736, $7737, $7738);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7740 = self.err;
                                        var _reply$21 = Parser$nat$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7742 = self.err;
                                                var self = $7740;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7744 = self.value;
                                                        var $7745 = Parser$Reply$error$(Parser$Error$combine$($7744, $7742));
                                                        var $7743 = $7745;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7746 = Parser$Reply$error$($7742);
                                                        var $7743 = $7746;
                                                        break;
                                                };
                                                var $7741 = $7743;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7747 = self.pst;
                                                var $7748 = self.val;
                                                var self = $7747;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7750 = self.err;
                                                        var $7751 = self.nam;
                                                        var $7752 = self.ini;
                                                        var $7753 = self.idx;
                                                        var $7754 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7740, $7750), $7751, $7752, $7753, $7754);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7756 = self.err;
                                                                var _reply$35 = Parser$text$("b", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7758 = self.err;
                                                                        var self = $7756;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7760 = self.value;
                                                                                var $7761 = Parser$Reply$error$(Parser$Error$combine$($7760, $7758));
                                                                                var $7759 = $7761;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7762 = Parser$Reply$error$($7758);
                                                                                var $7759 = $7762;
                                                                                break;
                                                                        };
                                                                        var $7757 = $7759;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7763 = self.pst;
                                                                        var self = $7763;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7765 = self.err;
                                                                                var $7766 = self.nam;
                                                                                var $7767 = self.ini;
                                                                                var $7768 = self.idx;
                                                                                var $7769 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7756, $7765), $7766, $7767, $7768, $7769);
                                                                                var _term$44 = Kind$Term$ref$("U8.from_nat");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$nat$($7748));
                                                                                var $7770 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $7764 = $7770;
                                                                                break;
                                                                        };
                                                                        var $7757 = $7764;
                                                                        break;
                                                                };
                                                                var $7755 = $7757;
                                                                break;
                                                        };
                                                        var $7749 = $7755;
                                                        break;
                                                };
                                                var $7741 = $7749;
                                                break;
                                        };
                                        var $7739 = $7741;
                                        break;
                                };
                                var $7733 = $7739;
                                break;
                        };
                        var $7726 = $7733;
                        break;
                };
                var $7724 = $7726;
                break;
        };
        return $7724;
    }));

    function Parser$Number$new$(_sign$1, _numb$2, _frac$3) {
        var $7771 = ({
            _: 'Parser.Number.new',
            'sign': _sign$1,
            'numb': _numb$2,
            'frac': _frac$3
        });
        return $7771;
    };
    const Parser$Number$new = x0 => x1 => x2 => Parser$Number$new$(x0, x1, x2);

    function Parser$num$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7773 = self.err;
                var _reply$7 = Parser$choice$(List$cons$((_pst$7 => {
                    var self = _pst$7;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $7776 = self.err;
                            var _reply$13 = Parser$text$("+", _pst$7);
                            var self = _reply$13;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $7778 = self.err;
                                    var self = $7776;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $7780 = self.value;
                                            var $7781 = Parser$Reply$error$(Parser$Error$combine$($7780, $7778));
                                            var $7779 = $7781;
                                            break;
                                        case 'Maybe.none':
                                            var $7782 = Parser$Reply$error$($7778);
                                            var $7779 = $7782;
                                            break;
                                    };
                                    var $7777 = $7779;
                                    break;
                                case 'Parser.Reply.value':
                                    var $7783 = self.pst;
                                    var self = $7783;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $7785 = self.err;
                                            var $7786 = self.nam;
                                            var $7787 = self.ini;
                                            var $7788 = self.idx;
                                            var $7789 = self.str;
                                            var _reply$pst$21 = Parser$State$new$(Parser$Error$maybe_combine$($7776, $7785), $7786, $7787, $7788, $7789);
                                            var $7790 = Parser$Reply$value$(_reply$pst$21, Maybe$some$(Bool$true));
                                            var $7784 = $7790;
                                            break;
                                    };
                                    var $7777 = $7784;
                                    break;
                            };
                            var $7775 = $7777;
                            break;
                    };
                    return $7775;
                }), List$cons$((_pst$7 => {
                    var self = _pst$7;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $7792 = self.err;
                            var _reply$13 = Parser$text$("-", _pst$7);
                            var self = _reply$13;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $7794 = self.err;
                                    var self = $7792;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $7796 = self.value;
                                            var $7797 = Parser$Reply$error$(Parser$Error$combine$($7796, $7794));
                                            var $7795 = $7797;
                                            break;
                                        case 'Maybe.none':
                                            var $7798 = Parser$Reply$error$($7794);
                                            var $7795 = $7798;
                                            break;
                                    };
                                    var $7793 = $7795;
                                    break;
                                case 'Parser.Reply.value':
                                    var $7799 = self.pst;
                                    var self = $7799;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $7801 = self.err;
                                            var $7802 = self.nam;
                                            var $7803 = self.ini;
                                            var $7804 = self.idx;
                                            var $7805 = self.str;
                                            var _reply$pst$21 = Parser$State$new$(Parser$Error$maybe_combine$($7792, $7801), $7802, $7803, $7804, $7805);
                                            var $7806 = Parser$Reply$value$(_reply$pst$21, Maybe$some$(Bool$false));
                                            var $7800 = $7806;
                                            break;
                                    };
                                    var $7793 = $7800;
                                    break;
                            };
                            var $7791 = $7793;
                            break;
                    };
                    return $7791;
                }), List$cons$((_pst$7 => {
                    var $7807 = Parser$Reply$value$(_pst$7, Maybe$none);
                    return $7807;
                }), List$nil))), _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7808 = self.err;
                        var self = $7773;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7810 = self.value;
                                var $7811 = Parser$Reply$error$(Parser$Error$combine$($7810, $7808));
                                var $7809 = $7811;
                                break;
                            case 'Maybe.none':
                                var $7812 = Parser$Reply$error$($7808);
                                var $7809 = $7812;
                                break;
                        };
                        var $7774 = $7809;
                        break;
                    case 'Parser.Reply.value':
                        var $7813 = self.pst;
                        var $7814 = self.val;
                        var self = $7813;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7816 = self.err;
                                var $7817 = self.nam;
                                var $7818 = self.ini;
                                var $7819 = self.idx;
                                var $7820 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7773, $7816), $7817, $7818, $7819, $7820);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7822 = self.err;
                                        var _reply$21 = Parser$choice$(List$cons$(Parser$hex_nat, List$cons$(Parser$nat, List$nil)), _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7824 = self.err;
                                                var self = $7822;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7826 = self.value;
                                                        var $7827 = Parser$Reply$error$(Parser$Error$combine$($7826, $7824));
                                                        var $7825 = $7827;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7828 = Parser$Reply$error$($7824);
                                                        var $7825 = $7828;
                                                        break;
                                                };
                                                var $7823 = $7825;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7829 = self.pst;
                                                var $7830 = self.val;
                                                var self = $7829;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7832 = self.err;
                                                        var $7833 = self.nam;
                                                        var $7834 = self.ini;
                                                        var $7835 = self.idx;
                                                        var $7836 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7822, $7832), $7833, $7834, $7835, $7836);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7838 = self.err;
                                                                var self = _reply$pst$29;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $7840 = self.err;
                                                                        var _reply$40 = Parser$maybe$(Parser$text("."), _reply$pst$29);
                                                                        var self = _reply$40;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $7842 = self.err;
                                                                                var self = $7840;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $7844 = self.value;
                                                                                        var $7845 = Parser$Reply$error$(Parser$Error$combine$($7844, $7842));
                                                                                        var $7843 = $7845;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $7846 = Parser$Reply$error$($7842);
                                                                                        var $7843 = $7846;
                                                                                        break;
                                                                                };
                                                                                var $7841 = $7843;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $7847 = self.pst;
                                                                                var self = $7847;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7849 = self.err;
                                                                                        var $7850 = self.nam;
                                                                                        var $7851 = self.ini;
                                                                                        var $7852 = self.idx;
                                                                                        var $7853 = self.str;
                                                                                        var _reply$pst$48 = Parser$State$new$(Parser$Error$maybe_combine$($7840, $7849), $7850, $7851, $7852, $7853);
                                                                                        var self = _reply$pst$48;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $7855 = self.err;
                                                                                                var _reply$54 = Parser$maybe$(Parser$nat, _reply$pst$48);
                                                                                                var self = _reply$54;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.Reply.error':
                                                                                                        var $7857 = self.err;
                                                                                                        var self = $7855;
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $7859 = self.value;
                                                                                                                var $7860 = Parser$Reply$error$(Parser$Error$combine$($7859, $7857));
                                                                                                                var $7858 = $7860;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $7861 = Parser$Reply$error$($7857);
                                                                                                                var $7858 = $7861;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7856 = $7858;
                                                                                                        break;
                                                                                                    case 'Parser.Reply.value':
                                                                                                        var $7862 = self.pst;
                                                                                                        var $7863 = self.val;
                                                                                                        var self = $7862;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $7865 = self.err;
                                                                                                                var $7866 = self.nam;
                                                                                                                var $7867 = self.ini;
                                                                                                                var $7868 = self.idx;
                                                                                                                var $7869 = self.str;
                                                                                                                var _reply$pst$62 = Parser$State$new$(Parser$Error$maybe_combine$($7855, $7865), $7866, $7867, $7868, $7869);
                                                                                                                var $7870 = Parser$Reply$value$(_reply$pst$62, $7863);
                                                                                                                var $7864 = $7870;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7856 = $7864;
                                                                                                        break;
                                                                                                };
                                                                                                var $7854 = $7856;
                                                                                                break;
                                                                                        };
                                                                                        var $7848 = $7854;
                                                                                        break;
                                                                                };
                                                                                var $7841 = $7848;
                                                                                break;
                                                                        };
                                                                        var _reply$35 = $7841;
                                                                        break;
                                                                };
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7871 = self.err;
                                                                        var self = $7838;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7873 = self.value;
                                                                                var $7874 = Parser$Reply$error$(Parser$Error$combine$($7873, $7871));
                                                                                var $7872 = $7874;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7875 = Parser$Reply$error$($7871);
                                                                                var $7872 = $7875;
                                                                                break;
                                                                        };
                                                                        var $7839 = $7872;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7876 = self.pst;
                                                                        var $7877 = self.val;
                                                                        var self = $7876;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7879 = self.err;
                                                                                var $7880 = self.nam;
                                                                                var $7881 = self.ini;
                                                                                var $7882 = self.idx;
                                                                                var $7883 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7838, $7879), $7880, $7881, $7882, $7883);
                                                                                var $7884 = Parser$Reply$value$(_reply$pst$43, Parser$Number$new$($7814, $7830, $7877));
                                                                                var $7878 = $7884;
                                                                                break;
                                                                        };
                                                                        var $7839 = $7878;
                                                                        break;
                                                                };
                                                                var $7837 = $7839;
                                                                break;
                                                        };
                                                        var $7831 = $7837;
                                                        break;
                                                };
                                                var $7823 = $7831;
                                                break;
                                        };
                                        var $7821 = $7823;
                                        break;
                                };
                                var $7815 = $7821;
                                break;
                        };
                        var $7774 = $7815;
                        break;
                };
                var $7772 = $7774;
                break;
        };
        return $7772;
    };
    const Parser$num = x0 => Parser$num$(x0);

    function Kind$Term$num$(_sign$1, _numb$2, _frac$3) {
        var $7885 = ({
            _: 'Kind.Term.num',
            'sign': _sign$1,
            'numb': _numb$2,
            'frac': _frac$3
        });
        return $7885;
    };
    const Kind$Term$num = x0 => x1 => x2 => Kind$Term$num$(x0, x1, x2);

    function Kind$Parser$num$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7887 = self.err;
                var _reply$7 = Parser$num$(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7889 = self.err;
                        var self = $7887;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7891 = self.value;
                                var $7892 = Parser$Reply$error$(Parser$Error$combine$($7891, $7889));
                                var $7890 = $7892;
                                break;
                            case 'Maybe.none':
                                var $7893 = Parser$Reply$error$($7889);
                                var $7890 = $7893;
                                break;
                        };
                        var $7888 = $7890;
                        break;
                    case 'Parser.Reply.value':
                        var $7894 = self.pst;
                        var $7895 = self.val;
                        var self = $7894;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7897 = self.err;
                                var $7898 = self.nam;
                                var $7899 = self.ini;
                                var $7900 = self.idx;
                                var $7901 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7887, $7897), $7898, $7899, $7900, $7901);
                                var self = $7895;
                                switch (self._) {
                                    case 'Parser.Number.new':
                                        var $7903 = self.sign;
                                        var $7904 = self.numb;
                                        var $7905 = self.frac;
                                        var self = $7903;
                                        switch (self._) {
                                            case 'Maybe.none':
                                                var self = $7905;
                                                switch (self._) {
                                                    case 'Maybe.none':
                                                        var $7908 = (_pst$19 => {
                                                            var $7909 = Parser$Reply$value$(_pst$19, Kind$Term$nat$($7904));
                                                            return $7909;
                                                        });
                                                        var $7907 = $7908;
                                                        break;
                                                    case 'Maybe.some':
                                                        var $7910 = (_pst$20 => {
                                                            var $7911 = Parser$Reply$value$(_pst$20, Kind$Term$num$($7903, $7904, $7905));
                                                            return $7911;
                                                        });
                                                        var $7907 = $7910;
                                                        break;
                                                };
                                                var $7906 = $7907;
                                                break;
                                            case 'Maybe.some':
                                                var $7912 = (_pst$20 => {
                                                    var $7913 = Parser$Reply$value$(_pst$20, Kind$Term$num$($7903, $7904, $7905));
                                                    return $7913;
                                                });
                                                var $7906 = $7912;
                                                break;
                                        };
                                        var $7902 = $7906;
                                        break;
                                };
                                var $7902 = $7902(_reply$pst$15);
                                var $7896 = $7902;
                                break;
                        };
                        var $7888 = $7896;
                        break;
                };
                var $7886 = $7888;
                break;
        };
        return $7886;
    };
    const Kind$Parser$num = x0 => Kind$Parser$num$(x0);
    const Kind$Parser$reference = Kind$Parser$block("reference")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7915 = self.err;
                var _reply$7 = Kind$Parser$name1$(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7917 = self.err;
                        var self = $7915;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7919 = self.value;
                                var $7920 = Parser$Reply$error$(Parser$Error$combine$($7919, $7917));
                                var $7918 = $7920;
                                break;
                            case 'Maybe.none':
                                var $7921 = Parser$Reply$error$($7917);
                                var $7918 = $7921;
                                break;
                        };
                        var $7916 = $7918;
                        break;
                    case 'Parser.Reply.value':
                        var $7922 = self.pst;
                        var $7923 = self.val;
                        var self = $7922;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7925 = self.err;
                                var $7926 = self.nam;
                                var $7927 = self.ini;
                                var $7928 = self.idx;
                                var $7929 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7915, $7925), $7926, $7927, $7928, $7929);
                                var self = ($7923 === "Type");
                                if (self) {
                                    var $7931 = (_pst$16 => {
                                        var $7932 = Parser$Reply$value$(_pst$16, Kind$Term$typ);
                                        return $7932;
                                    });
                                    var $7930 = $7931;
                                } else {
                                    var self = ($7923 === "true");
                                    if (self) {
                                        var $7934 = (_pst$16 => {
                                            var $7935 = Parser$Reply$value$(_pst$16, Kind$Term$ref$("Bool.true"));
                                            return $7935;
                                        });
                                        var $7933 = $7934;
                                    } else {
                                        var self = ($7923 === "false");
                                        if (self) {
                                            var $7937 = (_pst$16 => {
                                                var $7938 = Parser$Reply$value$(_pst$16, Kind$Term$ref$("Bool.false"));
                                                return $7938;
                                            });
                                            var $7936 = $7937;
                                        } else {
                                            var self = ($7923 === "unit");
                                            if (self) {
                                                var $7940 = (_pst$16 => {
                                                    var $7941 = Parser$Reply$value$(_pst$16, Kind$Term$ref$("Unit.new"));
                                                    return $7941;
                                                });
                                                var $7939 = $7940;
                                            } else {
                                                var self = ($7923 === "none");
                                                if (self) {
                                                    var _term$16 = Kind$Term$ref$("Maybe.none");
                                                    var _term$17 = Kind$Term$app$(_term$16, Kind$Term$hol$(Bits$e));
                                                    var $7943 = (_pst$18 => {
                                                        var $7944 = Parser$Reply$value$(_pst$18, _term$17);
                                                        return $7944;
                                                    });
                                                    var $7942 = $7943;
                                                } else {
                                                    var self = ($7923 === "refl");
                                                    if (self) {
                                                        var _term$16 = Kind$Term$ref$("Equal.refl");
                                                        var _term$17 = Kind$Term$app$(_term$16, Kind$Term$hol$(Bits$e));
                                                        var _term$18 = Kind$Term$app$(_term$17, Kind$Term$hol$(Bits$e));
                                                        var $7946 = (_pst$19 => {
                                                            var $7947 = Parser$Reply$value$(_pst$19, _term$18);
                                                            return $7947;
                                                        });
                                                        var $7945 = $7946;
                                                    } else {
                                                        var $7948 = (_pst$16 => {
                                                            var $7949 = Parser$Reply$value$(_pst$16, Kind$Term$ref$($7923));
                                                            return $7949;
                                                        });
                                                        var $7945 = $7948;
                                                    };
                                                    var $7942 = $7945;
                                                };
                                                var $7939 = $7942;
                                            };
                                            var $7936 = $7939;
                                        };
                                        var $7933 = $7936;
                                    };
                                    var $7930 = $7933;
                                };
                                var $7930 = $7930(_reply$pst$15);
                                var $7924 = $7930;
                                break;
                        };
                        var $7916 = $7924;
                        break;
                };
                var $7914 = $7916;
                break;
        };
        return $7914;
    }));

    function Kind$Parser$text_now$(_text$1) {
        var $7950 = Parser$text(_text$1);
        return $7950;
    };
    const Kind$Parser$text_now = x0 => Kind$Parser$text_now$(x0);

    function Kind$Parser$items_now$(_ini$2, _parser$3, _end$4) {
        var $7951 = Parser$wrap1(Kind$Parser$text_now$(_ini$2))((_pst$5 => {
            var self = _pst$5;
            switch (self._) {
                case 'Parser.State.new':
                    var $7953 = self.err;
                    var _reply$11 = Kind$Parser$spaces(_pst$5);
                    var self = _reply$11;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $7955 = self.err;
                            var self = $7953;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $7957 = self.value;
                                    var $7958 = Parser$Reply$error$(Parser$Error$combine$($7957, $7955));
                                    var $7956 = $7958;
                                    break;
                                case 'Maybe.none':
                                    var $7959 = Parser$Reply$error$($7955);
                                    var $7956 = $7959;
                                    break;
                            };
                            var $7954 = $7956;
                            break;
                        case 'Parser.Reply.value':
                            var $7960 = self.pst;
                            var self = $7960;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $7962 = self.err;
                                    var $7963 = self.nam;
                                    var $7964 = self.ini;
                                    var $7965 = self.idx;
                                    var $7966 = self.str;
                                    var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($7953, $7962), $7963, $7964, $7965, $7966);
                                    var self = _reply$pst$19;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $7968 = self.err;
                                            var _reply$25 = _parser$3(_reply$pst$19);
                                            var self = _reply$25;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $7970 = self.err;
                                                    var self = $7968;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $7972 = self.value;
                                                            var $7973 = Parser$Reply$error$(Parser$Error$combine$($7972, $7970));
                                                            var $7971 = $7973;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $7974 = Parser$Reply$error$($7970);
                                                            var $7971 = $7974;
                                                            break;
                                                    };
                                                    var $7969 = $7971;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $7975 = self.pst;
                                                    var $7976 = self.val;
                                                    var self = $7975;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $7978 = self.err;
                                                            var $7979 = self.nam;
                                                            var $7980 = self.ini;
                                                            var $7981 = self.idx;
                                                            var $7982 = self.str;
                                                            var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($7968, $7978), $7979, $7980, $7981, $7982);
                                                            var self = _reply$pst$33;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $7984 = self.err;
                                                                    var _reply$39 = Parser$maybe$(Kind$Parser$text(","), _reply$pst$33);
                                                                    var self = _reply$39;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $7986 = self.err;
                                                                            var self = $7984;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $7988 = self.value;
                                                                                    var $7989 = Parser$Reply$error$(Parser$Error$combine$($7988, $7986));
                                                                                    var $7987 = $7989;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $7990 = Parser$Reply$error$($7986);
                                                                                    var $7987 = $7990;
                                                                                    break;
                                                                            };
                                                                            var $7985 = $7987;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $7991 = self.pst;
                                                                            var self = $7991;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $7993 = self.err;
                                                                                    var $7994 = self.nam;
                                                                                    var $7995 = self.ini;
                                                                                    var $7996 = self.idx;
                                                                                    var $7997 = self.str;
                                                                                    var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($7984, $7993), $7994, $7995, $7996, $7997);
                                                                                    var $7998 = Parser$Reply$value$(_reply$pst$47, $7976);
                                                                                    var $7992 = $7998;
                                                                                    break;
                                                                            };
                                                                            var $7985 = $7992;
                                                                            break;
                                                                    };
                                                                    var $7983 = $7985;
                                                                    break;
                                                            };
                                                            var $7977 = $7983;
                                                            break;
                                                    };
                                                    var $7969 = $7977;
                                                    break;
                                            };
                                            var $7967 = $7969;
                                            break;
                                    };
                                    var $7961 = $7967;
                                    break;
                            };
                            var $7954 = $7961;
                            break;
                    };
                    var $7952 = $7954;
                    break;
            };
            return $7952;
        }))(Kind$Parser$text(_end$4));
        return $7951;
    };
    const Kind$Parser$items_now = x0 => x1 => x2 => Kind$Parser$items_now$(x0, x1, x2);
    const List$for = a0 => a1 => a2 => (list_for(a0)(a1)(a2));

    function Kind$Parser$application$(_func$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8000 = self.err;
                var _reply$8 = Kind$Parser$items_now$("(", Kind$Parser$term, ")")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8002 = self.err;
                        var self = $8000;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8004 = self.value;
                                var $8005 = Parser$Reply$error$(Parser$Error$combine$($8004, $8002));
                                var $8003 = $8005;
                                break;
                            case 'Maybe.none':
                                var $8006 = Parser$Reply$error$($8002);
                                var $8003 = $8006;
                                break;
                        };
                        var $8001 = $8003;
                        break;
                    case 'Parser.Reply.value':
                        var $8007 = self.pst;
                        var $8008 = self.val;
                        var self = $8007;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8010 = self.err;
                                var $8011 = self.nam;
                                var $8012 = self.ini;
                                var $8013 = self.idx;
                                var $8014 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8000, $8010), $8011, $8012, $8013, $8014);
                                var _expr$17 = (() => {
                                    var $8017 = _func$1;
                                    var $8018 = $8008;
                                    let _f$18 = $8017;
                                    let _x$17;
                                    while ($8018._ === 'List.cons') {
                                        _x$17 = $8018.head;
                                        var $8017 = Kind$Term$app$(_f$18, _x$17);
                                        _f$18 = $8017;
                                        $8018 = $8018.tail;
                                    }
                                    return _f$18;
                                })();
                                var $8015 = Parser$Reply$value$(_reply$pst$16, _expr$17);
                                var $8009 = $8015;
                                break;
                        };
                        var $8001 = $8009;
                        break;
                };
                var $7999 = $8001;
                break;
        };
        return $7999;
    };
    const Kind$Parser$application = x0 => x1 => Kind$Parser$application$(x0, x1);

    function Kind$Parser$application$erased$(_func$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8020 = self.err;
                var _reply$8 = Kind$Parser$items_now$("<", Kind$Parser$term, ">")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8022 = self.err;
                        var self = $8020;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8024 = self.value;
                                var $8025 = Parser$Reply$error$(Parser$Error$combine$($8024, $8022));
                                var $8023 = $8025;
                                break;
                            case 'Maybe.none':
                                var $8026 = Parser$Reply$error$($8022);
                                var $8023 = $8026;
                                break;
                        };
                        var $8021 = $8023;
                        break;
                    case 'Parser.Reply.value':
                        var $8027 = self.pst;
                        var $8028 = self.val;
                        var self = $8027;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8030 = self.err;
                                var $8031 = self.nam;
                                var $8032 = self.ini;
                                var $8033 = self.idx;
                                var $8034 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8020, $8030), $8031, $8032, $8033, $8034);
                                var _expr$17 = (() => {
                                    var $8037 = _func$1;
                                    var $8038 = $8028;
                                    let _f$18 = $8037;
                                    let _x$17;
                                    while ($8038._ === 'List.cons') {
                                        _x$17 = $8038.head;
                                        var $8037 = Kind$Term$app$(_f$18, _x$17);
                                        _f$18 = $8037;
                                        $8038 = $8038.tail;
                                    }
                                    return _f$18;
                                })();
                                var $8035 = Parser$Reply$value$(_reply$pst$16, _expr$17);
                                var $8029 = $8035;
                                break;
                        };
                        var $8021 = $8029;
                        break;
                };
                var $8019 = $8021;
                break;
        };
        return $8019;
    };
    const Kind$Parser$application$erased = x0 => x1 => Kind$Parser$application$erased$(x0, x1);

    function Kind$Parser$list_set$(_list$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8040 = self.err;
                var _reply$8 = Kind$Parser$text_now$("[")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8042 = self.err;
                        var self = $8040;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8044 = self.value;
                                var $8045 = Parser$Reply$error$(Parser$Error$combine$($8044, $8042));
                                var $8043 = $8045;
                                break;
                            case 'Maybe.none':
                                var $8046 = Parser$Reply$error$($8042);
                                var $8043 = $8046;
                                break;
                        };
                        var $8041 = $8043;
                        break;
                    case 'Parser.Reply.value':
                        var $8047 = self.pst;
                        var self = $8047;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8049 = self.err;
                                var $8050 = self.nam;
                                var $8051 = self.ini;
                                var $8052 = self.idx;
                                var $8053 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8040, $8049), $8050, $8051, $8052, $8053);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8055 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8057 = self.err;
                                                var self = $8055;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8059 = self.value;
                                                        var $8060 = Parser$Reply$error$(Parser$Error$combine$($8059, $8057));
                                                        var $8058 = $8060;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8061 = Parser$Reply$error$($8057);
                                                        var $8058 = $8061;
                                                        break;
                                                };
                                                var $8056 = $8058;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8062 = self.pst;
                                                var $8063 = self.val;
                                                var self = $8062;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8065 = self.err;
                                                        var $8066 = self.nam;
                                                        var $8067 = self.ini;
                                                        var $8068 = self.idx;
                                                        var $8069 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8055, $8065), $8066, $8067, $8068, $8069);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8071 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("]", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8073 = self.err;
                                                                        var self = $8071;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8075 = self.value;
                                                                                var $8076 = Parser$Reply$error$(Parser$Error$combine$($8075, $8073));
                                                                                var $8074 = $8076;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8077 = Parser$Reply$error$($8073);
                                                                                var $8074 = $8077;
                                                                                break;
                                                                        };
                                                                        var $8072 = $8074;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8078 = self.pst;
                                                                        var self = $8078;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8080 = self.err;
                                                                                var $8081 = self.nam;
                                                                                var $8082 = self.ini;
                                                                                var $8083 = self.idx;
                                                                                var $8084 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8071, $8080), $8081, $8082, $8083, $8084);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8086 = self.err;
                                                                                        var _reply$50 = Kind$Parser$text$("<-", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $8088 = self.err;
                                                                                                var self = $8086;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $8090 = self.value;
                                                                                                        var $8091 = Parser$Reply$error$(Parser$Error$combine$($8090, $8088));
                                                                                                        var $8089 = $8091;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $8092 = Parser$Reply$error$($8088);
                                                                                                        var $8089 = $8092;
                                                                                                        break;
                                                                                                };
                                                                                                var $8087 = $8089;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $8093 = self.pst;
                                                                                                var self = $8093;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $8095 = self.err;
                                                                                                        var $8096 = self.nam;
                                                                                                        var $8097 = self.ini;
                                                                                                        var $8098 = self.idx;
                                                                                                        var $8099 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($8086, $8095), $8096, $8097, $8098, $8099);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $8101 = self.err;
                                                                                                                var _reply$64 = Kind$Parser$term(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $8103 = self.err;
                                                                                                                        var self = $8101;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $8105 = self.value;
                                                                                                                                var $8106 = Parser$Reply$error$(Parser$Error$combine$($8105, $8103));
                                                                                                                                var $8104 = $8106;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $8107 = Parser$Reply$error$($8103);
                                                                                                                                var $8104 = $8107;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8102 = $8104;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $8108 = self.pst;
                                                                                                                        var $8109 = self.val;
                                                                                                                        var self = $8108;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $8111 = self.err;
                                                                                                                                var $8112 = self.nam;
                                                                                                                                var $8113 = self.ini;
                                                                                                                                var $8114 = self.idx;
                                                                                                                                var $8115 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($8101, $8111), $8112, $8113, $8114, $8115);
                                                                                                                                var _term$73 = Kind$Term$ref$("List.set");
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, $8063);
                                                                                                                                var _term$76 = Kind$Term$app$(_term$75, $8109);
                                                                                                                                var _term$77 = Kind$Term$app$(_term$76, _list$1);
                                                                                                                                var $8116 = Parser$Reply$value$(_reply$pst$72, _term$77);
                                                                                                                                var $8110 = $8116;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8102 = $8110;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $8100 = $8102;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $8094 = $8100;
                                                                                                        break;
                                                                                                };
                                                                                                var $8087 = $8094;
                                                                                                break;
                                                                                        };
                                                                                        var $8085 = $8087;
                                                                                        break;
                                                                                };
                                                                                var $8079 = $8085;
                                                                                break;
                                                                        };
                                                                        var $8072 = $8079;
                                                                        break;
                                                                };
                                                                var $8070 = $8072;
                                                                break;
                                                        };
                                                        var $8064 = $8070;
                                                        break;
                                                };
                                                var $8056 = $8064;
                                                break;
                                        };
                                        var $8054 = $8056;
                                        break;
                                };
                                var $8048 = $8054;
                                break;
                        };
                        var $8041 = $8048;
                        break;
                };
                var $8039 = $8041;
                break;
        };
        return $8039;
    };
    const Kind$Parser$list_set = x0 => x1 => Kind$Parser$list_set$(x0, x1);

    function Kind$Parser$list_get$(_list$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8118 = self.err;
                var _reply$8 = Kind$Parser$text_now$("[")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8120 = self.err;
                        var self = $8118;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8122 = self.value;
                                var $8123 = Parser$Reply$error$(Parser$Error$combine$($8122, $8120));
                                var $8121 = $8123;
                                break;
                            case 'Maybe.none':
                                var $8124 = Parser$Reply$error$($8120);
                                var $8121 = $8124;
                                break;
                        };
                        var $8119 = $8121;
                        break;
                    case 'Parser.Reply.value':
                        var $8125 = self.pst;
                        var self = $8125;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8127 = self.err;
                                var $8128 = self.nam;
                                var $8129 = self.ini;
                                var $8130 = self.idx;
                                var $8131 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8118, $8127), $8128, $8129, $8130, $8131);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8133 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8135 = self.err;
                                                var self = $8133;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8137 = self.value;
                                                        var $8138 = Parser$Reply$error$(Parser$Error$combine$($8137, $8135));
                                                        var $8136 = $8138;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8139 = Parser$Reply$error$($8135);
                                                        var $8136 = $8139;
                                                        break;
                                                };
                                                var $8134 = $8136;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8140 = self.pst;
                                                var $8141 = self.val;
                                                var self = $8140;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8143 = self.err;
                                                        var $8144 = self.nam;
                                                        var $8145 = self.ini;
                                                        var $8146 = self.idx;
                                                        var $8147 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8133, $8143), $8144, $8145, $8146, $8147);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8149 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("]", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8151 = self.err;
                                                                        var self = $8149;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8153 = self.value;
                                                                                var $8154 = Parser$Reply$error$(Parser$Error$combine$($8153, $8151));
                                                                                var $8152 = $8154;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8155 = Parser$Reply$error$($8151);
                                                                                var $8152 = $8155;
                                                                                break;
                                                                        };
                                                                        var $8150 = $8152;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8156 = self.pst;
                                                                        var self = $8156;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8158 = self.err;
                                                                                var $8159 = self.nam;
                                                                                var $8160 = self.ini;
                                                                                var $8161 = self.idx;
                                                                                var $8162 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8149, $8158), $8159, $8160, $8161, $8162);
                                                                                var _term$45 = Kind$Term$ref$("List.get");
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, $8141);
                                                                                var _term$48 = Kind$Term$app$(_term$47, _list$1);
                                                                                var $8163 = Parser$Reply$value$(_reply$pst$44, _term$48);
                                                                                var $8157 = $8163;
                                                                                break;
                                                                        };
                                                                        var $8150 = $8157;
                                                                        break;
                                                                };
                                                                var $8148 = $8150;
                                                                break;
                                                        };
                                                        var $8142 = $8148;
                                                        break;
                                                };
                                                var $8134 = $8142;
                                                break;
                                        };
                                        var $8132 = $8134;
                                        break;
                                };
                                var $8126 = $8132;
                                break;
                        };
                        var $8119 = $8126;
                        break;
                };
                var $8117 = $8119;
                break;
        };
        return $8117;
    };
    const Kind$Parser$list_get = x0 => x1 => Kind$Parser$list_get$(x0, x1);

    function Kind$Parser$map_set$(_map$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8165 = self.err;
                var _reply$8 = Kind$Parser$text_now$("{")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8167 = self.err;
                        var self = $8165;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8169 = self.value;
                                var $8170 = Parser$Reply$error$(Parser$Error$combine$($8169, $8167));
                                var $8168 = $8170;
                                break;
                            case 'Maybe.none':
                                var $8171 = Parser$Reply$error$($8167);
                                var $8168 = $8171;
                                break;
                        };
                        var $8166 = $8168;
                        break;
                    case 'Parser.Reply.value':
                        var $8172 = self.pst;
                        var self = $8172;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8174 = self.err;
                                var $8175 = self.nam;
                                var $8176 = self.ini;
                                var $8177 = self.idx;
                                var $8178 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8165, $8174), $8175, $8176, $8177, $8178);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8180 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8182 = self.err;
                                                var self = $8180;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8184 = self.value;
                                                        var $8185 = Parser$Reply$error$(Parser$Error$combine$($8184, $8182));
                                                        var $8183 = $8185;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8186 = Parser$Reply$error$($8182);
                                                        var $8183 = $8186;
                                                        break;
                                                };
                                                var $8181 = $8183;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8187 = self.pst;
                                                var $8188 = self.val;
                                                var self = $8187;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8190 = self.err;
                                                        var $8191 = self.nam;
                                                        var $8192 = self.ini;
                                                        var $8193 = self.idx;
                                                        var $8194 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8180, $8190), $8191, $8192, $8193, $8194);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8196 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("}", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8198 = self.err;
                                                                        var self = $8196;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8200 = self.value;
                                                                                var $8201 = Parser$Reply$error$(Parser$Error$combine$($8200, $8198));
                                                                                var $8199 = $8201;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8202 = Parser$Reply$error$($8198);
                                                                                var $8199 = $8202;
                                                                                break;
                                                                        };
                                                                        var $8197 = $8199;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8203 = self.pst;
                                                                        var self = $8203;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8205 = self.err;
                                                                                var $8206 = self.nam;
                                                                                var $8207 = self.ini;
                                                                                var $8208 = self.idx;
                                                                                var $8209 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8196, $8205), $8206, $8207, $8208, $8209);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8211 = self.err;
                                                                                        var _reply$50 = Kind$Parser$text$("<-", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $8213 = self.err;
                                                                                                var self = $8211;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $8215 = self.value;
                                                                                                        var $8216 = Parser$Reply$error$(Parser$Error$combine$($8215, $8213));
                                                                                                        var $8214 = $8216;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $8217 = Parser$Reply$error$($8213);
                                                                                                        var $8214 = $8217;
                                                                                                        break;
                                                                                                };
                                                                                                var $8212 = $8214;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $8218 = self.pst;
                                                                                                var self = $8218;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $8220 = self.err;
                                                                                                        var $8221 = self.nam;
                                                                                                        var $8222 = self.ini;
                                                                                                        var $8223 = self.idx;
                                                                                                        var $8224 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($8211, $8220), $8221, $8222, $8223, $8224);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $8226 = self.err;
                                                                                                                var _reply$64 = Kind$Parser$term(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $8228 = self.err;
                                                                                                                        var self = $8226;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $8230 = self.value;
                                                                                                                                var $8231 = Parser$Reply$error$(Parser$Error$combine$($8230, $8228));
                                                                                                                                var $8229 = $8231;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $8232 = Parser$Reply$error$($8228);
                                                                                                                                var $8229 = $8232;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8227 = $8229;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $8233 = self.pst;
                                                                                                                        var $8234 = self.val;
                                                                                                                        var self = $8233;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $8236 = self.err;
                                                                                                                                var $8237 = self.nam;
                                                                                                                                var $8238 = self.ini;
                                                                                                                                var $8239 = self.idx;
                                                                                                                                var $8240 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($8226, $8236), $8237, $8238, $8239, $8240);
                                                                                                                                var _term$73 = Kind$Term$ref$("Map.set");
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, $8188);
                                                                                                                                var _term$76 = Kind$Term$app$(_term$75, $8234);
                                                                                                                                var _term$77 = Kind$Term$app$(_term$76, _map$1);
                                                                                                                                var $8241 = Parser$Reply$value$(_reply$pst$72, _term$77);
                                                                                                                                var $8235 = $8241;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8227 = $8235;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $8225 = $8227;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $8219 = $8225;
                                                                                                        break;
                                                                                                };
                                                                                                var $8212 = $8219;
                                                                                                break;
                                                                                        };
                                                                                        var $8210 = $8212;
                                                                                        break;
                                                                                };
                                                                                var $8204 = $8210;
                                                                                break;
                                                                        };
                                                                        var $8197 = $8204;
                                                                        break;
                                                                };
                                                                var $8195 = $8197;
                                                                break;
                                                        };
                                                        var $8189 = $8195;
                                                        break;
                                                };
                                                var $8181 = $8189;
                                                break;
                                        };
                                        var $8179 = $8181;
                                        break;
                                };
                                var $8173 = $8179;
                                break;
                        };
                        var $8166 = $8173;
                        break;
                };
                var $8164 = $8166;
                break;
        };
        return $8164;
    };
    const Kind$Parser$map_set = x0 => x1 => Kind$Parser$map_set$(x0, x1);

    function Kind$Parser$map_get$(_map$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8243 = self.err;
                var _reply$8 = Kind$Parser$text_now$("{")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8245 = self.err;
                        var self = $8243;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8247 = self.value;
                                var $8248 = Parser$Reply$error$(Parser$Error$combine$($8247, $8245));
                                var $8246 = $8248;
                                break;
                            case 'Maybe.none':
                                var $8249 = Parser$Reply$error$($8245);
                                var $8246 = $8249;
                                break;
                        };
                        var $8244 = $8246;
                        break;
                    case 'Parser.Reply.value':
                        var $8250 = self.pst;
                        var self = $8250;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8252 = self.err;
                                var $8253 = self.nam;
                                var $8254 = self.ini;
                                var $8255 = self.idx;
                                var $8256 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8243, $8252), $8253, $8254, $8255, $8256);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8258 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8260 = self.err;
                                                var self = $8258;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8262 = self.value;
                                                        var $8263 = Parser$Reply$error$(Parser$Error$combine$($8262, $8260));
                                                        var $8261 = $8263;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8264 = Parser$Reply$error$($8260);
                                                        var $8261 = $8264;
                                                        break;
                                                };
                                                var $8259 = $8261;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8265 = self.pst;
                                                var $8266 = self.val;
                                                var self = $8265;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8268 = self.err;
                                                        var $8269 = self.nam;
                                                        var $8270 = self.ini;
                                                        var $8271 = self.idx;
                                                        var $8272 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8258, $8268), $8269, $8270, $8271, $8272);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8274 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("}", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8276 = self.err;
                                                                        var self = $8274;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8278 = self.value;
                                                                                var $8279 = Parser$Reply$error$(Parser$Error$combine$($8278, $8276));
                                                                                var $8277 = $8279;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8280 = Parser$Reply$error$($8276);
                                                                                var $8277 = $8280;
                                                                                break;
                                                                        };
                                                                        var $8275 = $8277;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8281 = self.pst;
                                                                        var self = $8281;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8283 = self.err;
                                                                                var $8284 = self.nam;
                                                                                var $8285 = self.ini;
                                                                                var $8286 = self.idx;
                                                                                var $8287 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8274, $8283), $8284, $8285, $8286, $8287);
                                                                                var _term$45 = Kind$Term$ref$("Map.get");
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, $8266);
                                                                                var _term$48 = Kind$Term$app$(_term$47, _map$1);
                                                                                var $8288 = Parser$Reply$value$(_reply$pst$44, _term$48);
                                                                                var $8282 = $8288;
                                                                                break;
                                                                        };
                                                                        var $8275 = $8282;
                                                                        break;
                                                                };
                                                                var $8273 = $8275;
                                                                break;
                                                        };
                                                        var $8267 = $8273;
                                                        break;
                                                };
                                                var $8259 = $8267;
                                                break;
                                        };
                                        var $8257 = $8259;
                                        break;
                                };
                                var $8251 = $8257;
                                break;
                        };
                        var $8244 = $8251;
                        break;
                };
                var $8242 = $8244;
                break;
        };
        return $8242;
    };
    const Kind$Parser$map_get = x0 => x1 => Kind$Parser$map_get$(x0, x1);

    function Kind$Term$set$(_expr$1, _fkey$2, _fval$3) {
        var $8289 = ({
            _: 'Kind.Term.set',
            'expr': _expr$1,
            'fkey': _fkey$2,
            'fval': _fval$3
        });
        return $8289;
    };
    const Kind$Term$set = x0 => x1 => x2 => Kind$Term$set$(x0, x1, x2);

    function Kind$Parser$field_set$(_term$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8291 = self.err;
                var _reply$8 = Kind$Parser$text$("@", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8293 = self.err;
                        var self = $8291;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8295 = self.value;
                                var $8296 = Parser$Reply$error$(Parser$Error$combine$($8295, $8293));
                                var $8294 = $8296;
                                break;
                            case 'Maybe.none':
                                var $8297 = Parser$Reply$error$($8293);
                                var $8294 = $8297;
                                break;
                        };
                        var $8292 = $8294;
                        break;
                    case 'Parser.Reply.value':
                        var $8298 = self.pst;
                        var self = $8298;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8300 = self.err;
                                var $8301 = self.nam;
                                var $8302 = self.ini;
                                var $8303 = self.idx;
                                var $8304 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8291, $8300), $8301, $8302, $8303, $8304);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8306 = self.err;
                                        var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8308 = self.err;
                                                var self = $8306;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8310 = self.value;
                                                        var $8311 = Parser$Reply$error$(Parser$Error$combine$($8310, $8308));
                                                        var $8309 = $8311;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8312 = Parser$Reply$error$($8308);
                                                        var $8309 = $8312;
                                                        break;
                                                };
                                                var $8307 = $8309;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8313 = self.pst;
                                                var $8314 = self.val;
                                                var self = $8313;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8316 = self.err;
                                                        var $8317 = self.nam;
                                                        var $8318 = self.ini;
                                                        var $8319 = self.idx;
                                                        var $8320 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8306, $8316), $8317, $8318, $8319, $8320);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8322 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("<-", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8324 = self.err;
                                                                        var self = $8322;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8326 = self.value;
                                                                                var $8327 = Parser$Reply$error$(Parser$Error$combine$($8326, $8324));
                                                                                var $8325 = $8327;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8328 = Parser$Reply$error$($8324);
                                                                                var $8325 = $8328;
                                                                                break;
                                                                        };
                                                                        var $8323 = $8325;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8329 = self.pst;
                                                                        var self = $8329;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8331 = self.err;
                                                                                var $8332 = self.nam;
                                                                                var $8333 = self.ini;
                                                                                var $8334 = self.idx;
                                                                                var $8335 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8322, $8331), $8332, $8333, $8334, $8335);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8337 = self.err;
                                                                                        var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $8339 = self.err;
                                                                                                var self = $8337;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $8341 = self.value;
                                                                                                        var $8342 = Parser$Reply$error$(Parser$Error$combine$($8341, $8339));
                                                                                                        var $8340 = $8342;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $8343 = Parser$Reply$error$($8339);
                                                                                                        var $8340 = $8343;
                                                                                                        break;
                                                                                                };
                                                                                                var $8338 = $8340;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $8344 = self.pst;
                                                                                                var $8345 = self.val;
                                                                                                var self = $8344;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $8347 = self.err;
                                                                                                        var $8348 = self.nam;
                                                                                                        var $8349 = self.ini;
                                                                                                        var $8350 = self.idx;
                                                                                                        var $8351 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($8337, $8347), $8348, $8349, $8350, $8351);
                                                                                                        var $8352 = Parser$Reply$value$(_reply$pst$58, Kind$Term$set$(_term$1, $8314, $8345));
                                                                                                        var $8346 = $8352;
                                                                                                        break;
                                                                                                };
                                                                                                var $8338 = $8346;
                                                                                                break;
                                                                                        };
                                                                                        var $8336 = $8338;
                                                                                        break;
                                                                                };
                                                                                var $8330 = $8336;
                                                                                break;
                                                                        };
                                                                        var $8323 = $8330;
                                                                        break;
                                                                };
                                                                var $8321 = $8323;
                                                                break;
                                                        };
                                                        var $8315 = $8321;
                                                        break;
                                                };
                                                var $8307 = $8315;
                                                break;
                                        };
                                        var $8305 = $8307;
                                        break;
                                };
                                var $8299 = $8305;
                                break;
                        };
                        var $8292 = $8299;
                        break;
                };
                var $8290 = $8292;
                break;
        };
        return $8290;
    };
    const Kind$Parser$field_set = x0 => x1 => Kind$Parser$field_set$(x0, x1);

    function Kind$Term$get$(_expr$1, _fkey$2) {
        var $8353 = ({
            _: 'Kind.Term.get',
            'expr': _expr$1,
            'fkey': _fkey$2
        });
        return $8353;
    };
    const Kind$Term$get = x0 => x1 => Kind$Term$get$(x0, x1);

    function Kind$Parser$field_get$(_term$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8355 = self.err;
                var _reply$8 = Kind$Parser$text$("@", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8357 = self.err;
                        var self = $8355;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8359 = self.value;
                                var $8360 = Parser$Reply$error$(Parser$Error$combine$($8359, $8357));
                                var $8358 = $8360;
                                break;
                            case 'Maybe.none':
                                var $8361 = Parser$Reply$error$($8357);
                                var $8358 = $8361;
                                break;
                        };
                        var $8356 = $8358;
                        break;
                    case 'Parser.Reply.value':
                        var $8362 = self.pst;
                        var self = $8362;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8364 = self.err;
                                var $8365 = self.nam;
                                var $8366 = self.ini;
                                var $8367 = self.idx;
                                var $8368 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8355, $8364), $8365, $8366, $8367, $8368);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8370 = self.err;
                                        var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8372 = self.err;
                                                var self = $8370;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8374 = self.value;
                                                        var $8375 = Parser$Reply$error$(Parser$Error$combine$($8374, $8372));
                                                        var $8373 = $8375;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8376 = Parser$Reply$error$($8372);
                                                        var $8373 = $8376;
                                                        break;
                                                };
                                                var $8371 = $8373;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8377 = self.pst;
                                                var $8378 = self.val;
                                                var self = $8377;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8380 = self.err;
                                                        var $8381 = self.nam;
                                                        var $8382 = self.ini;
                                                        var $8383 = self.idx;
                                                        var $8384 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8370, $8380), $8381, $8382, $8383, $8384);
                                                        var $8385 = Parser$Reply$value$(_reply$pst$30, Kind$Term$get$(_term$1, $8378));
                                                        var $8379 = $8385;
                                                        break;
                                                };
                                                var $8371 = $8379;
                                                break;
                                        };
                                        var $8369 = $8371;
                                        break;
                                };
                                var $8363 = $8369;
                                break;
                        };
                        var $8356 = $8363;
                        break;
                };
                var $8354 = $8356;
                break;
        };
        return $8354;
    };
    const Kind$Parser$field_get = x0 => x1 => Kind$Parser$field_get$(x0, x1);

    function Kind$Parser$arrow$(_xtyp$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8387 = self.err;
                var _reply$8 = Kind$Parser$text$("->", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8389 = self.err;
                        var self = $8387;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8391 = self.value;
                                var $8392 = Parser$Reply$error$(Parser$Error$combine$($8391, $8389));
                                var $8390 = $8392;
                                break;
                            case 'Maybe.none':
                                var $8393 = Parser$Reply$error$($8389);
                                var $8390 = $8393;
                                break;
                        };
                        var $8388 = $8390;
                        break;
                    case 'Parser.Reply.value':
                        var $8394 = self.pst;
                        var self = $8394;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8396 = self.err;
                                var $8397 = self.nam;
                                var $8398 = self.ini;
                                var $8399 = self.idx;
                                var $8400 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8387, $8396), $8397, $8398, $8399, $8400);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8402 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8404 = self.err;
                                                var self = $8402;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8406 = self.value;
                                                        var $8407 = Parser$Reply$error$(Parser$Error$combine$($8406, $8404));
                                                        var $8405 = $8407;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8408 = Parser$Reply$error$($8404);
                                                        var $8405 = $8408;
                                                        break;
                                                };
                                                var $8403 = $8405;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8409 = self.pst;
                                                var $8410 = self.val;
                                                var self = $8409;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8412 = self.err;
                                                        var $8413 = self.nam;
                                                        var $8414 = self.ini;
                                                        var $8415 = self.idx;
                                                        var $8416 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8402, $8412), $8413, $8414, $8415, $8416);
                                                        var $8417 = Parser$Reply$value$(_reply$pst$30, Kind$Term$all$(Bool$false, "", "", _xtyp$1, (_s$31 => _x$32 => {
                                                            var $8418 = $8410;
                                                            return $8418;
                                                        })));
                                                        var $8411 = $8417;
                                                        break;
                                                };
                                                var $8403 = $8411;
                                                break;
                                        };
                                        var $8401 = $8403;
                                        break;
                                };
                                var $8395 = $8401;
                                break;
                        };
                        var $8388 = $8395;
                        break;
                };
                var $8386 = $8388;
                break;
        };
        return $8386;
    };
    const Kind$Parser$arrow = x0 => x1 => Kind$Parser$arrow$(x0, x1);

    function Kind$Parser$concat$(_lst0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8420 = self.err;
                var _reply$8 = Kind$Parser$text$("++", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8422 = self.err;
                        var self = $8420;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8424 = self.value;
                                var $8425 = Parser$Reply$error$(Parser$Error$combine$($8424, $8422));
                                var $8423 = $8425;
                                break;
                            case 'Maybe.none':
                                var $8426 = Parser$Reply$error$($8422);
                                var $8423 = $8426;
                                break;
                        };
                        var $8421 = $8423;
                        break;
                    case 'Parser.Reply.value':
                        var $8427 = self.pst;
                        var self = $8427;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8429 = self.err;
                                var $8430 = self.nam;
                                var $8431 = self.ini;
                                var $8432 = self.idx;
                                var $8433 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8420, $8429), $8430, $8431, $8432, $8433);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8435 = self.err;
                                        var _reply$22 = Parser$text$(" ", _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8437 = self.err;
                                                var self = $8435;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8439 = self.value;
                                                        var $8440 = Parser$Reply$error$(Parser$Error$combine$($8439, $8437));
                                                        var $8438 = $8440;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8441 = Parser$Reply$error$($8437);
                                                        var $8438 = $8441;
                                                        break;
                                                };
                                                var $8436 = $8438;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8442 = self.pst;
                                                var self = $8442;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8444 = self.err;
                                                        var $8445 = self.nam;
                                                        var $8446 = self.ini;
                                                        var $8447 = self.idx;
                                                        var $8448 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8435, $8444), $8445, $8446, $8447, $8448);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8450 = self.err;
                                                                var _reply$36 = Kind$Parser$term(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8452 = self.err;
                                                                        var self = $8450;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8454 = self.value;
                                                                                var $8455 = Parser$Reply$error$(Parser$Error$combine$($8454, $8452));
                                                                                var $8453 = $8455;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8456 = Parser$Reply$error$($8452);
                                                                                var $8453 = $8456;
                                                                                break;
                                                                        };
                                                                        var $8451 = $8453;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8457 = self.pst;
                                                                        var $8458 = self.val;
                                                                        var self = $8457;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8460 = self.err;
                                                                                var $8461 = self.nam;
                                                                                var $8462 = self.ini;
                                                                                var $8463 = self.idx;
                                                                                var $8464 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8450, $8460), $8461, $8462, $8463, $8464);
                                                                                var _term$45 = Kind$Term$ref$("List.concat");
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, _lst0$1);
                                                                                var _term$48 = Kind$Term$app$(_term$47, $8458);
                                                                                var $8465 = Parser$Reply$value$(_reply$pst$44, _term$48);
                                                                                var $8459 = $8465;
                                                                                break;
                                                                        };
                                                                        var $8451 = $8459;
                                                                        break;
                                                                };
                                                                var $8449 = $8451;
                                                                break;
                                                        };
                                                        var $8443 = $8449;
                                                        break;
                                                };
                                                var $8436 = $8443;
                                                break;
                                        };
                                        var $8434 = $8436;
                                        break;
                                };
                                var $8428 = $8434;
                                break;
                        };
                        var $8421 = $8428;
                        break;
                };
                var $8419 = $8421;
                break;
        };
        return $8419;
    };
    const Kind$Parser$concat = x0 => x1 => Kind$Parser$concat$(x0, x1);

    function Kind$Parser$equality$(_val0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8467 = self.err;
                var _reply$8 = Kind$Parser$text$("==", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8469 = self.err;
                        var self = $8467;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8471 = self.value;
                                var $8472 = Parser$Reply$error$(Parser$Error$combine$($8471, $8469));
                                var $8470 = $8472;
                                break;
                            case 'Maybe.none':
                                var $8473 = Parser$Reply$error$($8469);
                                var $8470 = $8473;
                                break;
                        };
                        var $8468 = $8470;
                        break;
                    case 'Parser.Reply.value':
                        var $8474 = self.pst;
                        var self = $8474;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8476 = self.err;
                                var $8477 = self.nam;
                                var $8478 = self.ini;
                                var $8479 = self.idx;
                                var $8480 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8467, $8476), $8477, $8478, $8479, $8480);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8482 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8484 = self.err;
                                                var self = $8482;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8486 = self.value;
                                                        var $8487 = Parser$Reply$error$(Parser$Error$combine$($8486, $8484));
                                                        var $8485 = $8487;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8488 = Parser$Reply$error$($8484);
                                                        var $8485 = $8488;
                                                        break;
                                                };
                                                var $8483 = $8485;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8489 = self.pst;
                                                var $8490 = self.val;
                                                var self = $8489;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8492 = self.err;
                                                        var $8493 = self.nam;
                                                        var $8494 = self.ini;
                                                        var $8495 = self.idx;
                                                        var $8496 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8482, $8492), $8493, $8494, $8495, $8496);
                                                        var _term$31 = Kind$Term$ref$("Equal");
                                                        var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                        var _term$33 = Kind$Term$app$(_term$32, _val0$1);
                                                        var _term$34 = Kind$Term$app$(_term$33, $8490);
                                                        var $8497 = Parser$Reply$value$(_reply$pst$30, _term$34);
                                                        var $8491 = $8497;
                                                        break;
                                                };
                                                var $8483 = $8491;
                                                break;
                                        };
                                        var $8481 = $8483;
                                        break;
                                };
                                var $8475 = $8481;
                                break;
                        };
                        var $8468 = $8475;
                        break;
                };
                var $8466 = $8468;
                break;
        };
        return $8466;
    };
    const Kind$Parser$equality = x0 => x1 => Kind$Parser$equality$(x0, x1);

    function Kind$Term$ope$(_name$1, _arg0$2, _arg1$3) {
        var $8498 = ({
            _: 'Kind.Term.ope',
            'name': _name$1,
            'arg0': _arg0$2,
            'arg1': _arg1$3
        });
        return $8498;
    };
    const Kind$Term$ope = x0 => x1 => x2 => Kind$Term$ope$(x0, x1, x2);

    function Kind$Parser$op$(_sym$1, _ref$2, _val0$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $8500 = self.err;
                var _reply$10 = Kind$Parser$text$(_sym$1, _pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8502 = self.err;
                        var self = $8500;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8504 = self.value;
                                var $8505 = Parser$Reply$error$(Parser$Error$combine$($8504, $8502));
                                var $8503 = $8505;
                                break;
                            case 'Maybe.none':
                                var $8506 = Parser$Reply$error$($8502);
                                var $8503 = $8506;
                                break;
                        };
                        var $8501 = $8503;
                        break;
                    case 'Parser.Reply.value':
                        var $8507 = self.pst;
                        var self = $8507;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8509 = self.err;
                                var $8510 = self.nam;
                                var $8511 = self.ini;
                                var $8512 = self.idx;
                                var $8513 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($8500, $8509), $8510, $8511, $8512, $8513);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8515 = self.err;
                                        var _reply$24 = Kind$Parser$term(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8517 = self.err;
                                                var self = $8515;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8519 = self.value;
                                                        var $8520 = Parser$Reply$error$(Parser$Error$combine$($8519, $8517));
                                                        var $8518 = $8520;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8521 = Parser$Reply$error$($8517);
                                                        var $8518 = $8521;
                                                        break;
                                                };
                                                var $8516 = $8518;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8522 = self.pst;
                                                var $8523 = self.val;
                                                var self = $8522;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8525 = self.err;
                                                        var $8526 = self.nam;
                                                        var $8527 = self.ini;
                                                        var $8528 = self.idx;
                                                        var $8529 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($8515, $8525), $8526, $8527, $8528, $8529);
                                                        var $8530 = Parser$Reply$value$(_reply$pst$32, Kind$Term$ope$(_sym$1, _val0$3, $8523));
                                                        var $8524 = $8530;
                                                        break;
                                                };
                                                var $8516 = $8524;
                                                break;
                                        };
                                        var $8514 = $8516;
                                        break;
                                };
                                var $8508 = $8514;
                                break;
                        };
                        var $8501 = $8508;
                        break;
                };
                var $8499 = $8501;
                break;
        };
        return $8499;
    };
    const Kind$Parser$op = x0 => x1 => x2 => x3 => Kind$Parser$op$(x0, x1, x2, x3);
    const Kind$Parser$add = Kind$Parser$op("+")("Nat.add");
    const Kind$Parser$sub = Kind$Parser$op("-")("Nat.sub");
    const Kind$Parser$mul = Kind$Parser$op("*")("Nat.mul");
    const Kind$Parser$div = Kind$Parser$op("/")("Nat.div");
    const Kind$Parser$mod = Kind$Parser$op("%")("Nat.mod");
    const Kind$Parser$ltn = Kind$Parser$op("<?")("Nat.ltn");
    const Kind$Parser$lte = Kind$Parser$op("<=?")("Nat.lte");
    const Kind$Parser$eql = Kind$Parser$op("=?")("Nat.eql");
    const Kind$Parser$gte = Kind$Parser$op(">=?")("Nat.gte");
    const Kind$Parser$gtn = Kind$Parser$op(">?")("Nat.gtn");
    const Kind$Parser$and = Kind$Parser$op("&&")("Bool.and");
    const Kind$Parser$or = Kind$Parser$op("||")("Bool.or");

    function Kind$Parser$default$(_val0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8532 = self.err;
                var _reply$8 = Kind$Parser$text$("<>", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8534 = self.err;
                        var self = $8532;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8536 = self.value;
                                var $8537 = Parser$Reply$error$(Parser$Error$combine$($8536, $8534));
                                var $8535 = $8537;
                                break;
                            case 'Maybe.none':
                                var $8538 = Parser$Reply$error$($8534);
                                var $8535 = $8538;
                                break;
                        };
                        var $8533 = $8535;
                        break;
                    case 'Parser.Reply.value':
                        var $8539 = self.pst;
                        var self = $8539;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8541 = self.err;
                                var $8542 = self.nam;
                                var $8543 = self.ini;
                                var $8544 = self.idx;
                                var $8545 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8532, $8541), $8542, $8543, $8544, $8545);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8547 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8549 = self.err;
                                                var self = $8547;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8551 = self.value;
                                                        var $8552 = Parser$Reply$error$(Parser$Error$combine$($8551, $8549));
                                                        var $8550 = $8552;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8553 = Parser$Reply$error$($8549);
                                                        var $8550 = $8553;
                                                        break;
                                                };
                                                var $8548 = $8550;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8554 = self.pst;
                                                var $8555 = self.val;
                                                var self = $8554;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8557 = self.err;
                                                        var $8558 = self.nam;
                                                        var $8559 = self.ini;
                                                        var $8560 = self.idx;
                                                        var $8561 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8547, $8557), $8558, $8559, $8560, $8561);
                                                        var _term$31 = Kind$Term$ref$("Maybe.default");
                                                        var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                        var _term$33 = Kind$Term$app$(_term$32, _val0$1);
                                                        var _term$34 = Kind$Term$app$(_term$33, $8555);
                                                        var $8562 = Parser$Reply$value$(_reply$pst$30, _term$34);
                                                        var $8556 = $8562;
                                                        break;
                                                };
                                                var $8548 = $8556;
                                                break;
                                        };
                                        var $8546 = $8548;
                                        break;
                                };
                                var $8540 = $8546;
                                break;
                        };
                        var $8533 = $8540;
                        break;
                };
                var $8531 = $8533;
                break;
        };
        return $8531;
    };
    const Kind$Parser$default = x0 => x1 => Kind$Parser$default$(x0, x1);

    function Kind$Parser$cons$(_head$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8564 = self.err;
                var _reply$8 = Kind$Parser$text$("&", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8566 = self.err;
                        var self = $8564;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8568 = self.value;
                                var $8569 = Parser$Reply$error$(Parser$Error$combine$($8568, $8566));
                                var $8567 = $8569;
                                break;
                            case 'Maybe.none':
                                var $8570 = Parser$Reply$error$($8566);
                                var $8567 = $8570;
                                break;
                        };
                        var $8565 = $8567;
                        break;
                    case 'Parser.Reply.value':
                        var $8571 = self.pst;
                        var self = $8571;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8573 = self.err;
                                var $8574 = self.nam;
                                var $8575 = self.ini;
                                var $8576 = self.idx;
                                var $8577 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8564, $8573), $8574, $8575, $8576, $8577);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8579 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8581 = self.err;
                                                var self = $8579;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8583 = self.value;
                                                        var $8584 = Parser$Reply$error$(Parser$Error$combine$($8583, $8581));
                                                        var $8582 = $8584;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8585 = Parser$Reply$error$($8581);
                                                        var $8582 = $8585;
                                                        break;
                                                };
                                                var $8580 = $8582;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8586 = self.pst;
                                                var $8587 = self.val;
                                                var self = $8586;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8589 = self.err;
                                                        var $8590 = self.nam;
                                                        var $8591 = self.ini;
                                                        var $8592 = self.idx;
                                                        var $8593 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8579, $8589), $8590, $8591, $8592, $8593);
                                                        var _term$31 = Kind$Term$ref$("List.cons");
                                                        var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                        var _term$33 = Kind$Term$app$(_term$32, _head$1);
                                                        var _term$34 = Kind$Term$app$(_term$33, $8587);
                                                        var $8594 = Parser$Reply$value$(_reply$pst$30, _term$34);
                                                        var $8588 = $8594;
                                                        break;
                                                };
                                                var $8580 = $8588;
                                                break;
                                        };
                                        var $8578 = $8580;
                                        break;
                                };
                                var $8572 = $8578;
                                break;
                        };
                        var $8565 = $8572;
                        break;
                };
                var $8563 = $8565;
                break;
        };
        return $8563;
    };
    const Kind$Parser$cons = x0 => x1 => Kind$Parser$cons$(x0, x1);

    function Kind$Parser$string_concat$(_str0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8596 = self.err;
                var _reply$8 = Kind$Parser$text$("|", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8598 = self.err;
                        var self = $8596;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8600 = self.value;
                                var $8601 = Parser$Reply$error$(Parser$Error$combine$($8600, $8598));
                                var $8599 = $8601;
                                break;
                            case 'Maybe.none':
                                var $8602 = Parser$Reply$error$($8598);
                                var $8599 = $8602;
                                break;
                        };
                        var $8597 = $8599;
                        break;
                    case 'Parser.Reply.value':
                        var $8603 = self.pst;
                        var self = $8603;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8605 = self.err;
                                var $8606 = self.nam;
                                var $8607 = self.ini;
                                var $8608 = self.idx;
                                var $8609 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8596, $8605), $8606, $8607, $8608, $8609);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8611 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8613 = self.err;
                                                var self = $8611;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8615 = self.value;
                                                        var $8616 = Parser$Reply$error$(Parser$Error$combine$($8615, $8613));
                                                        var $8614 = $8616;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8617 = Parser$Reply$error$($8613);
                                                        var $8614 = $8617;
                                                        break;
                                                };
                                                var $8612 = $8614;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8618 = self.pst;
                                                var $8619 = self.val;
                                                var self = $8618;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8621 = self.err;
                                                        var $8622 = self.nam;
                                                        var $8623 = self.ini;
                                                        var $8624 = self.idx;
                                                        var $8625 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8611, $8621), $8622, $8623, $8624, $8625);
                                                        var _term$31 = Kind$Term$ref$("String.concat");
                                                        var _term$32 = Kind$Term$app$(_term$31, _str0$1);
                                                        var _term$33 = Kind$Term$app$(_term$32, $8619);
                                                        var $8626 = Parser$Reply$value$(_reply$pst$30, _term$33);
                                                        var $8620 = $8626;
                                                        break;
                                                };
                                                var $8612 = $8620;
                                                break;
                                        };
                                        var $8610 = $8612;
                                        break;
                                };
                                var $8604 = $8610;
                                break;
                        };
                        var $8597 = $8604;
                        break;
                };
                var $8595 = $8597;
                break;
        };
        return $8595;
    };
    const Kind$Parser$string_concat = x0 => x1 => Kind$Parser$string_concat$(x0, x1);

    function Kind$Parser$sigma$(_val0$1) {
        var $8627 = Kind$Parser$block("sigma")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $8629 = self.err;
                    var _reply$8 = Kind$Parser$text$("~", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $8631 = self.err;
                            var self = $8629;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $8633 = self.value;
                                    var $8634 = Parser$Reply$error$(Parser$Error$combine$($8633, $8631));
                                    var $8632 = $8634;
                                    break;
                                case 'Maybe.none':
                                    var $8635 = Parser$Reply$error$($8631);
                                    var $8632 = $8635;
                                    break;
                            };
                            var $8630 = $8632;
                            break;
                        case 'Parser.Reply.value':
                            var $8636 = self.pst;
                            var self = $8636;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $8638 = self.err;
                                    var $8639 = self.nam;
                                    var $8640 = self.ini;
                                    var $8641 = self.idx;
                                    var $8642 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8629, $8638), $8639, $8640, $8641, $8642);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $8644 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $8646 = self.err;
                                                    var self = $8644;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $8648 = self.value;
                                                            var $8649 = Parser$Reply$error$(Parser$Error$combine$($8648, $8646));
                                                            var $8647 = $8649;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $8650 = Parser$Reply$error$($8646);
                                                            var $8647 = $8650;
                                                            break;
                                                    };
                                                    var $8645 = $8647;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $8651 = self.pst;
                                                    var $8652 = self.val;
                                                    var self = $8651;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $8654 = self.err;
                                                            var $8655 = self.nam;
                                                            var $8656 = self.ini;
                                                            var $8657 = self.idx;
                                                            var $8658 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8644, $8654), $8655, $8656, $8657, $8658);
                                                            var _term$31 = Kind$Term$ref$("Sigma.new");
                                                            var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                            var _term$33 = Kind$Term$app$(_term$32, Kind$Term$hol$(Bits$e));
                                                            var _term$34 = Kind$Term$app$(_term$33, _val0$1);
                                                            var _term$35 = Kind$Term$app$(_term$34, $8652);
                                                            var $8659 = Parser$Reply$value$(_reply$pst$30, _term$35);
                                                            var $8653 = $8659;
                                                            break;
                                                    };
                                                    var $8645 = $8653;
                                                    break;
                                            };
                                            var $8643 = $8645;
                                            break;
                                    };
                                    var $8637 = $8643;
                                    break;
                            };
                            var $8630 = $8637;
                            break;
                    };
                    var $8628 = $8630;
                    break;
            };
            return $8628;
        }));
        return $8627;
    };
    const Kind$Parser$sigma = x0 => Kind$Parser$sigma$(x0);

    function Kind$Parser$inequality$(_val0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8661 = self.err;
                var _reply$8 = Kind$Parser$text$("!=", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8663 = self.err;
                        var self = $8661;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8665 = self.value;
                                var $8666 = Parser$Reply$error$(Parser$Error$combine$($8665, $8663));
                                var $8664 = $8666;
                                break;
                            case 'Maybe.none':
                                var $8667 = Parser$Reply$error$($8663);
                                var $8664 = $8667;
                                break;
                        };
                        var $8662 = $8664;
                        break;
                    case 'Parser.Reply.value':
                        var $8668 = self.pst;
                        var self = $8668;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8670 = self.err;
                                var $8671 = self.nam;
                                var $8672 = self.ini;
                                var $8673 = self.idx;
                                var $8674 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8661, $8670), $8671, $8672, $8673, $8674);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8676 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8678 = self.err;
                                                var self = $8676;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8680 = self.value;
                                                        var $8681 = Parser$Reply$error$(Parser$Error$combine$($8680, $8678));
                                                        var $8679 = $8681;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8682 = Parser$Reply$error$($8678);
                                                        var $8679 = $8682;
                                                        break;
                                                };
                                                var $8677 = $8679;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8683 = self.pst;
                                                var $8684 = self.val;
                                                var self = $8683;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8686 = self.err;
                                                        var $8687 = self.nam;
                                                        var $8688 = self.ini;
                                                        var $8689 = self.idx;
                                                        var $8690 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8676, $8686), $8687, $8688, $8689, $8690);
                                                        var _term$31 = Kind$Term$ref$("Equal");
                                                        var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                        var _term$33 = Kind$Term$app$(_term$32, _val0$1);
                                                        var _term$34 = Kind$Term$app$(_term$33, $8684);
                                                        var _term$35 = Kind$Term$app$(Kind$Term$ref$("Not"), _term$34);
                                                        var $8691 = Parser$Reply$value$(_reply$pst$30, _term$35);
                                                        var $8685 = $8691;
                                                        break;
                                                };
                                                var $8677 = $8685;
                                                break;
                                        };
                                        var $8675 = $8677;
                                        break;
                                };
                                var $8669 = $8675;
                                break;
                        };
                        var $8662 = $8669;
                        break;
                };
                var $8660 = $8662;
                break;
        };
        return $8660;
    };
    const Kind$Parser$inequality = x0 => x1 => Kind$Parser$inequality$(x0, x1);

    function Kind$Parser$rewrite$(_subt$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8693 = self.err;
                var _reply$8 = Kind$Parser$text$("::", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8695 = self.err;
                        var self = $8693;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8697 = self.value;
                                var $8698 = Parser$Reply$error$(Parser$Error$combine$($8697, $8695));
                                var $8696 = $8698;
                                break;
                            case 'Maybe.none':
                                var $8699 = Parser$Reply$error$($8695);
                                var $8696 = $8699;
                                break;
                        };
                        var $8694 = $8696;
                        break;
                    case 'Parser.Reply.value':
                        var $8700 = self.pst;
                        var self = $8700;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8702 = self.err;
                                var $8703 = self.nam;
                                var $8704 = self.ini;
                                var $8705 = self.idx;
                                var $8706 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8693, $8702), $8703, $8704, $8705, $8706);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8708 = self.err;
                                        var _reply$22 = Kind$Parser$text$("rewrite", _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8710 = self.err;
                                                var self = $8708;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8712 = self.value;
                                                        var $8713 = Parser$Reply$error$(Parser$Error$combine$($8712, $8710));
                                                        var $8711 = $8713;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8714 = Parser$Reply$error$($8710);
                                                        var $8711 = $8714;
                                                        break;
                                                };
                                                var $8709 = $8711;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8715 = self.pst;
                                                var self = $8715;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8717 = self.err;
                                                        var $8718 = self.nam;
                                                        var $8719 = self.ini;
                                                        var $8720 = self.idx;
                                                        var $8721 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8708, $8717), $8718, $8719, $8720, $8721);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8723 = self.err;
                                                                var _reply$36 = Kind$Parser$name1$(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8725 = self.err;
                                                                        var self = $8723;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8727 = self.value;
                                                                                var $8728 = Parser$Reply$error$(Parser$Error$combine$($8727, $8725));
                                                                                var $8726 = $8728;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8729 = Parser$Reply$error$($8725);
                                                                                var $8726 = $8729;
                                                                                break;
                                                                        };
                                                                        var $8724 = $8726;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8730 = self.pst;
                                                                        var $8731 = self.val;
                                                                        var self = $8730;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8733 = self.err;
                                                                                var $8734 = self.nam;
                                                                                var $8735 = self.ini;
                                                                                var $8736 = self.idx;
                                                                                var $8737 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8723, $8733), $8734, $8735, $8736, $8737);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8739 = self.err;
                                                                                        var _reply$50 = Kind$Parser$text$("in", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $8741 = self.err;
                                                                                                var self = $8739;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $8743 = self.value;
                                                                                                        var $8744 = Parser$Reply$error$(Parser$Error$combine$($8743, $8741));
                                                                                                        var $8742 = $8744;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $8745 = Parser$Reply$error$($8741);
                                                                                                        var $8742 = $8745;
                                                                                                        break;
                                                                                                };
                                                                                                var $8740 = $8742;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $8746 = self.pst;
                                                                                                var self = $8746;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $8748 = self.err;
                                                                                                        var $8749 = self.nam;
                                                                                                        var $8750 = self.ini;
                                                                                                        var $8751 = self.idx;
                                                                                                        var $8752 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($8739, $8748), $8749, $8750, $8751, $8752);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $8754 = self.err;
                                                                                                                var _reply$64 = Kind$Parser$term(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $8756 = self.err;
                                                                                                                        var self = $8754;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $8758 = self.value;
                                                                                                                                var $8759 = Parser$Reply$error$(Parser$Error$combine$($8758, $8756));
                                                                                                                                var $8757 = $8759;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $8760 = Parser$Reply$error$($8756);
                                                                                                                                var $8757 = $8760;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8755 = $8757;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $8761 = self.pst;
                                                                                                                        var $8762 = self.val;
                                                                                                                        var self = $8761;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $8764 = self.err;
                                                                                                                                var $8765 = self.nam;
                                                                                                                                var $8766 = self.ini;
                                                                                                                                var $8767 = self.idx;
                                                                                                                                var $8768 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($8754, $8764), $8765, $8766, $8767, $8768);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $8770 = self.err;
                                                                                                                                        var _reply$78 = Kind$Parser$text$("with", _reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $8772 = self.err;
                                                                                                                                                var self = $8770;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $8774 = self.value;
                                                                                                                                                        var $8775 = Parser$Reply$error$(Parser$Error$combine$($8774, $8772));
                                                                                                                                                        var $8773 = $8775;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $8776 = Parser$Reply$error$($8772);
                                                                                                                                                        var $8773 = $8776;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $8771 = $8773;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $8777 = self.pst;
                                                                                                                                                var self = $8777;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $8779 = self.err;
                                                                                                                                                        var $8780 = self.nam;
                                                                                                                                                        var $8781 = self.ini;
                                                                                                                                                        var $8782 = self.idx;
                                                                                                                                                        var $8783 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($8770, $8779), $8780, $8781, $8782, $8783);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $8785 = self.err;
                                                                                                                                                                var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $8787 = self.err;
                                                                                                                                                                        var self = $8785;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $8789 = self.value;
                                                                                                                                                                                var $8790 = Parser$Reply$error$(Parser$Error$combine$($8789, $8787));
                                                                                                                                                                                var $8788 = $8790;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $8791 = Parser$Reply$error$($8787);
                                                                                                                                                                                var $8788 = $8791;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $8786 = $8788;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $8792 = self.pst;
                                                                                                                                                                        var $8793 = self.val;
                                                                                                                                                                        var self = $8792;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $8795 = self.err;
                                                                                                                                                                                var $8796 = self.nam;
                                                                                                                                                                                var $8797 = self.ini;
                                                                                                                                                                                var $8798 = self.idx;
                                                                                                                                                                                var $8799 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($8785, $8795), $8796, $8797, $8798, $8799);
                                                                                                                                                                                var _term$101 = Kind$Term$ref$("Equal.rewrite");
                                                                                                                                                                                var _term$102 = Kind$Term$app$(_term$101, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$103 = Kind$Term$app$(_term$102, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$104 = Kind$Term$app$(_term$103, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$105 = Kind$Term$app$(_term$104, $8793);
                                                                                                                                                                                var _term$106 = Kind$Term$app$(_term$105, Kind$Term$lam$($8731, (_x$106 => {
                                                                                                                                                                                    var $8801 = $8762;
                                                                                                                                                                                    return $8801;
                                                                                                                                                                                })));
                                                                                                                                                                                var _term$107 = Kind$Term$app$(_term$106, _subt$1);
                                                                                                                                                                                var $8800 = Parser$Reply$value$(_reply$pst$100, _term$107);
                                                                                                                                                                                var $8794 = $8800;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $8786 = $8794;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $8784 = $8786;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $8778 = $8784;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $8771 = $8778;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $8769 = $8771;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $8763 = $8769;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8755 = $8763;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $8753 = $8755;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $8747 = $8753;
                                                                                                        break;
                                                                                                };
                                                                                                var $8740 = $8747;
                                                                                                break;
                                                                                        };
                                                                                        var $8738 = $8740;
                                                                                        break;
                                                                                };
                                                                                var $8732 = $8738;
                                                                                break;
                                                                        };
                                                                        var $8724 = $8732;
                                                                        break;
                                                                };
                                                                var $8722 = $8724;
                                                                break;
                                                        };
                                                        var $8716 = $8722;
                                                        break;
                                                };
                                                var $8709 = $8716;
                                                break;
                                        };
                                        var $8707 = $8709;
                                        break;
                                };
                                var $8701 = $8707;
                                break;
                        };
                        var $8694 = $8701;
                        break;
                };
                var $8692 = $8694;
                break;
        };
        return $8692;
    };
    const Kind$Parser$rewrite = x0 => x1 => Kind$Parser$rewrite$(x0, x1);

    function Kind$Parser$annotation$(_term$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8803 = self.err;
                var _reply$8 = Kind$Parser$text$("::", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8805 = self.err;
                        var self = $8803;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8807 = self.value;
                                var $8808 = Parser$Reply$error$(Parser$Error$combine$($8807, $8805));
                                var $8806 = $8808;
                                break;
                            case 'Maybe.none':
                                var $8809 = Parser$Reply$error$($8805);
                                var $8806 = $8809;
                                break;
                        };
                        var $8804 = $8806;
                        break;
                    case 'Parser.Reply.value':
                        var $8810 = self.pst;
                        var self = $8810;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8812 = self.err;
                                var $8813 = self.nam;
                                var $8814 = self.ini;
                                var $8815 = self.idx;
                                var $8816 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8803, $8812), $8813, $8814, $8815, $8816);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8818 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8820 = self.err;
                                                var self = $8818;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8822 = self.value;
                                                        var $8823 = Parser$Reply$error$(Parser$Error$combine$($8822, $8820));
                                                        var $8821 = $8823;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8824 = Parser$Reply$error$($8820);
                                                        var $8821 = $8824;
                                                        break;
                                                };
                                                var $8819 = $8821;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8825 = self.pst;
                                                var $8826 = self.val;
                                                var self = $8825;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8828 = self.err;
                                                        var $8829 = self.nam;
                                                        var $8830 = self.ini;
                                                        var $8831 = self.idx;
                                                        var $8832 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8818, $8828), $8829, $8830, $8831, $8832);
                                                        var $8833 = Parser$Reply$value$(_reply$pst$30, Kind$Term$ann$(Bool$false, _term$1, $8826));
                                                        var $8827 = $8833;
                                                        break;
                                                };
                                                var $8819 = $8827;
                                                break;
                                        };
                                        var $8817 = $8819;
                                        break;
                                };
                                var $8811 = $8817;
                                break;
                        };
                        var $8804 = $8811;
                        break;
                };
                var $8802 = $8804;
                break;
        };
        return $8802;
    };
    const Kind$Parser$annotation = x0 => x1 => Kind$Parser$annotation$(x0, x1);

    function Kind$Parser$application$hole$(_term$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8835 = self.err;
                var _reply$8 = Kind$Parser$text_now$("!")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8837 = self.err;
                        var self = $8835;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8839 = self.value;
                                var $8840 = Parser$Reply$error$(Parser$Error$combine$($8839, $8837));
                                var $8838 = $8840;
                                break;
                            case 'Maybe.none':
                                var $8841 = Parser$Reply$error$($8837);
                                var $8838 = $8841;
                                break;
                        };
                        var $8836 = $8838;
                        break;
                    case 'Parser.Reply.value':
                        var $8842 = self.pst;
                        var self = $8842;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8844 = self.err;
                                var $8845 = self.nam;
                                var $8846 = self.ini;
                                var $8847 = self.idx;
                                var $8848 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8835, $8844), $8845, $8846, $8847, $8848);
                                var $8849 = Parser$Reply$value$(_reply$pst$16, Kind$Term$app$(_term$1, Kind$Term$hol$(Bits$e)));
                                var $8843 = $8849;
                                break;
                        };
                        var $8836 = $8843;
                        break;
                };
                var $8834 = $8836;
                break;
        };
        return $8834;
    };
    const Kind$Parser$application$hole = x0 => x1 => Kind$Parser$application$hole$(x0, x1);

    function Kind$Parser$term$suffix$(_term$1, _pst$2) {
        var Kind$Parser$term$suffix$ = (_term$1, _pst$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _pst$2]
        });
        var Kind$Parser$term$suffix = _term$1 => _pst$2 => Kind$Parser$term$suffix$(_term$1, _pst$2);
        var arg = [_term$1, _pst$2];
        while (true) {
            let [_term$1, _pst$2] = arg;
            var R = (() => {
                var self = _pst$2;
                switch (self._) {
                    case 'Parser.State.new':
                        var $8850 = self.err;
                        var $8851 = self.nam;
                        var $8852 = self.ini;
                        var $8853 = self.idx;
                        var $8854 = self.str;
                        var _suffix_parser$8 = Parser$choice(List$cons$(Kind$Parser$application(_term$1), List$cons$(Kind$Parser$application$erased(_term$1), List$cons$(Kind$Parser$list_set(_term$1), List$cons$(Kind$Parser$list_get(_term$1), List$cons$(Kind$Parser$map_set(_term$1), List$cons$(Kind$Parser$map_get(_term$1), List$cons$(Kind$Parser$field_set(_term$1), List$cons$(Kind$Parser$field_get(_term$1), List$cons$(Kind$Parser$arrow(_term$1), List$cons$(Kind$Parser$concat(_term$1), List$cons$(Kind$Parser$equality(_term$1), List$cons$(Kind$Parser$add(_term$1), List$cons$(Kind$Parser$sub(_term$1), List$cons$(Kind$Parser$mul(_term$1), List$cons$(Kind$Parser$div(_term$1), List$cons$(Kind$Parser$mod(_term$1), List$cons$(Kind$Parser$ltn(_term$1), List$cons$(Kind$Parser$lte(_term$1), List$cons$(Kind$Parser$eql(_term$1), List$cons$(Kind$Parser$gte(_term$1), List$cons$(Kind$Parser$gtn(_term$1), List$cons$(Kind$Parser$and(_term$1), List$cons$(Kind$Parser$or(_term$1), List$cons$(Kind$Parser$default(_term$1), List$cons$(Kind$Parser$cons(_term$1), List$cons$(Kind$Parser$string_concat(_term$1), List$cons$(Kind$Parser$sigma$(_term$1), List$cons$(Kind$Parser$inequality(_term$1), List$cons$(Kind$Parser$rewrite(_term$1), List$cons$(Kind$Parser$annotation(_term$1), List$cons$(Kind$Parser$application$hole(_term$1), List$nil))))))))))))))))))))))))))))))));
                        var self = _suffix_parser$8(_pst$2);
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $8856 = self.err;
                                var self = $8856;
                                switch (self._) {
                                    case 'Parser.Error.new':
                                        var _err$14 = Parser$Error$maybe_combine$($8850, Maybe$some$($8856));
                                        var _pst$15 = Parser$State$new$(_err$14, $8851, $8852, $8853, $8854);
                                        var $8858 = Parser$Reply$value$(_pst$15, _term$1);
                                        var $8857 = $8858;
                                        break;
                                };
                                var $8855 = $8857;
                                break;
                            case 'Parser.Reply.value':
                                var $8859 = self.pst;
                                var $8860 = self.val;
                                var $8861 = Kind$Parser$term$suffix$($8860, $8859);
                                var $8855 = $8861;
                                break;
                        };
                        return $8855;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Parser$term$suffix = x0 => x1 => Kind$Parser$term$suffix$(x0, x1);
    const Kind$Parser$term = Kind$Parser$block("term")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $8863 = self.err;
                var _reply$7 = Parser$choice$(List$cons$(Kind$Parser$dom, List$cons$(Kind$Parser$forall, List$cons$(Kind$Parser$lambda, List$cons$(Kind$Parser$lambda$erased, List$cons$(Kind$Parser$parenthesis, List$cons$(Kind$Parser$letforrange$u32$((_x$7 => {
                    var $8865 = Kind$Parser$term;
                    return $8865;
                })), List$cons$(Kind$Parser$letforrange$u32$with$((_x$7 => {
                    var $8866 = Kind$Parser$term;
                    return $8866;
                })), List$cons$(Kind$Parser$letforrange$i32$((_x$7 => {
                    var $8867 = Kind$Parser$term;
                    return $8867;
                })), List$cons$(Kind$Parser$letforrange$i32$with$((_x$7 => {
                    var $8868 = Kind$Parser$term;
                    return $8868;
                })), List$cons$(Kind$Parser$letforrange$nat$((_x$7 => {
                    var $8869 = Kind$Parser$term;
                    return $8869;
                })), List$cons$(Kind$Parser$letforrange$nat$with$((_x$7 => {
                    var $8870 = Kind$Parser$term;
                    return $8870;
                })), List$cons$(Kind$Parser$letforin$((_x$7 => {
                    var $8871 = Kind$Parser$term;
                    return $8871;
                })), List$cons$(Kind$Parser$letforin$with$((_x$7 => {
                    var $8872 = Kind$Parser$term;
                    return $8872;
                })), List$cons$(Kind$Parser$letwhile$((_x$7 => {
                    var $8873 = Kind$Parser$term;
                    return $8873;
                })), List$cons$(Kind$Parser$letwhile$with$((_x$7 => {
                    var $8874 = Kind$Parser$term;
                    return $8874;
                })), List$cons$(Kind$Parser$let$((_x$7 => {
                    var $8875 = Kind$Parser$term;
                    return $8875;
                })), List$cons$(Kind$Parser$let$omit$((_x$7 => {
                    var $8876 = Kind$Parser$term;
                    return $8876;
                })), List$cons$(Kind$Parser$getwhile$((_x$7 => {
                    var $8877 = Kind$Parser$term;
                    return $8877;
                })), List$cons$(Kind$Parser$getwhile$with((_x$7 => {
                    var $8878 = Kind$Parser$term;
                    return $8878;
                })), List$cons$(Kind$Parser$get$((_x$7 => {
                    var $8879 = Kind$Parser$term;
                    return $8879;
                })), List$cons$(Kind$Parser$get$omit$((_x$7 => {
                    var $8880 = Kind$Parser$term;
                    return $8880;
                })), List$cons$(Kind$Parser$def$((_x$7 => {
                    var $8881 = Kind$Parser$term;
                    return $8881;
                })), List$cons$(Kind$Parser$goal_rewrite, List$cons$(Kind$Parser$if, List$cons$(Kind$Parser$char, List$cons$(Kind$Parser$string$(34), List$cons$(Kind$Parser$string$(96), List$cons$(Kind$Parser$new, List$cons$(Kind$Parser$sigma$type, List$cons$(Kind$Parser$some, List$cons$(Kind$Parser$not, List$cons$(Kind$Parser$left, List$cons$(Kind$Parser$right, List$cons$(Kind$Parser$apply, List$cons$(Kind$Parser$chain, List$cons$(Kind$Parser$mirror, List$cons$(Kind$Parser$list, List$cons$(Kind$Parser$map, List$cons$(Kind$Parser$log$((_x$7 => {
                    var $8882 = Kind$Parser$term;
                    return $8882;
                })), List$cons$(Kind$Parser$do, List$cons$(Kind$Parser$case, List$cons$(Kind$Parser$open$((_x$7 => {
                    var $8883 = Kind$Parser$term;
                    return $8883;
                })), List$cons$(Kind$Parser$without, List$cons$(Kind$Parser$switch, List$cons$(Kind$Parser$goal, List$cons$(Kind$Parser$hole, List$cons$(Kind$Parser$float$64, List$cons$(Kind$Parser$float$32, List$cons$(Kind$Parser$machine_integer$signed$(256n), List$cons$(Kind$Parser$machine_integer$signed$(128n), List$cons$(Kind$Parser$machine_integer$signed$(64n), List$cons$(Kind$Parser$machine_integer$signed$(32n), List$cons$(Kind$Parser$machine_integer$signed$(16n), List$cons$(Kind$Parser$machine_integer$signed$(8n), List$cons$(Kind$Parser$machine_integer$unsigned$(256n), List$cons$(Kind$Parser$machine_integer$unsigned$(128n), List$cons$(Kind$Parser$machine_integer$unsigned$(64n), List$cons$(Kind$Parser$machine_integer$unsigned$(32n), List$cons$(Kind$Parser$machine_integer$unsigned$(16n), List$cons$(Kind$Parser$machine_integer$unsigned$(8n), List$cons$(Kind$Parser$u64, List$cons$(Kind$Parser$u32, List$cons$(Kind$Parser$u16, List$cons$(Kind$Parser$u8, List$cons$(Kind$Parser$num, List$cons$(Kind$Parser$reference, List$cons$((_pst$7 => {
                    var self = _pst$7;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $8885 = self.err;
                            var _reply$13 = Kind$Parser$spaces(_pst$7);
                            var self = _reply$13;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $8887 = self.err;
                                    var self = $8885;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $8889 = self.value;
                                            var $8890 = Parser$Reply$error$(Parser$Error$combine$($8889, $8887));
                                            var $8888 = $8890;
                                            break;
                                        case 'Maybe.none':
                                            var $8891 = Parser$Reply$error$($8887);
                                            var $8888 = $8891;
                                            break;
                                    };
                                    var $8886 = $8888;
                                    break;
                                case 'Parser.Reply.value':
                                    var $8892 = self.pst;
                                    var self = $8892;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $8894 = self.err;
                                            var $8895 = self.nam;
                                            var $8896 = self.ini;
                                            var $8897 = self.idx;
                                            var $8898 = self.str;
                                            var _reply$pst$21 = Parser$State$new$(Parser$Error$maybe_combine$($8885, $8894), $8895, $8896, $8897, $8898);
                                            var $8899 = Parser$fail$("Expected a term.", _reply$pst$21);
                                            var $8893 = $8899;
                                            break;
                                    };
                                    var $8886 = $8893;
                                    break;
                            };
                            var $8884 = $8886;
                            break;
                    };
                    return $8884;
                }), List$nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8900 = self.err;
                        var self = $8863;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8902 = self.value;
                                var $8903 = Parser$Reply$error$(Parser$Error$combine$($8902, $8900));
                                var $8901 = $8903;
                                break;
                            case 'Maybe.none':
                                var $8904 = Parser$Reply$error$($8900);
                                var $8901 = $8904;
                                break;
                        };
                        var $8864 = $8901;
                        break;
                    case 'Parser.Reply.value':
                        var $8905 = self.pst;
                        var $8906 = self.val;
                        var self = $8905;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8908 = self.err;
                                var $8909 = self.nam;
                                var $8910 = self.ini;
                                var $8911 = self.idx;
                                var $8912 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($8863, $8908), $8909, $8910, $8911, $8912);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8914 = self.err;
                                        var _reply$21 = Kind$Parser$term$suffix$($8906, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8916 = self.err;
                                                var self = $8914;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8918 = self.value;
                                                        var $8919 = Parser$Reply$error$(Parser$Error$combine$($8918, $8916));
                                                        var $8917 = $8919;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8920 = Parser$Reply$error$($8916);
                                                        var $8917 = $8920;
                                                        break;
                                                };
                                                var $8915 = $8917;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8921 = self.pst;
                                                var $8922 = self.val;
                                                var self = $8921;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8924 = self.err;
                                                        var $8925 = self.nam;
                                                        var $8926 = self.ini;
                                                        var $8927 = self.idx;
                                                        var $8928 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($8914, $8924), $8925, $8926, $8927, $8928);
                                                        var $8929 = Parser$Reply$value$(_reply$pst$29, $8922);
                                                        var $8923 = $8929;
                                                        break;
                                                };
                                                var $8915 = $8923;
                                                break;
                                        };
                                        var $8913 = $8915;
                                        break;
                                };
                                var $8907 = $8913;
                                break;
                        };
                        var $8864 = $8907;
                        break;
                };
                var $8862 = $8864;
                break;
        };
        return $8862;
    }));

    function Kind$Parser$name_term$(_sep$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8931 = self.err;
                var _reply$8 = Kind$Parser$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8933 = self.err;
                        var self = $8931;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8935 = self.value;
                                var $8936 = Parser$Reply$error$(Parser$Error$combine$($8935, $8933));
                                var $8934 = $8936;
                                break;
                            case 'Maybe.none':
                                var $8937 = Parser$Reply$error$($8933);
                                var $8934 = $8937;
                                break;
                        };
                        var $8932 = $8934;
                        break;
                    case 'Parser.Reply.value':
                        var $8938 = self.pst;
                        var $8939 = self.val;
                        var self = $8938;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8941 = self.err;
                                var $8942 = self.nam;
                                var $8943 = self.ini;
                                var $8944 = self.idx;
                                var $8945 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8931, $8941), $8942, $8943, $8944, $8945);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8947 = self.err;
                                        var _reply$22 = Kind$Parser$text$(_sep$1, _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8949 = self.err;
                                                var self = $8947;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8951 = self.value;
                                                        var $8952 = Parser$Reply$error$(Parser$Error$combine$($8951, $8949));
                                                        var $8950 = $8952;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8953 = Parser$Reply$error$($8949);
                                                        var $8950 = $8953;
                                                        break;
                                                };
                                                var $8948 = $8950;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8954 = self.pst;
                                                var self = $8954;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8956 = self.err;
                                                        var $8957 = self.nam;
                                                        var $8958 = self.ini;
                                                        var $8959 = self.idx;
                                                        var $8960 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8947, $8956), $8957, $8958, $8959, $8960);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8962 = self.err;
                                                                var _reply$36 = Kind$Parser$term(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8964 = self.err;
                                                                        var self = $8962;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8966 = self.value;
                                                                                var $8967 = Parser$Reply$error$(Parser$Error$combine$($8966, $8964));
                                                                                var $8965 = $8967;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8968 = Parser$Reply$error$($8964);
                                                                                var $8965 = $8968;
                                                                                break;
                                                                        };
                                                                        var $8963 = $8965;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8969 = self.pst;
                                                                        var $8970 = self.val;
                                                                        var self = $8969;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8972 = self.err;
                                                                                var $8973 = self.nam;
                                                                                var $8974 = self.ini;
                                                                                var $8975 = self.idx;
                                                                                var $8976 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8962, $8972), $8973, $8974, $8975, $8976);
                                                                                var $8977 = Parser$Reply$value$(_reply$pst$44, Pair$new$($8939, $8970));
                                                                                var $8971 = $8977;
                                                                                break;
                                                                        };
                                                                        var $8963 = $8971;
                                                                        break;
                                                                };
                                                                var $8961 = $8963;
                                                                break;
                                                        };
                                                        var $8955 = $8961;
                                                        break;
                                                };
                                                var $8948 = $8955;
                                                break;
                                        };
                                        var $8946 = $8948;
                                        break;
                                };
                                var $8940 = $8946;
                                break;
                        };
                        var $8932 = $8940;
                        break;
                };
                var $8930 = $8932;
                break;
        };
        return $8930;
    };
    const Kind$Parser$name_term = x0 => x1 => Kind$Parser$name_term$(x0, x1);

    function Kind$Binder$new$(_eras$1, _name$2, _term$3) {
        var $8978 = ({
            _: 'Kind.Binder.new',
            'eras': _eras$1,
            'name': _name$2,
            'term': _term$3
        });
        return $8978;
    };
    const Kind$Binder$new = x0 => x1 => x2 => Kind$Binder$new$(x0, x1, x2);

    function Kind$Parser$binder$homo$(_sep$1, _eras$2) {
        var self = _eras$2;
        if (self) {
            var $8980 = "<";
            var _open$3 = $8980;
        } else {
            var $8981 = "(";
            var _open$3 = $8981;
        };
        var self = _eras$2;
        if (self) {
            var $8982 = ">";
            var _clos$4 = $8982;
        } else {
            var $8983 = ")";
            var _clos$4 = $8983;
        };
        var $8979 = (_pst$5 => {
            var self = _pst$5;
            switch (self._) {
                case 'Parser.State.new':
                    var $8985 = self.err;
                    var _reply$11 = Kind$Parser$items1$(_open$3, Kind$Parser$name_term(_sep$1), _clos$4)(_pst$5);
                    var self = _reply$11;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $8987 = self.err;
                            var self = $8985;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $8989 = self.value;
                                    var $8990 = Parser$Reply$error$(Parser$Error$combine$($8989, $8987));
                                    var $8988 = $8990;
                                    break;
                                case 'Maybe.none':
                                    var $8991 = Parser$Reply$error$($8987);
                                    var $8988 = $8991;
                                    break;
                            };
                            var $8986 = $8988;
                            break;
                        case 'Parser.Reply.value':
                            var $8992 = self.pst;
                            var $8993 = self.val;
                            var self = $8992;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $8995 = self.err;
                                    var $8996 = self.nam;
                                    var $8997 = self.ini;
                                    var $8998 = self.idx;
                                    var $8999 = self.str;
                                    var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($8985, $8995), $8996, $8997, $8998, $8999);
                                    var $9000 = Parser$Reply$value$(_reply$pst$19, List$mapped$($8993, (_pair$20 => {
                                        var self = _pair$20;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $9002 = self.fst;
                                                var $9003 = self.snd;
                                                var $9004 = Kind$Binder$new$(_eras$2, $9002, $9003);
                                                var $9001 = $9004;
                                                break;
                                        };
                                        return $9001;
                                    })));
                                    var $8994 = $9000;
                                    break;
                            };
                            var $8986 = $8994;
                            break;
                    };
                    var $8984 = $8986;
                    break;
            };
            return $8984;
        });
        return $8979;
    };
    const Kind$Parser$binder$homo = x0 => x1 => Kind$Parser$binder$homo$(x0, x1);

    function List$concat$(_as$2, _bs$3) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $9006 = self.head;
                var $9007 = self.tail;
                var $9008 = List$cons$($9006, List$concat$($9007, _bs$3));
                var $9005 = $9008;
                break;
            case 'List.nil':
                var $9009 = _bs$3;
                var $9005 = $9009;
                break;
        };
        return $9005;
    };
    const List$concat = x0 => x1 => List$concat$(x0, x1);

    function List$flatten$(_xs$2) {
        var self = _xs$2;
        switch (self._) {
            case 'List.cons':
                var $9011 = self.head;
                var $9012 = self.tail;
                var $9013 = List$concat$($9011, List$flatten$($9012));
                var $9010 = $9013;
                break;
            case 'List.nil':
                var $9014 = List$nil;
                var $9010 = $9014;
                break;
        };
        return $9010;
    };
    const List$flatten = x0 => List$flatten$(x0);

    function Kind$Parser$binder$(_sep$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $9016 = self.err;
                var _reply$8 = Parser$many1$(Parser$choice(List$cons$(Kind$Parser$binder$homo$(_sep$1, Bool$true), List$cons$(Kind$Parser$binder$homo$(_sep$1, Bool$false), List$nil))), _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9018 = self.err;
                        var self = $9016;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9020 = self.value;
                                var $9021 = Parser$Reply$error$(Parser$Error$combine$($9020, $9018));
                                var $9019 = $9021;
                                break;
                            case 'Maybe.none':
                                var $9022 = Parser$Reply$error$($9018);
                                var $9019 = $9022;
                                break;
                        };
                        var $9017 = $9019;
                        break;
                    case 'Parser.Reply.value':
                        var $9023 = self.pst;
                        var $9024 = self.val;
                        var self = $9023;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9026 = self.err;
                                var $9027 = self.nam;
                                var $9028 = self.ini;
                                var $9029 = self.idx;
                                var $9030 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($9016, $9026), $9027, $9028, $9029, $9030);
                                var $9031 = Parser$Reply$value$(_reply$pst$16, List$flatten$($9024));
                                var $9025 = $9031;
                                break;
                        };
                        var $9017 = $9025;
                        break;
                };
                var $9015 = $9017;
                break;
        };
        return $9015;
    };
    const Kind$Parser$binder = x0 => x1 => Kind$Parser$binder$(x0, x1);
    const List$length = a0 => (list_length(a0));

    function Kind$Parser$forall$make$(_binds$1, _body$2) {
        var self = _binds$1;
        switch (self._) {
            case 'List.cons':
                var $9033 = self.head;
                var $9034 = self.tail;
                var self = $9033;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9036 = self.eras;
                        var $9037 = self.name;
                        var $9038 = self.term;
                        var $9039 = Kind$Term$all$($9036, "", $9037, $9038, (_s$8 => _x$9 => {
                            var $9040 = Kind$Parser$forall$make$($9034, _body$2);
                            return $9040;
                        }));
                        var $9035 = $9039;
                        break;
                };
                var $9032 = $9035;
                break;
            case 'List.nil':
                var $9041 = _body$2;
                var $9032 = $9041;
                break;
        };
        return $9032;
    };
    const Kind$Parser$forall$make = x0 => x1 => Kind$Parser$forall$make$(x0, x1);

    function List$at_last$(_index$2, _list$3) {
        var $9042 = List$at$(_index$2, List$reverse$(_list$3));
        return $9042;
    };
    const List$at_last = x0 => x1 => List$at_last$(x0, x1);

    function Kind$Term$var$(_name$1, _indx$2) {
        var $9043 = ({
            _: 'Kind.Term.var',
            'name': _name$1,
            'indx': _indx$2
        });
        return $9043;
    };
    const Kind$Term$var = x0 => x1 => Kind$Term$var$(x0, x1);

    function Kind$Context$get_name_skips$(_name$1) {
        var self = _name$1;
        if (self.length === 0) {
            var $9045 = Pair$new$("", 0n);
            var $9044 = $9045;
        } else {
            var $9046 = self.charCodeAt(0);
            var $9047 = self.slice(1);
            var _name_skips$4 = Kind$Context$get_name_skips$($9047);
            var self = _name_skips$4;
            switch (self._) {
                case 'Pair.new':
                    var $9049 = self.fst;
                    var $9050 = self.snd;
                    var self = ($9046 === 94);
                    if (self) {
                        var $9052 = Pair$new$($9049, Nat$succ$($9050));
                        var $9051 = $9052;
                    } else {
                        var $9053 = Pair$new$(String$cons$($9046, $9049), $9050);
                        var $9051 = $9053;
                    };
                    var $9048 = $9051;
                    break;
            };
            var $9044 = $9048;
        };
        return $9044;
    };
    const Kind$Context$get_name_skips = x0 => Kind$Context$get_name_skips$(x0);

    function Kind$Name$eql$(_a$1, _b$2) {
        var $9054 = (_a$1 === _b$2);
        return $9054;
    };
    const Kind$Name$eql = x0 => x1 => Kind$Name$eql$(x0, x1);

    function Kind$Context$find$go$(_name$1, _skip$2, _ctx$3) {
        var Kind$Context$find$go$ = (_name$1, _skip$2, _ctx$3) => ({
            ctr: 'TCO',
            arg: [_name$1, _skip$2, _ctx$3]
        });
        var Kind$Context$find$go = _name$1 => _skip$2 => _ctx$3 => Kind$Context$find$go$(_name$1, _skip$2, _ctx$3);
        var arg = [_name$1, _skip$2, _ctx$3];
        while (true) {
            let [_name$1, _skip$2, _ctx$3] = arg;
            var R = (() => {
                var self = _ctx$3;
                switch (self._) {
                    case 'List.cons':
                        var $9055 = self.head;
                        var $9056 = self.tail;
                        var self = $9055;
                        switch (self._) {
                            case 'Pair.new':
                                var $9058 = self.fst;
                                var $9059 = self.snd;
                                var self = Kind$Name$eql$(_name$1, $9058);
                                if (self) {
                                    var self = _skip$2;
                                    if (self === 0n) {
                                        var $9062 = Maybe$some$($9059);
                                        var $9061 = $9062;
                                    } else {
                                        var $9063 = (self - 1n);
                                        var $9064 = Kind$Context$find$go$(_name$1, $9063, $9056);
                                        var $9061 = $9064;
                                    };
                                    var $9060 = $9061;
                                } else {
                                    var $9065 = Kind$Context$find$go$(_name$1, _skip$2, $9056);
                                    var $9060 = $9065;
                                };
                                var $9057 = $9060;
                                break;
                        };
                        return $9057;
                    case 'List.nil':
                        var $9066 = Maybe$none;
                        return $9066;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Context$find$go = x0 => x1 => x2 => Kind$Context$find$go$(x0, x1, x2);

    function Kind$Context$find$(_name$1, _ctx$2) {
        var self = Kind$Context$get_name_skips$(_name$1);
        switch (self._) {
            case 'Pair.new':
                var $9068 = self.fst;
                var $9069 = self.snd;
                var $9070 = Kind$Context$find$go$($9068, $9069, _ctx$2);
                var $9067 = $9070;
                break;
        };
        return $9067;
    };
    const Kind$Context$find = x0 => x1 => Kind$Context$find$(x0, x1);

    function Kind$Path$o$(_path$1, _x$2) {
        var $9071 = _path$1((_x$2 + '0'));
        return $9071;
    };
    const Kind$Path$o = x0 => x1 => Kind$Path$o$(x0, x1);

    function Kind$Path$i$(_path$1, _x$2) {
        var $9072 = _path$1((_x$2 + '1'));
        return $9072;
    };
    const Kind$Path$i = x0 => x1 => Kind$Path$i$(x0, x1);

    function Kind$Path$to_bits$(_path$1) {
        var $9073 = _path$1(Bits$e);
        return $9073;
    };
    const Kind$Path$to_bits = x0 => Kind$Path$to_bits$(x0);

    function Kind$Term$bind$(_vars$1, _path$2, _term$3) {
        var self = _term$3;
        switch (self._) {
            case 'Kind.Term.var':
                var $9075 = self.name;
                var $9076 = self.indx;
                var self = List$at_last$($9076, _vars$1);
                switch (self._) {
                    case 'Maybe.some':
                        var $9078 = self.value;
                        var $9079 = Pair$snd$($9078);
                        var $9077 = $9079;
                        break;
                    case 'Maybe.none':
                        var $9080 = Kind$Term$var$($9075, $9076);
                        var $9077 = $9080;
                        break;
                };
                var $9074 = $9077;
                break;
            case 'Kind.Term.ref':
                var $9081 = self.name;
                var self = Kind$Context$find$($9081, _vars$1);
                switch (self._) {
                    case 'Maybe.some':
                        var $9083 = self.value;
                        var $9084 = $9083;
                        var $9082 = $9084;
                        break;
                    case 'Maybe.none':
                        var $9085 = Kind$Term$ref$($9081);
                        var $9082 = $9085;
                        break;
                };
                var $9074 = $9082;
                break;
            case 'Kind.Term.all':
                var $9086 = self.eras;
                var $9087 = self.self;
                var $9088 = self.name;
                var $9089 = self.xtyp;
                var $9090 = self.body;
                var _vlen$9 = (list_length(_vars$1));
                var $9091 = Kind$Term$all$($9086, $9087, $9088, Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9089), (_s$10 => _x$11 => {
                    var $9092 = Kind$Term$bind$(List$cons$(Pair$new$($9088, _x$11), List$cons$(Pair$new$($9087, _s$10), _vars$1)), Kind$Path$i(_path$2), $9090(Kind$Term$var$($9087, _vlen$9))(Kind$Term$var$($9088, Nat$succ$(_vlen$9))));
                    return $9092;
                }));
                var $9074 = $9091;
                break;
            case 'Kind.Term.lam':
                var $9093 = self.name;
                var $9094 = self.body;
                var _vlen$6 = (list_length(_vars$1));
                var $9095 = Kind$Term$lam$($9093, (_x$7 => {
                    var $9096 = Kind$Term$bind$(List$cons$(Pair$new$($9093, _x$7), _vars$1), Kind$Path$o(_path$2), $9094(Kind$Term$var$($9093, _vlen$6)));
                    return $9096;
                }));
                var $9074 = $9095;
                break;
            case 'Kind.Term.app':
                var $9097 = self.func;
                var $9098 = self.argm;
                var $9099 = Kind$Term$app$(Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9097), Kind$Term$bind$(_vars$1, Kind$Path$i(_path$2), $9098));
                var $9074 = $9099;
                break;
            case 'Kind.Term.let':
                var $9100 = self.name;
                var $9101 = self.expr;
                var $9102 = self.body;
                var _vlen$7 = (list_length(_vars$1));
                var $9103 = Kind$Term$let$($9100, Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9101), (_x$8 => {
                    var $9104 = Kind$Term$bind$(List$cons$(Pair$new$($9100, _x$8), _vars$1), Kind$Path$i(_path$2), $9102(Kind$Term$var$($9100, _vlen$7)));
                    return $9104;
                }));
                var $9074 = $9103;
                break;
            case 'Kind.Term.def':
                var $9105 = self.name;
                var $9106 = self.expr;
                var $9107 = self.body;
                var _vlen$7 = (list_length(_vars$1));
                var $9108 = Kind$Term$def$($9105, Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9106), (_x$8 => {
                    var $9109 = Kind$Term$bind$(List$cons$(Pair$new$($9105, _x$8), _vars$1), Kind$Path$i(_path$2), $9107(Kind$Term$var$($9105, _vlen$7)));
                    return $9109;
                }));
                var $9074 = $9108;
                break;
            case 'Kind.Term.ann':
                var $9110 = self.done;
                var $9111 = self.term;
                var $9112 = self.type;
                var $9113 = Kind$Term$ann$($9110, Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9111), Kind$Term$bind$(_vars$1, Kind$Path$i(_path$2), $9112));
                var $9074 = $9113;
                break;
            case 'Kind.Term.gol':
                var $9114 = self.name;
                var $9115 = self.dref;
                var $9116 = self.verb;
                var $9117 = Kind$Term$gol$($9114, $9115, $9116);
                var $9074 = $9117;
                break;
            case 'Kind.Term.nat':
                var $9118 = self.natx;
                var $9119 = Kind$Term$nat$($9118);
                var $9074 = $9119;
                break;
            case 'Kind.Term.chr':
                var $9120 = self.chrx;
                var $9121 = Kind$Term$chr$($9120);
                var $9074 = $9121;
                break;
            case 'Kind.Term.str':
                var $9122 = self.strx;
                var $9123 = Kind$Term$str$($9122);
                var $9074 = $9123;
                break;
            case 'Kind.Term.num':
                var $9124 = self.sign;
                var $9125 = self.numb;
                var $9126 = self.frac;
                var $9127 = Kind$Term$num$($9124, $9125, $9126);
                var $9074 = $9127;
                break;
            case 'Kind.Term.cse':
                var $9128 = self.expr;
                var $9129 = self.name;
                var $9130 = self.with;
                var $9131 = self.cses;
                var $9132 = self.moti;
                var _expr$10 = Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9128);
                var _name$11 = $9129;
                var _wyth$12 = List$mapped$($9130, (_with_var$12 => {
                    var self = _with_var$12;
                    switch (self._) {
                        case 'Kind.Ann.new':
                            var $9135 = self.name;
                            var $9136 = self.term;
                            var $9137 = self.type;
                            var _with_var_term$16 = Kind$Term$bind$(_vars$1, _path$2, $9136);
                            var self = $9137;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $9139 = self.value;
                                    var $9140 = Maybe$some$(Kind$Term$bind$(_vars$1, _path$2, $9139));
                                    var _with_var_type$17 = $9140;
                                    break;
                                case 'Maybe.none':
                                    var $9141 = Maybe$none;
                                    var _with_var_type$17 = $9141;
                                    break;
                            };
                            var $9138 = Kind$Ann$new$($9135, _with_var_term$16, _with_var_type$17);
                            var $9134 = $9138;
                            break;
                    };
                    return $9134;
                }));
                var _cses$13 = $9131;
                var _moti$14 = $9132;
                var $9133 = Kind$Term$cse$(Kind$Path$to_bits$(_path$2), _expr$10, _name$11, _wyth$12, _cses$13, _moti$14);
                var $9074 = $9133;
                break;
            case 'Kind.Term.new':
                var $9142 = self.args;
                var _args$5 = List$fold$($9142, (_path$5 => {
                    var $9144 = List$nil;
                    return $9144;
                }), (_arg$5 => _res$6 => _path$7 => {
                    var $9145 = List$cons$(Kind$Term$bind$(_vars$1, _path$7, _arg$5), _res$6(Kind$Path$o(_path$7)));
                    return $9145;
                }))(_path$2);
                var $9143 = Kind$Term$new$(_args$5);
                var $9074 = $9143;
                break;
            case 'Kind.Term.get':
                var $9146 = self.expr;
                var $9147 = self.fkey;
                var _expr$6 = Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9146);
                var $9148 = Kind$Term$get$(_expr$6, $9147);
                var $9074 = $9148;
                break;
            case 'Kind.Term.set':
                var $9149 = self.expr;
                var $9150 = self.fkey;
                var $9151 = self.fval;
                var _expr$7 = Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9149);
                var _fval$8 = Kind$Term$bind$(_vars$1, Kind$Path$i(_path$2), $9151);
                var $9152 = Kind$Term$set$(_expr$7, $9150, _fval$8);
                var $9074 = $9152;
                break;
            case 'Kind.Term.ope':
                var $9153 = self.name;
                var $9154 = self.arg0;
                var $9155 = self.arg1;
                var _arg0$7 = Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9154);
                var _arg1$8 = Kind$Term$bind$(_vars$1, Kind$Path$i(_path$2), $9155);
                var $9156 = Kind$Term$ope$($9153, _arg0$7, _arg1$8);
                var $9074 = $9156;
                break;
            case 'Kind.Term.ori':
                var $9157 = self.orig;
                var $9158 = self.expr;
                var $9159 = Kind$Term$ori$($9157, Kind$Term$bind$(_vars$1, _path$2, $9158));
                var $9074 = $9159;
                break;
            case 'Kind.Term.typ':
                var $9160 = Kind$Term$typ;
                var $9074 = $9160;
                break;
            case 'Kind.Term.hol':
                var $9161 = Kind$Term$hol$(Kind$Path$to_bits$(_path$2));
                var $9074 = $9161;
                break;
        };
        return $9074;
    };
    const Kind$Term$bind = x0 => x1 => x2 => Kind$Term$bind$(x0, x1, x2);

    function Trampoline$call$(_t$2) {
        var Trampoline$call$ = (_t$2) => ({
            ctr: 'TCO',
            arg: [_t$2]
        });
        var Trampoline$call = _t$2 => Trampoline$call$(_t$2);
        var arg = [_t$2];
        while (true) {
            let [_t$2] = arg;
            var R = (() => {
                var self = _t$2;
                switch (self._) {
                    case 'Trampoline.done':
                        var $9162 = self.value;
                        var $9163 = $9162;
                        return $9163;
                    case 'Trampoline.wrap':
                        var $9164 = self.value;
                        var $9165 = Trampoline$call$($9164(Unit$new));
                        return $9165;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Trampoline$call = x0 => Trampoline$call$(x0);

    function Trampoline$(_A$1) {
        var $9166 = null;
        return $9166;
    };
    const Trampoline = x0 => Trampoline$(x0);

    function Trampoline$wrap$(_value$2) {
        var $9167 = ({
            _: 'Trampoline.wrap',
            'value': _value$2
        });
        return $9167;
    };
    const Trampoline$wrap = x0 => Trampoline$wrap$(x0);

    function BitsMap$set_if_empty$cps$go$(_bits$2, _val$3, _map$4, _cont$5) {
        var BitsMap$set_if_empty$cps$go$ = (_bits$2, _val$3, _map$4, _cont$5) => ({
            ctr: 'TCO',
            arg: [_bits$2, _val$3, _map$4, _cont$5]
        });
        var BitsMap$set_if_empty$cps$go = _bits$2 => _val$3 => _map$4 => _cont$5 => BitsMap$set_if_empty$cps$go$(_bits$2, _val$3, _map$4, _cont$5);
        var arg = [_bits$2, _val$3, _map$4, _cont$5];
        while (true) {
            let [_bits$2, _val$3, _map$4, _cont$5] = arg;
            var R = (() => {
                var self = _bits$2;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $9168 = self.slice(0, -1);
                        var self = _map$4;
                        switch (self._) {
                            case 'BitsMap.tie':
                                var $9170 = self.val;
                                var $9171 = self.lft;
                                var $9172 = self.rgt;
                                var $9173 = BitsMap$set_if_empty$cps$go$($9168, _val$3, $9171, (_lft$10 => {
                                    var $9174 = Trampoline$wrap$((_$11 => {
                                        var $9175 = _cont$5(BitsMap$tie$($9170, _lft$10, $9172));
                                        return $9175;
                                    }));
                                    return $9174;
                                }));
                                var $9169 = $9173;
                                break;
                            case 'BitsMap.new':
                                var $9176 = BitsMap$set_if_empty$cps$go$($9168, _val$3, BitsMap$new, (_lft$7 => {
                                    var $9177 = Trampoline$wrap$((_$8 => {
                                        var $9178 = _cont$5(BitsMap$tie$(Maybe$none, _lft$7, BitsMap$new));
                                        return $9178;
                                    }));
                                    return $9177;
                                }));
                                var $9169 = $9176;
                                break;
                        };
                        return $9169;
                    case 'i':
                        var $9179 = self.slice(0, -1);
                        var self = _map$4;
                        switch (self._) {
                            case 'BitsMap.tie':
                                var $9181 = self.val;
                                var $9182 = self.lft;
                                var $9183 = self.rgt;
                                var $9184 = BitsMap$set_if_empty$cps$go$($9179, _val$3, $9183, (_rgt$10 => {
                                    var $9185 = Trampoline$wrap$((_$11 => {
                                        var $9186 = _cont$5(BitsMap$tie$($9181, $9182, _rgt$10));
                                        return $9186;
                                    }));
                                    return $9185;
                                }));
                                var $9180 = $9184;
                                break;
                            case 'BitsMap.new':
                                var $9187 = BitsMap$set_if_empty$cps$go$($9179, _val$3, BitsMap$new, (_rgt$7 => {
                                    var $9188 = Trampoline$wrap$((_$8 => {
                                        var $9189 = _cont$5(BitsMap$tie$(Maybe$none, BitsMap$new, _rgt$7));
                                        return $9189;
                                    }));
                                    return $9188;
                                }));
                                var $9180 = $9187;
                                break;
                        };
                        return $9180;
                    case 'e':
                        var self = _map$4;
                        switch (self._) {
                            case 'BitsMap.tie':
                                var $9191 = self.val;
                                var $9192 = self.lft;
                                var $9193 = self.rgt;
                                var $9194 = _cont$5(BitsMap$tie$((() => {
                                    var self = $9191;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $9195 = self.value;
                                            var $9196 = Maybe$some$($9195);
                                            return $9196;
                                        case 'Maybe.none':
                                            var $9197 = Maybe$some$(_val$3);
                                            return $9197;
                                    };
                                })(), $9192, $9193));
                                var $9190 = $9194;
                                break;
                            case 'BitsMap.new':
                                var $9198 = _cont$5(BitsMap$tie$(Maybe$some$(_val$3), BitsMap$new, BitsMap$new));
                                var $9190 = $9198;
                                break;
                        };
                        return $9190;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BitsMap$set_if_empty$cps$go = x0 => x1 => x2 => x3 => BitsMap$set_if_empty$cps$go$(x0, x1, x2, x3);

    function Trampoline$done$(_value$2) {
        var $9199 = ({
            _: 'Trampoline.done',
            'value': _value$2
        });
        return $9199;
    };
    const Trampoline$done = x0 => Trampoline$done$(x0);

    function BitsMap$set_if_empty$cps$(_bits$2, _val$3, _map$4) {
        var $9200 = Trampoline$call$(BitsMap$set_if_empty$cps$go$(_bits$2, _val$3, _map$4, Trampoline$done));
        return $9200;
    };
    const BitsMap$set_if_empty$cps = x0 => x1 => x2 => BitsMap$set_if_empty$cps$(x0, x1, x2);

    function BitsMap$set_if_empty$(_bits$2, _val$3, _map$4) {
        var $9201 = BitsMap$set_if_empty$cps$(_bits$2, _val$3, _map$4);
        return $9201;
    };
    const BitsMap$set_if_empty = x0 => x1 => x2 => BitsMap$set_if_empty$(x0, x1, x2);

    function Kind$Map$set_if_empty$(_name$2, _val$3, _map$4) {
        var $9202 = BitsMap$set_if_empty$((kind_name_to_bits(_name$2)), _val$3, _map$4);
        return $9202;
    };
    const Kind$Map$set_if_empty = x0 => x1 => x2 => Kind$Map$set_if_empty$(x0, x1, x2);
    const Kind$Status$init = ({
        _: 'Kind.Status.init'
    });

    function Kind$Map$def$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _done$9, _defs$10) {
        var _defn$11 = Kind$Def$new(_file$1)(_code$2)(_orig$3)(_name$4)(_term$5)(_type$6)(_isct$7)(_arit$8);
        var self = _done$9;
        if (self) {
            var $9204 = Kind$Map$set$(_name$4, _defn$11(Kind$Status$done$(Bool$false)), _defs$10);
            var $9203 = $9204;
        } else {
            var $9205 = Kind$Map$set_if_empty$(_name$4, _defn$11(Kind$Status$init), _defs$10);
            var $9203 = $9205;
        };
        return $9203;
    };
    const Kind$Map$def = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => x9 => Kind$Map$def$(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9);

    function Kind$Parser$file$def$(_file$1, _code$2, _defs$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $9207 = self.err;
                var _reply$10 = Kind$Parser$spaces(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9209 = self.err;
                        var self = $9207;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9211 = self.value;
                                var $9212 = Parser$Reply$error$(Parser$Error$combine$($9211, $9209));
                                var $9210 = $9212;
                                break;
                            case 'Maybe.none':
                                var $9213 = Parser$Reply$error$($9209);
                                var $9210 = $9213;
                                break;
                        };
                        var $9208 = $9210;
                        break;
                    case 'Parser.Reply.value':
                        var $9214 = self.pst;
                        var self = $9214;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9216 = self.err;
                                var $9217 = self.nam;
                                var $9218 = self.ini;
                                var $9219 = self.idx;
                                var $9220 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($9207, $9216), $9217, $9218, $9219, $9220);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9222 = self.err;
                                        var _reply$24 = Parser$get_idx$(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9224 = self.err;
                                                var self = $9222;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9226 = self.value;
                                                        var $9227 = Parser$Reply$error$(Parser$Error$combine$($9226, $9224));
                                                        var $9225 = $9227;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9228 = Parser$Reply$error$($9224);
                                                        var $9225 = $9228;
                                                        break;
                                                };
                                                var $9223 = $9225;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9229 = self.pst;
                                                var $9230 = self.val;
                                                var self = $9229;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9232 = self.err;
                                                        var $9233 = self.nam;
                                                        var $9234 = self.ini;
                                                        var $9235 = self.idx;
                                                        var $9236 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($9222, $9232), $9233, $9234, $9235, $9236);
                                                        var self = _reply$pst$32;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $9238 = self.err;
                                                                var _reply$38 = Kind$Parser$name1$(_reply$pst$32);
                                                                var self = _reply$38;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $9240 = self.err;
                                                                        var self = $9238;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $9242 = self.value;
                                                                                var $9243 = Parser$Reply$error$(Parser$Error$combine$($9242, $9240));
                                                                                var $9241 = $9243;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $9244 = Parser$Reply$error$($9240);
                                                                                var $9241 = $9244;
                                                                                break;
                                                                        };
                                                                        var $9239 = $9241;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $9245 = self.pst;
                                                                        var $9246 = self.val;
                                                                        var self = $9245;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $9248 = self.err;
                                                                                var $9249 = self.nam;
                                                                                var $9250 = self.ini;
                                                                                var $9251 = self.idx;
                                                                                var $9252 = self.str;
                                                                                var _reply$pst$46 = Parser$State$new$(Parser$Error$maybe_combine$($9238, $9248), $9249, $9250, $9251, $9252);
                                                                                var self = _reply$pst$46;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $9254 = self.err;
                                                                                        var _reply$52 = Parser$many$(Kind$Parser$binder(":"))(_reply$pst$46);
                                                                                        var self = _reply$52;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $9256 = self.err;
                                                                                                var self = $9254;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $9258 = self.value;
                                                                                                        var $9259 = Parser$Reply$error$(Parser$Error$combine$($9258, $9256));
                                                                                                        var $9257 = $9259;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $9260 = Parser$Reply$error$($9256);
                                                                                                        var $9257 = $9260;
                                                                                                        break;
                                                                                                };
                                                                                                var $9255 = $9257;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $9261 = self.pst;
                                                                                                var $9262 = self.val;
                                                                                                var self = $9261;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $9264 = self.err;
                                                                                                        var $9265 = self.nam;
                                                                                                        var $9266 = self.ini;
                                                                                                        var $9267 = self.idx;
                                                                                                        var $9268 = self.str;
                                                                                                        var _reply$pst$60 = Parser$State$new$(Parser$Error$maybe_combine$($9254, $9264), $9265, $9266, $9267, $9268);
                                                                                                        var _args$61 = List$flatten$($9262);
                                                                                                        var self = _reply$pst$60;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $9270 = self.err;
                                                                                                                var _reply$67 = Kind$Parser$text$(":", _reply$pst$60);
                                                                                                                var self = _reply$67;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $9272 = self.err;
                                                                                                                        var self = $9270;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $9274 = self.value;
                                                                                                                                var $9275 = Parser$Reply$error$(Parser$Error$combine$($9274, $9272));
                                                                                                                                var $9273 = $9275;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $9276 = Parser$Reply$error$($9272);
                                                                                                                                var $9273 = $9276;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $9271 = $9273;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $9277 = self.pst;
                                                                                                                        var self = $9277;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $9279 = self.err;
                                                                                                                                var $9280 = self.nam;
                                                                                                                                var $9281 = self.ini;
                                                                                                                                var $9282 = self.idx;
                                                                                                                                var $9283 = self.str;
                                                                                                                                var _reply$pst$75 = Parser$State$new$(Parser$Error$maybe_combine$($9270, $9279), $9280, $9281, $9282, $9283);
                                                                                                                                var self = _reply$pst$75;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $9285 = self.err;
                                                                                                                                        var _reply$81 = Kind$Parser$term(_reply$pst$75);
                                                                                                                                        var self = _reply$81;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $9287 = self.err;
                                                                                                                                                var self = $9285;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $9289 = self.value;
                                                                                                                                                        var $9290 = Parser$Reply$error$(Parser$Error$combine$($9289, $9287));
                                                                                                                                                        var $9288 = $9290;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $9291 = Parser$Reply$error$($9287);
                                                                                                                                                        var $9288 = $9291;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $9286 = $9288;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $9292 = self.pst;
                                                                                                                                                var $9293 = self.val;
                                                                                                                                                var self = $9292;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $9295 = self.err;
                                                                                                                                                        var $9296 = self.nam;
                                                                                                                                                        var $9297 = self.ini;
                                                                                                                                                        var $9298 = self.idx;
                                                                                                                                                        var $9299 = self.str;
                                                                                                                                                        var _reply$pst$89 = Parser$State$new$(Parser$Error$maybe_combine$($9285, $9295), $9296, $9297, $9298, $9299);
                                                                                                                                                        var self = _reply$pst$89;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $9301 = self.err;
                                                                                                                                                                var _reply$95 = Kind$Parser$term(_reply$pst$89);
                                                                                                                                                                var self = _reply$95;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $9303 = self.err;
                                                                                                                                                                        var self = $9301;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $9305 = self.value;
                                                                                                                                                                                var $9306 = Parser$Reply$error$(Parser$Error$combine$($9305, $9303));
                                                                                                                                                                                var $9304 = $9306;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $9307 = Parser$Reply$error$($9303);
                                                                                                                                                                                var $9304 = $9307;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $9302 = $9304;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $9308 = self.pst;
                                                                                                                                                                        var $9309 = self.val;
                                                                                                                                                                        var self = $9308;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $9311 = self.err;
                                                                                                                                                                                var $9312 = self.nam;
                                                                                                                                                                                var $9313 = self.ini;
                                                                                                                                                                                var $9314 = self.idx;
                                                                                                                                                                                var $9315 = self.str;
                                                                                                                                                                                var _reply$pst$103 = Parser$State$new$(Parser$Error$maybe_combine$($9301, $9311), $9312, $9313, $9314, $9315);
                                                                                                                                                                                var self = _reply$pst$103;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $9317 = self.err;
                                                                                                                                                                                        var _reply$109 = Parser$get_idx$(_reply$pst$103);
                                                                                                                                                                                        var self = _reply$109;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $9319 = self.err;
                                                                                                                                                                                                var self = $9317;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $9321 = self.value;
                                                                                                                                                                                                        var $9322 = Parser$Reply$error$(Parser$Error$combine$($9321, $9319));
                                                                                                                                                                                                        var $9320 = $9322;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $9323 = Parser$Reply$error$($9319);
                                                                                                                                                                                                        var $9320 = $9323;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $9318 = $9320;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $9324 = self.pst;
                                                                                                                                                                                                var $9325 = self.val;
                                                                                                                                                                                                var self = $9324;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $9327 = self.err;
                                                                                                                                                                                                        var $9328 = self.nam;
                                                                                                                                                                                                        var $9329 = self.ini;
                                                                                                                                                                                                        var $9330 = self.idx;
                                                                                                                                                                                                        var $9331 = self.str;
                                                                                                                                                                                                        var _reply$pst$117 = Parser$State$new$(Parser$Error$maybe_combine$($9317, $9327), $9328, $9329, $9330, $9331);
                                                                                                                                                                                                        var _orig$118 = Pair$new$($9230, $9325);
                                                                                                                                                                                                        var _arit$119 = (list_length(_args$61));
                                                                                                                                                                                                        var _type$120 = Kind$Parser$forall$make$(_args$61, $9293);
                                                                                                                                                                                                        var _term$121 = Kind$Parser$lambda$make$(List$mapped$(_args$61, (_x$121 => {
                                                                                                                                                                                                            var self = _x$121;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Kind.Binder.new':
                                                                                                                                                                                                                    var $9334 = self.name;
                                                                                                                                                                                                                    var $9335 = $9334;
                                                                                                                                                                                                                    var $9333 = $9335;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            return $9333;
                                                                                                                                                                                                        })), $9309);
                                                                                                                                                                                                        var _type$122 = Kind$Term$bind$(List$nil, (_x$122 => {
                                                                                                                                                                                                            var $9336 = (_x$122 + '1');
                                                                                                                                                                                                            return $9336;
                                                                                                                                                                                                        }), _type$120);
                                                                                                                                                                                                        var _term$123 = Kind$Term$bind$(List$nil, (_x$123 => {
                                                                                                                                                                                                            var $9337 = (_x$123 + '0');
                                                                                                                                                                                                            return $9337;
                                                                                                                                                                                                        }), _term$121);
                                                                                                                                                                                                        var _defs$124 = Kind$Map$def$(_file$1, _code$2, _orig$118, $9246, _term$123, _type$122, Bool$false, _arit$119, Bool$false, _defs$3);
                                                                                                                                                                                                        var $9332 = Parser$Reply$value$(_reply$pst$117, _defs$124);
                                                                                                                                                                                                        var $9326 = $9332;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $9318 = $9326;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $9316 = $9318;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $9310 = $9316;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $9302 = $9310;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $9300 = $9302;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $9294 = $9300;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $9286 = $9294;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $9284 = $9286;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $9278 = $9284;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $9271 = $9278;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $9269 = $9271;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $9263 = $9269;
                                                                                                        break;
                                                                                                };
                                                                                                var $9255 = $9263;
                                                                                                break;
                                                                                        };
                                                                                        var $9253 = $9255;
                                                                                        break;
                                                                                };
                                                                                var $9247 = $9253;
                                                                                break;
                                                                        };
                                                                        var $9239 = $9247;
                                                                        break;
                                                                };
                                                                var $9237 = $9239;
                                                                break;
                                                        };
                                                        var $9231 = $9237;
                                                        break;
                                                };
                                                var $9223 = $9231;
                                                break;
                                        };
                                        var $9221 = $9223;
                                        break;
                                };
                                var $9215 = $9221;
                                break;
                        };
                        var $9208 = $9215;
                        break;
                };
                var $9206 = $9208;
                break;
        };
        return $9206;
    };
    const Kind$Parser$file$def = x0 => x1 => x2 => x3 => Kind$Parser$file$def$(x0, x1, x2, x3);

    function Kind$Parser$ADT$Constructor$new$(_name$1, _args$2, _inds$3) {
        var $9338 = ({
            _: 'Kind.Parser.ADT.Constructor.new',
            'name': _name$1,
            'args': _args$2,
            'inds': _inds$3
        });
        return $9338;
    };
    const Kind$Parser$ADT$Constructor$new = x0 => x1 => x2 => Kind$Parser$ADT$Constructor$new$(x0, x1, x2);

    function Kind$Parser$ADT$ctor$(_namespace$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $9340 = self.err;
                var _reply$8 = Kind$Parser$name1$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9342 = self.err;
                        var self = $9340;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9344 = self.value;
                                var $9345 = Parser$Reply$error$(Parser$Error$combine$($9344, $9342));
                                var $9343 = $9345;
                                break;
                            case 'Maybe.none':
                                var $9346 = Parser$Reply$error$($9342);
                                var $9343 = $9346;
                                break;
                        };
                        var $9341 = $9343;
                        break;
                    case 'Parser.Reply.value':
                        var $9347 = self.pst;
                        var $9348 = self.val;
                        var self = $9347;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9350 = self.err;
                                var $9351 = self.nam;
                                var $9352 = self.ini;
                                var $9353 = self.idx;
                                var $9354 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($9340, $9350), $9351, $9352, $9353, $9354);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9356 = self.err;
                                        var _reply$22 = Parser$maybe$(Kind$Parser$binder(":"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9358 = self.err;
                                                var self = $9356;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9360 = self.value;
                                                        var $9361 = Parser$Reply$error$(Parser$Error$combine$($9360, $9358));
                                                        var $9359 = $9361;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9362 = Parser$Reply$error$($9358);
                                                        var $9359 = $9362;
                                                        break;
                                                };
                                                var $9357 = $9359;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9363 = self.pst;
                                                var $9364 = self.val;
                                                var self = $9363;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9366 = self.err;
                                                        var $9367 = self.nam;
                                                        var $9368 = self.ini;
                                                        var $9369 = self.idx;
                                                        var $9370 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($9356, $9366), $9367, $9368, $9369, $9370);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $9372 = self.err;
                                                                var _reply$36 = Parser$maybe$((_pst$36 => {
                                                                    var self = _pst$36;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $9375 = self.err;
                                                                            var _reply$42 = Kind$Parser$text$("~", _pst$36);
                                                                            var self = _reply$42;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $9377 = self.err;
                                                                                    var self = $9375;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $9379 = self.value;
                                                                                            var $9380 = Parser$Reply$error$(Parser$Error$combine$($9379, $9377));
                                                                                            var $9378 = $9380;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $9381 = Parser$Reply$error$($9377);
                                                                                            var $9378 = $9381;
                                                                                            break;
                                                                                    };
                                                                                    var $9376 = $9378;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $9382 = self.pst;
                                                                                    var self = $9382;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $9384 = self.err;
                                                                                            var $9385 = self.nam;
                                                                                            var $9386 = self.ini;
                                                                                            var $9387 = self.idx;
                                                                                            var $9388 = self.str;
                                                                                            var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($9375, $9384), $9385, $9386, $9387, $9388);
                                                                                            var $9389 = Kind$Parser$binder$("=", _reply$pst$50);
                                                                                            var $9383 = $9389;
                                                                                            break;
                                                                                    };
                                                                                    var $9376 = $9383;
                                                                                    break;
                                                                            };
                                                                            var $9374 = $9376;
                                                                            break;
                                                                    };
                                                                    return $9374;
                                                                }), _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $9390 = self.err;
                                                                        var self = $9372;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $9392 = self.value;
                                                                                var $9393 = Parser$Reply$error$(Parser$Error$combine$($9392, $9390));
                                                                                var $9391 = $9393;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $9394 = Parser$Reply$error$($9390);
                                                                                var $9391 = $9394;
                                                                                break;
                                                                        };
                                                                        var $9373 = $9391;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $9395 = self.pst;
                                                                        var $9396 = self.val;
                                                                        var self = $9395;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $9398 = self.err;
                                                                                var $9399 = self.nam;
                                                                                var $9400 = self.ini;
                                                                                var $9401 = self.idx;
                                                                                var $9402 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($9372, $9398), $9399, $9400, $9401, $9402);
                                                                                var _args$45 = Maybe$default$($9364, List$nil);
                                                                                var _inds$46 = Maybe$default$($9396, List$nil);
                                                                                var $9403 = Parser$Reply$value$(_reply$pst$44, Kind$Parser$ADT$Constructor$new$($9348, _args$45, _inds$46));
                                                                                var $9397 = $9403;
                                                                                break;
                                                                        };
                                                                        var $9373 = $9397;
                                                                        break;
                                                                };
                                                                var $9371 = $9373;
                                                                break;
                                                        };
                                                        var $9365 = $9371;
                                                        break;
                                                };
                                                var $9357 = $9365;
                                                break;
                                        };
                                        var $9355 = $9357;
                                        break;
                                };
                                var $9349 = $9355;
                                break;
                        };
                        var $9341 = $9349;
                        break;
                };
                var $9339 = $9341;
                break;
        };
        return $9339;
    };
    const Kind$Parser$ADT$ctor = x0 => x1 => Kind$Parser$ADT$ctor$(x0, x1);

    function Kind$Parser$ADT$Datatype$new$(_name$1, _pars$2, _inds$3, _ctrs$4, _deri$5) {
        var $9404 = ({
            _: 'Kind.Parser.ADT.Datatype.new',
            'name': _name$1,
            'pars': _pars$2,
            'inds': _inds$3,
            'ctrs': _ctrs$4,
            'deri': _deri$5
        });
        return $9404;
    };
    const Kind$Parser$ADT$Datatype$new = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Datatype$new$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$adt$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $9406 = self.err;
                var _reply$7 = Kind$Parser$text$("type ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9408 = self.err;
                        var self = $9406;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9410 = self.value;
                                var $9411 = Parser$Reply$error$(Parser$Error$combine$($9410, $9408));
                                var $9409 = $9411;
                                break;
                            case 'Maybe.none':
                                var $9412 = Parser$Reply$error$($9408);
                                var $9409 = $9412;
                                break;
                        };
                        var $9407 = $9409;
                        break;
                    case 'Parser.Reply.value':
                        var $9413 = self.pst;
                        var self = $9413;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9415 = self.err;
                                var $9416 = self.nam;
                                var $9417 = self.ini;
                                var $9418 = self.idx;
                                var $9419 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($9406, $9415), $9416, $9417, $9418, $9419);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9421 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9423 = self.err;
                                                var self = $9421;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9425 = self.value;
                                                        var $9426 = Parser$Reply$error$(Parser$Error$combine$($9425, $9423));
                                                        var $9424 = $9426;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9427 = Parser$Reply$error$($9423);
                                                        var $9424 = $9427;
                                                        break;
                                                };
                                                var $9422 = $9424;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9428 = self.pst;
                                                var $9429 = self.val;
                                                var self = $9428;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9431 = self.err;
                                                        var $9432 = self.nam;
                                                        var $9433 = self.ini;
                                                        var $9434 = self.idx;
                                                        var $9435 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($9421, $9431), $9432, $9433, $9434, $9435);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $9437 = self.err;
                                                                var _reply$35 = Parser$maybe$(Kind$Parser$binder(":"), _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $9439 = self.err;
                                                                        var self = $9437;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $9441 = self.value;
                                                                                var $9442 = Parser$Reply$error$(Parser$Error$combine$($9441, $9439));
                                                                                var $9440 = $9442;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $9443 = Parser$Reply$error$($9439);
                                                                                var $9440 = $9443;
                                                                                break;
                                                                        };
                                                                        var $9438 = $9440;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $9444 = self.pst;
                                                                        var $9445 = self.val;
                                                                        var self = $9444;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $9447 = self.err;
                                                                                var $9448 = self.nam;
                                                                                var $9449 = self.ini;
                                                                                var $9450 = self.idx;
                                                                                var $9451 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($9437, $9447), $9448, $9449, $9450, $9451);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $9453 = self.err;
                                                                                        var _reply$49 = Parser$maybe$((_pst$49 => {
                                                                                            var self = _pst$49;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $9456 = self.err;
                                                                                                    var _reply$55 = Kind$Parser$text$("~", _pst$49);
                                                                                                    var self = _reply$55;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $9458 = self.err;
                                                                                                            var self = $9456;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $9460 = self.value;
                                                                                                                    var $9461 = Parser$Reply$error$(Parser$Error$combine$($9460, $9458));
                                                                                                                    var $9459 = $9461;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $9462 = Parser$Reply$error$($9458);
                                                                                                                    var $9459 = $9462;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $9457 = $9459;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $9463 = self.pst;
                                                                                                            var self = $9463;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $9465 = self.err;
                                                                                                                    var $9466 = self.nam;
                                                                                                                    var $9467 = self.ini;
                                                                                                                    var $9468 = self.idx;
                                                                                                                    var $9469 = self.str;
                                                                                                                    var _reply$pst$63 = Parser$State$new$(Parser$Error$maybe_combine$($9456, $9465), $9466, $9467, $9468, $9469);
                                                                                                                    var $9470 = Kind$Parser$binder$(":", _reply$pst$63);
                                                                                                                    var $9464 = $9470;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $9457 = $9464;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $9455 = $9457;
                                                                                                    break;
                                                                                            };
                                                                                            return $9455;
                                                                                        }), _reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $9471 = self.err;
                                                                                                var self = $9453;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $9473 = self.value;
                                                                                                        var $9474 = Parser$Reply$error$(Parser$Error$combine$($9473, $9471));
                                                                                                        var $9472 = $9474;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $9475 = Parser$Reply$error$($9471);
                                                                                                        var $9472 = $9475;
                                                                                                        break;
                                                                                                };
                                                                                                var $9454 = $9472;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $9476 = self.pst;
                                                                                                var $9477 = self.val;
                                                                                                var self = $9476;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $9479 = self.err;
                                                                                                        var $9480 = self.nam;
                                                                                                        var $9481 = self.ini;
                                                                                                        var $9482 = self.idx;
                                                                                                        var $9483 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($9453, $9479), $9480, $9481, $9482, $9483);
                                                                                                        var _pars$58 = Maybe$default$($9445, List$nil);
                                                                                                        var _inds$59 = Maybe$default$($9477, List$nil);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $9485 = self.err;
                                                                                                                var _reply$65 = Kind$Parser$items$("{", Kind$Parser$ADT$ctor($9429), "}")(_reply$pst$57);
                                                                                                                var self = _reply$65;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $9487 = self.err;
                                                                                                                        var self = $9485;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $9489 = self.value;
                                                                                                                                var $9490 = Parser$Reply$error$(Parser$Error$combine$($9489, $9487));
                                                                                                                                var $9488 = $9490;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $9491 = Parser$Reply$error$($9487);
                                                                                                                                var $9488 = $9491;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $9486 = $9488;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $9492 = self.pst;
                                                                                                                        var $9493 = self.val;
                                                                                                                        var self = $9492;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $9495 = self.err;
                                                                                                                                var $9496 = self.nam;
                                                                                                                                var $9497 = self.ini;
                                                                                                                                var $9498 = self.idx;
                                                                                                                                var $9499 = self.str;
                                                                                                                                var _reply$pst$73 = Parser$State$new$(Parser$Error$maybe_combine$($9485, $9495), $9496, $9497, $9498, $9499);
                                                                                                                                var self = _reply$pst$73;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $9501 = self.err;
                                                                                                                                        var _reply$79 = Parser$maybe$((_pst$79 => {
                                                                                                                                            var self = _pst$79;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $9504 = self.err;
                                                                                                                                                    var _reply$85 = Kind$Parser$text$("deriving", _pst$79);
                                                                                                                                                    var self = _reply$85;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                            var $9506 = self.err;
                                                                                                                                                            var self = $9504;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                    var $9508 = self.value;
                                                                                                                                                                    var $9509 = Parser$Reply$error$(Parser$Error$combine$($9508, $9506));
                                                                                                                                                                    var $9507 = $9509;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                    var $9510 = Parser$Reply$error$($9506);
                                                                                                                                                                    var $9507 = $9510;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $9505 = $9507;
                                                                                                                                                            break;
                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                            var $9511 = self.pst;
                                                                                                                                                            var self = $9511;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $9513 = self.err;
                                                                                                                                                                    var $9514 = self.nam;
                                                                                                                                                                    var $9515 = self.ini;
                                                                                                                                                                    var $9516 = self.idx;
                                                                                                                                                                    var $9517 = self.str;
                                                                                                                                                                    var _reply$pst$93 = Parser$State$new$(Parser$Error$maybe_combine$($9504, $9513), $9514, $9515, $9516, $9517);
                                                                                                                                                                    var $9518 = Kind$Parser$items$("(", Kind$Parser$name1, ")")(_reply$pst$93);
                                                                                                                                                                    var $9512 = $9518;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $9505 = $9512;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $9503 = $9505;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            return $9503;
                                                                                                                                        }), _reply$pst$73);
                                                                                                                                        var self = _reply$79;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $9519 = self.err;
                                                                                                                                                var self = $9501;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $9521 = self.value;
                                                                                                                                                        var $9522 = Parser$Reply$error$(Parser$Error$combine$($9521, $9519));
                                                                                                                                                        var $9520 = $9522;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $9523 = Parser$Reply$error$($9519);
                                                                                                                                                        var $9520 = $9523;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $9502 = $9520;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $9524 = self.pst;
                                                                                                                                                var $9525 = self.val;
                                                                                                                                                var self = $9524;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $9527 = self.err;
                                                                                                                                                        var $9528 = self.nam;
                                                                                                                                                        var $9529 = self.ini;
                                                                                                                                                        var $9530 = self.idx;
                                                                                                                                                        var $9531 = self.str;
                                                                                                                                                        var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($9501, $9527), $9528, $9529, $9530, $9531);
                                                                                                                                                        var self = $9525;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                var $9533 = self.value;
                                                                                                                                                                var $9534 = $9533;
                                                                                                                                                                var _deri$88 = $9534;
                                                                                                                                                                break;
                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                var $9535 = List$nil;
                                                                                                                                                                var _deri$88 = $9535;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $9532 = Parser$Reply$value$(_reply$pst$87, Kind$Parser$ADT$Datatype$new$($9429, _pars$58, _inds$59, $9493, _deri$88));
                                                                                                                                                        var $9526 = $9532;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $9502 = $9526;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $9500 = $9502;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $9494 = $9500;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $9486 = $9494;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $9484 = $9486;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $9478 = $9484;
                                                                                                        break;
                                                                                                };
                                                                                                var $9454 = $9478;
                                                                                                break;
                                                                                        };
                                                                                        var $9452 = $9454;
                                                                                        break;
                                                                                };
                                                                                var $9446 = $9452;
                                                                                break;
                                                                        };
                                                                        var $9438 = $9446;
                                                                        break;
                                                                };
                                                                var $9436 = $9438;
                                                                break;
                                                        };
                                                        var $9430 = $9436;
                                                        break;
                                                };
                                                var $9422 = $9430;
                                                break;
                                        };
                                        var $9420 = $9422;
                                        break;
                                };
                                var $9414 = $9420;
                                break;
                        };
                        var $9407 = $9414;
                        break;
                };
                var $9405 = $9407;
                break;
        };
        return $9405;
    };
    const Kind$Parser$ADT$adt = x0 => Kind$Parser$ADT$adt$(x0);

    function Kind$Parser$ADT$Datatype$build_term$motive$go$(_type$1, _name$2, _inds$3) {
        var self = _inds$3;
        switch (self._) {
            case 'List.cons':
                var $9537 = self.head;
                var $9538 = self.tail;
                var self = $9537;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9540 = self.eras;
                        var $9541 = self.name;
                        var $9542 = self.term;
                        var $9543 = Kind$Term$all$($9540, "", $9541, $9542, (_s$9 => _x$10 => {
                            var $9544 = Kind$Parser$ADT$Datatype$build_term$motive$go$(_type$1, _name$2, $9538);
                            return $9544;
                        }));
                        var $9539 = $9543;
                        break;
                };
                var $9536 = $9539;
                break;
            case 'List.nil':
                var self = _type$1;
                switch (self._) {
                    case 'Kind.Parser.ADT.Datatype.new':
                        var $9546 = self.pars;
                        var $9547 = self.inds;
                        var _slf$9 = Kind$Term$ref$(_name$2);
                        var _slf$10 = (() => {
                            var $9550 = _slf$9;
                            var $9551 = $9546;
                            let _slf$11 = $9550;
                            let _v$10;
                            while ($9551._ === 'List.cons') {
                                _v$10 = $9551.head;
                                var $9550 = Kind$Term$app$(_slf$11, Kind$Term$ref$((() => {
                                    var self = _v$10;
                                    switch (self._) {
                                        case 'Kind.Binder.new':
                                            var $9552 = self.name;
                                            var $9553 = $9552;
                                            return $9553;
                                    };
                                })()));
                                _slf$11 = $9550;
                                $9551 = $9551.tail;
                            }
                            return _slf$11;
                        })();
                        var _slf$11 = (() => {
                            var $9555 = _slf$10;
                            var $9556 = $9547;
                            let _slf$12 = $9555;
                            let _v$11;
                            while ($9556._ === 'List.cons') {
                                _v$11 = $9556.head;
                                var $9555 = Kind$Term$app$(_slf$12, Kind$Term$ref$((() => {
                                    var self = _v$11;
                                    switch (self._) {
                                        case 'Kind.Binder.new':
                                            var $9557 = self.name;
                                            var $9558 = $9557;
                                            return $9558;
                                    };
                                })()));
                                _slf$12 = $9555;
                                $9556 = $9556.tail;
                            }
                            return _slf$12;
                        })();
                        var $9548 = Kind$Term$all$(Bool$false, "", "", _slf$11, (_s$12 => _x$13 => {
                            var $9559 = Kind$Term$typ;
                            return $9559;
                        }));
                        var $9545 = $9548;
                        break;
                };
                var $9536 = $9545;
                break;
        };
        return $9536;
    };
    const Kind$Parser$ADT$Datatype$build_term$motive$go = x0 => x1 => x2 => Kind$Parser$ADT$Datatype$build_term$motive$go$(x0, x1, x2);

    function Kind$Parser$ADT$Datatype$build_term$motive$(_type$1) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9561 = self.name;
                var $9562 = self.inds;
                var $9563 = Kind$Parser$ADT$Datatype$build_term$motive$go$(_type$1, $9561, $9562);
                var $9560 = $9563;
                break;
        };
        return $9560;
    };
    const Kind$Parser$ADT$Datatype$build_term$motive = x0 => Kind$Parser$ADT$Datatype$build_term$motive$(x0);

    function String$flatten$go$(_xs$1, _res$2) {
        var String$flatten$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$flatten$go = _xs$1 => _res$2 => String$flatten$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                switch (self._) {
                    case 'List.cons':
                        var $9564 = self.head;
                        var $9565 = self.tail;
                        var $9566 = String$flatten$go$($9565, (_res$2 + $9564));
                        return $9566;
                    case 'List.nil':
                        var $9567 = _res$2;
                        return $9567;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$flatten$go = x0 => x1 => String$flatten$go$(x0, x1);

    function String$flatten$(_xs$1) {
        var $9568 = String$flatten$go$(_xs$1, "");
        return $9568;
    };
    const String$flatten = x0 => String$flatten$(x0);

    function Kind$Parser$ADT$Datatype$build_term$constructor$go$(_type$1, _ctor$2, _args$3) {
        var self = _args$3;
        switch (self._) {
            case 'List.cons':
                var $9570 = self.head;
                var $9571 = self.tail;
                var self = $9570;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9573 = self.eras;
                        var $9574 = self.name;
                        var $9575 = self.term;
                        var _eras$9 = $9573;
                        var _name$10 = $9574;
                        var _xtyp$11 = $9575;
                        var _body$12 = Kind$Parser$ADT$Datatype$build_term$constructor$go$(_type$1, _ctor$2, $9571);
                        var $9576 = Kind$Term$all$(_eras$9, "", _name$10, _xtyp$11, (_s$13 => _x$14 => {
                            var $9577 = _body$12;
                            return $9577;
                        }));
                        var $9572 = $9576;
                        break;
                };
                var $9569 = $9572;
                break;
            case 'List.nil':
                var self = _type$1;
                switch (self._) {
                    case 'Kind.Parser.ADT.Datatype.new':
                        var $9579 = self.name;
                        var $9580 = self.pars;
                        var self = _ctor$2;
                        switch (self._) {
                            case 'Kind.Parser.ADT.Constructor.new':
                                var $9582 = self.name;
                                var $9583 = self.args;
                                var $9584 = self.inds;
                                var _ret$12 = Kind$Term$ref$(Kind$Name$read$("P"));
                                var _ret$13 = (() => {
                                    var $9587 = _ret$12;
                                    var $9588 = $9584;
                                    let _ret$14 = $9587;
                                    let _v$13;
                                    while ($9588._ === 'List.cons') {
                                        _v$13 = $9588.head;
                                        var $9587 = Kind$Term$app$(_ret$14, (() => {
                                            var self = _v$13;
                                            switch (self._) {
                                                case 'Kind.Binder.new':
                                                    var $9589 = self.term;
                                                    var $9590 = $9589;
                                                    return $9590;
                                            };
                                        })());
                                        _ret$14 = $9587;
                                        $9588 = $9588.tail;
                                    }
                                    return _ret$14;
                                })();
                                var _ctr$14 = String$flatten$(List$cons$($9579, List$cons$(Kind$Name$read$("."), List$cons$($9582, List$nil))));
                                var _slf$15 = Kind$Term$ref$(_ctr$14);
                                var _slf$16 = (() => {
                                    var $9592 = _slf$15;
                                    var $9593 = $9580;
                                    let _slf$17 = $9592;
                                    let _v$16;
                                    while ($9593._ === 'List.cons') {
                                        _v$16 = $9593.head;
                                        var $9592 = Kind$Term$app$(_slf$17, Kind$Term$ref$((() => {
                                            var self = _v$16;
                                            switch (self._) {
                                                case 'Kind.Binder.new':
                                                    var $9594 = self.name;
                                                    var $9595 = $9594;
                                                    return $9595;
                                            };
                                        })()));
                                        _slf$17 = $9592;
                                        $9593 = $9593.tail;
                                    }
                                    return _slf$17;
                                })();
                                var _slf$17 = (() => {
                                    var $9597 = _slf$16;
                                    var $9598 = $9583;
                                    let _slf$18 = $9597;
                                    let _v$17;
                                    while ($9598._ === 'List.cons') {
                                        _v$17 = $9598.head;
                                        var $9597 = Kind$Term$app$(_slf$18, Kind$Term$ref$((() => {
                                            var self = _v$17;
                                            switch (self._) {
                                                case 'Kind.Binder.new':
                                                    var $9599 = self.name;
                                                    var $9600 = $9599;
                                                    return $9600;
                                            };
                                        })()));
                                        _slf$18 = $9597;
                                        $9598 = $9598.tail;
                                    }
                                    return _slf$18;
                                })();
                                var $9585 = Kind$Term$app$(_ret$13, _slf$17);
                                var $9581 = $9585;
                                break;
                        };
                        var $9578 = $9581;
                        break;
                };
                var $9569 = $9578;
                break;
        };
        return $9569;
    };
    const Kind$Parser$ADT$Datatype$build_term$constructor$go = x0 => x1 => x2 => Kind$Parser$ADT$Datatype$build_term$constructor$go$(x0, x1, x2);

    function Kind$Parser$ADT$Datatype$build_term$constructor$(_type$1, _ctor$2) {
        var self = _ctor$2;
        switch (self._) {
            case 'Kind.Parser.ADT.Constructor.new':
                var $9602 = self.args;
                var $9603 = Kind$Parser$ADT$Datatype$build_term$constructor$go$(_type$1, _ctor$2, $9602);
                var $9601 = $9603;
                break;
        };
        return $9601;
    };
    const Kind$Parser$ADT$Datatype$build_term$constructor = x0 => x1 => Kind$Parser$ADT$Datatype$build_term$constructor$(x0, x1);

    function Kind$Parser$ADT$Datatype$build_term$constructors$go$(_type$1, _name$2, _ctrs$3) {
        var self = _ctrs$3;
        switch (self._) {
            case 'List.cons':
                var $9605 = self.head;
                var $9606 = self.tail;
                var self = $9605;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9608 = self.name;
                        var $9609 = Kind$Term$all$(Bool$false, "", $9608, Kind$Parser$ADT$Datatype$build_term$constructor$(_type$1, $9605), (_s$9 => _x$10 => {
                            var $9610 = Kind$Parser$ADT$Datatype$build_term$constructors$go$(_type$1, _name$2, $9606);
                            return $9610;
                        }));
                        var $9607 = $9609;
                        break;
                };
                var $9604 = $9607;
                break;
            case 'List.nil':
                var self = _type$1;
                switch (self._) {
                    case 'Kind.Parser.ADT.Datatype.new':
                        var $9612 = self.inds;
                        var _ret$9 = Kind$Term$ref$(Kind$Name$read$("P"));
                        var _ret$10 = (() => {
                            var $9615 = _ret$9;
                            var $9616 = $9612;
                            let _ret$11 = $9615;
                            let _v$10;
                            while ($9616._ === 'List.cons') {
                                _v$10 = $9616.head;
                                var $9615 = Kind$Term$app$(_ret$11, Kind$Term$ref$((() => {
                                    var self = _v$10;
                                    switch (self._) {
                                        case 'Kind.Binder.new':
                                            var $9617 = self.name;
                                            var $9618 = $9617;
                                            return $9618;
                                    };
                                })()));
                                _ret$11 = $9615;
                                $9616 = $9616.tail;
                            }
                            return _ret$11;
                        })();
                        var $9613 = Kind$Term$app$(_ret$10, Kind$Term$ref$((_name$2 + ".Self")));
                        var $9611 = $9613;
                        break;
                };
                var $9604 = $9611;
                break;
        };
        return $9604;
    };
    const Kind$Parser$ADT$Datatype$build_term$constructors$go = x0 => x1 => x2 => Kind$Parser$ADT$Datatype$build_term$constructors$go$(x0, x1, x2);

    function Kind$Parser$ADT$Datatype$build_term$constructors$(_type$1) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9620 = self.name;
                var $9621 = self.ctrs;
                var $9622 = Kind$Parser$ADT$Datatype$build_term$constructors$go$(_type$1, $9620, $9621);
                var $9619 = $9622;
                break;
        };
        return $9619;
    };
    const Kind$Parser$ADT$Datatype$build_term$constructors = x0 => Kind$Parser$ADT$Datatype$build_term$constructors$(x0);

    function Kind$Parser$ADT$Datatype$build_term$go$(_type$1, _name$2, _pars$3, _inds$4) {
        var self = _pars$3;
        switch (self._) {
            case 'List.cons':
                var $9624 = self.head;
                var $9625 = self.tail;
                var self = $9624;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9627 = self.name;
                        var $9628 = Kind$Term$lam$($9627, (_x$10 => {
                            var $9629 = Kind$Parser$ADT$Datatype$build_term$go$(_type$1, _name$2, $9625, _inds$4);
                            return $9629;
                        }));
                        var $9626 = $9628;
                        break;
                };
                var $9623 = $9626;
                break;
            case 'List.nil':
                var self = _inds$4;
                switch (self._) {
                    case 'List.cons':
                        var $9631 = self.head;
                        var $9632 = self.tail;
                        var self = $9631;
                        switch (self._) {
                            case 'Kind.Binder.new':
                                var $9634 = self.name;
                                var $9635 = Kind$Term$lam$($9634, (_x$10 => {
                                    var $9636 = Kind$Parser$ADT$Datatype$build_term$go$(_type$1, _name$2, _pars$3, $9632);
                                    return $9636;
                                }));
                                var $9633 = $9635;
                                break;
                        };
                        var $9630 = $9633;
                        break;
                    case 'List.nil':
                        var $9637 = Kind$Term$all$(Bool$true, (_name$2 + ".Self"), Kind$Name$read$("P"), Kind$Parser$ADT$Datatype$build_term$motive$(_type$1), (_s$5 => _x$6 => {
                            var $9638 = Kind$Parser$ADT$Datatype$build_term$constructors$(_type$1);
                            return $9638;
                        }));
                        var $9630 = $9637;
                        break;
                };
                var $9623 = $9630;
                break;
        };
        return $9623;
    };
    const Kind$Parser$ADT$Datatype$build_term$go = x0 => x1 => x2 => x3 => Kind$Parser$ADT$Datatype$build_term$go$(x0, x1, x2, x3);

    function Kind$Parser$ADT$Datatype$build_term$(_type$1) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9640 = self.name;
                var $9641 = self.pars;
                var $9642 = self.inds;
                var $9643 = Kind$Parser$ADT$Datatype$build_term$go$(_type$1, $9640, $9641, $9642);
                var $9639 = $9643;
                break;
        };
        return $9639;
    };
    const Kind$Parser$ADT$Datatype$build_term = x0 => Kind$Parser$ADT$Datatype$build_term$(x0);

    function Kind$Parser$ADT$Datatype$build_type$go$(_type$1, _name$2, _pars$3, _inds$4) {
        var self = _pars$3;
        switch (self._) {
            case 'List.cons':
                var $9645 = self.head;
                var $9646 = self.tail;
                var self = $9645;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9648 = self.name;
                        var $9649 = self.term;
                        var $9650 = Kind$Term$all$(Bool$false, "", $9648, $9649, (_s$10 => _x$11 => {
                            var $9651 = Kind$Parser$ADT$Datatype$build_type$go$(_type$1, _name$2, $9646, _inds$4);
                            return $9651;
                        }));
                        var $9647 = $9650;
                        break;
                };
                var $9644 = $9647;
                break;
            case 'List.nil':
                var self = _inds$4;
                switch (self._) {
                    case 'List.cons':
                        var $9653 = self.head;
                        var $9654 = self.tail;
                        var self = $9653;
                        switch (self._) {
                            case 'Kind.Binder.new':
                                var $9656 = self.name;
                                var $9657 = self.term;
                                var $9658 = Kind$Term$all$(Bool$false, "", $9656, $9657, (_s$10 => _x$11 => {
                                    var $9659 = Kind$Parser$ADT$Datatype$build_type$go$(_type$1, _name$2, _pars$3, $9654);
                                    return $9659;
                                }));
                                var $9655 = $9658;
                                break;
                        };
                        var $9652 = $9655;
                        break;
                    case 'List.nil':
                        var $9660 = Kind$Term$typ;
                        var $9652 = $9660;
                        break;
                };
                var $9644 = $9652;
                break;
        };
        return $9644;
    };
    const Kind$Parser$ADT$Datatype$build_type$go = x0 => x1 => x2 => x3 => Kind$Parser$ADT$Datatype$build_type$go$(x0, x1, x2, x3);

    function Kind$Parser$ADT$Datatype$build_type$(_type$1) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9662 = self.name;
                var $9663 = self.pars;
                var $9664 = self.inds;
                var $9665 = Kind$Parser$ADT$Datatype$build_type$go$(_type$1, $9662, $9663, $9664);
                var $9661 = $9665;
                break;
        };
        return $9661;
    };
    const Kind$Parser$ADT$Datatype$build_type = x0 => Kind$Parser$ADT$Datatype$build_type$(x0);

    function Kind$Parser$ADT$Constructor$build_term$opt$go$(_type$1, _ctor$2, _ctrs$3) {
        var self = _ctrs$3;
        switch (self._) {
            case 'List.cons':
                var $9667 = self.head;
                var $9668 = self.tail;
                var self = $9667;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9670 = self.name;
                        var $9671 = Kind$Term$lam$($9670, (_x$9 => {
                            var $9672 = Kind$Parser$ADT$Constructor$build_term$opt$go$(_type$1, _ctor$2, $9668);
                            return $9672;
                        }));
                        var $9669 = $9671;
                        break;
                };
                var $9666 = $9669;
                break;
            case 'List.nil':
                var self = _ctor$2;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9674 = self.name;
                        var $9675 = self.args;
                        var _ret$7 = Kind$Term$ref$($9674);
                        var _ret$8 = (() => {
                            var $9678 = _ret$7;
                            var $9679 = $9675;
                            let _ret$9 = $9678;
                            let _arg$8;
                            while ($9679._ === 'List.cons') {
                                _arg$8 = $9679.head;
                                var $9678 = Kind$Term$app$(_ret$9, Kind$Term$ref$((() => {
                                    var self = _arg$8;
                                    switch (self._) {
                                        case 'Kind.Binder.new':
                                            var $9680 = self.name;
                                            var $9681 = $9680;
                                            return $9681;
                                    };
                                })()));
                                _ret$9 = $9678;
                                $9679 = $9679.tail;
                            }
                            return _ret$9;
                        })();
                        var $9676 = _ret$8;
                        var $9673 = $9676;
                        break;
                };
                var $9666 = $9673;
                break;
        };
        return $9666;
    };
    const Kind$Parser$ADT$Constructor$build_term$opt$go = x0 => x1 => x2 => Kind$Parser$ADT$Constructor$build_term$opt$go$(x0, x1, x2);

    function Kind$Parser$ADT$Constructor$build_term$opt$(_type$1, _ctor$2) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9683 = self.ctrs;
                var $9684 = Kind$Parser$ADT$Constructor$build_term$opt$go$(_type$1, _ctor$2, $9683);
                var $9682 = $9684;
                break;
        };
        return $9682;
    };
    const Kind$Parser$ADT$Constructor$build_term$opt = x0 => x1 => Kind$Parser$ADT$Constructor$build_term$opt$(x0, x1);

    function Kind$Parser$ADT$Constructor$build_term$go$(_type$1, _ctor$2, _name$3, _pars$4, _args$5) {
        var self = _pars$4;
        switch (self._) {
            case 'List.cons':
                var $9686 = self.head;
                var $9687 = self.tail;
                var self = $9686;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9689 = self.name;
                        var $9690 = Kind$Term$lam$($9689, (_x$11 => {
                            var $9691 = Kind$Parser$ADT$Constructor$build_term$go$(_type$1, _ctor$2, _name$3, $9687, _args$5);
                            return $9691;
                        }));
                        var $9688 = $9690;
                        break;
                };
                var $9685 = $9688;
                break;
            case 'List.nil':
                var self = _args$5;
                switch (self._) {
                    case 'List.cons':
                        var $9693 = self.head;
                        var $9694 = self.tail;
                        var self = $9693;
                        switch (self._) {
                            case 'Kind.Binder.new':
                                var $9696 = self.name;
                                var $9697 = Kind$Term$lam$($9696, (_x$11 => {
                                    var $9698 = Kind$Parser$ADT$Constructor$build_term$go$(_type$1, _ctor$2, _name$3, _pars$4, $9694);
                                    return $9698;
                                }));
                                var $9695 = $9697;
                                break;
                        };
                        var $9692 = $9695;
                        break;
                    case 'List.nil':
                        var $9699 = Kind$Term$lam$(Kind$Name$read$("P"), (_x$6 => {
                            var $9700 = Kind$Parser$ADT$Constructor$build_term$opt$(_type$1, _ctor$2);
                            return $9700;
                        }));
                        var $9692 = $9699;
                        break;
                };
                var $9685 = $9692;
                break;
        };
        return $9685;
    };
    const Kind$Parser$ADT$Constructor$build_term$go = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Constructor$build_term$go$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$Constructor$build_term$(_type$1, _ctor$2) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9702 = self.name;
                var $9703 = self.pars;
                var self = _ctor$2;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9705 = self.args;
                        var $9706 = Kind$Parser$ADT$Constructor$build_term$go$(_type$1, _ctor$2, $9702, $9703, $9705);
                        var $9704 = $9706;
                        break;
                };
                var $9701 = $9704;
                break;
        };
        return $9701;
    };
    const Kind$Parser$ADT$Constructor$build_term = x0 => x1 => Kind$Parser$ADT$Constructor$build_term$(x0, x1);

    function Kind$Parser$ADT$Constructor$build_type$go$(_type$1, _ctor$2, _name$3, _pars$4, _args$5) {
        var self = _pars$4;
        switch (self._) {
            case 'List.cons':
                var $9708 = self.head;
                var $9709 = self.tail;
                var self = $9708;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9711 = self.eras;
                        var $9712 = self.name;
                        var $9713 = self.term;
                        var $9714 = Kind$Term$all$($9711, "", $9712, $9713, (_s$11 => _x$12 => {
                            var $9715 = Kind$Parser$ADT$Constructor$build_type$go$(_type$1, _ctor$2, _name$3, $9709, _args$5);
                            return $9715;
                        }));
                        var $9710 = $9714;
                        break;
                };
                var $9707 = $9710;
                break;
            case 'List.nil':
                var self = _args$5;
                switch (self._) {
                    case 'List.cons':
                        var $9717 = self.head;
                        var $9718 = self.tail;
                        var self = $9717;
                        switch (self._) {
                            case 'Kind.Binder.new':
                                var $9720 = self.eras;
                                var $9721 = self.name;
                                var $9722 = self.term;
                                var $9723 = Kind$Term$all$($9720, "", $9721, $9722, (_s$11 => _x$12 => {
                                    var $9724 = Kind$Parser$ADT$Constructor$build_type$go$(_type$1, _ctor$2, _name$3, _pars$4, $9718);
                                    return $9724;
                                }));
                                var $9719 = $9723;
                                break;
                        };
                        var $9716 = $9719;
                        break;
                    case 'List.nil':
                        var self = _type$1;
                        switch (self._) {
                            case 'Kind.Parser.ADT.Datatype.new':
                                var $9726 = self.pars;
                                var self = _ctor$2;
                                switch (self._) {
                                    case 'Kind.Parser.ADT.Constructor.new':
                                        var $9728 = self.inds;
                                        var _type$14 = Kind$Term$ref$(_name$3);
                                        var _type$15 = (() => {
                                            var $9731 = _type$14;
                                            var $9732 = $9726;
                                            let _type$16 = $9731;
                                            let _v$15;
                                            while ($9732._ === 'List.cons') {
                                                _v$15 = $9732.head;
                                                var $9731 = Kind$Term$app$(_type$16, Kind$Term$ref$((() => {
                                                    var self = _v$15;
                                                    switch (self._) {
                                                        case 'Kind.Binder.new':
                                                            var $9733 = self.name;
                                                            var $9734 = $9733;
                                                            return $9734;
                                                    };
                                                })()));
                                                _type$16 = $9731;
                                                $9732 = $9732.tail;
                                            }
                                            return _type$16;
                                        })();
                                        var _type$16 = (() => {
                                            var $9736 = _type$15;
                                            var $9737 = $9728;
                                            let _type$17 = $9736;
                                            let _v$16;
                                            while ($9737._ === 'List.cons') {
                                                _v$16 = $9737.head;
                                                var $9736 = Kind$Term$app$(_type$17, (() => {
                                                    var self = _v$16;
                                                    switch (self._) {
                                                        case 'Kind.Binder.new':
                                                            var $9738 = self.term;
                                                            var $9739 = $9738;
                                                            return $9739;
                                                    };
                                                })());
                                                _type$17 = $9736;
                                                $9737 = $9737.tail;
                                            }
                                            return _type$17;
                                        })();
                                        var $9729 = _type$16;
                                        var $9727 = $9729;
                                        break;
                                };
                                var $9725 = $9727;
                                break;
                        };
                        var $9716 = $9725;
                        break;
                };
                var $9707 = $9716;
                break;
        };
        return $9707;
    };
    const Kind$Parser$ADT$Constructor$build_type$go = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Constructor$build_type$go$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$Constructor$build_type$(_type$1, _ctor$2) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9741 = self.name;
                var $9742 = self.pars;
                var self = _ctor$2;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9744 = self.args;
                        var $9745 = Kind$Parser$ADT$Constructor$build_type$go$(_type$1, _ctor$2, $9741, $9742, $9744);
                        var $9743 = $9745;
                        break;
                };
                var $9740 = $9743;
                break;
        };
        return $9740;
    };
    const Kind$Parser$ADT$Constructor$build_type = x0 => x1 => Kind$Parser$ADT$Constructor$build_type$(x0, x1);

    function List$is_empty$(_list$2) {
        var self = _list$2;
        switch (self._) {
            case 'List.nil':
                var $9747 = Bool$true;
                var $9746 = $9747;
                break;
            case 'List.cons':
                var $9748 = Bool$false;
                var $9746 = $9748;
                break;
        };
        return $9746;
    };
    const List$is_empty = x0 => List$is_empty$(x0);

    function Kind$Term$get_args$go$(_term$1, _args$2) {
        var Kind$Term$get_args$go$ = (_term$1, _args$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _args$2]
        });
        var Kind$Term$get_args$go = _term$1 => _args$2 => Kind$Term$get_args$go$(_term$1, _args$2);
        var arg = [_term$1, _args$2];
        while (true) {
            let [_term$1, _args$2] = arg;
            var R = (() => {
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.app':
                        var $9749 = self.func;
                        var $9750 = self.argm;
                        var $9751 = Kind$Term$get_args$go$($9749, List$cons$($9750, _args$2));
                        return $9751;
                    case 'Kind.Term.ori':
                        var $9752 = self.expr;
                        var $9753 = Kind$Term$get_args$go$($9752, _args$2);
                        return $9753;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $9754 = Pair$new$(_term$1, _args$2);
                        return $9754;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$get_args$go = x0 => x1 => Kind$Term$get_args$go$(x0, x1);

    function Kind$Term$get_args$(_term$1) {
        var $9755 = Kind$Term$get_args$go$(_term$1, List$nil);
        return $9755;
    };
    const Kind$Term$get_args = x0 => Kind$Term$get_args$(x0);

    function Kind$Parser$ADT$Derive$stringifier$term$cont$(_call$1, _rest$2) {
        var self = Kind$Term$get_args$(_call$1);
        switch (self._) {
            case 'Pair.new':
                var $9757 = self.fst;
                var $9758 = self.snd;
                var _term$5 = Kind$Term$ref$((Kind$Term$extract_name$($9757) + ".stringifier"));
                var _term$6 = (() => {
                    var $9761 = _term$5;
                    var $9762 = $9758;
                    let _term$7 = $9761;
                    let _par$6;
                    while ($9762._ === 'List.cons') {
                        _par$6 = $9762.head;
                        var $9761 = Kind$Term$app$(_term$7, Kind$Term$hol$(Bits$e));
                        _term$7 = $9761;
                        $9762 = $9762.tail;
                    }
                    return _term$7;
                })();
                var _term$7 = (() => {
                    var $9764 = _term$6;
                    var $9765 = $9758;
                    let _term$8 = $9764;
                    let _par$7;
                    while ($9765._ === 'List.cons') {
                        _par$7 = $9765.head;
                        var $9764 = Kind$Term$app$(_term$8, Kind$Parser$ADT$Derive$stringifier$term$cont$(_par$7, Maybe$none));
                        _term$8 = $9764;
                        $9765 = $9765.tail;
                    }
                    return _term$8;
                })();
                var self = _rest$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $9766 = self.value;
                        var self = $9766;
                        switch (self._) {
                            case 'Pair.new':
                                var $9768 = self.fst;
                                var $9769 = self.snd;
                                var _term$11 = Kind$Term$app$(_term$7, Kind$Term$ref$($9768));
                                var _term$12 = Kind$Term$app$(_term$11, $9769);
                                var $9770 = _term$12;
                                var $9767 = $9770;
                                break;
                        };
                        var $9759 = $9767;
                        break;
                    case 'Maybe.none':
                        var $9771 = _term$7;
                        var $9759 = $9771;
                        break;
                };
                var $9756 = $9759;
                break;
        };
        return $9756;
    };
    const Kind$Parser$ADT$Derive$stringifier$term$cont = x0 => x1 => Kind$Parser$ADT$Derive$stringifier$term$cont$(x0, x1);

    function Kind$Parser$ADT$Derive$stringifier$term$args$(_args$1, _fst$2) {
        var self = _args$1;
        switch (self._) {
            case 'List.cons':
                var $9773 = self.head;
                var $9774 = self.tail;
                var self = $9773;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9776 = self.name;
                        var $9777 = self.term;
                        var self = Kind$Term$get_args$($9777);
                        switch (self._) {
                            case 'Pair.new':
                                var _rest$10 = Kind$Parser$ADT$Derive$stringifier$term$args$($9774, Bool$false);
                                var _term$11 = Kind$Parser$ADT$Derive$stringifier$term$cont$($9777, Maybe$some$(Pair$new$(("x." + $9776), _rest$10)));
                                var _term$12 = Kind$Term$app$(Kind$Term$app$(Kind$Term$ref$("Stringifier.text"), Kind$Term$str$((() => {
                                    var self = _fst$2;
                                    if (self) {
                                        var $9780 = "(";
                                        return $9780;
                                    } else {
                                        var $9781 = ",";
                                        return $9781;
                                    };
                                })())), _term$11);
                                var $9779 = _term$12;
                                var $9778 = $9779;
                                break;
                        };
                        var $9775 = $9778;
                        break;
                };
                var $9772 = $9775;
                break;
            case 'List.nil':
                var _term$3 = Kind$Term$ref$("str");
                var self = _fst$2;
                if (self) {
                    var $9783 = _term$3;
                    var _term$4 = $9783;
                } else {
                    var $9784 = Kind$Term$app$(Kind$Term$app$(Kind$Term$ref$("Stringifier.text"), Kind$Term$str$(")")), _term$3);
                    var _term$4 = $9784;
                };
                var $9782 = _term$4;
                var $9772 = $9782;
                break;
        };
        return $9772;
    };
    const Kind$Parser$ADT$Derive$stringifier$term$args = x0 => x1 => Kind$Parser$ADT$Derive$stringifier$term$args$(x0, x1);

    function Kind$Parser$ADT$Derive$stringifier$ctr$(_adt_name$1, _ctr$2) {
        var self = _ctr$2;
        switch (self._) {
            case 'Kind.Parser.ADT.Constructor.new':
                var $9786 = self.name;
                var $9787 = self.args;
                var _term$6 = Kind$Term$ref$("Stringifier.text");
                var _term$7 = Kind$Term$app$(_term$6, Kind$Term$str$((_adt_name$1 + ("." + $9786))));
                var _term$8 = Kind$Term$app$(_term$7, Kind$Parser$ADT$Derive$stringifier$term$args$($9787, Bool$true));
                var $9788 = Pair$new$($9786, _term$8);
                var $9785 = $9788;
                break;
        };
        return $9785;
    };
    const Kind$Parser$ADT$Derive$stringifier$ctr = x0 => x1 => Kind$Parser$ADT$Derive$stringifier$ctr$(x0, x1);

    function Kind$Parser$ADT$Derive$stringifier$term$ctrs$(_adt_name$1, _ctrs$2) {
        var self = _ctrs$2;
        switch (self._) {
            case 'List.cons':
                var $9790 = self.head;
                var $9791 = self.tail;
                var $9792 = List$cons$(Kind$Parser$ADT$Derive$stringifier$ctr$(_adt_name$1, $9790), Kind$Parser$ADT$Derive$stringifier$term$ctrs$(_adt_name$1, $9791));
                var $9789 = $9792;
                break;
            case 'List.nil':
                var $9793 = List$nil;
                var $9789 = $9793;
                break;
        };
        return $9789;
    };
    const Kind$Parser$ADT$Derive$stringifier$term$ctrs = x0 => x1 => Kind$Parser$ADT$Derive$stringifier$term$ctrs$(x0, x1);

    function Kind$Parser$ADT$Derive$stringifier$term$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9795 = self.name;
                var $9796 = self.pars;
                var $9797 = self.inds;
                var $9798 = self.ctrs;
                var self = (List$is_empty$($9796) && List$is_empty$($9797));
                if (self) {
                    var _term$7 = Kind$Term$lam$("x", (_x$7 => {
                        var $9801 = Kind$Term$lam$("str", (_str$8 => {
                            var _ctrs$9 = Kind$Parser$ADT$Derive$stringifier$term$ctrs$($9795, $9798);
                            var _cses$10 = Kind$Map$new;
                            var _cses$11 = (() => {
                                var $9804 = _cses$10;
                                var $9805 = _ctrs$9;
                                let _cses$12 = $9804;
                                let _ctr$11;
                                while ($9805._ === 'List.cons') {
                                    _ctr$11 = $9805.head;
                                    var self = _ctr$11;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $9806 = self.fst;
                                            var $9807 = self.snd;
                                            var $9808 = Kind$Map$set$($9806, $9807, _cses$12);
                                            var $9804 = $9808;
                                            break;
                                    };
                                    _cses$12 = $9804;
                                    $9805 = $9805.tail;
                                }
                                return _cses$12;
                            })();
                            var $9802 = Kind$Term$cse$(Bits$e, _x$7, "x", List$nil, _cses$11, Maybe$none);
                            return $9802;
                        }));
                        return $9801;
                    }));
                    var $9800 = Maybe$some$(_term$7);
                    var $9799 = $9800;
                } else {
                    var $9809 = Maybe$none;
                    var $9799 = $9809;
                };
                var $9794 = $9799;
                break;
        };
        return $9794;
    };
    const Kind$Parser$ADT$Derive$stringifier$term = x0 => Kind$Parser$ADT$Derive$stringifier$term$(x0);

    function Kind$Parser$ADT$Derive$stringifier$type$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9811 = self.name;
                var $9812 = self.pars;
                var $9813 = self.inds;
                var self = (List$is_empty$($9812) && List$is_empty$($9813));
                if (self) {
                    var $9815 = Maybe$some$(Kind$Term$app$(Kind$Term$ref$("Stringifier"), Kind$Term$ref$($9811)));
                    var $9814 = $9815;
                } else {
                    var $9816 = Maybe$none;
                    var $9814 = $9816;
                };
                var $9810 = $9814;
                break;
        };
        return $9810;
    };
    const Kind$Parser$ADT$Derive$stringifier$type = x0 => Kind$Parser$ADT$Derive$stringifier$type$(x0);

    function Kind$Parser$ADT$Derived$new$(_name$1, _arit$2, _term$3, _type$4) {
        var $9817 = ({
            _: 'Kind.Parser.ADT.Derived.new',
            'name': _name$1,
            'arit': _arit$2,
            'term': _term$3,
            'type': _type$4
        });
        return $9817;
    };
    const Kind$Parser$ADT$Derived$new = x0 => x1 => x2 => x3 => Kind$Parser$ADT$Derived$new$(x0, x1, x2, x3);

    function Kind$Parser$ADT$Derive$parser$term$cont$(_call$1) {
        var self = Kind$Term$get_args$(_call$1);
        switch (self._) {
            case 'Pair.new':
                var $9819 = self.fst;
                var $9820 = self.snd;
                var _term$4 = Kind$Term$ref$((Kind$Term$extract_name$($9819) + ".parser"));
                var _term$5 = (() => {
                    var $9823 = _term$4;
                    var $9824 = $9820;
                    let _term$6 = $9823;
                    let _par$5;
                    while ($9824._ === 'List.cons') {
                        _par$5 = $9824.head;
                        var $9823 = Kind$Term$app$(_term$6, Kind$Term$hol$(Bits$e));
                        _term$6 = $9823;
                        $9824 = $9824.tail;
                    }
                    return _term$6;
                })();
                var _term$6 = (() => {
                    var $9826 = _term$5;
                    var $9827 = $9820;
                    let _term$7 = $9826;
                    let _par$6;
                    while ($9827._ === 'List.cons') {
                        _par$6 = $9827.head;
                        var $9826 = Kind$Term$app$(_term$7, Kind$Parser$ADT$Derive$parser$term$cont$(_par$6));
                        _term$7 = $9826;
                        $9827 = $9827.tail;
                    }
                    return _term$7;
                })();
                var $9821 = _term$6;
                var $9818 = $9821;
                break;
        };
        return $9818;
    };
    const Kind$Parser$ADT$Derive$parser$term$cont = x0 => Kind$Parser$ADT$Derive$parser$term$cont$(x0);

    function Kind$Parser$ADT$Derive$parser$term$args$(_adt$1, _cnam$2, _args$3, _vars$4, _fst$5) {
        var self = _args$3;
        switch (self._) {
            case 'List.cons':
                var $9829 = self.head;
                var $9830 = self.tail;
                var self = $9829;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9832 = self.name;
                        var $9833 = self.term;
                        var _term$11 = Kind$Term$ref$("Parser.bind");
                        var _term$12 = Kind$Term$app$(_term$11, Kind$Term$hol$(Bits$e));
                        var _term$13 = Kind$Term$app$(_term$12, Kind$Term$hol$(Bits$e));
                        var _cont$14 = Kind$Term$ref$("Parser.prefix");
                        var _cont$15 = Kind$Term$app$(_cont$14, Kind$Term$hol$(Bits$e));
                        var _cont$16 = Kind$Term$app$(_cont$15, Kind$Term$str$((() => {
                            var self = _fst$5;
                            if (self) {
                                var $9835 = "(";
                                return $9835;
                            } else {
                                var $9836 = ",";
                                return $9836;
                            };
                        })()));
                        var _cont$17 = Kind$Term$app$(_cont$16, Kind$Parser$ADT$Derive$parser$term$cont$($9833));
                        var _term$18 = Kind$Term$app$(_term$13, _cont$17);
                        var _term$19 = Kind$Term$app$(_term$18, Kind$Term$lam$($9832, (_x$19 => {
                            var $9837 = Kind$Parser$ADT$Derive$parser$term$args$(_adt$1, _cnam$2, $9830, List$cons$(_x$19, _vars$4), Bool$false);
                            return $9837;
                        })));
                        var $9834 = _term$19;
                        var $9831 = $9834;
                        break;
                };
                var $9828 = $9831;
                break;
            case 'List.nil':
                var _body$6 = Kind$Term$ref$("Parser.pure");
                var _body$7 = Kind$Term$app$(_body$6, Kind$Term$hol$(Bits$e));
                var _func$8 = Kind$Term$ref$(_cnam$2);
                var _func$9 = List$fold$(_vars$4, _func$8, (_var$9 => _func$10 => {
                    var $9839 = Kind$Term$app$(_func$10, _var$9);
                    return $9839;
                }));
                var _body$10 = Kind$Term$app$(_body$7, _func$9);
                var self = _fst$5;
                if (self) {
                    var $9840 = _body$10;
                    var $9838 = $9840;
                } else {
                    var _term$11 = Kind$Term$ref$("Parser.bind");
                    var _term$12 = Kind$Term$app$(_term$11, Kind$Term$hol$(Bits$e));
                    var _term$13 = Kind$Term$app$(_term$12, Kind$Term$hol$(Bits$e));
                    var _term$14 = Kind$Term$app$(_term$13, Kind$Term$app$(Kind$Term$ref$("Parser.text"), Kind$Term$str$(")")));
                    var _term$15 = Kind$Term$app$(_term$14, Kind$Term$lam$("", (_x$15 => {
                        var $9842 = _body$10;
                        return $9842;
                    })));
                    var $9841 = _term$15;
                    var $9838 = $9841;
                };
                var $9828 = $9838;
                break;
        };
        return $9828;
    };
    const Kind$Parser$ADT$Derive$parser$term$args = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Derive$parser$term$args$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$Derive$parser$term$cses$(_adt$1, _cses$2) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9844 = self.name;
                var self = _cses$2;
                switch (self._) {
                    case 'List.cons':
                        var $9846 = self.head;
                        var $9847 = self.tail;
                        var self = $9846;
                        switch (self._) {
                            case 'Kind.Parser.ADT.Constructor.new':
                                var $9849 = self.name;
                                var $9850 = self.args;
                                var _cnam$13 = ($9844 + ("." + $9849));
                                var _term$14 = Kind$Term$ref$("Parser.bind");
                                var _term$15 = Kind$Term$app$(_term$14, Kind$Term$hol$(Bits$e));
                                var _term$16 = Kind$Term$app$(_term$15, Kind$Term$hol$(Bits$e));
                                var _term$17 = Kind$Term$app$(_term$16, Kind$Term$app$(Kind$Term$ref$("Parser.text"), Kind$Term$str$(_cnam$13)));
                                var _term$18 = Kind$Term$app$(_term$17, Kind$Term$lam$("", (_x$18 => {
                                    var $9852 = Kind$Parser$ADT$Derive$parser$term$args$(_adt$1, _cnam$13, $9850, List$nil, Bool$true);
                                    return $9852;
                                })));
                                var _list$19 = Kind$Term$ref$("List.cons");
                                var _list$20 = Kind$Term$app$(_list$19, Kind$Term$hol$(Bits$e));
                                var _list$21 = Kind$Term$app$(_list$20, _term$18);
                                var _list$22 = Kind$Term$app$(_list$21, Kind$Parser$ADT$Derive$parser$term$cses$(_adt$1, $9847));
                                var $9851 = _list$22;
                                var $9848 = $9851;
                                break;
                        };
                        var $9845 = $9848;
                        break;
                    case 'List.nil':
                        var _fail$8 = Kind$Term$ref$("Parser.fail");
                        var _fail$9 = Kind$Term$app$(_fail$8, Kind$Term$hol$(Bits$e));
                        var _fail$10 = Kind$Term$app$(_fail$9, Kind$Term$str$(""));
                        var _term$11 = Kind$Term$ref$("List.cons");
                        var _term$12 = Kind$Term$app$(_term$11, Kind$Term$hol$(Bits$e));
                        var _term$13 = Kind$Term$app$(_term$12, _fail$10);
                        var _term$14 = Kind$Term$app$(_term$13, Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e)));
                        var $9853 = _term$14;
                        var $9845 = $9853;
                        break;
                };
                var $9843 = $9845;
                break;
        };
        return $9843;
    };
    const Kind$Parser$ADT$Derive$parser$term$cses = x0 => x1 => Kind$Parser$ADT$Derive$parser$term$cses$(x0, x1);

    function Kind$Parser$ADT$Derive$parser$term$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9855 = self.pars;
                var $9856 = self.inds;
                var $9857 = self.ctrs;
                var self = (List$is_empty$($9855) && List$is_empty$($9856));
                if (self) {
                    var _term$7 = Kind$Term$ref$("Parser.choice");
                    var _term$8 = Kind$Term$app$(_term$7, Kind$Term$hol$(Bits$e));
                    var _term$9 = Kind$Term$app$(_term$8, Kind$Parser$ADT$Derive$parser$term$cses$(_adt$1, $9857));
                    var $9859 = Maybe$some$(_term$9);
                    var $9858 = $9859;
                } else {
                    var $9860 = Maybe$none;
                    var $9858 = $9860;
                };
                var $9854 = $9858;
                break;
        };
        return $9854;
    };
    const Kind$Parser$ADT$Derive$parser$term = x0 => Kind$Parser$ADT$Derive$parser$term$(x0);

    function Kind$Parser$ADT$Derive$parser$type$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9862 = self.name;
                var $9863 = self.pars;
                var $9864 = self.inds;
                var self = (List$is_empty$($9863) && List$is_empty$($9864));
                if (self) {
                    var $9866 = Maybe$some$(Kind$Term$app$(Kind$Term$ref$("Parser"), Kind$Term$ref$($9862)));
                    var $9865 = $9866;
                } else {
                    var $9867 = Maybe$none;
                    var $9865 = $9867;
                };
                var $9861 = $9865;
                break;
        };
        return $9861;
    };
    const Kind$Parser$ADT$Derive$parser$type = x0 => Kind$Parser$ADT$Derive$parser$type$(x0);

    function Kind$Parser$ADT$Derive$serializer$term$cont$(_call$1, _rest$2) {
        var self = Kind$Term$get_args$(_call$1);
        switch (self._) {
            case 'Pair.new':
                var $9869 = self.fst;
                var $9870 = self.snd;
                var _term$5 = Kind$Term$ref$((Kind$Term$extract_name$($9869) + ".serializer"));
                var _term$6 = (() => {
                    var $9873 = _term$5;
                    var $9874 = $9870;
                    let _term$7 = $9873;
                    let _par$6;
                    while ($9874._ === 'List.cons') {
                        _par$6 = $9874.head;
                        var $9873 = Kind$Term$app$(_term$7, Kind$Term$hol$(Bits$e));
                        _term$7 = $9873;
                        $9874 = $9874.tail;
                    }
                    return _term$7;
                })();
                var _term$7 = (() => {
                    var $9876 = _term$6;
                    var $9877 = $9870;
                    let _term$8 = $9876;
                    let _par$7;
                    while ($9877._ === 'List.cons') {
                        _par$7 = $9877.head;
                        var $9876 = Kind$Term$app$(_term$8, Kind$Parser$ADT$Derive$serializer$term$cont$(_par$7, Maybe$none));
                        _term$8 = $9876;
                        $9877 = $9877.tail;
                    }
                    return _term$8;
                })();
                var self = _rest$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $9878 = self.value;
                        var self = $9878;
                        switch (self._) {
                            case 'Pair.new':
                                var $9880 = self.fst;
                                var $9881 = self.snd;
                                var _term$11 = Kind$Term$app$(_term$7, Kind$Term$ref$($9880));
                                var _term$12 = Kind$Term$app$(_term$11, $9881);
                                var $9882 = _term$12;
                                var $9879 = $9882;
                                break;
                        };
                        var $9871 = $9879;
                        break;
                    case 'Maybe.none':
                        var $9883 = _term$7;
                        var $9871 = $9883;
                        break;
                };
                var $9868 = $9871;
                break;
        };
        return $9868;
    };
    const Kind$Parser$ADT$Derive$serializer$term$cont = x0 => x1 => Kind$Parser$ADT$Derive$serializer$term$cont$(x0, x1);

    function Kind$Parser$ADT$Derive$serializer$term$args$(_args$1) {
        var self = _args$1;
        switch (self._) {
            case 'List.cons':
                var $9885 = self.head;
                var $9886 = self.tail;
                var self = $9885;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9888 = self.name;
                        var $9889 = self.term;
                        var self = Kind$Term$get_args$($9889);
                        switch (self._) {
                            case 'Pair.new':
                                var _rest$9 = Kind$Parser$ADT$Derive$serializer$term$args$($9886);
                                var _term$10 = Kind$Parser$ADT$Derive$serializer$term$cont$($9889, Maybe$some$(Pair$new$(("x." + $9888), _rest$9)));
                                var $9891 = _term$10;
                                var $9890 = $9891;
                                break;
                        };
                        var $9887 = $9890;
                        break;
                };
                var $9884 = $9887;
                break;
            case 'List.nil':
                var $9892 = Kind$Term$ref$("bs");
                var $9884 = $9892;
                break;
        };
        return $9884;
    };
    const Kind$Parser$ADT$Derive$serializer$term$args = x0 => Kind$Parser$ADT$Derive$serializer$term$args$(x0);

    function Kind$Parser$ADT$Derive$serializer$ctr$bits$(_bs$1, _rest$2) {
        var self = _bs$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $9894 = self.slice(0, -1);
                var $9895 = Kind$Term$app$(Kind$Term$ref$("Bits.o"), Kind$Parser$ADT$Derive$serializer$ctr$bits$($9894, _rest$2));
                var $9893 = $9895;
                break;
            case 'i':
                var $9896 = self.slice(0, -1);
                var $9897 = Kind$Term$app$(Kind$Term$ref$("Bits.i"), Kind$Parser$ADT$Derive$serializer$ctr$bits$($9896, _rest$2));
                var $9893 = $9897;
                break;
            case 'e':
                var $9898 = _rest$2;
                var $9893 = $9898;
                break;
        };
        return $9893;
    };
    const Kind$Parser$ADT$Derive$serializer$ctr$bits = x0 => x1 => Kind$Parser$ADT$Derive$serializer$ctr$bits$(x0, x1);

    function Kind$Parser$ADT$Derive$serializer$ctr$(_adt_name$1, _ctr$2, _header$3) {
        var self = _ctr$2;
        switch (self._) {
            case 'Kind.Parser.ADT.Constructor.new':
                var $9900 = self.name;
                var $9901 = self.args;
                var _term$7 = Kind$Parser$ADT$Derive$serializer$term$args$($9901);
                var _term$8 = Kind$Parser$ADT$Derive$serializer$ctr$bits$(_header$3, _term$7);
                var $9902 = Pair$new$($9900, _term$8);
                var $9899 = $9902;
                break;
        };
        return $9899;
    };
    const Kind$Parser$ADT$Derive$serializer$ctr = x0 => x1 => x2 => Kind$Parser$ADT$Derive$serializer$ctr$(x0, x1, x2);

    function Kind$Parser$ADT$Derive$serializer$term$ctrs$(_adt_name$1, _ctrs$2, _header$3) {
        var self = _ctrs$2;
        switch (self._) {
            case 'List.cons':
                var $9904 = self.head;
                var $9905 = self.tail;
                var $9906 = List$cons$(Kind$Parser$ADT$Derive$serializer$ctr$(_adt_name$1, $9904, _header$3), Kind$Parser$ADT$Derive$serializer$term$ctrs$(_adt_name$1, $9905, Bits$inc$(_header$3)));
                var $9903 = $9906;
                break;
            case 'List.nil':
                var $9907 = List$nil;
                var $9903 = $9907;
                break;
        };
        return $9903;
    };
    const Kind$Parser$ADT$Derive$serializer$term$ctrs = x0 => x1 => x2 => Kind$Parser$ADT$Derive$serializer$term$ctrs$(x0, x1, x2);

    function Bits$zeros$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $9909 = Bits$e;
            var $9908 = $9909;
        } else {
            var $9910 = (self - 1n);
            var $9911 = (Bits$zeros$($9910) + '0');
            var $9908 = $9911;
        };
        return $9908;
    };
    const Bits$zeros = x0 => Bits$zeros$(x0);
    const Nat$div = a0 => a1 => (a0 / a1);

    function Nat$bitlen$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $9913 = 0n;
            var $9912 = $9913;
        } else {
            var $9914 = (self - 1n);
            var $9915 = Nat$succ$(Nat$bitlen$((_n$1 / 2n)));
            var $9912 = $9915;
        };
        return $9912;
    };
    const Nat$bitlen = x0 => Nat$bitlen$(x0);

    function Kind$Parser$ADT$Derive$serializer$term$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9917 = self.name;
                var $9918 = self.pars;
                var $9919 = self.inds;
                var $9920 = self.ctrs;
                var self = (List$is_empty$($9918) && List$is_empty$($9919));
                if (self) {
                    var _term$7 = Kind$Term$lam$("x", (_x$7 => {
                        var $9923 = Kind$Term$lam$("bs", (_bs$8 => {
                            var _ctrs$9 = Kind$Parser$ADT$Derive$serializer$term$ctrs$($9917, $9920, Bits$zeros$(Nat$bitlen$(Nat$pred$((list_length($9920))))));
                            var _cses$10 = Kind$Map$new;
                            var _cses$11 = (() => {
                                var $9926 = _cses$10;
                                var $9927 = _ctrs$9;
                                let _cses$12 = $9926;
                                let _ctr$11;
                                while ($9927._ === 'List.cons') {
                                    _ctr$11 = $9927.head;
                                    var self = _ctr$11;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $9928 = self.fst;
                                            var $9929 = self.snd;
                                            var $9930 = Kind$Map$set$($9928, $9929, _cses$12);
                                            var $9926 = $9930;
                                            break;
                                    };
                                    _cses$12 = $9926;
                                    $9927 = $9927.tail;
                                }
                                return _cses$12;
                            })();
                            var $9924 = Kind$Term$cse$(Bits$e, _x$7, "x", List$nil, _cses$11, Maybe$none);
                            return $9924;
                        }));
                        return $9923;
                    }));
                    var $9922 = Maybe$some$(_term$7);
                    var $9921 = $9922;
                } else {
                    var $9931 = Maybe$none;
                    var $9921 = $9931;
                };
                var $9916 = $9921;
                break;
        };
        return $9916;
    };
    const Kind$Parser$ADT$Derive$serializer$term = x0 => Kind$Parser$ADT$Derive$serializer$term$(x0);

    function Kind$Parser$ADT$Derive$serializer$type$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9933 = self.name;
                var $9934 = self.pars;
                var $9935 = self.inds;
                var self = (List$is_empty$($9934) && List$is_empty$($9935));
                if (self) {
                    var $9937 = Maybe$some$(Kind$Term$app$(Kind$Term$ref$("Serializer"), Kind$Term$ref$($9933)));
                    var $9936 = $9937;
                } else {
                    var $9938 = Maybe$none;
                    var $9936 = $9938;
                };
                var $9932 = $9936;
                break;
        };
        return $9932;
    };
    const Kind$Parser$ADT$Derive$serializer$type = x0 => Kind$Parser$ADT$Derive$serializer$type$(x0);

    function Kind$Parser$ADT$Derive$serializer$term$bits$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $9940 = self.slice(0, -1);
                var $9941 = Kind$Term$app$(Kind$Term$ref$("Bits.o"), Kind$Parser$ADT$Derive$serializer$term$bits$($9940));
                var $9939 = $9941;
                break;
            case 'i':
                var $9942 = self.slice(0, -1);
                var $9943 = Kind$Term$app$(Kind$Term$ref$("Bits.i"), Kind$Parser$ADT$Derive$serializer$term$bits$($9942));
                var $9939 = $9943;
                break;
            case 'e':
                var $9944 = Kind$Term$ref$("Bits.e");
                var $9939 = $9944;
                break;
        };
        return $9939;
    };
    const Kind$Parser$ADT$Derive$serializer$term$bits = x0 => Kind$Parser$ADT$Derive$serializer$term$bits$(x0);

    function Kind$Parser$ADT$Derive$deserializer$term$cont$(_call$1) {
        var self = Kind$Term$get_args$(_call$1);
        switch (self._) {
            case 'Pair.new':
                var $9946 = self.fst;
                var $9947 = self.snd;
                var _term$4 = Kind$Term$ref$((Kind$Term$extract_name$($9946) + ".deserializer"));
                var _term$5 = (() => {
                    var $9950 = _term$4;
                    var $9951 = $9947;
                    let _term$6 = $9950;
                    let _par$5;
                    while ($9951._ === 'List.cons') {
                        _par$5 = $9951.head;
                        var $9950 = Kind$Term$app$(_term$6, Kind$Term$hol$(Bits$e));
                        _term$6 = $9950;
                        $9951 = $9951.tail;
                    }
                    return _term$6;
                })();
                var _term$6 = (() => {
                    var $9953 = _term$5;
                    var $9954 = $9947;
                    let _term$7 = $9953;
                    let _par$6;
                    while ($9954._ === 'List.cons') {
                        _par$6 = $9954.head;
                        var $9953 = Kind$Term$app$(_term$7, Kind$Parser$ADT$Derive$deserializer$term$cont$(_par$6));
                        _term$7 = $9953;
                        $9954 = $9954.tail;
                    }
                    return _term$7;
                })();
                var $9948 = _term$6;
                var $9945 = $9948;
                break;
        };
        return $9945;
    };
    const Kind$Parser$ADT$Derive$deserializer$term$cont = x0 => Kind$Parser$ADT$Derive$deserializer$term$cont$(x0);

    function Kind$Parser$ADT$Derive$deserializer$term$args$(_adt$1, _cnam$2, _args$3, _vars$4, _fst$5) {
        var self = _args$3;
        switch (self._) {
            case 'List.cons':
                var $9956 = self.head;
                var $9957 = self.tail;
                var self = $9956;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9959 = self.name;
                        var $9960 = self.term;
                        var _term$11 = Kind$Term$ref$("Deserializer.bind");
                        var _term$12 = Kind$Term$app$(_term$11, Kind$Term$hol$(Bits$e));
                        var _term$13 = Kind$Term$app$(_term$12, Kind$Term$hol$(Bits$e));
                        var _term$14 = Kind$Term$app$(_term$13, Kind$Parser$ADT$Derive$deserializer$term$cont$($9960));
                        var _term$15 = Kind$Term$app$(_term$14, Kind$Term$lam$($9959, (_x$15 => {
                            var $9962 = Kind$Parser$ADT$Derive$deserializer$term$args$(_adt$1, _cnam$2, $9957, List$cons$(_x$15, _vars$4), Bool$false);
                            return $9962;
                        })));
                        var $9961 = _term$15;
                        var $9958 = $9961;
                        break;
                };
                var $9955 = $9958;
                break;
            case 'List.nil':
                var _body$6 = Kind$Term$ref$("Deserializer.pure");
                var _body$7 = Kind$Term$app$(_body$6, Kind$Term$hol$(Bits$e));
                var _func$8 = Kind$Term$ref$(_cnam$2);
                var _func$9 = List$fold$(_vars$4, _func$8, (_var$9 => _func$10 => {
                    var $9964 = Kind$Term$app$(_func$10, _var$9);
                    return $9964;
                }));
                var _body$10 = Kind$Term$app$(_body$7, _func$9);
                var $9963 = _body$10;
                var $9955 = $9963;
                break;
        };
        return $9955;
    };
    const Kind$Parser$ADT$Derive$deserializer$term$args = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Derive$deserializer$term$args$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$Derive$deserializer$term$cses$(_adt$1, _cses$2, _header$3) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9966 = self.name;
                var self = _cses$2;
                switch (self._) {
                    case 'List.cons':
                        var $9968 = self.head;
                        var $9969 = self.tail;
                        var self = $9968;
                        switch (self._) {
                            case 'Kind.Parser.ADT.Constructor.new':
                                var $9971 = self.name;
                                var $9972 = self.args;
                                var _cnam$14 = ($9966 + ("." + $9971));
                                var _term$15 = Kind$Term$ref$("Deserializer.bind");
                                var _term$16 = Kind$Term$app$(_term$15, Kind$Term$hol$(Bits$e));
                                var _term$17 = Kind$Term$app$(_term$16, Kind$Term$hol$(Bits$e));
                                var _term$18 = Kind$Term$app$(_term$17, Kind$Term$app$(Kind$Term$ref$("Deserializer.bits"), Kind$Parser$ADT$Derive$serializer$term$bits$(_header$3)));
                                var _term$19 = Kind$Term$app$(_term$18, Kind$Term$lam$("", (_x$19 => {
                                    var $9974 = Kind$Parser$ADT$Derive$deserializer$term$args$(_adt$1, _cnam$14, $9972, List$nil, Bool$true);
                                    return $9974;
                                })));
                                var _list$20 = Kind$Term$ref$("List.cons");
                                var _list$21 = Kind$Term$app$(_list$20, Kind$Term$hol$(Bits$e));
                                var _list$22 = Kind$Term$app$(_list$21, _term$19);
                                var _list$23 = Kind$Term$app$(_list$22, Kind$Parser$ADT$Derive$deserializer$term$cses$(_adt$1, $9969, Bits$inc$(_header$3)));
                                var $9973 = _list$23;
                                var $9970 = $9973;
                                break;
                        };
                        var $9967 = $9970;
                        break;
                    case 'List.nil':
                        var $9975 = Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e));
                        var $9967 = $9975;
                        break;
                };
                var $9965 = $9967;
                break;
        };
        return $9965;
    };
    const Kind$Parser$ADT$Derive$deserializer$term$cses = x0 => x1 => x2 => Kind$Parser$ADT$Derive$deserializer$term$cses$(x0, x1, x2);

    function Kind$Parser$ADT$Derive$deserializer$term$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9977 = self.pars;
                var $9978 = self.inds;
                var $9979 = self.ctrs;
                var self = (List$is_empty$($9977) && List$is_empty$($9978));
                if (self) {
                    var _term$7 = Kind$Term$ref$("Deserializer.choice");
                    var _term$8 = Kind$Term$app$(_term$7, Kind$Term$hol$(Bits$e));
                    var _term$9 = Kind$Term$app$(_term$8, Kind$Parser$ADT$Derive$deserializer$term$cses$(_adt$1, $9979, Bits$zeros$(Nat$bitlen$(Nat$pred$((list_length($9979)))))));
                    var $9981 = Maybe$some$(_term$9);
                    var $9980 = $9981;
                } else {
                    var $9982 = Maybe$none;
                    var $9980 = $9982;
                };
                var $9976 = $9980;
                break;
        };
        return $9976;
    };
    const Kind$Parser$ADT$Derive$deserializer$term = x0 => Kind$Parser$ADT$Derive$deserializer$term$(x0);

    function Kind$Parser$ADT$Derive$deserializer$type$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9984 = self.name;
                var $9985 = self.pars;
                var $9986 = self.inds;
                var self = (List$is_empty$($9985) && List$is_empty$($9986));
                if (self) {
                    var $9988 = Maybe$some$(Kind$Term$app$(Kind$Term$ref$("Deserializer"), Kind$Term$ref$($9984)));
                    var $9987 = $9988;
                } else {
                    var $9989 = Maybe$none;
                    var $9987 = $9989;
                };
                var $9983 = $9987;
                break;
        };
        return $9983;
    };
    const Kind$Parser$ADT$Derive$deserializer$type = x0 => Kind$Parser$ADT$Derive$deserializer$type$(x0);

    function Kind$Parser$ADT$Derive$by_name$(_deri$1, _adt$2) {
        var self = _adt$2;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9991 = self.name;
                var self = (_deri$1 === "stringifier");
                if (self) {
                    var _name$8 = ($9991 + ("." + _deri$1));
                    var $9993 = Maybe$monad$((_m$bind$9 => _m$pure$10 => {
                        var $9994 = _m$bind$9;
                        return $9994;
                    }))(Kind$Parser$ADT$Derive$stringifier$term$(_adt$2))((_term$9 => {
                        var $9995 = Maybe$monad$((_m$bind$10 => _m$pure$11 => {
                            var $9996 = _m$bind$10;
                            return $9996;
                        }))(Kind$Parser$ADT$Derive$stringifier$type$(_adt$2))((_type$10 => {
                            var $9997 = Maybe$monad$((_m$bind$11 => _m$pure$12 => {
                                var $9998 = _m$pure$12;
                                return $9998;
                            }))(Kind$Parser$ADT$Derived$new$(_name$8, 0n, _term$9, _type$10));
                            return $9997;
                        }));
                        return $9995;
                    }));
                    var $9992 = $9993;
                } else {
                    var self = (_deri$1 === "parser");
                    if (self) {
                        var _name$8 = ($9991 + ("." + _deri$1));
                        var $10000 = Maybe$monad$((_m$bind$9 => _m$pure$10 => {
                            var $10001 = _m$bind$9;
                            return $10001;
                        }))(Kind$Parser$ADT$Derive$parser$term$(_adt$2))((_term$9 => {
                            var $10002 = Maybe$monad$((_m$bind$10 => _m$pure$11 => {
                                var $10003 = _m$bind$10;
                                return $10003;
                            }))(Kind$Parser$ADT$Derive$parser$type$(_adt$2))((_type$10 => {
                                var $10004 = Maybe$monad$((_m$bind$11 => _m$pure$12 => {
                                    var $10005 = _m$pure$12;
                                    return $10005;
                                }))(Kind$Parser$ADT$Derived$new$(_name$8, 0n, _term$9, _type$10));
                                return $10004;
                            }));
                            return $10002;
                        }));
                        var $9999 = $10000;
                    } else {
                        var self = (_deri$1 === "serializer");
                        if (self) {
                            var _name$8 = ($9991 + ("." + _deri$1));
                            var $10007 = Maybe$monad$((_m$bind$9 => _m$pure$10 => {
                                var $10008 = _m$bind$9;
                                return $10008;
                            }))(Kind$Parser$ADT$Derive$serializer$term$(_adt$2))((_term$9 => {
                                var $10009 = Maybe$monad$((_m$bind$10 => _m$pure$11 => {
                                    var $10010 = _m$bind$10;
                                    return $10010;
                                }))(Kind$Parser$ADT$Derive$serializer$type$(_adt$2))((_type$10 => {
                                    var $10011 = Maybe$monad$((_m$bind$11 => _m$pure$12 => {
                                        var $10012 = _m$pure$12;
                                        return $10012;
                                    }))(Kind$Parser$ADT$Derived$new$(_name$8, 0n, _term$9, _type$10));
                                    return $10011;
                                }));
                                return $10009;
                            }));
                            var $10006 = $10007;
                        } else {
                            var self = (_deri$1 === "deserializer");
                            if (self) {
                                var _name$8 = ($9991 + ("." + _deri$1));
                                var $10014 = Maybe$monad$((_m$bind$9 => _m$pure$10 => {
                                    var $10015 = _m$bind$9;
                                    return $10015;
                                }))(Kind$Parser$ADT$Derive$deserializer$term$(_adt$2))((_term$9 => {
                                    var $10016 = Maybe$monad$((_m$bind$10 => _m$pure$11 => {
                                        var $10017 = _m$bind$10;
                                        return $10017;
                                    }))(Kind$Parser$ADT$Derive$deserializer$type$(_adt$2))((_type$10 => {
                                        var $10018 = Maybe$monad$((_m$bind$11 => _m$pure$12 => {
                                            var $10019 = _m$pure$12;
                                            return $10019;
                                        }))(Kind$Parser$ADT$Derived$new$(_name$8, 0n, _term$9, _type$10));
                                        return $10018;
                                    }));
                                    return $10016;
                                }));
                                var $10013 = $10014;
                            } else {
                                var $10020 = Maybe$none;
                                var $10013 = $10020;
                            };
                            var $10006 = $10013;
                        };
                        var $9999 = $10006;
                    };
                    var $9992 = $9999;
                };
                var $9990 = $9992;
                break;
        };
        return $9990;
    };
    const Kind$Parser$ADT$Derive$by_name = x0 => x1 => Kind$Parser$ADT$Derive$by_name$(x0, x1);

    function Kind$Parser$file$adt$(_file$1, _code$2, _defs$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $10022 = self.err;
                var _reply$10 = Kind$Parser$spaces(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $10024 = self.err;
                        var self = $10022;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10026 = self.value;
                                var $10027 = Parser$Reply$error$(Parser$Error$combine$($10026, $10024));
                                var $10025 = $10027;
                                break;
                            case 'Maybe.none':
                                var $10028 = Parser$Reply$error$($10024);
                                var $10025 = $10028;
                                break;
                        };
                        var $10023 = $10025;
                        break;
                    case 'Parser.Reply.value':
                        var $10029 = self.pst;
                        var self = $10029;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $10031 = self.err;
                                var $10032 = self.nam;
                                var $10033 = self.ini;
                                var $10034 = self.idx;
                                var $10035 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($10022, $10031), $10032, $10033, $10034, $10035);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $10037 = self.err;
                                        var _reply$24 = Parser$get_idx$(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $10039 = self.err;
                                                var self = $10037;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $10041 = self.value;
                                                        var $10042 = Parser$Reply$error$(Parser$Error$combine$($10041, $10039));
                                                        var $10040 = $10042;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $10043 = Parser$Reply$error$($10039);
                                                        var $10040 = $10043;
                                                        break;
                                                };
                                                var $10038 = $10040;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $10044 = self.pst;
                                                var $10045 = self.val;
                                                var self = $10044;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $10047 = self.err;
                                                        var $10048 = self.nam;
                                                        var $10049 = self.ini;
                                                        var $10050 = self.idx;
                                                        var $10051 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($10037, $10047), $10048, $10049, $10050, $10051);
                                                        var self = _reply$pst$32;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $10053 = self.err;
                                                                var _reply$38 = Kind$Parser$ADT$adt$(_reply$pst$32);
                                                                var self = _reply$38;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $10055 = self.err;
                                                                        var self = $10053;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $10057 = self.value;
                                                                                var $10058 = Parser$Reply$error$(Parser$Error$combine$($10057, $10055));
                                                                                var $10056 = $10058;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $10059 = Parser$Reply$error$($10055);
                                                                                var $10056 = $10059;
                                                                                break;
                                                                        };
                                                                        var $10054 = $10056;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $10060 = self.pst;
                                                                        var $10061 = self.val;
                                                                        var self = $10060;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $10063 = self.err;
                                                                                var $10064 = self.nam;
                                                                                var $10065 = self.ini;
                                                                                var $10066 = self.idx;
                                                                                var $10067 = self.str;
                                                                                var _reply$pst$46 = Parser$State$new$(Parser$Error$maybe_combine$($10053, $10063), $10064, $10065, $10066, $10067);
                                                                                var self = _reply$pst$46;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $10069 = self.err;
                                                                                        var _reply$52 = Parser$get_idx$(_reply$pst$46);
                                                                                        var self = _reply$52;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $10071 = self.err;
                                                                                                var self = $10069;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $10073 = self.value;
                                                                                                        var $10074 = Parser$Reply$error$(Parser$Error$combine$($10073, $10071));
                                                                                                        var $10072 = $10074;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $10075 = Parser$Reply$error$($10071);
                                                                                                        var $10072 = $10075;
                                                                                                        break;
                                                                                                };
                                                                                                var $10070 = $10072;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $10076 = self.pst;
                                                                                                var $10077 = self.val;
                                                                                                var self = $10076;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $10079 = self.err;
                                                                                                        var $10080 = self.nam;
                                                                                                        var $10081 = self.ini;
                                                                                                        var $10082 = self.idx;
                                                                                                        var $10083 = self.str;
                                                                                                        var _reply$pst$60 = Parser$State$new$(Parser$Error$maybe_combine$($10069, $10079), $10080, $10081, $10082, $10083);
                                                                                                        var _orig$61 = Pair$new$($10045, $10077);
                                                                                                        var self = $10061;
                                                                                                        switch (self._) {
                                                                                                            case 'Kind.Parser.ADT.Datatype.new':
                                                                                                                var $10085 = self.name;
                                                                                                                var $10086 = self.pars;
                                                                                                                var $10087 = self.inds;
                                                                                                                var $10088 = self.ctrs;
                                                                                                                var $10089 = self.deri;
                                                                                                                var _term$67 = Kind$Parser$ADT$Datatype$build_term$($10061);
                                                                                                                var _term$68 = Kind$Term$bind$(List$nil, (_x$68 => {
                                                                                                                    var $10091 = (_x$68 + '1');
                                                                                                                    return $10091;
                                                                                                                }), _term$67);
                                                                                                                var _type$69 = Kind$Parser$ADT$Datatype$build_type$($10061);
                                                                                                                var _type$70 = Kind$Term$bind$(List$nil, (_x$70 => {
                                                                                                                    var $10092 = (_x$70 + '0');
                                                                                                                    return $10092;
                                                                                                                }), _type$69);
                                                                                                                var _arit$71 = ((list_length($10086)) + (list_length($10087)));
                                                                                                                var _defs$72 = Kind$Map$def$(_file$1, _code$2, _orig$61, $10085, _term$68, _type$70, Bool$false, _arit$71, Bool$false, _defs$3);
                                                                                                                var _defs$73 = List$fold$($10088, _defs$72, (_ctr$73 => _defs$74 => {
                                                                                                                    var _typ_name$75 = $10085;
                                                                                                                    var _ctr_arit$76 = (_arit$71 + (list_length((() => {
                                                                                                                        var self = _ctr$73;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Kind.Parser.ADT.Constructor.new':
                                                                                                                                var $10094 = self.args;
                                                                                                                                var $10095 = $10094;
                                                                                                                                return $10095;
                                                                                                                        };
                                                                                                                    })())));
                                                                                                                    var _ctr_name$77 = String$flatten$(List$cons$(_typ_name$75, List$cons$(Kind$Name$read$("."), List$cons$((() => {
                                                                                                                        var self = _ctr$73;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Kind.Parser.ADT.Constructor.new':
                                                                                                                                var $10096 = self.name;
                                                                                                                                var $10097 = $10096;
                                                                                                                                return $10097;
                                                                                                                        };
                                                                                                                    })(), List$nil))));
                                                                                                                    var _ctr_term$78 = Kind$Parser$ADT$Constructor$build_term$($10061, _ctr$73);
                                                                                                                    var _ctr_term$79 = Kind$Term$bind$(List$nil, (_x$79 => {
                                                                                                                        var $10098 = (_x$79 + '1');
                                                                                                                        return $10098;
                                                                                                                    }), _ctr_term$78);
                                                                                                                    var _ctr_type$80 = Kind$Parser$ADT$Constructor$build_type$($10061, _ctr$73);
                                                                                                                    var _ctr_type$81 = Kind$Term$bind$(List$nil, (_x$81 => {
                                                                                                                        var $10099 = (_x$81 + '0');
                                                                                                                        return $10099;
                                                                                                                    }), _ctr_type$80);
                                                                                                                    var $10093 = Kind$Map$def$(_file$1, _code$2, _orig$61, _ctr_name$77, _ctr_term$79, _ctr_type$81, Bool$true, _ctr_arit$76, Bool$false, _defs$74);
                                                                                                                    return $10093;
                                                                                                                }));
                                                                                                                var _defs$74 = List$fold$($10089, Either$right$(_defs$73), (_deri$74 => _defs$75 => {
                                                                                                                    var self = _defs$75;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Either.left':
                                                                                                                            var $10101 = self.value;
                                                                                                                            var $10102 = Either$left$($10101);
                                                                                                                            var $10100 = $10102;
                                                                                                                            break;
                                                                                                                        case 'Either.right':
                                                                                                                            var $10103 = self.value;
                                                                                                                            var self = Kind$Parser$ADT$Derive$by_name$(_deri$74, $10061);
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $10105 = self.value;
                                                                                                                                    var self = $10105;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Kind.Parser.ADT.Derived.new':
                                                                                                                                            var $10107 = self.name;
                                                                                                                                            var $10108 = self.arit;
                                                                                                                                            var $10109 = self.term;
                                                                                                                                            var $10110 = self.type;
                                                                                                                                            var _name$82 = $10107;
                                                                                                                                            var _term$83 = $10109;
                                                                                                                                            var _term$84 = Kind$Term$bind$(List$nil, (_x$84 => {
                                                                                                                                                var $10112 = (_x$84 + '1');
                                                                                                                                                return $10112;
                                                                                                                                            }), _term$83);
                                                                                                                                            var _type$85 = $10110;
                                                                                                                                            var _type$86 = Kind$Term$bind$(List$nil, (_x$86 => {
                                                                                                                                                var $10113 = (_x$86 + '0');
                                                                                                                                                return $10113;
                                                                                                                                            }), _type$85);
                                                                                                                                            var _arit$87 = $10108;
                                                                                                                                            var $10111 = Either$right$(Kind$Map$def$(_file$1, _code$2, _orig$61, _name$82, _term$84, _type$86, Bool$false, _arit$87, Bool$false, $10103));
                                                                                                                                            var $10106 = $10111;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $10104 = $10106;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $10114 = Either$left$(("Can\'t derive \'" + (_deri$74 + ("\' for \'" + ($10085 + "\' type.")))));
                                                                                                                                    var $10104 = $10114;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $10100 = $10104;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    return $10100;
                                                                                                                }));
                                                                                                                var self = _defs$74;
                                                                                                                switch (self._) {
                                                                                                                    case 'Either.left':
                                                                                                                        var $10115 = self.value;
                                                                                                                        var $10116 = Parser$fail($10115);
                                                                                                                        var $10090 = $10116;
                                                                                                                        break;
                                                                                                                    case 'Either.right':
                                                                                                                        var $10117 = self.value;
                                                                                                                        var $10118 = (_pst$76 => {
                                                                                                                            var $10119 = Parser$Reply$value$(_pst$76, $10117);
                                                                                                                            return $10119;
                                                                                                                        });
                                                                                                                        var $10090 = $10118;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $10084 = $10090;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $10084 = $10084(_reply$pst$60);
                                                                                                        var $10078 = $10084;
                                                                                                        break;
                                                                                                };
                                                                                                var $10070 = $10078;
                                                                                                break;
                                                                                        };
                                                                                        var $10068 = $10070;
                                                                                        break;
                                                                                };
                                                                                var $10062 = $10068;
                                                                                break;
                                                                        };
                                                                        var $10054 = $10062;
                                                                        break;
                                                                };
                                                                var $10052 = $10054;
                                                                break;
                                                        };
                                                        var $10046 = $10052;
                                                        break;
                                                };
                                                var $10038 = $10046;
                                                break;
                                        };
                                        var $10036 = $10038;
                                        break;
                                };
                                var $10030 = $10036;
                                break;
                        };
                        var $10023 = $10030;
                        break;
                };
                var $10021 = $10023;
                break;
        };
        return $10021;
    };
    const Kind$Parser$file$adt = x0 => x1 => x2 => x3 => Kind$Parser$file$adt$(x0, x1, x2, x3);

    function Kind$Parser$file$end$(_file$1, _code$2, _defs$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $10121 = self.err;
                var _reply$10 = Kind$Parser$spaces(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $10123 = self.err;
                        var self = $10121;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10125 = self.value;
                                var $10126 = Parser$Reply$error$(Parser$Error$combine$($10125, $10123));
                                var $10124 = $10126;
                                break;
                            case 'Maybe.none':
                                var $10127 = Parser$Reply$error$($10123);
                                var $10124 = $10127;
                                break;
                        };
                        var $10122 = $10124;
                        break;
                    case 'Parser.Reply.value':
                        var $10128 = self.pst;
                        var self = $10128;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $10130 = self.err;
                                var $10131 = self.nam;
                                var $10132 = self.ini;
                                var $10133 = self.idx;
                                var $10134 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($10121, $10130), $10131, $10132, $10133, $10134);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $10136 = self.err;
                                        var _reply$24 = Parser$eof$(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $10138 = self.err;
                                                var self = $10136;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $10140 = self.value;
                                                        var $10141 = Parser$Reply$error$(Parser$Error$combine$($10140, $10138));
                                                        var $10139 = $10141;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $10142 = Parser$Reply$error$($10138);
                                                        var $10139 = $10142;
                                                        break;
                                                };
                                                var $10137 = $10139;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $10143 = self.pst;
                                                var self = $10143;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $10145 = self.err;
                                                        var $10146 = self.nam;
                                                        var $10147 = self.ini;
                                                        var $10148 = self.idx;
                                                        var $10149 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($10136, $10145), $10146, $10147, $10148, $10149);
                                                        var $10150 = Parser$Reply$value$(_reply$pst$32, _defs$3);
                                                        var $10144 = $10150;
                                                        break;
                                                };
                                                var $10137 = $10144;
                                                break;
                                        };
                                        var $10135 = $10137;
                                        break;
                                };
                                var $10129 = $10135;
                                break;
                        };
                        var $10122 = $10129;
                        break;
                };
                var $10120 = $10122;
                break;
        };
        return $10120;
    };
    const Kind$Parser$file$end = x0 => x1 => x2 => x3 => Kind$Parser$file$end$(x0, x1, x2, x3);

    function Kind$Parser$file$(_file$1, _code$2, _defs$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $10152 = self.err;
                var _reply$10 = Parser$is_eof$(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $10154 = self.err;
                        var self = $10152;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10156 = self.value;
                                var $10157 = Parser$Reply$error$(Parser$Error$combine$($10156, $10154));
                                var $10155 = $10157;
                                break;
                            case 'Maybe.none':
                                var $10158 = Parser$Reply$error$($10154);
                                var $10155 = $10158;
                                break;
                        };
                        var $10153 = $10155;
                        break;
                    case 'Parser.Reply.value':
                        var $10159 = self.pst;
                        var $10160 = self.val;
                        var self = $10159;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $10162 = self.err;
                                var $10163 = self.nam;
                                var $10164 = self.ini;
                                var $10165 = self.idx;
                                var $10166 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($10152, $10162), $10163, $10164, $10165, $10166);
                                var self = $10160;
                                if (self) {
                                    var $10168 = (_pst$19 => {
                                        var $10169 = Parser$Reply$value$(_pst$19, _defs$3);
                                        return $10169;
                                    });
                                    var $10167 = $10168;
                                } else {
                                    var $10170 = (_pst$19 => {
                                        var self = _pst$19;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $10172 = self.err;
                                                var _reply$25 = Parser$choice$(List$cons$(Kind$Parser$file$def(_file$1)(_code$2)(_defs$3), List$cons$(Kind$Parser$file$adt(_file$1)(_code$2)(_defs$3), List$cons$(Kind$Parser$file$end(_file$1)(_code$2)(_defs$3), List$cons$(Parser$fail("Expected a top-level definition or a type declaration."), List$nil)))), _pst$19);
                                                var self = _reply$25;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $10174 = self.err;
                                                        var self = $10172;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $10176 = self.value;
                                                                var $10177 = Parser$Reply$error$(Parser$Error$combine$($10176, $10174));
                                                                var $10175 = $10177;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $10178 = Parser$Reply$error$($10174);
                                                                var $10175 = $10178;
                                                                break;
                                                        };
                                                        var $10173 = $10175;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $10179 = self.pst;
                                                        var $10180 = self.val;
                                                        var self = $10179;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $10182 = self.err;
                                                                var $10183 = self.nam;
                                                                var $10184 = self.ini;
                                                                var $10185 = self.idx;
                                                                var $10186 = self.str;
                                                                var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($10172, $10182), $10183, $10184, $10185, $10186);
                                                                var self = _reply$pst$33;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $10188 = self.err;
                                                                        var _reply$39 = Kind$Parser$file$(_file$1, _code$2, $10180, _reply$pst$33);
                                                                        var self = _reply$39;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $10190 = self.err;
                                                                                var self = $10188;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $10192 = self.value;
                                                                                        var $10193 = Parser$Reply$error$(Parser$Error$combine$($10192, $10190));
                                                                                        var $10191 = $10193;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $10194 = Parser$Reply$error$($10190);
                                                                                        var $10191 = $10194;
                                                                                        break;
                                                                                };
                                                                                var $10189 = $10191;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $10195 = self.pst;
                                                                                var $10196 = self.val;
                                                                                var self = $10195;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $10198 = self.err;
                                                                                        var $10199 = self.nam;
                                                                                        var $10200 = self.ini;
                                                                                        var $10201 = self.idx;
                                                                                        var $10202 = self.str;
                                                                                        var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($10188, $10198), $10199, $10200, $10201, $10202);
                                                                                        var $10203 = Parser$Reply$value$(_reply$pst$47, $10196);
                                                                                        var $10197 = $10203;
                                                                                        break;
                                                                                };
                                                                                var $10189 = $10197;
                                                                                break;
                                                                        };
                                                                        var $10187 = $10189;
                                                                        break;
                                                                };
                                                                var $10181 = $10187;
                                                                break;
                                                        };
                                                        var $10173 = $10181;
                                                        break;
                                                };
                                                var $10171 = $10173;
                                                break;
                                        };
                                        return $10171;
                                    });
                                    var $10167 = $10170;
                                };
                                var $10167 = $10167(_reply$pst$18);
                                var $10161 = $10167;
                                break;
                        };
                        var $10153 = $10161;
                        break;
                };
                var $10151 = $10153;
                break;
        };
        return $10151;
    };
    const Kind$Parser$file = x0 => x1 => x2 => x3 => Kind$Parser$file$(x0, x1, x2, x3);

    function String$join$go$(_sep$1, _list$2, _fst$3) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $10205 = self.head;
                var $10206 = self.tail;
                var $10207 = String$flatten$(List$cons$((() => {
                    var self = _fst$3;
                    if (self) {
                        var $10208 = "";
                        return $10208;
                    } else {
                        var $10209 = _sep$1;
                        return $10209;
                    };
                })(), List$cons$($10205, List$cons$(String$join$go$(_sep$1, $10206, Bool$false), List$nil))));
                var $10204 = $10207;
                break;
            case 'List.nil':
                var $10210 = "";
                var $10204 = $10210;
                break;
        };
        return $10204;
    };
    const String$join$go = x0 => x1 => x2 => String$join$go$(x0, x1, x2);

    function String$join$(_sep$1, _list$2) {
        var $10211 = String$join$go$(_sep$1, _list$2, Bool$true);
        return $10211;
    };
    const String$join = x0 => x1 => String$join$(x0, x1);

    function Kind$Code$highlight$end$(_col$1, _row$2, _res$3) {
        var $10212 = String$join$("\u{a}", _res$3);
        return $10212;
    };
    const Kind$Code$highlight$end = x0 => x1 => x2 => Kind$Code$highlight$end$(x0, x1, x2);

    function Maybe$extract$(_m$2, _a$4, _f$5) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $10214 = self.value;
                var $10215 = _f$5($10214);
                var $10213 = $10215;
                break;
            case 'Maybe.none':
                var $10216 = _a$4;
                var $10213 = $10216;
                break;
        };
        return $10213;
    };
    const Maybe$extract = x0 => x1 => x2 => Maybe$extract$(x0, x1, x2);

    function Nat$is_zero$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $10218 = Bool$true;
            var $10217 = $10218;
        } else {
            var $10219 = (self - 1n);
            var $10220 = Bool$false;
            var $10217 = $10220;
        };
        return $10217;
    };
    const Nat$is_zero = x0 => Nat$is_zero$(x0);

    function Nat$double$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $10222 = Nat$zero;
            var $10221 = $10222;
        } else {
            var $10223 = (self - 1n);
            var $10224 = Nat$succ$(Nat$succ$(Nat$double$($10223)));
            var $10221 = $10224;
        };
        return $10221;
    };
    const Nat$double = x0 => Nat$double$(x0);

    function String$pad_right$(_size$1, _chr$2, _str$3) {
        var self = _size$1;
        if (self === 0n) {
            var $10226 = _str$3;
            var $10225 = $10226;
        } else {
            var $10227 = (self - 1n);
            var self = _str$3;
            if (self.length === 0) {
                var $10229 = String$cons$(_chr$2, String$pad_right$($10227, _chr$2, ""));
                var $10228 = $10229;
            } else {
                var $10230 = self.charCodeAt(0);
                var $10231 = self.slice(1);
                var $10232 = String$cons$($10230, String$pad_right$($10227, _chr$2, $10231));
                var $10228 = $10232;
            };
            var $10225 = $10228;
        };
        return $10225;
    };
    const String$pad_right = x0 => x1 => x2 => String$pad_right$(x0, x1, x2);

    function String$pad_left$(_size$1, _chr$2, _str$3) {
        var $10233 = String$reverse$(String$pad_right$(_size$1, _chr$2, String$reverse$(_str$3)));
        return $10233;
    };
    const String$pad_left = x0 => x1 => x2 => String$pad_left$(x0, x1, x2);

    function Kind$Code$color$(_col$1, _str$2) {
        var $10234 = String$cons$(27, ("[" + (_col$1 + ("m" + (_str$2 + String$cons$(27, "[0m"))))));
        return $10234;
    };
    const Kind$Code$color = x0 => x1 => Kind$Code$color$(x0, x1);

    function List$take$(_n$2, _xs$3) {
        var self = _xs$3;
        switch (self._) {
            case 'List.cons':
                var $10236 = self.head;
                var $10237 = self.tail;
                var self = _n$2;
                if (self === 0n) {
                    var $10239 = List$nil;
                    var $10238 = $10239;
                } else {
                    var $10240 = (self - 1n);
                    var $10241 = List$cons$($10236, List$take$($10240, $10237));
                    var $10238 = $10241;
                };
                var $10235 = $10238;
                break;
            case 'List.nil':
                var $10242 = List$nil;
                var $10235 = $10242;
                break;
        };
        return $10235;
    };
    const List$take = x0 => x1 => List$take$(x0, x1);

    function Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) {
        var Kind$Code$highlight$go$ = (_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) => ({
            ctr: 'TCO',
            arg: [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9]
        });
        var Kind$Code$highlight$go = _code$1 => _ixi$2 => _ix0$3 => _ix1$4 => _col$5 => _row$6 => _lft$7 => _lin$8 => _res$9 => Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9);
        var arg = [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9];
        while (true) {
            let [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9] = arg;
            var R = (() => {
                var _spa$10 = 3n;
                var self = _code$1;
                if (self.length === 0) {
                    var $10244 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                    var $10243 = $10244;
                } else {
                    var $10245 = self.charCodeAt(0);
                    var $10246 = self.slice(1);
                    var self = ($10245 === 10);
                    if (self) {
                        var _stp$13 = Maybe$extract$(_lft$7, Bool$false, Nat$is_zero);
                        var self = _stp$13;
                        if (self) {
                            var $10249 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                            var $10248 = $10249;
                        } else {
                            var _siz$14 = Nat$succ$(Nat$double$(_spa$10));
                            var self = _ix1$4;
                            if (self === 0n) {
                                var self = _lft$7;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $10252 = self.value;
                                        var $10253 = Maybe$some$(Nat$pred$($10252));
                                        var $10251 = $10253;
                                        break;
                                    case 'Maybe.none':
                                        var $10254 = Maybe$some$(_spa$10);
                                        var $10251 = $10254;
                                        break;
                                };
                                var _lft$15 = $10251;
                            } else {
                                var $10255 = (self - 1n);
                                var $10256 = _lft$7;
                                var _lft$15 = $10256;
                            };
                            var _ixi$16 = Nat$pred$(_ixi$2);
                            var _ix0$17 = Nat$pred$(_ix0$3);
                            var _ix1$18 = Nat$pred$(_ix1$4);
                            var _col$19 = 0n;
                            var _row$20 = Nat$succ$(_row$6);
                            var _res$21 = List$cons$(String$reverse$(_lin$8), _res$9);
                            var _lin$22 = String$reverse$(String$flatten$(List$cons$(String$pad_left$(4n, 32, Nat$show$(_row$20)), List$cons$(" | ", List$nil))));
                            var $10250 = Kind$Code$highlight$go$($10246, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$20, _lft$15, _lin$22, _res$21);
                            var $10248 = $10250;
                        };
                        var $10247 = $10248;
                    } else {
                        var _chr$13 = String$cons$($10245, String$nil);
                        var self = (Nat$is_zero$(_ix0$3) && (!Nat$is_zero$(_ix1$4)));
                        if (self) {
                            var $10258 = String$reverse$(Kind$Code$color$("41", Kind$Code$color$("37", _chr$13)));
                            var _chr$14 = $10258;
                        } else {
                            var self = (Nat$is_zero$(_ixi$2) && (!Nat$is_zero$(_ix1$4)));
                            if (self) {
                                var $10260 = String$reverse$(Kind$Code$color$("31", Kind$Code$color$("4", _chr$13)));
                                var $10259 = $10260;
                            } else {
                                var $10261 = _chr$13;
                                var $10259 = $10261;
                            };
                            var _chr$14 = $10259;
                        };
                        var self = (_ix0$3 === 1n);
                        if (self) {
                            var $10262 = List$take$(_spa$10, _res$9);
                            var _res$15 = $10262;
                        } else {
                            var $10263 = _res$9;
                            var _res$15 = $10263;
                        };
                        var _ixi$16 = Nat$pred$(_ixi$2);
                        var _ix0$17 = Nat$pred$(_ix0$3);
                        var _ix1$18 = Nat$pred$(_ix1$4);
                        var _col$19 = Nat$succ$(_col$5);
                        var _lin$20 = String$flatten$(List$cons$(_chr$14, List$cons$(_lin$8, List$nil)));
                        var $10257 = Kind$Code$highlight$go$($10246, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$6, _lft$7, _lin$20, _res$15);
                        var $10247 = $10257;
                    };
                    var $10243 = $10247;
                };
                return $10243;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Code$highlight$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Code$highlight$go$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Code$highlight$(_code$1, _init$2, _idx0$3, _idx1$4) {
        var $10264 = Kind$Code$highlight$go$((_code$1 + " \u{a}"), _init$2, _idx0$3, _idx1$4, 0n, 1n, Maybe$none, String$reverse$("   1 | "), List$nil);
        return $10264;
    };
    const Kind$Code$highlight = x0 => x1 => x2 => x3 => Kind$Code$highlight$(x0, x1, x2, x3);

    function Kind$Defs$read$(_file$1, _code$2, _defs$3) {
        var self = Kind$Parser$file$(_file$1, _code$2, _defs$3, Parser$State$new$(Maybe$none, "", 0n, 0n, _code$2));
        switch (self._) {
            case 'Parser.Reply.error':
                var $10266 = self.err;
                var self = $10266;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $10268 = self.nam;
                        var $10269 = self.ini;
                        var $10270 = self.idx;
                        var $10271 = self.msg;
                        var _err$9 = ($10271 + (() => {
                            var self = $10268;
                            if (self.length === 0) {
                                var $10273 = "";
                                return $10273;
                            } else {
                                var $10274 = self.charCodeAt(0);
                                var $10275 = self.slice(1);
                                var $10276 = (" Inside " + ($10268 + ":"));
                                return $10276;
                            };
                        })());
                        var _hig$10 = Kind$Code$highlight$(_code$2, $10269, $10270, Nat$succ$($10270));
                        var _str$11 = String$flatten$(List$cons$(_err$9, List$cons$("\u{a}", List$cons$(_hig$10, List$nil))));
                        var $10272 = Either$left$(_str$11);
                        var $10267 = $10272;
                        break;
                };
                var $10265 = $10267;
                break;
            case 'Parser.Reply.value':
                var $10277 = self.val;
                var $10278 = Either$right$($10277);
                var $10265 = $10278;
                break;
        };
        return $10265;
    };
    const Kind$Defs$read = x0 => x1 => x2 => Kind$Defs$read$(x0, x1, x2);

    function Kind$Synth$load$go$(_name$1, _files$2, _defs$3) {
        var self = _files$2;
        switch (self._) {
            case 'List.cons':
                var $10280 = self.head;
                var $10281 = self.tail;
                var $10282 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                    var $10283 = _m$bind$6;
                    return $10283;
                }))(Kind$Synth$get_kind_code$($10280))((_code$6 => {
                    var _read$7 = Kind$Defs$read$($10280, _code$6, _defs$3);
                    var self = _read$7;
                    switch (self._) {
                        case 'Either.right':
                            var $10285 = self.value;
                            var _defs$9 = $10285;
                            var self = Kind$Map$get$(_name$1, _defs$9);
                            switch (self._) {
                                case 'Maybe.none':
                                    var $10287 = Kind$Synth$load$go$(_name$1, $10281, _defs$9);
                                    var $10286 = $10287;
                                    break;
                                case 'Maybe.some':
                                    var $10288 = IO$monad$((_m$bind$11 => _m$pure$12 => {
                                        var $10289 = _m$pure$12;
                                        return $10289;
                                    }))(Maybe$some$(_defs$9));
                                    var $10286 = $10288;
                                    break;
                            };
                            var $10284 = $10286;
                            break;
                        case 'Either.left':
                            var $10290 = Kind$Synth$load$go$(_name$1, $10281, _defs$3);
                            var $10284 = $10290;
                            break;
                    };
                    return $10284;
                }));
                var $10279 = $10282;
                break;
            case 'List.nil':
                var $10291 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                    var $10292 = _m$pure$5;
                    return $10292;
                }))(Maybe$none);
                var $10279 = $10291;
                break;
        };
        return $10279;
    };
    const Kind$Synth$load$go = x0 => x1 => x2 => Kind$Synth$load$go$(x0, x1, x2);

    function Kind$Synth$files_of$make$(_names$1, _last$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.cons':
                var $10294 = self.head;
                var $10295 = self.tail;
                var _head$5 = (_last$2 + ($10294 + ".kind"));
                var _tail$6 = Kind$Synth$files_of$make$($10295, (_last$2 + ($10294 + "/")));
                var $10296 = List$cons$(_head$5, _tail$6);
                var $10293 = $10296;
                break;
            case 'List.nil':
                var $10297 = List$nil;
                var $10293 = $10297;
                break;
        };
        return $10293;
    };
    const Kind$Synth$files_of$make = x0 => x1 => Kind$Synth$files_of$make$(x0, x1);

    function String$length$go$(_xs$1, _n$2) {
        var String$length$go$ = (_xs$1, _n$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _n$2]
        });
        var String$length$go = _xs$1 => _n$2 => String$length$go$(_xs$1, _n$2);
        var arg = [_xs$1, _n$2];
        while (true) {
            let [_xs$1, _n$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $10298 = _n$2;
                    return $10298;
                } else {
                    var $10299 = self.charCodeAt(0);
                    var $10300 = self.slice(1);
                    var $10301 = String$length$go$($10300, Nat$succ$(_n$2));
                    return $10301;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$length$go = x0 => x1 => String$length$go$(x0, x1);

    function String$length$(_xs$1) {
        var $10302 = String$length$go$(_xs$1, 0n);
        return $10302;
    };
    const String$length = x0 => String$length$(x0);

    function String$split$go$(_xs$1, _match$2, _last$3) {
        var self = _xs$1;
        if (self.length === 0) {
            var $10304 = List$cons$(_last$3, List$nil);
            var $10303 = $10304;
        } else {
            var $10305 = self.charCodeAt(0);
            var $10306 = self.slice(1);
            var self = String$starts_with$(_xs$1, _match$2);
            if (self) {
                var _rest$6 = String$drop$(String$length$(_match$2), _xs$1);
                var $10308 = List$cons$(_last$3, String$split$go$(_rest$6, _match$2, ""));
                var $10307 = $10308;
            } else {
                var _next$6 = String$cons$($10305, String$nil);
                var $10309 = String$split$go$($10306, _match$2, (_last$3 + _next$6));
                var $10307 = $10309;
            };
            var $10303 = $10307;
        };
        return $10303;
    };
    const String$split$go = x0 => x1 => x2 => String$split$go$(x0, x1, x2);

    function String$split$(_xs$1, _match$2) {
        var $10310 = String$split$go$(_xs$1, _match$2, "");
        return $10310;
    };
    const String$split = x0 => x1 => String$split$(x0, x1);

    function Kind$Synth$files_of$(_name$1) {
        var $10311 = List$reverse$(Kind$Synth$files_of$make$(String$split$(_name$1, "."), ""));
        return $10311;
    };
    const Kind$Synth$files_of = x0 => Kind$Synth$files_of$(x0);

    function Kind$Synth$load$(_name$1, _defs$2) {
        var $10312 = IO$monad$((_m$bind$3 => _m$pure$4 => {
            var $10313 = _m$bind$3;
            return $10313;
        }))(Kind$Synth$load$cached$(List$cons$(_name$1, List$nil), _defs$2))((_cached_defs$3 => {
            var self = _cached_defs$3;
            switch (self._) {
                case 'Maybe.some':
                    var $10315 = self.value;
                    var $10316 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                        var $10317 = _m$pure$6;
                        return $10317;
                    }))(Maybe$some$($10315));
                    var $10314 = $10316;
                    break;
                case 'Maybe.none':
                    var $10318 = Kind$Synth$load$go$(_name$1, Kind$Synth$files_of$(_name$1), _defs$2);
                    var $10314 = $10318;
                    break;
            };
            return $10314;
        }));
        return $10312;
    };
    const Kind$Synth$load = x0 => x1 => Kind$Synth$load$(x0, x1);
    const Kind$Status$wait = ({
        _: 'Kind.Status.wait'
    });

    function Kind$Check$(_V$1) {
        var $10319 = null;
        return $10319;
    };
    const Kind$Check = x0 => Kind$Check$(x0);

    function Kind$Check$result$(_value$2, _errors$3) {
        var $10320 = ({
            _: 'Kind.Check.result',
            'value': _value$2,
            'errors': _errors$3
        });
        return $10320;
    };
    const Kind$Check$result = x0 => x1 => Kind$Check$result$(x0, x1);

    function Kind$Error$undefined_reference$(_origin$1, _name$2) {
        var $10321 = ({
            _: 'Kind.Error.undefined_reference',
            'origin': _origin$1,
            'name': _name$2
        });
        return $10321;
    };
    const Kind$Error$undefined_reference = x0 => x1 => Kind$Error$undefined_reference$(x0, x1);

    function Kind$Error$waiting$(_name$1) {
        var $10322 = ({
            _: 'Kind.Error.waiting',
            'name': _name$1
        });
        return $10322;
    };
    const Kind$Error$waiting = x0 => Kind$Error$waiting$(x0);

    function Kind$Error$indirect$(_name$1) {
        var $10323 = ({
            _: 'Kind.Error.indirect',
            'name': _name$1
        });
        return $10323;
    };
    const Kind$Error$indirect = x0 => Kind$Error$indirect$(x0);

    function Maybe$mapped$(_m$2, _f$4) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $10325 = self.value;
                var $10326 = Maybe$some$(_f$4($10325));
                var $10324 = $10326;
                break;
            case 'Maybe.none':
                var $10327 = Maybe$none;
                var $10324 = $10327;
                break;
        };
        return $10324;
    };
    const Maybe$mapped = x0 => x1 => Maybe$mapped$(x0, x1);

    function Kind$MPath$o$(_path$1) {
        var $10328 = Maybe$mapped$(_path$1, Kind$Path$o);
        return $10328;
    };
    const Kind$MPath$o = x0 => Kind$MPath$o$(x0);

    function Kind$MPath$i$(_path$1) {
        var $10329 = Maybe$mapped$(_path$1, Kind$Path$i);
        return $10329;
    };
    const Kind$MPath$i = x0 => Kind$MPath$i$(x0);

    function Kind$Error$patch$(_path$1, _term$2) {
        var $10330 = ({
            _: 'Kind.Error.patch',
            'path': _path$1,
            'term': _term$2
        });
        return $10330;
    };
    const Kind$Error$patch = x0 => x1 => Kind$Error$patch$(x0, x1);

    function Kind$MPath$to_bits$(_path$1) {
        var self = _path$1;
        switch (self._) {
            case 'Maybe.some':
                var $10332 = self.value;
                var $10333 = $10332(Bits$e);
                var $10331 = $10333;
                break;
            case 'Maybe.none':
                var $10334 = Bits$e;
                var $10331 = $10334;
                break;
        };
        return $10331;
    };
    const Kind$MPath$to_bits = x0 => Kind$MPath$to_bits$(x0);

    function Kind$Term$check$patch$(_term$1, _type$2, _path$3) {
        var $10335 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$patch$(Kind$MPath$to_bits$(_path$3), _term$1), List$nil));
        return $10335;
    };
    const Kind$Term$check$patch = x0 => x1 => x2 => Kind$Term$check$patch$(x0, x1, x2);

    function Kind$Error$type_mismatch$(_origin$1, _expected$2, _detected$3, _context$4) {
        var $10336 = ({
            _: 'Kind.Error.type_mismatch',
            'origin': _origin$1,
            'expected': _expected$2,
            'detected': _detected$3,
            'context': _context$4
        });
        return $10336;
    };
    const Kind$Error$type_mismatch = x0 => x1 => x2 => x3 => Kind$Error$type_mismatch$(x0, x1, x2, x3);

    function Kind$Error$show_goal$(_name$1, _dref$2, _verb$3, _goal$4, _context$5) {
        var $10337 = ({
            _: 'Kind.Error.show_goal',
            'name': _name$1,
            'dref': _dref$2,
            'verb': _verb$3,
            'goal': _goal$4,
            'context': _context$5
        });
        return $10337;
    };
    const Kind$Error$show_goal = x0 => x1 => x2 => x3 => x4 => Kind$Error$show_goal$(x0, x1, x2, x3, x4);

    function Kind$Path$nil$(_x$1) {
        var $10338 = _x$1;
        return $10338;
    };
    const Kind$Path$nil = x0 => Kind$Path$nil$(x0);
    const Kind$MPath$nil = Maybe$some$(Kind$Path$nil);

    function Kind$Term$check$direct$(_term$1, _defs$2) {
        var self = Kind$Term$check$(_term$1, Maybe$none, _defs$2, List$nil, Kind$MPath$nil, Maybe$none);
        switch (self._) {
            case 'Kind.Check.result':
                var $10340 = self.value;
                var $10341 = self.errors;
                var self = $10340;
                switch (self._) {
                    case 'Maybe.none':
                        var $10343 = Kind$Check$result$(Maybe$none, $10341);
                        var $10342 = $10343;
                        break;
                    case 'Maybe.some':
                        var self = Kind$Check$result$(Maybe$some$(_term$1), List$nil);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $10345 = self.value;
                                var $10346 = self.errors;
                                var $10347 = Kind$Check$result$($10345, List$concat$($10341, $10346));
                                var $10344 = $10347;
                                break;
                        };
                        var $10342 = $10344;
                        break;
                };
                var $10339 = $10342;
                break;
        };
        return $10339;
    };
    const Kind$Term$check$direct = x0 => x1 => Kind$Term$check$direct$(x0, x1);

    function Kind$Term$check$get_name_of_self_type$slice$(_self$1) {
        var _len$2 = String$length$(_self$1);
        var _ini$3 = String$slice$(0n, (_len$2 - 5n <= 0n ? 0n : _len$2 - 5n), _self$1);
        var _end$4 = String$slice$((_len$2 - 5n <= 0n ? 0n : _len$2 - 5n), _len$2, _self$1);
        var self = (_end$4 === ".Self");
        if (self) {
            var $10349 = Maybe$some$(_ini$3);
            var $10348 = $10349;
        } else {
            var $10350 = Maybe$none;
            var $10348 = $10350;
        };
        return $10348;
    };
    const Kind$Term$check$get_name_of_self_type$slice = x0 => Kind$Term$check$get_name_of_self_type$slice$(x0);

    function Kind$Term$check$get_name_of_self_type$(_type$1, _defs$2) {
        var self = Kind$Term$reduce$(_type$1, Kind$Map$new);
        switch (self._) {
            case 'Kind.Term.ref':
                var $10352 = self.name;
                var $10353 = Maybe$some$($10352);
                var $10351 = $10353;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.get':
            case 'Kind.Term.ori':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10355 = self.name;
                        var $10356 = Maybe$some$($10355);
                        var $10354 = $10356;
                        break;
                    case 'Kind.Term.all':
                        var $10357 = self.self;
                        var $10358 = Kind$Term$check$get_name_of_self_type$slice$($10357);
                        var $10354 = $10358;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10359 = Maybe$none;
                        var $10354 = $10359;
                        break;
                };
                var $10351 = $10354;
                break;
            case 'Kind.Term.typ':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10361 = self.name;
                        var $10362 = Maybe$some$($10361);
                        var $10360 = $10362;
                        break;
                    case 'Kind.Term.all':
                        var $10363 = self.self;
                        var $10364 = Kind$Term$check$get_name_of_self_type$slice$($10363);
                        var $10360 = $10364;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10365 = Maybe$none;
                        var $10360 = $10365;
                        break;
                };
                var $10351 = $10360;
                break;
            case 'Kind.Term.all':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10367 = self.name;
                        var $10368 = Maybe$some$($10367);
                        var $10366 = $10368;
                        break;
                    case 'Kind.Term.all':
                        var $10369 = self.self;
                        var $10370 = Kind$Term$check$get_name_of_self_type$slice$($10369);
                        var $10366 = $10370;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10371 = Maybe$none;
                        var $10366 = $10371;
                        break;
                };
                var $10351 = $10366;
                break;
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.num':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10373 = self.name;
                        var $10374 = Maybe$some$($10373);
                        var $10372 = $10374;
                        break;
                    case 'Kind.Term.all':
                        var $10375 = self.self;
                        var $10376 = Kind$Term$check$get_name_of_self_type$slice$($10375);
                        var $10372 = $10376;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10377 = Maybe$none;
                        var $10372 = $10377;
                        break;
                };
                var $10351 = $10372;
                break;
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.new':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10379 = self.name;
                        var $10380 = Maybe$some$($10379);
                        var $10378 = $10380;
                        break;
                    case 'Kind.Term.all':
                        var $10381 = self.self;
                        var $10382 = Kind$Term$check$get_name_of_self_type$slice$($10381);
                        var $10378 = $10382;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10383 = Maybe$none;
                        var $10378 = $10383;
                        break;
                };
                var $10351 = $10378;
                break;
            case 'Kind.Term.cse':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10385 = self.name;
                        var $10386 = Maybe$some$($10385);
                        var $10384 = $10386;
                        break;
                    case 'Kind.Term.all':
                        var $10387 = self.self;
                        var $10388 = Kind$Term$check$get_name_of_self_type$slice$($10387);
                        var $10384 = $10388;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10389 = Maybe$none;
                        var $10384 = $10389;
                        break;
                };
                var $10351 = $10384;
                break;
        };
        return $10351;
    };
    const Kind$Term$check$get_name_of_self_type = x0 => x1 => Kind$Term$check$get_name_of_self_type$(x0, x1);

    function Kind$Term$check$expand$num$nat$(_numb$1) {
        var $10390 = Kind$Term$nat$(_numb$1);
        return $10390;
    };
    const Kind$Term$check$expand$num$nat = x0 => Kind$Term$check$expand$num$nat$(x0);

    function Kind$Term$check$expand$num$int$(_sign$1, _numb$2) {
        var _term$3 = Kind$Term$nat$(_numb$2);
        var _term$4 = Kind$Term$app$(Kind$Term$ref$("Int.from_nat"), _term$3);
        var self = _sign$1;
        switch (self._) {
            case 'Maybe.some':
                var $10392 = self.value;
                var self = $10392;
                if (self) {
                    var $10394 = _term$4;
                    var $10393 = $10394;
                } else {
                    var $10395 = Kind$Term$app$(Kind$Term$ref$("Int.neg"), _term$4);
                    var $10393 = $10395;
                };
                var _term$5 = $10393;
                break;
            case 'Maybe.none':
                var $10396 = _term$4;
                var _term$5 = $10396;
                break;
        };
        var $10391 = _term$5;
        return $10391;
    };
    const Kind$Term$check$expand$num$int = x0 => x1 => Kind$Term$check$expand$num$int$(x0, x1);

    function Kind$Term$check$expand$num$other$(_name$1, _sign$2, _numb$3, _frac$4) {
        var self = _sign$2;
        switch (self._) {
            case 'Maybe.some':
                var $10398 = self.value;
                var self = $10398;
                if (self) {
                    var $10400 = "+";
                    var $10399 = $10400;
                } else {
                    var $10401 = "-";
                    var $10399 = $10401;
                };
                var _text$5 = $10399;
                break;
            case 'Maybe.none':
                var $10402 = "";
                var _text$5 = $10402;
                break;
        };
        var _text$6 = (_text$5 + Nat$show$(_numb$3));
        var _text$7 = (_text$6 + (() => {
            var self = _frac$4;
            switch (self._) {
                case 'Maybe.some':
                    var $10403 = self.value;
                    var $10404 = ("." + Nat$show$($10403));
                    return $10404;
                case 'Maybe.none':
                    var $10405 = "";
                    return $10405;
            };
        })());
        var $10397 = Kind$Term$app$(Kind$Term$ref$((_name$1 + ".read")), Kind$Term$str$(_text$7));
        return $10397;
    };
    const Kind$Term$check$expand$num$other = x0 => x1 => x2 => x3 => Kind$Term$check$expand$num$other$(x0, x1, x2, x3);

    function Kind$Term$check$expand$num$(_sign$1, _numb$2, _frac$3, _type$4, _defs$5) {
        var self = _type$4;
        switch (self._) {
            case 'Maybe.some':
                var $10407 = self.value;
                var self = Kind$Term$check$get_name_of_self_type$($10407, _defs$5);
                switch (self._) {
                    case 'Maybe.some':
                        var $10409 = self.value;
                        var self = ($10409 === "Nat");
                        if (self) {
                            var $10411 = Maybe$some$(Kind$Term$check$expand$num$nat$(_numb$2));
                            var $10410 = $10411;
                        } else {
                            var self = ($10409 === "Int");
                            if (self) {
                                var $10413 = Maybe$some$(Kind$Term$check$expand$num$int$(_sign$1, _numb$2));
                                var $10412 = $10413;
                            } else {
                                var $10414 = Maybe$some$(Kind$Term$check$expand$num$other$($10409, _sign$1, _numb$2, _frac$3));
                                var $10412 = $10414;
                            };
                            var $10410 = $10412;
                        };
                        var $10408 = $10410;
                        break;
                    case 'Maybe.none':
                        var $10415 = Maybe$none;
                        var $10408 = $10415;
                        break;
                };
                var _got$6 = $10408;
                break;
            case 'Maybe.none':
                var $10416 = Maybe$none;
                var _got$6 = $10416;
                break;
        };
        var self = _got$6;
        switch (self._) {
            case 'Maybe.some':
                var $10417 = self.value;
                var $10418 = $10417;
                var $10406 = $10418;
                break;
            case 'Maybe.none':
                var self = _frac$3;
                switch (self._) {
                    case 'Maybe.none':
                        var self = _sign$1;
                        switch (self._) {
                            case 'Maybe.none':
                                var $10421 = Kind$Term$check$expand$num$nat$(_numb$2);
                                var $10420 = $10421;
                                break;
                            case 'Maybe.some':
                                var $10422 = Kind$Term$check$expand$num$int$(_sign$1, _numb$2);
                                var $10420 = $10422;
                                break;
                        };
                        var $10419 = $10420;
                        break;
                    case 'Maybe.some':
                        var $10423 = Kind$Term$check$expand$num$other$("F64", _sign$1, _numb$2, _frac$3);
                        var $10419 = $10423;
                        break;
                };
                var $10406 = $10419;
                break;
        };
        return $10406;
    };
    const Kind$Term$check$expand$num = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$expand$num$(x0, x1, x2, x3, x4);

    function Kind$Term$check$infer_types_of_with$(_vars$1, _defs$2, _ctx$3, _path$4, _orig$5) {
        var self = _vars$1;
        switch (self._) {
            case 'List.cons':
                var $10425 = self.head;
                var $10426 = self.tail;
                var self = $10425;
                switch (self._) {
                    case 'Kind.Ann.new':
                        var $10428 = self.name;
                        var $10429 = self.term;
                        var $10430 = self.type;
                        var self = $10430;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10432 = self.value;
                                var $10433 = Kind$Check$result$(Maybe$some$(Maybe$some$($10432)), List$nil);
                                var self = $10433;
                                break;
                            case 'Maybe.none':
                                var self = Kind$Term$check$($10429, Maybe$none, _defs$2, _ctx$3, _path$4, _orig$5);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $10435 = self.value;
                                        var $10436 = self.errors;
                                        var self = $10435;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $10438 = self.value;
                                                var self = Kind$Check$result$(Maybe$some$(Maybe$some$($10438)), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $10440 = self.value;
                                                        var $10441 = self.errors;
                                                        var $10442 = Kind$Check$result$($10440, List$concat$($10436, $10441));
                                                        var $10439 = $10442;
                                                        break;
                                                };
                                                var $10437 = $10439;
                                                break;
                                            case 'Maybe.none':
                                                var $10443 = Kind$Check$result$(Maybe$none, $10436);
                                                var $10437 = $10443;
                                                break;
                                        };
                                        var $10434 = $10437;
                                        break;
                                };
                                var self = $10434;
                                break;
                        };
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $10444 = self.value;
                                var $10445 = self.errors;
                                var self = $10444;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $10447 = self.value;
                                        var self = Kind$Term$check$infer_types_of_with$($10426, _defs$2, _ctx$3, _path$4, _orig$5);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $10449 = self.value;
                                                var $10450 = self.errors;
                                                var self = $10449;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $10452 = self.value;
                                                        var self = Kind$Check$result$(Maybe$some$(List$cons$(Kind$Ann$new$($10428, $10429, $10447), $10452)), List$nil);
                                                        switch (self._) {
                                                            case 'Kind.Check.result':
                                                                var $10454 = self.value;
                                                                var $10455 = self.errors;
                                                                var $10456 = Kind$Check$result$($10454, List$concat$($10450, $10455));
                                                                var $10453 = $10456;
                                                                break;
                                                        };
                                                        var $10451 = $10453;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $10457 = Kind$Check$result$(Maybe$none, $10450);
                                                        var $10451 = $10457;
                                                        break;
                                                };
                                                var self = $10451;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $10458 = self.value;
                                                var $10459 = self.errors;
                                                var $10460 = Kind$Check$result$($10458, List$concat$($10445, $10459));
                                                var $10448 = $10460;
                                                break;
                                        };
                                        var $10446 = $10448;
                                        break;
                                    case 'Maybe.none':
                                        var $10461 = Kind$Check$result$(Maybe$none, $10445);
                                        var $10446 = $10461;
                                        break;
                                };
                                var $10431 = $10446;
                                break;
                        };
                        var $10427 = $10431;
                        break;
                };
                var $10424 = $10427;
                break;
            case 'List.nil':
                var $10462 = Kind$Check$result$(Maybe$some$(List$nil), List$nil);
                var $10424 = $10462;
                break;
        };
        return $10424;
    };
    const Kind$Term$check$infer_types_of_with = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$infer_types_of_with$(x0, x1, x2, x3, x4);

    function Kind$Term$normalize$(_term$1, _defs$2) {
        var self = Kind$Term$reduce$(_term$1, _defs$2);
        switch (self._) {
            case 'Kind.Term.var':
                var $10464 = self.name;
                var $10465 = self.indx;
                var $10466 = Kind$Term$var$($10464, $10465);
                var $10463 = $10466;
                break;
            case 'Kind.Term.ref':
                var $10467 = self.name;
                var $10468 = Kind$Term$ref$($10467);
                var $10463 = $10468;
                break;
            case 'Kind.Term.all':
                var $10469 = self.eras;
                var $10470 = self.self;
                var $10471 = self.name;
                var $10472 = self.xtyp;
                var $10473 = self.body;
                var $10474 = Kind$Term$all$($10469, $10470, $10471, Kind$Term$normalize$($10472, _defs$2), (_s$8 => _x$9 => {
                    var $10475 = Kind$Term$normalize$($10473(_s$8)(_x$9), _defs$2);
                    return $10475;
                }));
                var $10463 = $10474;
                break;
            case 'Kind.Term.lam':
                var $10476 = self.name;
                var $10477 = self.body;
                var $10478 = Kind$Term$lam$($10476, (_x$5 => {
                    var $10479 = Kind$Term$normalize$($10477(_x$5), _defs$2);
                    return $10479;
                }));
                var $10463 = $10478;
                break;
            case 'Kind.Term.app':
                var $10480 = self.func;
                var $10481 = self.argm;
                var $10482 = Kind$Term$app$(Kind$Term$normalize$($10480, _defs$2), Kind$Term$normalize$($10481, _defs$2));
                var $10463 = $10482;
                break;
            case 'Kind.Term.let':
                var $10483 = self.name;
                var $10484 = self.expr;
                var $10485 = self.body;
                var $10486 = Kind$Term$let$($10483, Kind$Term$normalize$($10484, _defs$2), (_x$6 => {
                    var $10487 = Kind$Term$normalize$($10485(_x$6), _defs$2);
                    return $10487;
                }));
                var $10463 = $10486;
                break;
            case 'Kind.Term.def':
                var $10488 = self.name;
                var $10489 = self.expr;
                var $10490 = self.body;
                var $10491 = Kind$Term$def$($10488, Kind$Term$normalize$($10489, _defs$2), (_x$6 => {
                    var $10492 = Kind$Term$normalize$($10490(_x$6), _defs$2);
                    return $10492;
                }));
                var $10463 = $10491;
                break;
            case 'Kind.Term.ann':
                var $10493 = self.done;
                var $10494 = self.term;
                var $10495 = self.type;
                var $10496 = Kind$Term$ann$($10493, Kind$Term$normalize$($10494, _defs$2), Kind$Term$normalize$($10495, _defs$2));
                var $10463 = $10496;
                break;
            case 'Kind.Term.gol':
                var $10497 = self.name;
                var $10498 = self.dref;
                var $10499 = self.verb;
                var $10500 = Kind$Term$gol$($10497, $10498, $10499);
                var $10463 = $10500;
                break;
            case 'Kind.Term.hol':
                var $10501 = self.path;
                var $10502 = Kind$Term$hol$($10501);
                var $10463 = $10502;
                break;
            case 'Kind.Term.nat':
                var $10503 = self.natx;
                var $10504 = Kind$Term$nat$($10503);
                var $10463 = $10504;
                break;
            case 'Kind.Term.chr':
                var $10505 = self.chrx;
                var $10506 = Kind$Term$chr$($10505);
                var $10463 = $10506;
                break;
            case 'Kind.Term.str':
                var $10507 = self.strx;
                var $10508 = Kind$Term$str$($10507);
                var $10463 = $10508;
                break;
            case 'Kind.Term.ori':
                var $10509 = self.expr;
                var $10510 = Kind$Term$normalize$($10509, _defs$2);
                var $10463 = $10510;
                break;
            case 'Kind.Term.typ':
                var $10511 = Kind$Term$typ;
                var $10463 = $10511;
                break;
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $10512 = _term$1;
                var $10463 = $10512;
                break;
        };
        return $10463;
    };
    const Kind$Term$normalize = x0 => x1 => Kind$Term$normalize$(x0, x1);

    function Kind$Term$check$expand$cse$motive$go$(_wyth$1, _moti$2, _name$3, _expr$4, _etyp$5, _rtyp$6, _defs$7, _size$8) {
        var self = _wyth$1;
        switch (self._) {
            case 'List.cons':
                var $10514 = self.head;
                var $10515 = self.tail;
                var self = $10514;
                switch (self._) {
                    case 'Kind.Ann.new':
                        var $10517 = self.name;
                        var $10518 = self.type;
                        var $10519 = Kind$Term$all$(Bool$false, "", $10517, Maybe$default$($10518, Kind$Term$hol$(Bits$e)), (_s$14 => _x$15 => {
                            var $10520 = Kind$Term$check$expand$cse$motive$($10515, _moti$2, _name$3, _expr$4, _etyp$5, _rtyp$6, _defs$7, Nat$succ$(Nat$succ$(_size$8)));
                            return $10520;
                        }));
                        var $10516 = $10519;
                        break;
                };
                var $10513 = $10516;
                break;
            case 'List.nil':
                var self = _moti$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $10522 = self.value;
                        var $10523 = $10522;
                        var $10521 = $10523;
                        break;
                    case 'Maybe.none':
                        var self = _rtyp$6;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10525 = self.value;
                                var $10526 = Kind$Term$normalize$($10525, Kind$Map$new);
                                var $10524 = $10526;
                                break;
                            case 'Maybe.none':
                                var $10527 = Kind$Term$hol$(Bits$e);
                                var $10524 = $10527;
                                break;
                        };
                        var $10521 = $10524;
                        break;
                };
                var $10513 = $10521;
                break;
        };
        return $10513;
    };
    const Kind$Term$check$expand$cse$motive$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => Kind$Term$check$expand$cse$motive$go$(x0, x1, x2, x3, x4, x5, x6, x7);

    function List$tail$(_xs$2) {
        var self = _xs$2;
        switch (self._) {
            case 'List.cons':
                var $10529 = self.tail;
                var $10530 = $10529;
                var $10528 = $10530;
                break;
            case 'List.nil':
                var $10531 = List$nil;
                var $10528 = $10531;
                break;
        };
        return $10528;
    };
    const List$tail = x0 => List$tail$(x0);

    function Kind$Term$SmartMotive$vals$cont$(_expr$1, _term$2, _args$3, _defs$4) {
        var Kind$Term$SmartMotive$vals$cont$ = (_expr$1, _term$2, _args$3, _defs$4) => ({
            ctr: 'TCO',
            arg: [_expr$1, _term$2, _args$3, _defs$4]
        });
        var Kind$Term$SmartMotive$vals$cont = _expr$1 => _term$2 => _args$3 => _defs$4 => Kind$Term$SmartMotive$vals$cont$(_expr$1, _term$2, _args$3, _defs$4);
        var arg = [_expr$1, _term$2, _args$3, _defs$4];
        while (true) {
            let [_expr$1, _term$2, _args$3, _defs$4] = arg;
            var R = (() => {
                var self = Kind$Term$reduce$(_term$2, _defs$4);
                switch (self._) {
                    case 'Kind.Term.app':
                        var $10532 = self.func;
                        var $10533 = self.argm;
                        var $10534 = Kind$Term$SmartMotive$vals$cont$(_expr$1, $10532, List$cons$($10533, _args$3), _defs$4);
                        return $10534;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10535 = List$cons$(_expr$1, List$tail$(List$reverse$(_args$3)));
                        return $10535;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$SmartMotive$vals$cont = x0 => x1 => x2 => x3 => Kind$Term$SmartMotive$vals$cont$(x0, x1, x2, x3);

    function Kind$Term$SmartMotive$vals$(_expr$1, _type$2, _defs$3) {
        var Kind$Term$SmartMotive$vals$ = (_expr$1, _type$2, _defs$3) => ({
            ctr: 'TCO',
            arg: [_expr$1, _type$2, _defs$3]
        });
        var Kind$Term$SmartMotive$vals = _expr$1 => _type$2 => _defs$3 => Kind$Term$SmartMotive$vals$(_expr$1, _type$2, _defs$3);
        var arg = [_expr$1, _type$2, _defs$3];
        while (true) {
            let [_expr$1, _type$2, _defs$3] = arg;
            var R = (() => {
                var self = Kind$Term$reduce$(_type$2, _defs$3);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10536 = self.body;
                        var $10537 = Kind$Term$SmartMotive$vals$(_expr$1, $10536(Kind$Term$typ)(Kind$Term$typ), _defs$3);
                        return $10537;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10538 = Kind$Term$SmartMotive$vals$cont$(_expr$1, _type$2, List$nil, _defs$3);
                        return $10538;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$SmartMotive$vals = x0 => x1 => x2 => Kind$Term$SmartMotive$vals$(x0, x1, x2);

    function Kind$Term$SmartMotive$nams$cont$(_name$1, _term$2, _binds$3, _defs$4) {
        var Kind$Term$SmartMotive$nams$cont$ = (_name$1, _term$2, _binds$3, _defs$4) => ({
            ctr: 'TCO',
            arg: [_name$1, _term$2, _binds$3, _defs$4]
        });
        var Kind$Term$SmartMotive$nams$cont = _name$1 => _term$2 => _binds$3 => _defs$4 => Kind$Term$SmartMotive$nams$cont$(_name$1, _term$2, _binds$3, _defs$4);
        var arg = [_name$1, _term$2, _binds$3, _defs$4];
        while (true) {
            let [_name$1, _term$2, _binds$3, _defs$4] = arg;
            var R = (() => {
                var self = Kind$Term$reduce$(_term$2, _defs$4);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10539 = self.self;
                        var $10540 = self.name;
                        var $10541 = self.body;
                        var $10542 = Kind$Term$SmartMotive$nams$cont$(_name$1, $10541(Kind$Term$ref$($10539))(Kind$Term$ref$($10540)), List$cons$(String$flatten$(List$cons$(_name$1, List$cons$(".", List$cons$($10540, List$nil)))), _binds$3), _defs$4);
                        return $10542;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10543 = List$cons$(_name$1, List$tail$(_binds$3));
                        return $10543;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$SmartMotive$nams$cont = x0 => x1 => x2 => x3 => Kind$Term$SmartMotive$nams$cont$(x0, x1, x2, x3);

    function Kind$Term$SmartMotive$nams$(_name$1, _type$2, _defs$3) {
        var self = Kind$Term$reduce$(_type$2, _defs$3);
        switch (self._) {
            case 'Kind.Term.all':
                var $10545 = self.xtyp;
                var $10546 = Kind$Term$SmartMotive$nams$cont$(_name$1, $10545, List$nil, _defs$3);
                var $10544 = $10546;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10547 = List$nil;
                var $10544 = $10547;
                break;
        };
        return $10544;
    };
    const Kind$Term$SmartMotive$nams = x0 => x1 => x2 => Kind$Term$SmartMotive$nams$(x0, x1, x2);

    function List$zip$(_as$3, _bs$4) {
        var self = _as$3;
        switch (self._) {
            case 'List.cons':
                var $10549 = self.head;
                var $10550 = self.tail;
                var self = _bs$4;
                switch (self._) {
                    case 'List.cons':
                        var $10552 = self.head;
                        var $10553 = self.tail;
                        var $10554 = List$cons$(Pair$new$($10549, $10552), List$zip$($10550, $10553));
                        var $10551 = $10554;
                        break;
                    case 'List.nil':
                        var $10555 = List$nil;
                        var $10551 = $10555;
                        break;
                };
                var $10548 = $10551;
                break;
            case 'List.nil':
                var $10556 = List$nil;
                var $10548 = $10556;
                break;
        };
        return $10548;
    };
    const List$zip = x0 => x1 => List$zip$(x0, x1);
    const Nat$gte = a0 => a1 => (a0 >= a1);
    const Bits$concat = a0 => a1 => (a1 + a0);

    function Kind$Term$serialize$go$(_term$1, _depth$2, _init$3, _diff$4, _x$5) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.var':
                var $10558 = self.indx;
                var self = ($10558 >= _init$3);
                if (self) {
                    var _name$8 = a1 => (a1 + (nat_to_bits(Nat$pred$((_depth$2 - $10558 <= 0n ? 0n : _depth$2 - $10558)))));
                    var $10560 = (((_name$8(_x$5) + '1') + '0') + '0');
                    var $10559 = $10560;
                } else {
                    var _name$8 = a1 => (a1 + (nat_to_bits($10558)));
                    var $10561 = (((_name$8(_x$5) + '0') + '1') + '0');
                    var $10559 = $10561;
                };
                var $10557 = $10559;
                break;
            case 'Kind.Term.ref':
                var $10562 = self.name;
                var _name$7 = a1 => (a1 + (kind_name_to_bits($10562)));
                var $10563 = (((_name$7(_x$5) + '0') + '0') + '0');
                var $10557 = $10563;
                break;
            case 'Kind.Term.all':
                var $10564 = self.eras;
                var $10565 = self.self;
                var $10566 = self.name;
                var $10567 = self.xtyp;
                var $10568 = self.body;
                var self = $10564;
                if (self) {
                    var $10570 = Bits$i;
                    var _eras$11 = $10570;
                } else {
                    var $10571 = Bits$o;
                    var _eras$11 = $10571;
                };
                var _self$12 = a1 => (a1 + (kind_name_to_bits($10565)));
                var _xtyp$13 = Kind$Term$serialize$go($10567)(_depth$2)(_init$3)(_diff$4);
                var _body$14 = Kind$Term$serialize$go($10568(Kind$Term$var$($10565, _depth$2))(Kind$Term$var$($10566, Nat$succ$(_depth$2))))(Nat$succ$(Nat$succ$(_depth$2)))(_init$3)(_diff$4);
                var $10569 = (((_eras$11(_self$12(_xtyp$13(_body$14(_x$5)))) + '0') + '0') + '1');
                var $10557 = $10569;
                break;
            case 'Kind.Term.lam':
                var $10572 = self.name;
                var $10573 = self.body;
                var _body$8 = Kind$Term$serialize$go($10573(Kind$Term$var$($10572, _depth$2)))(Nat$succ$(_depth$2))(_init$3)(_diff$4);
                var $10574 = (((_body$8(_x$5) + '1') + '0') + '1');
                var $10557 = $10574;
                break;
            case 'Kind.Term.app':
                var $10575 = self.func;
                var $10576 = self.argm;
                var _func$8 = Kind$Term$serialize$go($10575)(_depth$2)(_init$3)(_diff$4);
                var _argm$9 = Kind$Term$serialize$go($10576)(_depth$2)(_init$3)(_diff$4);
                var $10577 = (((_func$8(_argm$9(_x$5)) + '0') + '1') + '1');
                var $10557 = $10577;
                break;
            case 'Kind.Term.let':
                var $10578 = self.name;
                var $10579 = self.expr;
                var $10580 = self.body;
                var _expr$9 = Kind$Term$serialize$go($10579)(_depth$2)(_init$3)(_diff$4);
                var _body$10 = Kind$Term$serialize$go($10580(Kind$Term$var$($10578, _depth$2)))(Nat$succ$(_depth$2))(_init$3)(_diff$4);
                var $10581 = (((_expr$9(_body$10(_x$5)) + '1') + '1') + '1');
                var $10557 = $10581;
                break;
            case 'Kind.Term.def':
                var $10582 = self.expr;
                var $10583 = self.body;
                var $10584 = Kind$Term$serialize$go$($10583($10582), _depth$2, _init$3, _diff$4, _x$5);
                var $10557 = $10584;
                break;
            case 'Kind.Term.ann':
                var $10585 = self.term;
                var $10586 = Kind$Term$serialize$go$($10585, _depth$2, _init$3, _diff$4, _x$5);
                var $10557 = $10586;
                break;
            case 'Kind.Term.gol':
                var $10587 = self.name;
                var _name$9 = a1 => (a1 + (kind_name_to_bits($10587)));
                var $10588 = (((_name$9(_x$5) + '0') + '0') + '0');
                var $10557 = $10588;
                break;
            case 'Kind.Term.nat':
                var $10589 = self.natx;
                var $10590 = Kind$Term$serialize$go$(Kind$Term$unroll_nat$($10589), _depth$2, _init$3, _diff$4, _x$5);
                var $10557 = $10590;
                break;
            case 'Kind.Term.chr':
                var $10591 = self.chrx;
                var $10592 = Kind$Term$serialize$go$(Kind$Term$unroll_chr$($10591), _depth$2, _init$3, _diff$4, _x$5);
                var $10557 = $10592;
                break;
            case 'Kind.Term.str':
                var $10593 = self.strx;
                var $10594 = Kind$Term$serialize$go$(Kind$Term$unroll_str$($10593), _depth$2, _init$3, _diff$4, _x$5);
                var $10557 = $10594;
                break;
            case 'Kind.Term.ori':
                var $10595 = self.expr;
                var $10596 = Kind$Term$serialize$go$($10595, _depth$2, _init$3, _diff$4, _x$5);
                var $10557 = $10596;
                break;
            case 'Kind.Term.typ':
                var $10597 = (((_x$5 + '1') + '1') + '0');
                var $10557 = $10597;
                break;
            case 'Kind.Term.hol':
                var $10598 = _x$5;
                var $10557 = $10598;
                break;
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $10599 = _diff$4(_x$5);
                var $10557 = $10599;
                break;
        };
        return $10557;
    };
    const Kind$Term$serialize$go = x0 => x1 => x2 => x3 => x4 => Kind$Term$serialize$go$(x0, x1, x2, x3, x4);

    function Kind$Term$serialize$(_term$1, _depth$2, _side$3) {
        var self = _side$3;
        if (self) {
            var $10601 = Bits$o;
            var _diff$4 = $10601;
        } else {
            var $10602 = Bits$i;
            var _diff$4 = $10602;
        };
        var $10600 = Kind$Term$serialize$go$(_term$1, _depth$2, _depth$2, _diff$4, Bits$e);
        return $10600;
    };
    const Kind$Term$serialize = x0 => x1 => x2 => Kind$Term$serialize$(x0, x1, x2);
    const Bits$eql = a0 => a1 => (a1 === a0);

    function Kind$Term$identical$(_a$1, _b$2, _lv$3) {
        var _ah$4 = Kind$Term$serialize$(_a$1, _lv$3, Bool$false);
        var _bh$5 = Kind$Term$serialize$(_b$2, _lv$3, Bool$true);
        var $10603 = (_bh$5 === _ah$4);
        return $10603;
    };
    const Kind$Term$identical = x0 => x1 => x2 => Kind$Term$identical$(x0, x1, x2);

    function Kind$Term$SmartMotive$replace$(_term$1, _from$2, _to$3, _lv$4) {
        var self = Kind$Term$identical$(_term$1, _from$2, _lv$4);
        if (self) {
            var $10605 = _to$3;
            var $10604 = $10605;
        } else {
            var self = _term$1;
            switch (self._) {
                case 'Kind.Term.var':
                    var $10607 = self.name;
                    var $10608 = self.indx;
                    var $10609 = Kind$Term$var$($10607, $10608);
                    var $10606 = $10609;
                    break;
                case 'Kind.Term.ref':
                    var $10610 = self.name;
                    var $10611 = Kind$Term$ref$($10610);
                    var $10606 = $10611;
                    break;
                case 'Kind.Term.all':
                    var $10612 = self.eras;
                    var $10613 = self.self;
                    var $10614 = self.name;
                    var $10615 = self.xtyp;
                    var $10616 = self.body;
                    var _xtyp$10 = Kind$Term$SmartMotive$replace$($10615, _from$2, _to$3, _lv$4);
                    var _body$11 = $10616(Kind$Term$ref$($10613))(Kind$Term$ref$($10614));
                    var _body$12 = Kind$Term$SmartMotive$replace$(_body$11, _from$2, _to$3, Nat$succ$(Nat$succ$(_lv$4)));
                    var $10617 = Kind$Term$all$($10612, $10613, $10614, _xtyp$10, (_s$13 => _x$14 => {
                        var $10618 = _body$12;
                        return $10618;
                    }));
                    var $10606 = $10617;
                    break;
                case 'Kind.Term.lam':
                    var $10619 = self.name;
                    var $10620 = self.body;
                    var _body$7 = $10620(Kind$Term$ref$($10619));
                    var _body$8 = Kind$Term$SmartMotive$replace$(_body$7, _from$2, _to$3, Nat$succ$(_lv$4));
                    var $10621 = Kind$Term$lam$($10619, (_x$9 => {
                        var $10622 = _body$8;
                        return $10622;
                    }));
                    var $10606 = $10621;
                    break;
                case 'Kind.Term.app':
                    var $10623 = self.func;
                    var $10624 = self.argm;
                    var _func$7 = Kind$Term$SmartMotive$replace$($10623, _from$2, _to$3, _lv$4);
                    var _argm$8 = Kind$Term$SmartMotive$replace$($10624, _from$2, _to$3, _lv$4);
                    var $10625 = Kind$Term$app$(_func$7, _argm$8);
                    var $10606 = $10625;
                    break;
                case 'Kind.Term.let':
                    var $10626 = self.name;
                    var $10627 = self.expr;
                    var $10628 = self.body;
                    var _expr$8 = Kind$Term$SmartMotive$replace$($10627, _from$2, _to$3, _lv$4);
                    var _body$9 = $10628(Kind$Term$ref$($10626));
                    var _body$10 = Kind$Term$SmartMotive$replace$(_body$9, _from$2, _to$3, Nat$succ$(_lv$4));
                    var $10629 = Kind$Term$let$($10626, _expr$8, (_x$11 => {
                        var $10630 = _body$10;
                        return $10630;
                    }));
                    var $10606 = $10629;
                    break;
                case 'Kind.Term.def':
                    var $10631 = self.name;
                    var $10632 = self.expr;
                    var $10633 = self.body;
                    var _expr$8 = Kind$Term$SmartMotive$replace$($10632, _from$2, _to$3, _lv$4);
                    var _body$9 = $10633(Kind$Term$ref$($10631));
                    var _body$10 = Kind$Term$SmartMotive$replace$(_body$9, _from$2, _to$3, Nat$succ$(_lv$4));
                    var $10634 = Kind$Term$def$($10631, _expr$8, (_x$11 => {
                        var $10635 = _body$10;
                        return $10635;
                    }));
                    var $10606 = $10634;
                    break;
                case 'Kind.Term.ann':
                    var $10636 = self.done;
                    var $10637 = self.term;
                    var $10638 = self.type;
                    var _term$8 = Kind$Term$SmartMotive$replace$($10637, _from$2, _to$3, _lv$4);
                    var _type$9 = Kind$Term$SmartMotive$replace$($10638, _from$2, _to$3, _lv$4);
                    var $10639 = Kind$Term$ann$($10636, _term$8, _type$9);
                    var $10606 = $10639;
                    break;
                case 'Kind.Term.get':
                    var $10640 = self.expr;
                    var $10641 = self.fkey;
                    var _expr$7 = Kind$Term$SmartMotive$replace$($10640, _from$2, _to$3, _lv$4);
                    var _fkey$8 = $10641;
                    var $10642 = Kind$Term$get$(_expr$7, _fkey$8);
                    var $10606 = $10642;
                    break;
                case 'Kind.Term.set':
                    var $10643 = self.expr;
                    var $10644 = self.fkey;
                    var $10645 = self.fval;
                    var _expr$8 = Kind$Term$SmartMotive$replace$($10643, _from$2, _to$3, _lv$4);
                    var _fkey$9 = $10644;
                    var _fval$10 = Kind$Term$SmartMotive$replace$($10645, _from$2, _to$3, _lv$4);
                    var $10646 = Kind$Term$set$(_expr$8, _fkey$9, _fval$10);
                    var $10606 = $10646;
                    break;
                case 'Kind.Term.ope':
                    var $10647 = self.name;
                    var $10648 = self.arg0;
                    var $10649 = self.arg1;
                    var _arg0$8 = Kind$Term$SmartMotive$replace$($10648, _from$2, _to$3, _lv$4);
                    var _arg1$9 = Kind$Term$SmartMotive$replace$($10649, _from$2, _to$3, _lv$4);
                    var $10650 = Kind$Term$ope$($10647, _arg0$8, _arg1$9);
                    var $10606 = $10650;
                    break;
                case 'Kind.Term.ori':
                    var $10651 = self.expr;
                    var $10652 = Kind$Term$SmartMotive$replace$($10651, _from$2, _to$3, _lv$4);
                    var $10606 = $10652;
                    break;
                case 'Kind.Term.typ':
                    var $10653 = Kind$Term$typ;
                    var $10606 = $10653;
                    break;
                case 'Kind.Term.gol':
                case 'Kind.Term.hol':
                case 'Kind.Term.nat':
                case 'Kind.Term.chr':
                case 'Kind.Term.str':
                case 'Kind.Term.num':
                case 'Kind.Term.cse':
                case 'Kind.Term.new':
                    var $10654 = _term$1;
                    var $10606 = $10654;
                    break;
            };
            var $10604 = $10606;
        };
        return $10604;
    };
    const Kind$Term$SmartMotive$replace = x0 => x1 => x2 => x3 => Kind$Term$SmartMotive$replace$(x0, x1, x2, x3);

    function Kind$Term$SmartMotive$make$(_name$1, _expr$2, _type$3, _moti$4, _size$5, _defs$6) {
        var _vals$7 = Kind$Term$SmartMotive$vals$(_expr$2, _type$3, _defs$6);
        var _nams$8 = Kind$Term$SmartMotive$nams$(_name$1, _type$3, _defs$6);
        var _subs$9 = List$zip$(_nams$8, _vals$7);
        var $10655 = List$fold$(_subs$9, _moti$4, (_sub$10 => _moti$11 => {
            var self = _sub$10;
            switch (self._) {
                case 'Pair.new':
                    var $10657 = self.fst;
                    var $10658 = self.snd;
                    var $10659 = Kind$Term$SmartMotive$replace$(_moti$11, $10658, Kind$Term$ref$($10657), _size$5);
                    var $10656 = $10659;
                    break;
            };
            return $10656;
        }));
        return $10655;
    };
    const Kind$Term$SmartMotive$make = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Term$SmartMotive$make$(x0, x1, x2, x3, x4, x5);

    function Kind$Term$check$expand$cse$motive$(_wyth$1, _moti$2, _name$3, _expr$4, _etyp$5, _rtyp$6, _defs$7, _size$8) {
        var _done$9 = Kind$Term$check$expand$cse$motive$go$(_wyth$1, _moti$2, _name$3, _expr$4, _etyp$5, _rtyp$6, _defs$7, _size$8);
        var self = _moti$2;
        switch (self._) {
            case 'Maybe.none':
                var $10661 = Kind$Term$SmartMotive$make$(_name$3, _expr$4, _etyp$5, _done$9, _size$8, _defs$7);
                var $10660 = $10661;
                break;
            case 'Maybe.some':
                var $10662 = _done$9;
                var $10660 = $10662;
                break;
        };
        return $10660;
    };
    const Kind$Term$check$expand$cse$motive = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => Kind$Term$check$expand$cse$motive$(x0, x1, x2, x3, x4, x5, x6, x7);

    function Kind$Term$check$expand$cse$argument$(_name$1, _wyth$2, _type$3, _body$4, _defs$5) {
        var self = Kind$Term$reduce$(_type$3, _defs$5);
        switch (self._) {
            case 'Kind.Term.all':
                var $10664 = self.self;
                var $10665 = self.name;
                var $10666 = self.body;
                var $10667 = Kind$Term$lam$((() => {
                    var self = String$is_empty$($10665);
                    if (self) {
                        var $10668 = _name$1;
                        return $10668;
                    } else {
                        var $10669 = String$flatten$(List$cons$(_name$1, List$cons$(".", List$cons$($10665, List$nil))));
                        return $10669;
                    };
                })(), (_x$11 => {
                    var $10670 = Kind$Term$check$expand$cse$argument$(_name$1, _wyth$2, $10666(Kind$Term$var$($10664, 0n))(Kind$Term$var$($10665, 0n)), _body$4, _defs$5);
                    return $10670;
                }));
                var $10663 = $10667;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.get':
            case 'Kind.Term.ori':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10672 = self.head;
                        var $10673 = self.tail;
                        var self = $10672;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10675 = self.name;
                                var $10676 = Kind$Term$lam$($10675, (_x$13 => {
                                    var $10677 = Kind$Term$check$expand$cse$argument$(_name$1, $10673, _type$3, _body$4, _defs$5);
                                    return $10677;
                                }));
                                var $10674 = $10676;
                                break;
                        };
                        var $10671 = $10674;
                        break;
                    case 'List.nil':
                        var $10678 = _body$4;
                        var $10671 = $10678;
                        break;
                };
                var $10663 = $10671;
                break;
            case 'Kind.Term.ref':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.new':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10680 = self.head;
                        var $10681 = self.tail;
                        var self = $10680;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10683 = self.name;
                                var $10684 = Kind$Term$lam$($10683, (_x$12 => {
                                    var $10685 = Kind$Term$check$expand$cse$argument$(_name$1, $10681, _type$3, _body$4, _defs$5);
                                    return $10685;
                                }));
                                var $10682 = $10684;
                                break;
                        };
                        var $10679 = $10682;
                        break;
                    case 'List.nil':
                        var $10686 = _body$4;
                        var $10679 = $10686;
                        break;
                };
                var $10663 = $10679;
                break;
            case 'Kind.Term.typ':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10688 = self.head;
                        var $10689 = self.tail;
                        var self = $10688;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10691 = self.name;
                                var $10692 = Kind$Term$lam$($10691, (_x$11 => {
                                    var $10693 = Kind$Term$check$expand$cse$argument$(_name$1, $10689, _type$3, _body$4, _defs$5);
                                    return $10693;
                                }));
                                var $10690 = $10692;
                                break;
                        };
                        var $10687 = $10690;
                        break;
                    case 'List.nil':
                        var $10694 = _body$4;
                        var $10687 = $10694;
                        break;
                };
                var $10663 = $10687;
                break;
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.num':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10696 = self.head;
                        var $10697 = self.tail;
                        var self = $10696;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10699 = self.name;
                                var $10700 = Kind$Term$lam$($10699, (_x$14 => {
                                    var $10701 = Kind$Term$check$expand$cse$argument$(_name$1, $10697, _type$3, _body$4, _defs$5);
                                    return $10701;
                                }));
                                var $10698 = $10700;
                                break;
                        };
                        var $10695 = $10698;
                        break;
                    case 'List.nil':
                        var $10702 = _body$4;
                        var $10695 = $10702;
                        break;
                };
                var $10663 = $10695;
                break;
            case 'Kind.Term.cse':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10704 = self.head;
                        var $10705 = self.tail;
                        var self = $10704;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10707 = self.name;
                                var $10708 = Kind$Term$lam$($10707, (_x$17 => {
                                    var $10709 = Kind$Term$check$expand$cse$argument$(_name$1, $10705, _type$3, _body$4, _defs$5);
                                    return $10709;
                                }));
                                var $10706 = $10708;
                                break;
                        };
                        var $10703 = $10706;
                        break;
                    case 'List.nil':
                        var $10710 = _body$4;
                        var $10703 = $10710;
                        break;
                };
                var $10663 = $10703;
                break;
        };
        return $10663;
    };
    const Kind$Term$check$expand$cse$argument = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$expand$cse$argument$(x0, x1, x2, x3, x4);

    function Maybe$or$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Maybe.some':
                var $10712 = self.value;
                var $10713 = Maybe$some$($10712);
                var $10711 = $10713;
                break;
            case 'Maybe.none':
                var $10714 = _b$3;
                var $10711 = $10714;
                break;
        };
        return $10711;
    };
    const Maybe$or = x0 => x1 => Maybe$or$(x0, x1);

    function Kind$Term$check$expand$cse$cases$(_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7) {
        var Kind$Term$check$expand$cse$cases$ = (_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7) => ({
            ctr: 'TCO',
            arg: [_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7]
        });
        var Kind$Term$check$expand$cse$cases = _expr$1 => _name$2 => _wyth$3 => _cses$4 => _type$5 => _defs$6 => _ctxt$7 => Kind$Term$check$expand$cse$cases$(_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7);
        var arg = [_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7];
        while (true) {
            let [_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7] = arg;
            var R = (() => {
                var self = Kind$Term$reduce$(_type$5, _defs$6);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10715 = self.self;
                        var $10716 = self.name;
                        var $10717 = self.xtyp;
                        var $10718 = self.body;
                        var _argm$13 = Maybe$or$(Kind$Map$get$($10716, _cses$4), Kind$Map$get$("_", _cses$4));
                        var _argm$14 = Maybe$default$(_argm$13, Kind$Term$ref$((_name$2 + ("_" + ($10716 + "_case")))));
                        var _argm$15 = Kind$Term$check$expand$cse$argument$(_name$2, _wyth$3, $10717, _argm$14, _defs$6);
                        var _expr$16 = Kind$Term$app$(_expr$1, _argm$15);
                        var _type$17 = $10718(Kind$Term$var$($10715, 0n))(Kind$Term$var$($10716, 0n));
                        var $10719 = Kind$Term$check$expand$cse$cases$(_expr$16, _name$2, _wyth$3, _cses$4, _type$17, _defs$6, _ctxt$7);
                        return $10719;
                    case 'Kind.Term.var':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.get':
                    case 'Kind.Term.ori':
                        var _expr$10 = (() => {
                            var $10722 = _expr$1;
                            var $10723 = _wyth$3;
                            let _expr$11 = $10722;
                            let _defn$10;
                            while ($10723._ === 'List.cons') {
                                _defn$10 = $10723.head;
                                var $10722 = Kind$Term$app$(_expr$11, (() => {
                                    var self = _defn$10;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10724 = self.term;
                                            var $10725 = $10724;
                                            return $10725;
                                    };
                                })());
                                _expr$11 = $10722;
                                $10723 = $10723.tail;
                            }
                            return _expr$11;
                        })();
                        var $10720 = _expr$10;
                        return $10720;
                    case 'Kind.Term.ref':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.new':
                        var _expr$9 = (() => {
                            var $10728 = _expr$1;
                            var $10729 = _wyth$3;
                            let _expr$10 = $10728;
                            let _defn$9;
                            while ($10729._ === 'List.cons') {
                                _defn$9 = $10729.head;
                                var $10728 = Kind$Term$app$(_expr$10, (() => {
                                    var self = _defn$9;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10730 = self.term;
                                            var $10731 = $10730;
                                            return $10731;
                                    };
                                })());
                                _expr$10 = $10728;
                                $10729 = $10729.tail;
                            }
                            return _expr$10;
                        })();
                        var $10726 = _expr$9;
                        return $10726;
                    case 'Kind.Term.typ':
                        var _expr$8 = (() => {
                            var $10734 = _expr$1;
                            var $10735 = _wyth$3;
                            let _expr$9 = $10734;
                            let _defn$8;
                            while ($10735._ === 'List.cons') {
                                _defn$8 = $10735.head;
                                var $10734 = Kind$Term$app$(_expr$9, (() => {
                                    var self = _defn$8;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10736 = self.term;
                                            var $10737 = $10736;
                                            return $10737;
                                    };
                                })());
                                _expr$9 = $10734;
                                $10735 = $10735.tail;
                            }
                            return _expr$9;
                        })();
                        var $10732 = _expr$8;
                        return $10732;
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.num':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var _expr$11 = (() => {
                            var $10740 = _expr$1;
                            var $10741 = _wyth$3;
                            let _expr$12 = $10740;
                            let _defn$11;
                            while ($10741._ === 'List.cons') {
                                _defn$11 = $10741.head;
                                var $10740 = Kind$Term$app$(_expr$12, (() => {
                                    var self = _defn$11;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10742 = self.term;
                                            var $10743 = $10742;
                                            return $10743;
                                    };
                                })());
                                _expr$12 = $10740;
                                $10741 = $10741.tail;
                            }
                            return _expr$12;
                        })();
                        var $10738 = _expr$11;
                        return $10738;
                    case 'Kind.Term.cse':
                        var _expr$14 = (() => {
                            var $10746 = _expr$1;
                            var $10747 = _wyth$3;
                            let _expr$15 = $10746;
                            let _defn$14;
                            while ($10747._ === 'List.cons') {
                                _defn$14 = $10747.head;
                                var $10746 = Kind$Term$app$(_expr$15, (() => {
                                    var self = _defn$14;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10748 = self.term;
                                            var $10749 = $10748;
                                            return $10749;
                                    };
                                })());
                                _expr$15 = $10746;
                                $10747 = $10747.tail;
                            }
                            return _expr$15;
                        })();
                        var $10744 = _expr$14;
                        return $10744;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$check$expand$cse$cases = x0 => x1 => x2 => x3 => x4 => x5 => x6 => Kind$Term$check$expand$cse$cases$(x0, x1, x2, x3, x4, x5, x6);

    function Kind$Term$check$expand$cse$(_expr$1, _name$2, _wyth$3, _cses$4, _moti$5, _etyp$6, _rtyp$7, _defs$8, _ctxt$9) {
        var self = Kind$Term$reduce$(_etyp$6, _defs$8);
        switch (self._) {
            case 'Kind.Term.all':
                var $10751 = self.self;
                var $10752 = self.name;
                var $10753 = self.xtyp;
                var $10754 = self.body;
                var _moti$15 = Kind$Term$check$expand$cse$motive$(_wyth$3, _moti$5, _name$2, _expr$1, _etyp$6, _rtyp$7, _defs$8, (list_length(_ctxt$9)));
                var _argm$16 = Kind$Term$check$expand$cse$argument$(_name$2, List$nil, $10753, _moti$15, _defs$8);
                var _expr$17 = Kind$Term$app$(_expr$1, _argm$16);
                var _type$18 = $10754(Kind$Term$var$($10751, 0n))(Kind$Term$var$($10752, 0n));
                var $10755 = Maybe$some$(Kind$Term$check$expand$cse$cases$(_expr$17, _name$2, _wyth$3, _cses$4, _type$18, _defs$8, _ctxt$9));
                var $10750 = $10755;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10756 = Maybe$none;
                var $10750 = $10756;
                break;
        };
        return $10750;
    };
    const Kind$Term$check$expand$cse = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Term$check$expand$cse$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Error$cant_infer$(_origin$1, _term$2, _context$3) {
        var $10757 = ({
            _: 'Kind.Error.cant_infer',
            'origin': _origin$1,
            'term': _term$2,
            'context': _context$3
        });
        return $10757;
    };
    const Kind$Error$cant_infer = x0 => x1 => x2 => Kind$Error$cant_infer$(x0, x1, x2);

    function Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$3, _orig$4) {
        var $10758 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$cant_infer$(_orig$4, _term$1, _ctx$3), List$nil));
        return $10758;
    };
    const Kind$Term$check$cant_infer = x0 => x1 => x2 => x3 => Kind$Term$check$cant_infer$(x0, x1, x2, x3);

    function Kind$Term$get_bnds$(_term$1, _depth$2) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.all':
                var $10760 = self.self;
                var $10761 = self.name;
                var $10762 = self.xtyp;
                var $10763 = self.body;
                var _b$8 = $10763(Kind$Term$var$($10760, _depth$2))(Kind$Term$var$($10761, Nat$succ$(_depth$2)));
                var self = Kind$Term$get_bnds$(_b$8, Nat$succ$(Nat$succ$(_depth$2)));
                switch (self._) {
                    case 'Pair.new':
                        var $10765 = self.fst;
                        var $10766 = self.snd;
                        var $10767 = Pair$new$(List$cons$(Pair$new$($10761, $10762), $10765), $10766);
                        var $10764 = $10767;
                        break;
                };
                var $10759 = $10764;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10768 = Pair$new$(List$nil, _term$1);
                var $10759 = $10768;
                break;
        };
        return $10759;
    };
    const Kind$Term$get_bnds = x0 => x1 => Kind$Term$get_bnds$(x0, x1);

    function List$last$go$(_xs$2, _last$3) {
        var List$last$go$ = (_xs$2, _last$3) => ({
            ctr: 'TCO',
            arg: [_xs$2, _last$3]
        });
        var List$last$go = _xs$2 => _last$3 => List$last$go$(_xs$2, _last$3);
        var arg = [_xs$2, _last$3];
        while (true) {
            let [_xs$2, _last$3] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $10769 = self.head;
                        var $10770 = self.tail;
                        var $10771 = List$last$go$($10770, Maybe$some$($10769));
                        return $10771;
                    case 'List.nil':
                        var $10772 = _last$3;
                        return $10772;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$last$go = x0 => x1 => List$last$go$(x0, x1);

    function List$last$(_xs$2) {
        var $10773 = List$last$go$(_xs$2, Maybe$none);
        return $10773;
    };
    const List$last = x0 => List$last$(x0);

    function Kind$Term$check$expand$set$count_params$(_xtyp$1) {
        var self = Kind$Term$get_bnds$(_xtyp$1, 0n);
        switch (self._) {
            case 'Pair.new':
                var $10775 = self.fst;
                var self = Kind$Term$get_args$(Pair$snd$(Maybe$default$(List$last$($10775), Pair$new$("", Kind$Term$typ))));
                switch (self._) {
                    case 'Pair.new':
                        var $10777 = self.snd;
                        var _indexs$6 = Nat$pred$((list_length($10775)));
                        var _params$7 = ((list_length($10777)) - _indexs$6 <= 0n ? 0n : (list_length($10777)) - _indexs$6);
                        var $10778 = _params$7;
                        var $10776 = $10778;
                        break;
                };
                var $10774 = $10776;
                break;
        };
        return $10774;
    };
    const Kind$Term$check$expand$set$count_params = x0 => Kind$Term$check$expand$set$count_params$(x0);

    function Nat$for$(_state$2, _from$3, _til$4, _func$5) {
        var Nat$for$ = (_state$2, _from$3, _til$4, _func$5) => ({
            ctr: 'TCO',
            arg: [_state$2, _from$3, _til$4, _func$5]
        });
        var Nat$for = _state$2 => _from$3 => _til$4 => _func$5 => Nat$for$(_state$2, _from$3, _til$4, _func$5);
        var arg = [_state$2, _from$3, _til$4, _func$5];
        while (true) {
            let [_state$2, _from$3, _til$4, _func$5] = arg;
            var R = (() => {
                var self = (_from$3 === _til$4);
                if (self) {
                    var $10779 = _state$2;
                    return $10779;
                } else {
                    var $10780 = Nat$for$(_func$5(_from$3)(_state$2), Nat$succ$(_from$3), _til$4, _func$5);
                    return $10780;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$for = x0 => x1 => x2 => x3 => Nat$for$(x0, x1, x2, x3);

    function List$get$(_index$2, _list$3) {
        var List$get$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$get = _index$2 => _list$3 => List$get$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $10781 = self.head;
                        var $10782 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $10784 = Maybe$some$($10781);
                            var $10783 = $10784;
                        } else {
                            var $10785 = (self - 1n);
                            var $10786 = List$get$($10785, $10782);
                            var $10783 = $10786;
                        };
                        return $10783;
                    case 'List.nil':
                        var $10787 = Maybe$none;
                        return $10787;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$get = x0 => x1 => List$get$(x0, x1);

    function Kind$Term$check$expand$new$pair$(_args$1, _type$2, _defs$3) {
        var self = ((list_length(_args$1)) === 2n);
        if (self) {
            var _term$4 = Kind$Term$ref$("Pair.new");
            var _term$5 = Kind$Term$app$(_term$4, Kind$Term$hol$(Bits$e));
            var _term$6 = Kind$Term$app$(_term$5, Kind$Term$hol$(Bits$e));
            var _term$7 = Kind$Term$app$(_term$6, Maybe$default$(List$get$(0n, _args$1), Kind$Term$ref$("pair_fst")));
            var _term$8 = Kind$Term$app$(_term$7, Maybe$default$(List$get$(1n, _args$1), Kind$Term$ref$("pair_snd")));
            var $10789 = Maybe$some$(_term$8);
            var $10788 = $10789;
        } else {
            var $10790 = Maybe$none;
            var $10788 = $10790;
        };
        return $10788;
    };
    const Kind$Term$check$expand$new$pair = x0 => x1 => x2 => Kind$Term$check$expand$new$pair$(x0, x1, x2);

    function Kind$Term$check$expand$new$(_args$1, _type$2, _defs$3) {
        var self = _type$2;
        switch (self._) {
            case 'Maybe.some':
                var $10792 = self.value;
                var self = Kind$Term$reduce$($10792, _defs$3);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10794 = self.self;
                        var $10795 = self.xtyp;
                        var $10796 = self.body;
                        var self = Kind$Term$reduce$($10796(Kind$Term$typ)(Kind$Term$typ), _defs$3);
                        switch (self._) {
                            case 'Kind.Term.all':
                                var $10798 = self.name;
                                var _tnam$15 = Maybe$default$(Kind$Term$check$get_name_of_self_type$slice$($10794), "");
                                var _term$16 = Kind$Term$ref$((_tnam$15 + ("." + $10798)));
                                var _pars$17 = Kind$Term$check$expand$set$count_params$($10795);
                                var _term$18 = Nat$for$(_term$16, 0n, _pars$17, (_i$18 => _term$19 => {
                                    var $10800 = Kind$Term$app$(_term$19, Kind$Term$hol$(Bits$e));
                                    return $10800;
                                }));
                                var _term$19 = (() => {
                                    var $10802 = _term$18;
                                    var $10803 = _args$1;
                                    let _term$20 = $10802;
                                    let _arg$19;
                                    while ($10803._ === 'List.cons') {
                                        _arg$19 = $10803.head;
                                        var $10802 = Kind$Term$app$(_term$20, _arg$19);
                                        _term$20 = $10802;
                                        $10803 = $10803.tail;
                                    }
                                    return _term$20;
                                })();
                                var $10799 = Maybe$some$(_term$19);
                                var $10797 = $10799;
                                break;
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.typ':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $10804 = Maybe$none;
                                var $10797 = $10804;
                                break;
                        };
                        var $10793 = $10797;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10805 = Maybe$none;
                        var $10793 = $10805;
                        break;
                };
                var _got$4 = $10793;
                break;
            case 'Maybe.none':
                var $10806 = Maybe$none;
                var _got$4 = $10806;
                break;
        };
        var self = _got$4;
        switch (self._) {
            case 'Maybe.some':
                var $10807 = self.value;
                var $10808 = Maybe$some$($10807);
                var $10791 = $10808;
                break;
            case 'Maybe.none':
                var $10809 = Kind$Term$check$expand$new$pair$(_args$1, _type$2, _defs$3);
                var $10791 = $10809;
                break;
        };
        return $10791;
    };
    const Kind$Term$check$expand$new = x0 => x1 => x2 => Kind$Term$check$expand$new$(x0, x1, x2);

    function Kind$Term$check$expand$get$selector$(_fkey$1, _ctor$2, _defs$3, _rett$4) {
        var self = Kind$Term$reduce$(_ctor$2, _defs$3);
        switch (self._) {
            case 'Kind.Term.all':
                var $10811 = self.name;
                var $10812 = self.body;
                var $10813 = Kind$Term$lam$($10811, (_x$10 => {
                    var _body$11 = $10812(Kind$Term$typ)(Kind$Term$typ);
                    var self = ($10811 === _fkey$1);
                    if (self) {
                        var $10815 = _x$10;
                        var _rett$12 = $10815;
                    } else {
                        var $10816 = _rett$4;
                        var _rett$12 = $10816;
                    };
                    var $10814 = Kind$Term$check$expand$get$selector$(_fkey$1, _body$11, _defs$3, _rett$12);
                    return $10814;
                }));
                var $10810 = $10813;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10817 = _rett$4;
                var $10810 = $10817;
                break;
        };
        return $10810;
    };
    const Kind$Term$check$expand$get$selector = x0 => x1 => x2 => x3 => Kind$Term$check$expand$get$selector$(x0, x1, x2, x3);

    function Kind$Term$check$expand$get$(_expr$1, _fkey$2, _etyp$3, _defs$4) {
        var self = Kind$Term$reduce$(_etyp$3, _defs$4);
        switch (self._) {
            case 'Kind.Term.all':
                var $10819 = self.body;
                var self = Kind$Term$reduce$($10819(Kind$Term$typ)(Kind$Term$typ), _defs$4);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10821 = self.xtyp;
                        var _term$15 = Kind$Term$app$(_expr$1, Kind$Term$lam$("", (_$15 => {
                            var $10823 = Kind$Term$hol$(Bits$e);
                            return $10823;
                        })));
                        var _rett$16 = Kind$Term$ref$((_fkey$2 + "_field"));
                        var _sele$17 = Kind$Term$check$expand$get$selector$(_fkey$2, $10821, _defs$4, _rett$16);
                        var $10822 = Maybe$some$(Kind$Term$app$(_term$15, _sele$17));
                        var $10820 = $10822;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10824 = Maybe$none;
                        var $10820 = $10824;
                        break;
                };
                var $10818 = $10820;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10825 = Maybe$none;
                var $10818 = $10825;
                break;
        };
        return $10818;
    };
    const Kind$Term$check$expand$get = x0 => x1 => x2 => x3 => Kind$Term$check$expand$get$(x0, x1, x2, x3);

    function Kind$Term$check$expand$set$selector$(_fkey$1, _fval$2, _ctor$3, _defs$4, _rett$5) {
        var self = Kind$Term$reduce$(_ctor$3, _defs$4);
        switch (self._) {
            case 'Kind.Term.all':
                var $10827 = self.name;
                var $10828 = self.body;
                var $10829 = Kind$Term$lam$($10827, (_x$11 => {
                    var _body$12 = $10828(Kind$Term$typ)(Kind$Term$typ);
                    var _rett$13 = Kind$Term$app$(_rett$5, (() => {
                        var self = ($10827 === _fkey$1);
                        if (self) {
                            var $10831 = _fval$2;
                            return $10831;
                        } else {
                            var $10832 = _x$11;
                            return $10832;
                        };
                    })());
                    var $10830 = Kind$Term$check$expand$set$selector$(_fkey$1, _fval$2, _body$12, _defs$4, _rett$13);
                    return $10830;
                }));
                var $10826 = $10829;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10833 = _rett$5;
                var $10826 = $10833;
                break;
        };
        return $10826;
    };
    const Kind$Term$check$expand$set$selector = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$expand$set$selector$(x0, x1, x2, x3, x4);

    function Kind$Term$check$expand$set$(_expr$1, _fkey$2, _fval$3, _etyp$4, _defs$5) {
        var self = Kind$Term$reduce$(_etyp$4, _defs$5);
        switch (self._) {
            case 'Kind.Term.all':
                var $10835 = self.self;
                var $10836 = self.xtyp;
                var $10837 = self.body;
                var self = Kind$Term$reduce$($10837(Kind$Term$typ)(Kind$Term$typ), _defs$5);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10839 = self.name;
                        var $10840 = self.xtyp;
                        var _term$16 = Kind$Term$app$(_expr$1, Kind$Term$lam$("", (_$16 => {
                            var $10842 = Kind$Term$hol$(Bits$e);
                            return $10842;
                        })));
                        var _tnam$17 = Maybe$default$(Kind$Term$check$get_name_of_self_type$slice$($10835), "");
                        var _rett$18 = Kind$Term$ref$((_tnam$17 + ("." + $10839)));
                        var _pars$19 = Kind$Term$check$expand$set$count_params$($10836);
                        var _rett$20 = Nat$for$(_rett$18, 0n, _pars$19, (_i$20 => _rett$21 => {
                            var $10843 = Kind$Term$app$(_rett$21, Kind$Term$hol$(Bits$e));
                            return $10843;
                        }));
                        var _sele$21 = Kind$Term$check$expand$set$selector$(_fkey$2, _fval$3, $10840, _defs$5, _rett$20);
                        var $10841 = Maybe$some$(Kind$Term$app$(_term$16, _sele$21));
                        var $10838 = $10841;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10844 = Maybe$none;
                        var $10838 = $10844;
                        break;
                };
                var $10834 = $10838;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10845 = Maybe$none;
                var $10834 = $10845;
                break;
        };
        return $10834;
    };
    const Kind$Term$check$expand$set = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$expand$set$(x0, x1, x2, x3, x4);

    function String$at$(_index$1, _str$2) {
        var String$at$ = (_index$1, _str$2) => ({
            ctr: 'TCO',
            arg: [_index$1, _str$2]
        });
        var String$at = _index$1 => _str$2 => String$at$(_index$1, _str$2);
        var arg = [_index$1, _str$2];
        while (true) {
            let [_index$1, _str$2] = arg;
            var R = (() => {
                var self = _str$2;
                if (self.length === 0) {
                    var $10846 = Maybe$none;
                    return $10846;
                } else {
                    var $10847 = self.charCodeAt(0);
                    var $10848 = self.slice(1);
                    var self = _index$1;
                    if (self === 0n) {
                        var $10850 = Maybe$some$($10847);
                        var $10849 = $10850;
                    } else {
                        var $10851 = (self - 1n);
                        var $10852 = String$at$($10851, $10848);
                        var $10849 = $10852;
                    };
                    return $10849;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$at = x0 => x1 => String$at$(x0, x1);

    function String$last$(_xs$1) {
        var $10853 = String$at$(Nat$pred$(String$length$(_xs$1)), _xs$1);
        return $10853;
    };
    const String$last = x0 => String$last$(x0);

    function Kind$Term$check$expand$ope$(_skip_cmp$1, _oper$2, _arg0$3, _arg1$4, _otyp$5, _defs$6) {
        var self = ((Maybe$default$(String$last$(_oper$2), 120) === 63) && _skip_cmp$1);
        if (self) {
            var $10855 = Maybe$none;
            var $10854 = $10855;
        } else {
            var _type_name$7 = Kind$Term$check$get_name_of_self_type$(_otyp$5, _defs$6);
            var self = _type_name$7;
            switch (self._) {
                case 'Maybe.some':
                    var $10857 = self.value;
                    var self = (_oper$2 === "+");
                    if (self) {
                        var $10859 = Maybe$some$("add");
                        var _oper_name$9 = $10859;
                    } else {
                        var self = (_oper$2 === "-");
                        if (self) {
                            var $10861 = Maybe$some$("sub");
                            var $10860 = $10861;
                        } else {
                            var self = (_oper$2 === "*");
                            if (self) {
                                var $10863 = Maybe$some$("mul");
                                var $10862 = $10863;
                            } else {
                                var self = (_oper$2 === "/");
                                if (self) {
                                    var $10865 = Maybe$some$("div");
                                    var $10864 = $10865;
                                } else {
                                    var self = (_oper$2 === "**");
                                    if (self) {
                                        var $10867 = Maybe$some$("pow");
                                        var $10866 = $10867;
                                    } else {
                                        var self = (_oper$2 === "%");
                                        if (self) {
                                            var $10869 = Maybe$some$("mod");
                                            var $10868 = $10869;
                                        } else {
                                            var self = (_oper$2 === "<?");
                                            if (self) {
                                                var $10871 = Maybe$some$("ltn");
                                                var $10870 = $10871;
                                            } else {
                                                var self = (_oper$2 === "<=?");
                                                if (self) {
                                                    var $10873 = Maybe$some$("lte");
                                                    var $10872 = $10873;
                                                } else {
                                                    var self = (_oper$2 === "=?");
                                                    if (self) {
                                                        var $10875 = Maybe$some$("eql");
                                                        var $10874 = $10875;
                                                    } else {
                                                        var self = (_oper$2 === ">=?");
                                                        if (self) {
                                                            var $10877 = Maybe$some$("gte");
                                                            var $10876 = $10877;
                                                        } else {
                                                            var self = (_oper$2 === ">?");
                                                            if (self) {
                                                                var $10879 = Maybe$some$("gtn");
                                                                var $10878 = $10879;
                                                            } else {
                                                                var self = (_oper$2 === "&&");
                                                                if (self) {
                                                                    var $10881 = Maybe$some$("and");
                                                                    var $10880 = $10881;
                                                                } else {
                                                                    var self = (_oper$2 === "||");
                                                                    if (self) {
                                                                        var $10883 = Maybe$some$("or");
                                                                        var $10882 = $10883;
                                                                    } else {
                                                                        var $10884 = Maybe$none;
                                                                        var $10882 = $10884;
                                                                    };
                                                                    var $10880 = $10882;
                                                                };
                                                                var $10878 = $10880;
                                                            };
                                                            var $10876 = $10878;
                                                        };
                                                        var $10874 = $10876;
                                                    };
                                                    var $10872 = $10874;
                                                };
                                                var $10870 = $10872;
                                            };
                                            var $10868 = $10870;
                                        };
                                        var $10866 = $10868;
                                    };
                                    var $10864 = $10866;
                                };
                                var $10862 = $10864;
                            };
                            var $10860 = $10862;
                        };
                        var _oper_name$9 = $10860;
                    };
                    var self = _oper_name$9;
                    switch (self._) {
                        case 'Maybe.some':
                            var $10885 = self.value;
                            var _term$11 = Kind$Term$ref$(($10857 + ("." + $10885)));
                            var _term$12 = Kind$Term$app$(_term$11, _arg0$3);
                            var _term$13 = Kind$Term$app$(_term$12, _arg1$4);
                            var $10886 = Maybe$some$(_term$13);
                            var $10858 = $10886;
                            break;
                        case 'Maybe.none':
                            var $10887 = Maybe$none;
                            var $10858 = $10887;
                            break;
                    };
                    var $10856 = $10858;
                    break;
                case 'Maybe.none':
                    var $10888 = Maybe$none;
                    var $10856 = $10888;
                    break;
            };
            var $10854 = $10856;
        };
        return $10854;
    };
    const Kind$Term$check$expand$ope = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Term$check$expand$ope$(x0, x1, x2, x3, x4, x5);

    function BitsSet$has$(_bits$1, _set$2) {
        var self = (bitsmap_get(_bits$1, _set$2));
        switch (self._) {
            case 'Maybe.none':
                var $10890 = Bool$false;
                var $10889 = $10890;
                break;
            case 'Maybe.some':
                var $10891 = Bool$true;
                var $10889 = $10891;
                break;
        };
        return $10889;
    };
    const BitsSet$has = x0 => x1 => BitsSet$has$(x0, x1);

    function BitsSet$mut$has$(_bits$1, _set$2) {
        var $10892 = BitsSet$has$(_bits$1, _set$2);
        return $10892;
    };
    const BitsSet$mut$has = x0 => x1 => BitsSet$mut$has$(x0, x1);

    function Kind$Term$equal$extra_holes$funari$(_term$1, _arity$2) {
        var Kind$Term$equal$extra_holes$funari$ = (_term$1, _arity$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _arity$2]
        });
        var Kind$Term$equal$extra_holes$funari = _term$1 => _arity$2 => Kind$Term$equal$extra_holes$funari$(_term$1, _arity$2);
        var arg = [_term$1, _arity$2];
        while (true) {
            let [_term$1, _arity$2] = arg;
            var R = (() => {
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.var':
                        var $10893 = self.name;
                        var $10894 = Maybe$some$(Pair$new$($10893, _arity$2));
                        return $10894;
                    case 'Kind.Term.ref':
                        var $10895 = self.name;
                        var $10896 = Maybe$some$(Pair$new$($10895, _arity$2));
                        return $10896;
                    case 'Kind.Term.app':
                        var $10897 = self.func;
                        var $10898 = Kind$Term$equal$extra_holes$funari$($10897, Nat$succ$(_arity$2));
                        return $10898;
                    case 'Kind.Term.ori':
                        var $10899 = self.expr;
                        var $10900 = Kind$Term$equal$extra_holes$funari$($10899, _arity$2);
                        return $10900;
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $10901 = Maybe$none;
                        return $10901;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$equal$extra_holes$funari = x0 => x1 => Kind$Term$equal$extra_holes$funari$(x0, x1);

    function Kind$Term$has_holes$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.all':
                var $10903 = self.xtyp;
                var $10904 = self.body;
                var $10905 = (Kind$Term$has_holes$($10903) || Kind$Term$has_holes$($10904(Kind$Term$typ)(Kind$Term$typ)));
                var $10902 = $10905;
                break;
            case 'Kind.Term.lam':
                var $10906 = self.body;
                var $10907 = Kind$Term$has_holes$($10906(Kind$Term$typ));
                var $10902 = $10907;
                break;
            case 'Kind.Term.app':
                var $10908 = self.func;
                var $10909 = self.argm;
                var $10910 = (Kind$Term$has_holes$($10908) || Kind$Term$has_holes$($10909));
                var $10902 = $10910;
                break;
            case 'Kind.Term.let':
                var $10911 = self.expr;
                var $10912 = self.body;
                var $10913 = (Kind$Term$has_holes$($10911) || Kind$Term$has_holes$($10912(Kind$Term$typ)));
                var $10902 = $10913;
                break;
            case 'Kind.Term.def':
                var $10914 = self.expr;
                var $10915 = self.body;
                var $10916 = (Kind$Term$has_holes$($10914) || Kind$Term$has_holes$($10915(Kind$Term$typ)));
                var $10902 = $10916;
                break;
            case 'Kind.Term.ann':
                var $10917 = self.term;
                var $10918 = self.type;
                var $10919 = (Kind$Term$has_holes$($10917) || Kind$Term$has_holes$($10918));
                var $10902 = $10919;
                break;
            case 'Kind.Term.ori':
                var $10920 = self.expr;
                var $10921 = Kind$Term$has_holes$($10920);
                var $10902 = $10921;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.gol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $10922 = Bool$false;
                var $10902 = $10922;
                break;
            case 'Kind.Term.hol':
                var $10923 = Bool$true;
                var $10902 = $10923;
                break;
        };
        return $10902;
    };
    const Kind$Term$has_holes = x0 => Kind$Term$has_holes$(x0);

    function Kind$Term$equal$hole$(_path$1, _term$2) {
        var self = _term$2;
        switch (self._) {
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var self = Kind$Term$has_holes$(_term$2);
                if (self) {
                    var $10926 = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
                    var $10925 = $10926;
                } else {
                    var $10927 = Kind$Check$result$(Maybe$some$(Bool$true), List$cons$(Kind$Error$patch$(_path$1, Kind$Term$normalize$(_term$2, Kind$Map$new)), List$nil));
                    var $10925 = $10927;
                };
                var $10924 = $10925;
                break;
            case 'Kind.Term.hol':
                var $10928 = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
                var $10924 = $10928;
                break;
        };
        return $10924;
    };
    const Kind$Term$equal$hole = x0 => x1 => Kind$Term$equal$hole$(x0, x1);

    function Kind$Term$equal$extra_holes$filler$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Kind.Term.app':
                var $10930 = self.func;
                var $10931 = self.argm;
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.app':
                        var $10933 = self.func;
                        var $10934 = self.argm;
                        var self = Kind$Term$equal$extra_holes$filler$($10930, $10933);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $10936 = self.value;
                                var $10937 = self.errors;
                                var self = $10936;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $10939 = Kind$Check$result$(Maybe$none, $10937);
                                        var $10938 = $10939;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Term$equal$extra_holes$filler$($10931, $10934);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $10941 = self.value;
                                                var $10942 = self.errors;
                                                var $10943 = Kind$Check$result$($10941, List$concat$($10937, $10942));
                                                var $10940 = $10943;
                                                break;
                                        };
                                        var $10938 = $10940;
                                        break;
                                };
                                var $10935 = $10938;
                                break;
                        };
                        var $10932 = $10935;
                        break;
                    case 'Kind.Term.hol':
                        var $10944 = self.path;
                        var self = Kind$Term$equal$hole$($10944, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $10946 = self.value;
                                var $10947 = self.errors;
                                var self = $10946;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $10949 = Kind$Check$result$(Maybe$none, $10947);
                                        var $10948 = $10949;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $10951 = self.value;
                                                var $10952 = self.errors;
                                                var $10953 = Kind$Check$result$($10951, List$concat$($10947, $10952));
                                                var $10950 = $10953;
                                                break;
                                        };
                                        var $10948 = $10950;
                                        break;
                                };
                                var $10945 = $10948;
                                break;
                        };
                        var $10932 = $10945;
                        break;
                    case 'Kind.Term.ori':
                        var $10954 = self.expr;
                        var $10955 = Kind$Term$equal$extra_holes$filler$(_a$1, $10954);
                        var $10932 = $10955;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $10956 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $10932 = $10956;
                        break;
                };
                var $10929 = $10932;
                break;
            case 'Kind.Term.hol':
                var $10957 = self.path;
                var self = Kind$Term$equal$hole$($10957, _b$2);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $10959 = self.value;
                        var $10960 = self.errors;
                        var self = $10959;
                        switch (self._) {
                            case 'Maybe.none':
                                var $10962 = Kind$Check$result$(Maybe$none, $10960);
                                var $10961 = $10962;
                                break;
                            case 'Maybe.some':
                                var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $10964 = self.value;
                                        var $10965 = self.errors;
                                        var $10966 = Kind$Check$result$($10964, List$concat$($10960, $10965));
                                        var $10963 = $10966;
                                        break;
                                };
                                var $10961 = $10963;
                                break;
                        };
                        var $10958 = $10961;
                        break;
                };
                var $10929 = $10958;
                break;
            case 'Kind.Term.ori':
                var $10967 = self.expr;
                var $10968 = Kind$Term$equal$extra_holes$filler$($10967, _b$2);
                var $10929 = $10968;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.lam':
            case 'Kind.Term.get':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $10970 = self.path;
                        var self = Kind$Term$equal$hole$($10970, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $10972 = self.value;
                                var $10973 = self.errors;
                                var self = $10972;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $10975 = Kind$Check$result$(Maybe$none, $10973);
                                        var $10974 = $10975;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $10977 = self.value;
                                                var $10978 = self.errors;
                                                var $10979 = Kind$Check$result$($10977, List$concat$($10973, $10978));
                                                var $10976 = $10979;
                                                break;
                                        };
                                        var $10974 = $10976;
                                        break;
                                };
                                var $10971 = $10974;
                                break;
                        };
                        var $10969 = $10971;
                        break;
                    case 'Kind.Term.ori':
                        var $10980 = self.expr;
                        var $10981 = Kind$Term$equal$extra_holes$filler$(_a$1, $10980);
                        var $10969 = $10981;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $10982 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $10969 = $10982;
                        break;
                };
                var $10929 = $10969;
                break;
            case 'Kind.Term.ref':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.new':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $10984 = self.path;
                        var self = Kind$Term$equal$hole$($10984, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $10986 = self.value;
                                var $10987 = self.errors;
                                var self = $10986;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $10989 = Kind$Check$result$(Maybe$none, $10987);
                                        var $10988 = $10989;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $10991 = self.value;
                                                var $10992 = self.errors;
                                                var $10993 = Kind$Check$result$($10991, List$concat$($10987, $10992));
                                                var $10990 = $10993;
                                                break;
                                        };
                                        var $10988 = $10990;
                                        break;
                                };
                                var $10985 = $10988;
                                break;
                        };
                        var $10983 = $10985;
                        break;
                    case 'Kind.Term.ori':
                        var $10994 = self.expr;
                        var $10995 = Kind$Term$equal$extra_holes$filler$(_a$1, $10994);
                        var $10983 = $10995;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $10996 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $10983 = $10996;
                        break;
                };
                var $10929 = $10983;
                break;
            case 'Kind.Term.typ':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $10998 = self.path;
                        var self = Kind$Term$equal$hole$($10998, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11000 = self.value;
                                var $11001 = self.errors;
                                var self = $11000;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11003 = Kind$Check$result$(Maybe$none, $11001);
                                        var $11002 = $11003;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11005 = self.value;
                                                var $11006 = self.errors;
                                                var $11007 = Kind$Check$result$($11005, List$concat$($11001, $11006));
                                                var $11004 = $11007;
                                                break;
                                        };
                                        var $11002 = $11004;
                                        break;
                                };
                                var $10999 = $11002;
                                break;
                        };
                        var $10997 = $10999;
                        break;
                    case 'Kind.Term.ori':
                        var $11008 = self.expr;
                        var $11009 = Kind$Term$equal$extra_holes$filler$(_a$1, $11008);
                        var $10997 = $11009;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11010 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $10997 = $11010;
                        break;
                };
                var $10929 = $10997;
                break;
            case 'Kind.Term.all':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11012 = self.path;
                        var self = Kind$Term$equal$hole$($11012, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11014 = self.value;
                                var $11015 = self.errors;
                                var self = $11014;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11017 = Kind$Check$result$(Maybe$none, $11015);
                                        var $11016 = $11017;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11019 = self.value;
                                                var $11020 = self.errors;
                                                var $11021 = Kind$Check$result$($11019, List$concat$($11015, $11020));
                                                var $11018 = $11021;
                                                break;
                                        };
                                        var $11016 = $11018;
                                        break;
                                };
                                var $11013 = $11016;
                                break;
                        };
                        var $11011 = $11013;
                        break;
                    case 'Kind.Term.ori':
                        var $11022 = self.expr;
                        var $11023 = Kind$Term$equal$extra_holes$filler$(_a$1, $11022);
                        var $11011 = $11023;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11024 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11011 = $11024;
                        break;
                };
                var $10929 = $11011;
                break;
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.num':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11026 = self.path;
                        var self = Kind$Term$equal$hole$($11026, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11028 = self.value;
                                var $11029 = self.errors;
                                var self = $11028;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11031 = Kind$Check$result$(Maybe$none, $11029);
                                        var $11030 = $11031;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11033 = self.value;
                                                var $11034 = self.errors;
                                                var $11035 = Kind$Check$result$($11033, List$concat$($11029, $11034));
                                                var $11032 = $11035;
                                                break;
                                        };
                                        var $11030 = $11032;
                                        break;
                                };
                                var $11027 = $11030;
                                break;
                        };
                        var $11025 = $11027;
                        break;
                    case 'Kind.Term.ori':
                        var $11036 = self.expr;
                        var $11037 = Kind$Term$equal$extra_holes$filler$(_a$1, $11036);
                        var $11025 = $11037;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11038 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11025 = $11038;
                        break;
                };
                var $10929 = $11025;
                break;
            case 'Kind.Term.cse':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11040 = self.path;
                        var self = Kind$Term$equal$hole$($11040, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11042 = self.value;
                                var $11043 = self.errors;
                                var self = $11042;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11045 = Kind$Check$result$(Maybe$none, $11043);
                                        var $11044 = $11045;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11047 = self.value;
                                                var $11048 = self.errors;
                                                var $11049 = Kind$Check$result$($11047, List$concat$($11043, $11048));
                                                var $11046 = $11049;
                                                break;
                                        };
                                        var $11044 = $11046;
                                        break;
                                };
                                var $11041 = $11044;
                                break;
                        };
                        var $11039 = $11041;
                        break;
                    case 'Kind.Term.ori':
                        var $11050 = self.expr;
                        var $11051 = Kind$Term$equal$extra_holes$filler$(_a$1, $11050);
                        var $11039 = $11051;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11052 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11039 = $11052;
                        break;
                };
                var $10929 = $11039;
                break;
        };
        return $10929;
    };
    const Kind$Term$equal$extra_holes$filler = x0 => x1 => Kind$Term$equal$extra_holes$filler$(x0, x1);

    function Kind$Term$equal$extra_holes$(_a$1, _b$2) {
        var self = Kind$Term$equal$extra_holes$funari$(_a$1, 0n);
        switch (self._) {
            case 'Maybe.some':
                var $11054 = self.value;
                var self = Kind$Term$equal$extra_holes$funari$(_b$2, 0n);
                switch (self._) {
                    case 'Maybe.some':
                        var $11056 = self.value;
                        var self = $11054;
                        switch (self._) {
                            case 'Pair.new':
                                var $11058 = self.fst;
                                var $11059 = self.snd;
                                var self = $11056;
                                switch (self._) {
                                    case 'Pair.new':
                                        var $11061 = self.fst;
                                        var $11062 = self.snd;
                                        var _same_fun$9 = ($11058 === $11061);
                                        var _same_ari$10 = ($11059 === $11062);
                                        var self = (_same_fun$9 && _same_ari$10);
                                        if (self) {
                                            var $11064 = Kind$Term$equal$extra_holes$filler$(_a$1, _b$2);
                                            var $11063 = $11064;
                                        } else {
                                            var $11065 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                            var $11063 = $11065;
                                        };
                                        var $11060 = $11063;
                                        break;
                                };
                                var $11057 = $11060;
                                break;
                        };
                        var $11055 = $11057;
                        break;
                    case 'Maybe.none':
                        var $11066 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11055 = $11066;
                        break;
                };
                var $11053 = $11055;
                break;
            case 'Maybe.none':
                var $11067 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                var $11053 = $11067;
                break;
        };
        return $11053;
    };
    const Kind$Term$equal$extra_holes = x0 => x1 => Kind$Term$equal$extra_holes$(x0, x1);

    function BitsSet$set$(_bits$1, _set$2) {
        var $11068 = (bitsmap_set(_bits$1, Unit$new, _set$2, 'set'));
        return $11068;
    };
    const BitsSet$set = x0 => x1 => BitsSet$set$(x0, x1);

    function BitsSet$mut$set$(_bits$1, _set$2) {
        var $11069 = BitsSet$set$(_bits$1, _set$2);
        return $11069;
    };
    const BitsSet$mut$set = x0 => x1 => BitsSet$mut$set$(x0, x1);

    function Bool$eql$(_a$1, _b$2) {
        var self = _a$1;
        if (self) {
            var $11071 = _b$2;
            var $11070 = $11071;
        } else {
            var $11072 = (!_b$2);
            var $11070 = $11072;
        };
        return $11070;
    };
    const Bool$eql = x0 => x1 => Bool$eql$(x0, x1);

    function Kind$Term$equal$go$(_a$1, _b$2, _defs$3, _lv$4, _seen$5) {
        var _ah$6 = Kind$Term$serialize$(Kind$Term$reduce$(_a$1, Kind$Map$new), _lv$4, Bool$false);
        var _bh$7 = Kind$Term$serialize$(Kind$Term$reduce$(_b$2, Kind$Map$new), _lv$4, Bool$true);
        var self = (_bh$7 === _ah$6);
        if (self) {
            var $11074 = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
            var $11073 = $11074;
        } else {
            var _a1$8 = Kind$Term$reduce$(_a$1, _defs$3);
            var _b1$9 = Kind$Term$reduce$(_b$2, _defs$3);
            var _ah$10 = Kind$Term$serialize$(_a1$8, _lv$4, Bool$false);
            var _bh$11 = Kind$Term$serialize$(_b1$9, _lv$4, Bool$true);
            var self = (_bh$11 === _ah$10);
            if (self) {
                var $11076 = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
                var $11075 = $11076;
            } else {
                var _id$12 = (_bh$11 + _ah$10);
                var self = BitsSet$mut$has$(_id$12, _seen$5);
                if (self) {
                    var self = Kind$Term$equal$extra_holes$(_a$1, _b$2);
                    switch (self._) {
                        case 'Kind.Check.result':
                            var $11079 = self.value;
                            var $11080 = self.errors;
                            var self = $11079;
                            switch (self._) {
                                case 'Maybe.none':
                                    var $11082 = Kind$Check$result$(Maybe$none, $11080);
                                    var $11081 = $11082;
                                    break;
                                case 'Maybe.some':
                                    var self = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11084 = self.value;
                                            var $11085 = self.errors;
                                            var $11086 = Kind$Check$result$($11084, List$concat$($11080, $11085));
                                            var $11083 = $11086;
                                            break;
                                    };
                                    var $11081 = $11083;
                                    break;
                            };
                            var $11078 = $11081;
                            break;
                    };
                    var $11077 = $11078;
                } else {
                    var self = _a1$8;
                    switch (self._) {
                        case 'Kind.Term.all':
                            var $11088 = self.eras;
                            var $11089 = self.self;
                            var $11090 = self.name;
                            var $11091 = self.xtyp;
                            var $11092 = self.body;
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.all':
                                    var $11094 = self.eras;
                                    var $11095 = self.self;
                                    var $11096 = self.name;
                                    var $11097 = self.xtyp;
                                    var $11098 = self.body;
                                    var _seen$23 = BitsSet$mut$set$(_id$12, _seen$5);
                                    var _a1_body$24 = $11092(Kind$Term$var$($11089, _lv$4))(Kind$Term$var$($11090, Nat$succ$(_lv$4)));
                                    var _b1_body$25 = $11098(Kind$Term$var$($11095, _lv$4))(Kind$Term$var$($11096, Nat$succ$(_lv$4)));
                                    var _eq_self$26 = ($11089 === $11095);
                                    var _eq_eras$27 = Bool$eql$($11088, $11094);
                                    var self = (_eq_self$26 && _eq_eras$27);
                                    if (self) {
                                        var self = Kind$Term$equal$go$($11091, $11097, _defs$3, _lv$4, _seen$23);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11101 = self.value;
                                                var $11102 = self.errors;
                                                var self = $11101;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $11104 = self.value;
                                                        var self = Kind$Term$equal$go$(_a1_body$24, _b1_body$25, _defs$3, Nat$succ$(Nat$succ$(_lv$4)), _seen$23);
                                                        switch (self._) {
                                                            case 'Kind.Check.result':
                                                                var $11106 = self.value;
                                                                var $11107 = self.errors;
                                                                var self = $11106;
                                                                switch (self._) {
                                                                    case 'Maybe.some':
                                                                        var $11109 = self.value;
                                                                        var self = Kind$Check$result$(Maybe$some$(($11104 && $11109)), List$nil);
                                                                        switch (self._) {
                                                                            case 'Kind.Check.result':
                                                                                var $11111 = self.value;
                                                                                var $11112 = self.errors;
                                                                                var $11113 = Kind$Check$result$($11111, List$concat$($11107, $11112));
                                                                                var $11110 = $11113;
                                                                                break;
                                                                        };
                                                                        var $11108 = $11110;
                                                                        break;
                                                                    case 'Maybe.none':
                                                                        var $11114 = Kind$Check$result$(Maybe$none, $11107);
                                                                        var $11108 = $11114;
                                                                        break;
                                                                };
                                                                var self = $11108;
                                                                break;
                                                        };
                                                        switch (self._) {
                                                            case 'Kind.Check.result':
                                                                var $11115 = self.value;
                                                                var $11116 = self.errors;
                                                                var $11117 = Kind$Check$result$($11115, List$concat$($11102, $11116));
                                                                var $11105 = $11117;
                                                                break;
                                                        };
                                                        var $11103 = $11105;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $11118 = Kind$Check$result$(Maybe$none, $11102);
                                                        var $11103 = $11118;
                                                        break;
                                                };
                                                var $11100 = $11103;
                                                break;
                                        };
                                        var $11099 = $11100;
                                    } else {
                                        var $11119 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                        var $11099 = $11119;
                                    };
                                    var $11093 = $11099;
                                    break;
                                case 'Kind.Term.hol':
                                    var $11120 = self.path;
                                    var $11121 = Kind$Term$equal$hole$($11120, _a$1);
                                    var $11093 = $11121;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11122 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11093 = $11122;
                                    break;
                            };
                            var $11087 = $11093;
                            break;
                        case 'Kind.Term.lam':
                            var $11123 = self.name;
                            var $11124 = self.body;
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.lam':
                                    var $11126 = self.name;
                                    var $11127 = self.body;
                                    var _seen$17 = BitsSet$mut$set$(_id$12, _seen$5);
                                    var _a1_body$18 = $11124(Kind$Term$var$($11123, _lv$4));
                                    var _b1_body$19 = $11127(Kind$Term$var$($11126, _lv$4));
                                    var self = Kind$Term$equal$go$(_a1_body$18, _b1_body$19, _defs$3, Nat$succ$(_lv$4), _seen$17);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11129 = self.value;
                                            var $11130 = self.errors;
                                            var self = $11129;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $11132 = self.value;
                                                    var self = Kind$Check$result$(Maybe$some$($11132), List$nil);
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11134 = self.value;
                                                            var $11135 = self.errors;
                                                            var $11136 = Kind$Check$result$($11134, List$concat$($11130, $11135));
                                                            var $11133 = $11136;
                                                            break;
                                                    };
                                                    var $11131 = $11133;
                                                    break;
                                                case 'Maybe.none':
                                                    var $11137 = Kind$Check$result$(Maybe$none, $11130);
                                                    var $11131 = $11137;
                                                    break;
                                            };
                                            var $11128 = $11131;
                                            break;
                                    };
                                    var $11125 = $11128;
                                    break;
                                case 'Kind.Term.hol':
                                    var $11138 = self.path;
                                    var $11139 = Kind$Term$equal$hole$($11138, _a$1);
                                    var $11125 = $11139;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11140 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11125 = $11140;
                                    break;
                            };
                            var $11087 = $11125;
                            break;
                        case 'Kind.Term.app':
                            var $11141 = self.func;
                            var $11142 = self.argm;
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.app':
                                    var $11144 = self.func;
                                    var $11145 = self.argm;
                                    var _seen$17 = BitsSet$mut$set$(_id$12, _seen$5);
                                    var self = Kind$Term$equal$go$($11141, $11144, _defs$3, _lv$4, _seen$17);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11147 = self.value;
                                            var $11148 = self.errors;
                                            var self = $11147;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $11150 = self.value;
                                                    var self = Kind$Term$equal$go$($11142, $11145, _defs$3, _lv$4, _seen$17);
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11152 = self.value;
                                                            var $11153 = self.errors;
                                                            var self = $11152;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $11155 = self.value;
                                                                    var self = Kind$Check$result$(Maybe$some$(($11150 && $11155)), List$nil);
                                                                    switch (self._) {
                                                                        case 'Kind.Check.result':
                                                                            var $11157 = self.value;
                                                                            var $11158 = self.errors;
                                                                            var $11159 = Kind$Check$result$($11157, List$concat$($11153, $11158));
                                                                            var $11156 = $11159;
                                                                            break;
                                                                    };
                                                                    var $11154 = $11156;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $11160 = Kind$Check$result$(Maybe$none, $11153);
                                                                    var $11154 = $11160;
                                                                    break;
                                                            };
                                                            var self = $11154;
                                                            break;
                                                    };
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11161 = self.value;
                                                            var $11162 = self.errors;
                                                            var $11163 = Kind$Check$result$($11161, List$concat$($11148, $11162));
                                                            var $11151 = $11163;
                                                            break;
                                                    };
                                                    var $11149 = $11151;
                                                    break;
                                                case 'Maybe.none':
                                                    var $11164 = Kind$Check$result$(Maybe$none, $11148);
                                                    var $11149 = $11164;
                                                    break;
                                            };
                                            var $11146 = $11149;
                                            break;
                                    };
                                    var $11143 = $11146;
                                    break;
                                case 'Kind.Term.hol':
                                    var $11165 = self.path;
                                    var $11166 = Kind$Term$equal$hole$($11165, _a$1);
                                    var $11143 = $11166;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11167 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11143 = $11167;
                                    break;
                            };
                            var $11087 = $11143;
                            break;
                        case 'Kind.Term.let':
                            var $11168 = self.name;
                            var $11169 = self.expr;
                            var $11170 = self.body;
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.let':
                                    var $11172 = self.name;
                                    var $11173 = self.expr;
                                    var $11174 = self.body;
                                    var _seen$19 = BitsSet$mut$set$(_id$12, _seen$5);
                                    var _a1_body$20 = $11170(Kind$Term$var$($11168, _lv$4));
                                    var _b1_body$21 = $11174(Kind$Term$var$($11172, _lv$4));
                                    var self = Kind$Term$equal$go$($11169, $11173, _defs$3, _lv$4, _seen$19);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11176 = self.value;
                                            var $11177 = self.errors;
                                            var self = $11176;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $11179 = self.value;
                                                    var self = Kind$Term$equal$go$(_a1_body$20, _b1_body$21, _defs$3, Nat$succ$(_lv$4), _seen$19);
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11181 = self.value;
                                                            var $11182 = self.errors;
                                                            var self = $11181;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $11184 = self.value;
                                                                    var self = Kind$Check$result$(Maybe$some$(($11179 && $11184)), List$nil);
                                                                    switch (self._) {
                                                                        case 'Kind.Check.result':
                                                                            var $11186 = self.value;
                                                                            var $11187 = self.errors;
                                                                            var $11188 = Kind$Check$result$($11186, List$concat$($11182, $11187));
                                                                            var $11185 = $11188;
                                                                            break;
                                                                    };
                                                                    var $11183 = $11185;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $11189 = Kind$Check$result$(Maybe$none, $11182);
                                                                    var $11183 = $11189;
                                                                    break;
                                                            };
                                                            var self = $11183;
                                                            break;
                                                    };
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11190 = self.value;
                                                            var $11191 = self.errors;
                                                            var $11192 = Kind$Check$result$($11190, List$concat$($11177, $11191));
                                                            var $11180 = $11192;
                                                            break;
                                                    };
                                                    var $11178 = $11180;
                                                    break;
                                                case 'Maybe.none':
                                                    var $11193 = Kind$Check$result$(Maybe$none, $11177);
                                                    var $11178 = $11193;
                                                    break;
                                            };
                                            var $11175 = $11178;
                                            break;
                                    };
                                    var $11171 = $11175;
                                    break;
                                case 'Kind.Term.hol':
                                    var $11194 = self.path;
                                    var $11195 = Kind$Term$equal$hole$($11194, _a$1);
                                    var $11171 = $11195;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11196 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11171 = $11196;
                                    break;
                            };
                            var $11087 = $11171;
                            break;
                        case 'Kind.Term.hol':
                            var $11197 = self.path;
                            var $11198 = Kind$Term$equal$hole$($11197, _b$2);
                            var $11087 = $11198;
                            break;
                        case 'Kind.Term.var':
                        case 'Kind.Term.get':
                        case 'Kind.Term.ori':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11200 = self.path;
                                    var $11201 = Kind$Term$equal$hole$($11200, _a$1);
                                    var $11199 = $11201;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11202 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11199 = $11202;
                                    break;
                            };
                            var $11087 = $11199;
                            break;
                        case 'Kind.Term.ref':
                        case 'Kind.Term.nat':
                        case 'Kind.Term.chr':
                        case 'Kind.Term.str':
                        case 'Kind.Term.new':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11204 = self.path;
                                    var $11205 = Kind$Term$equal$hole$($11204, _a$1);
                                    var $11203 = $11205;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11206 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11203 = $11206;
                                    break;
                            };
                            var $11087 = $11203;
                            break;
                        case 'Kind.Term.typ':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11208 = self.path;
                                    var $11209 = Kind$Term$equal$hole$($11208, _a$1);
                                    var $11207 = $11209;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11210 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11207 = $11210;
                                    break;
                            };
                            var $11087 = $11207;
                            break;
                        case 'Kind.Term.def':
                        case 'Kind.Term.ann':
                        case 'Kind.Term.gol':
                        case 'Kind.Term.num':
                        case 'Kind.Term.set':
                        case 'Kind.Term.ope':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11212 = self.path;
                                    var $11213 = Kind$Term$equal$hole$($11212, _a$1);
                                    var $11211 = $11213;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11214 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11211 = $11214;
                                    break;
                            };
                            var $11087 = $11211;
                            break;
                        case 'Kind.Term.cse':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11216 = self.path;
                                    var $11217 = Kind$Term$equal$hole$($11216, _a$1);
                                    var $11215 = $11217;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11218 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11215 = $11218;
                                    break;
                            };
                            var $11087 = $11215;
                            break;
                    };
                    var $11077 = $11087;
                };
                var $11075 = $11077;
            };
            var $11073 = $11075;
        };
        return $11073;
    };
    const Kind$Term$equal$go = x0 => x1 => x2 => x3 => x4 => Kind$Term$equal$go$(x0, x1, x2, x3, x4);
    const BitsSet$new = BitsMap$new;

    function BitsSet$mut$new$(_a$1) {
        var $11219 = BitsSet$new;
        return $11219;
    };
    const BitsSet$mut$new = x0 => BitsSet$mut$new$(x0);

    function Kind$Term$check$(_term$1, _type$2, _defs$3, _ctx$4, _path$5, _orig$6) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.var':
                var $11221 = self.name;
                var $11222 = self.indx;
                var self = List$at_last$($11222, _ctx$4);
                switch (self._) {
                    case 'Maybe.some':
                        var $11224 = self.value;
                        var $11225 = Kind$Check$result$(Maybe$some$((() => {
                            var self = $11224;
                            switch (self._) {
                                case 'Pair.new':
                                    var $11226 = self.snd;
                                    var $11227 = $11226;
                                    return $11227;
                            };
                        })()), List$nil);
                        var $11223 = $11225;
                        break;
                    case 'Maybe.none':
                        var $11228 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$undefined_reference$(_orig$6, $11221), List$nil));
                        var $11223 = $11228;
                        break;
                };
                var self = $11223;
                break;
            case 'Kind.Term.ref':
                var $11229 = self.name;
                var self = Kind$Map$get$($11229, _defs$3);
                switch (self._) {
                    case 'Maybe.some':
                        var $11231 = self.value;
                        var self = $11231;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $11233 = self.name;
                                var $11234 = self.term;
                                var $11235 = self.type;
                                var $11236 = self.stat;
                                var _ref_name$18 = $11233;
                                var _ref_type$19 = $11235;
                                var _ref_term$20 = $11234;
                                var _ref_stat$21 = $11236;
                                var self = _ref_stat$21;
                                switch (self._) {
                                    case 'Kind.Status.init':
                                        var $11238 = Kind$Check$result$(Maybe$some$(_ref_type$19), List$cons$(Kind$Error$waiting$(_ref_name$18), List$nil));
                                        var $11237 = $11238;
                                        break;
                                    case 'Kind.Status.wait':
                                    case 'Kind.Status.done':
                                        var $11239 = Kind$Check$result$(Maybe$some$(_ref_type$19), List$nil);
                                        var $11237 = $11239;
                                        break;
                                    case 'Kind.Status.fail':
                                        var $11240 = Kind$Check$result$(Maybe$some$(_ref_type$19), List$cons$(Kind$Error$indirect$(_ref_name$18), List$nil));
                                        var $11237 = $11240;
                                        break;
                                };
                                var $11232 = $11237;
                                break;
                        };
                        var $11230 = $11232;
                        break;
                    case 'Maybe.none':
                        var $11241 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$undefined_reference$(_orig$6, $11229), List$nil));
                        var $11230 = $11241;
                        break;
                };
                var self = $11230;
                break;
            case 'Kind.Term.all':
                var $11242 = self.self;
                var $11243 = self.name;
                var $11244 = self.xtyp;
                var $11245 = self.body;
                var _ctx_size$12 = (list_length(_ctx$4));
                var _self_var$13 = Kind$Term$var$($11242, _ctx_size$12);
                var _body_var$14 = Kind$Term$var$($11243, Nat$succ$(_ctx_size$12));
                var _body_ctx$15 = List$cons$(Pair$new$($11243, $11244), List$cons$(Pair$new$($11242, _term$1), _ctx$4));
                var self = Kind$Term$check$($11244, Maybe$some$(Kind$Term$typ), _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11247 = self.value;
                        var $11248 = self.errors;
                        var self = $11247;
                        switch (self._) {
                            case 'Maybe.none':
                                var $11250 = Kind$Check$result$(Maybe$none, $11248);
                                var $11249 = $11250;
                                break;
                            case 'Maybe.some':
                                var self = Kind$Term$check$($11245(_self_var$13)(_body_var$14), Maybe$some$(Kind$Term$typ), _defs$3, _body_ctx$15, Kind$MPath$i$(_path$5), _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11252 = self.value;
                                        var $11253 = self.errors;
                                        var self = $11252;
                                        switch (self._) {
                                            case 'Maybe.none':
                                                var $11255 = Kind$Check$result$(Maybe$none, $11253);
                                                var $11254 = $11255;
                                                break;
                                            case 'Maybe.some':
                                                var self = Kind$Check$result$(Maybe$some$(Kind$Term$typ), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11257 = self.value;
                                                        var $11258 = self.errors;
                                                        var $11259 = Kind$Check$result$($11257, List$concat$($11253, $11258));
                                                        var $11256 = $11259;
                                                        break;
                                                };
                                                var $11254 = $11256;
                                                break;
                                        };
                                        var self = $11254;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11260 = self.value;
                                        var $11261 = self.errors;
                                        var $11262 = Kind$Check$result$($11260, List$concat$($11248, $11261));
                                        var $11251 = $11262;
                                        break;
                                };
                                var $11249 = $11251;
                                break;
                        };
                        var $11246 = $11249;
                        break;
                };
                var self = $11246;
                break;
            case 'Kind.Term.lam':
                var $11263 = self.name;
                var $11264 = self.body;
                var self = _type$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $11266 = self.value;
                        var _typv$10 = Kind$Term$reduce$($11266, _defs$3);
                        var self = _typv$10;
                        switch (self._) {
                            case 'Kind.Term.all':
                                var $11268 = self.xtyp;
                                var $11269 = self.body;
                                var _ctx_size$16 = (list_length(_ctx$4));
                                var _self_var$17 = _term$1;
                                var _body_var$18 = Kind$Term$var$($11263, _ctx_size$16);
                                var _body_typ$19 = $11269(_self_var$17)(_body_var$18);
                                var _body_ctx$20 = List$cons$(Pair$new$($11263, $11268), _ctx$4);
                                var self = Kind$Term$check$($11264(_body_var$18), Maybe$some$(_body_typ$19), _defs$3, _body_ctx$20, Kind$MPath$o$(_path$5), _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11271 = self.value;
                                        var $11272 = self.errors;
                                        var self = $11271;
                                        switch (self._) {
                                            case 'Maybe.none':
                                                var $11274 = Kind$Check$result$(Maybe$none, $11272);
                                                var $11273 = $11274;
                                                break;
                                            case 'Maybe.some':
                                                var self = Kind$Check$result$(Maybe$some$($11266), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11276 = self.value;
                                                        var $11277 = self.errors;
                                                        var $11278 = Kind$Check$result$($11276, List$concat$($11272, $11277));
                                                        var $11275 = $11278;
                                                        break;
                                                };
                                                var $11273 = $11275;
                                                break;
                                        };
                                        var $11270 = $11273;
                                        break;
                                };
                                var $11267 = $11270;
                                break;
                            case 'Kind.Term.var':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.get':
                            case 'Kind.Term.ori':
                                var _expected$13 = Either$left$("function");
                                var _detected$14 = Either$right$($11266);
                                var $11279 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$13, _detected$14, _ctx$4), List$nil));
                                var $11267 = $11279;
                                break;
                            case 'Kind.Term.ref':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.new':
                                var _expected$12 = Either$left$("function");
                                var _detected$13 = Either$right$($11266);
                                var $11280 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$12, _detected$13, _ctx$4), List$nil));
                                var $11267 = $11280;
                                break;
                            case 'Kind.Term.typ':
                                var _expected$11 = Either$left$("function");
                                var _detected$12 = Either$right$($11266);
                                var $11281 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$11, _detected$12, _ctx$4), List$nil));
                                var $11267 = $11281;
                                break;
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.num':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                                var _expected$14 = Either$left$("function");
                                var _detected$15 = Either$right$($11266);
                                var $11282 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$14, _detected$15, _ctx$4), List$nil));
                                var $11267 = $11282;
                                break;
                            case 'Kind.Term.cse':
                                var _expected$17 = Either$left$("function");
                                var _detected$18 = Either$right$($11266);
                                var $11283 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$17, _detected$18, _ctx$4), List$nil));
                                var $11267 = $11283;
                                break;
                        };
                        var $11265 = $11267;
                        break;
                    case 'Maybe.none':
                        var _lam_type$9 = Kind$Term$hol$(Bits$e);
                        var _lam_term$10 = Kind$Term$ann$(Bool$false, _term$1, _lam_type$9);
                        var $11284 = Kind$Term$check$patch$(_lam_term$10, _type$2, _path$5);
                        var $11265 = $11284;
                        break;
                };
                var self = $11265;
                break;
            case 'Kind.Term.app':
                var $11285 = self.func;
                var $11286 = self.argm;
                var self = Kind$Term$check$($11285, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11288 = self.value;
                        var $11289 = self.errors;
                        var self = $11288;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11291 = self.value;
                                var _func_typ$12 = Kind$Term$reduce$($11291, _defs$3);
                                var self = _func_typ$12;
                                switch (self._) {
                                    case 'Kind.Term.all':
                                        var $11293 = self.xtyp;
                                        var $11294 = self.body;
                                        var self = Kind$Term$check$($11286, Maybe$some$($11293), _defs$3, _ctx$4, Kind$MPath$i$(_path$5), _orig$6);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11296 = self.value;
                                                var $11297 = self.errors;
                                                var self = $11296;
                                                switch (self._) {
                                                    case 'Maybe.none':
                                                        var $11299 = Kind$Check$result$(Maybe$none, $11297);
                                                        var $11298 = $11299;
                                                        break;
                                                    case 'Maybe.some':
                                                        var self = Kind$Check$result$(Maybe$some$($11294($11285)($11286)), List$nil);
                                                        switch (self._) {
                                                            case 'Kind.Check.result':
                                                                var $11301 = self.value;
                                                                var $11302 = self.errors;
                                                                var $11303 = Kind$Check$result$($11301, List$concat$($11297, $11302));
                                                                var $11300 = $11303;
                                                                break;
                                                        };
                                                        var $11298 = $11300;
                                                        break;
                                                };
                                                var $11295 = $11298;
                                                break;
                                        };
                                        var self = $11295;
                                        break;
                                    case 'Kind.Term.var':
                                    case 'Kind.Term.lam':
                                    case 'Kind.Term.app':
                                    case 'Kind.Term.get':
                                    case 'Kind.Term.ori':
                                        var _expected$15 = Either$left$("function");
                                        var _detected$16 = Either$right$(_func_typ$12);
                                        var self = $11285;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11305 = self.orig;
                                                var $11306 = Maybe$some$($11305);
                                                var _orig$17 = $11306;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11307 = _orig$6;
                                                var _orig$17 = $11307;
                                                break;
                                        };
                                        var $11304 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$17, _expected$15, _detected$16, _ctx$4), List$nil));
                                        var self = $11304;
                                        break;
                                    case 'Kind.Term.ref':
                                    case 'Kind.Term.hol':
                                    case 'Kind.Term.nat':
                                    case 'Kind.Term.chr':
                                    case 'Kind.Term.str':
                                    case 'Kind.Term.new':
                                        var _expected$14 = Either$left$("function");
                                        var _detected$15 = Either$right$(_func_typ$12);
                                        var self = $11285;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11309 = self.orig;
                                                var $11310 = Maybe$some$($11309);
                                                var _orig$16 = $11310;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11311 = _orig$6;
                                                var _orig$16 = $11311;
                                                break;
                                        };
                                        var $11308 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$16, _expected$14, _detected$15, _ctx$4), List$nil));
                                        var self = $11308;
                                        break;
                                    case 'Kind.Term.typ':
                                        var _expected$13 = Either$left$("function");
                                        var _detected$14 = Either$right$(_func_typ$12);
                                        var self = $11285;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11313 = self.orig;
                                                var $11314 = Maybe$some$($11313);
                                                var _orig$15 = $11314;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11315 = _orig$6;
                                                var _orig$15 = $11315;
                                                break;
                                        };
                                        var $11312 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$15, _expected$13, _detected$14, _ctx$4), List$nil));
                                        var self = $11312;
                                        break;
                                    case 'Kind.Term.let':
                                    case 'Kind.Term.def':
                                    case 'Kind.Term.ann':
                                    case 'Kind.Term.gol':
                                    case 'Kind.Term.num':
                                    case 'Kind.Term.set':
                                    case 'Kind.Term.ope':
                                        var _expected$16 = Either$left$("function");
                                        var _detected$17 = Either$right$(_func_typ$12);
                                        var self = $11285;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11317 = self.orig;
                                                var $11318 = Maybe$some$($11317);
                                                var _orig$18 = $11318;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11319 = _orig$6;
                                                var _orig$18 = $11319;
                                                break;
                                        };
                                        var $11316 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$18, _expected$16, _detected$17, _ctx$4), List$nil));
                                        var self = $11316;
                                        break;
                                    case 'Kind.Term.cse':
                                        var _expected$19 = Either$left$("function");
                                        var _detected$20 = Either$right$(_func_typ$12);
                                        var self = $11285;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11321 = self.orig;
                                                var $11322 = Maybe$some$($11321);
                                                var _orig$21 = $11322;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11323 = _orig$6;
                                                var _orig$21 = $11323;
                                                break;
                                        };
                                        var $11320 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$21, _expected$19, _detected$20, _ctx$4), List$nil));
                                        var self = $11320;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11324 = self.value;
                                        var $11325 = self.errors;
                                        var $11326 = Kind$Check$result$($11324, List$concat$($11289, $11325));
                                        var $11292 = $11326;
                                        break;
                                };
                                var $11290 = $11292;
                                break;
                            case 'Maybe.none':
                                var $11327 = Kind$Check$result$(Maybe$none, $11289);
                                var $11290 = $11327;
                                break;
                        };
                        var $11287 = $11290;
                        break;
                };
                var self = $11287;
                break;
            case 'Kind.Term.let':
                var $11328 = self.name;
                var $11329 = self.expr;
                var $11330 = self.body;
                var _ctx_size$10 = (list_length(_ctx$4));
                var self = Kind$Term$check$($11329, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11332 = self.value;
                        var $11333 = self.errors;
                        var self = $11332;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11335 = self.value;
                                var _body_val$14 = $11330(Kind$Term$var$($11328, _ctx_size$10));
                                var _body_ctx$15 = List$cons$(Pair$new$($11328, $11335), _ctx$4);
                                var self = Kind$Term$check$(_body_val$14, _type$2, _defs$3, _body_ctx$15, Kind$MPath$i$(_path$5), _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11337 = self.value;
                                        var $11338 = self.errors;
                                        var self = $11337;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11340 = self.value;
                                                var self = Kind$Check$result$(Maybe$some$($11340), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11342 = self.value;
                                                        var $11343 = self.errors;
                                                        var $11344 = Kind$Check$result$($11342, List$concat$($11338, $11343));
                                                        var $11341 = $11344;
                                                        break;
                                                };
                                                var $11339 = $11341;
                                                break;
                                            case 'Maybe.none':
                                                var $11345 = Kind$Check$result$(Maybe$none, $11338);
                                                var $11339 = $11345;
                                                break;
                                        };
                                        var self = $11339;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11346 = self.value;
                                        var $11347 = self.errors;
                                        var $11348 = Kind$Check$result$($11346, List$concat$($11333, $11347));
                                        var $11336 = $11348;
                                        break;
                                };
                                var $11334 = $11336;
                                break;
                            case 'Maybe.none':
                                var $11349 = Kind$Check$result$(Maybe$none, $11333);
                                var $11334 = $11349;
                                break;
                        };
                        var $11331 = $11334;
                        break;
                };
                var self = $11331;
                break;
            case 'Kind.Term.def':
                var $11350 = self.name;
                var $11351 = self.expr;
                var $11352 = self.body;
                var _ctx_size$10 = (list_length(_ctx$4));
                var self = Kind$Term$check$($11351, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11354 = self.value;
                        var $11355 = self.errors;
                        var self = $11354;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11357 = self.value;
                                var _body_val$14 = $11352(Kind$Term$ann$(Bool$true, $11351, $11357));
                                var _body_ctx$15 = List$cons$(Pair$new$($11350, $11357), _ctx$4);
                                var self = Kind$Term$check$(_body_val$14, _type$2, _defs$3, _body_ctx$15, Kind$MPath$i$(_path$5), _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11359 = self.value;
                                        var $11360 = self.errors;
                                        var self = $11359;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11362 = self.value;
                                                var self = Kind$Check$result$(Maybe$some$($11362), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11364 = self.value;
                                                        var $11365 = self.errors;
                                                        var $11366 = Kind$Check$result$($11364, List$concat$($11360, $11365));
                                                        var $11363 = $11366;
                                                        break;
                                                };
                                                var $11361 = $11363;
                                                break;
                                            case 'Maybe.none':
                                                var $11367 = Kind$Check$result$(Maybe$none, $11360);
                                                var $11361 = $11367;
                                                break;
                                        };
                                        var self = $11361;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11368 = self.value;
                                        var $11369 = self.errors;
                                        var $11370 = Kind$Check$result$($11368, List$concat$($11355, $11369));
                                        var $11358 = $11370;
                                        break;
                                };
                                var $11356 = $11358;
                                break;
                            case 'Maybe.none':
                                var $11371 = Kind$Check$result$(Maybe$none, $11355);
                                var $11356 = $11371;
                                break;
                        };
                        var $11353 = $11356;
                        break;
                };
                var self = $11353;
                break;
            case 'Kind.Term.ann':
                var $11372 = self.done;
                var $11373 = self.term;
                var $11374 = self.type;
                var self = $11372;
                if (self) {
                    var $11376 = Kind$Check$result$(Maybe$some$($11374), List$nil);
                    var $11375 = $11376;
                } else {
                    var self = Kind$Term$check$($11373, Maybe$some$($11374), _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                    switch (self._) {
                        case 'Kind.Check.result':
                            var $11378 = self.value;
                            var $11379 = self.errors;
                            var self = $11378;
                            switch (self._) {
                                case 'Maybe.none':
                                    var $11381 = Kind$Check$result$(Maybe$none, $11379);
                                    var $11380 = $11381;
                                    break;
                                case 'Maybe.some':
                                    var self = Kind$Term$check$($11374, Maybe$some$(Kind$Term$typ), _defs$3, _ctx$4, Kind$MPath$i$(_path$5), _orig$6);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11383 = self.value;
                                            var $11384 = self.errors;
                                            var self = $11383;
                                            switch (self._) {
                                                case 'Maybe.none':
                                                    var $11386 = Kind$Check$result$(Maybe$none, $11384);
                                                    var $11385 = $11386;
                                                    break;
                                                case 'Maybe.some':
                                                    var self = Kind$Check$result$(Maybe$some$($11374), List$nil);
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11388 = self.value;
                                                            var $11389 = self.errors;
                                                            var $11390 = Kind$Check$result$($11388, List$concat$($11384, $11389));
                                                            var $11387 = $11390;
                                                            break;
                                                    };
                                                    var $11385 = $11387;
                                                    break;
                                            };
                                            var self = $11385;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11391 = self.value;
                                            var $11392 = self.errors;
                                            var $11393 = Kind$Check$result$($11391, List$concat$($11379, $11392));
                                            var $11382 = $11393;
                                            break;
                                    };
                                    var $11380 = $11382;
                                    break;
                            };
                            var $11377 = $11380;
                            break;
                    };
                    var $11375 = $11377;
                };
                var self = $11375;
                break;
            case 'Kind.Term.gol':
                var $11394 = self.name;
                var $11395 = self.dref;
                var $11396 = self.verb;
                var $11397 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$show_goal$($11394, $11395, $11396, _type$2, _ctx$4), List$nil));
                var self = $11397;
                break;
            case 'Kind.Term.num':
                var $11398 = self.sign;
                var $11399 = self.numb;
                var $11400 = self.frac;
                var _dsug$10 = Kind$Term$check$expand$num$($11398, $11399, $11400, _type$2, _defs$3);
                var $11401 = Kind$Term$check$patch$(_dsug$10, _type$2, _path$5);
                var self = $11401;
                break;
            case 'Kind.Term.cse':
                var $11402 = self.expr;
                var $11403 = self.name;
                var $11404 = self.with;
                var $11405 = self.cses;
                var $11406 = self.moti;
                var _expr$13 = $11402;
                var self = Kind$Term$check$(_expr$13, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11408 = self.value;
                        var $11409 = self.errors;
                        var self = $11408;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11411 = self.value;
                                var self = Kind$Term$check$infer_types_of_with$($11404, _defs$3, _ctx$4, _path$5, _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11413 = self.value;
                                        var $11414 = self.errors;
                                        var self = $11413;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11416 = self.value;
                                                var _dsug$20 = Kind$Term$check$expand$cse$($11402, $11403, $11416, $11405, $11406, $11411, _type$2, _defs$3, _ctx$4);
                                                var self = _dsug$20;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $11418 = self.value;
                                                        var $11419 = Kind$Term$check$patch$($11418, _type$2, _path$5);
                                                        var self = $11419;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $11420 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                                                        var self = $11420;
                                                        break;
                                                };
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11421 = self.value;
                                                        var $11422 = self.errors;
                                                        var $11423 = Kind$Check$result$($11421, List$concat$($11414, $11422));
                                                        var $11417 = $11423;
                                                        break;
                                                };
                                                var $11415 = $11417;
                                                break;
                                            case 'Maybe.none':
                                                var $11424 = Kind$Check$result$(Maybe$none, $11414);
                                                var $11415 = $11424;
                                                break;
                                        };
                                        var self = $11415;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11425 = self.value;
                                        var $11426 = self.errors;
                                        var $11427 = Kind$Check$result$($11425, List$concat$($11409, $11426));
                                        var $11412 = $11427;
                                        break;
                                };
                                var $11410 = $11412;
                                break;
                            case 'Maybe.none':
                                var $11428 = Kind$Check$result$(Maybe$none, $11409);
                                var $11410 = $11428;
                                break;
                        };
                        var $11407 = $11410;
                        break;
                };
                var self = $11407;
                break;
            case 'Kind.Term.new':
                var $11429 = self.args;
                var _dsug$8 = Kind$Term$check$expand$new$($11429, _type$2, _defs$3);
                var self = _dsug$8;
                switch (self._) {
                    case 'Maybe.some':
                        var $11431 = self.value;
                        var $11432 = Kind$Term$check$patch$($11431, _type$2, _path$5);
                        var $11430 = $11432;
                        break;
                    case 'Maybe.none':
                        var $11433 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                        var $11430 = $11433;
                        break;
                };
                var self = $11430;
                break;
            case 'Kind.Term.get':
                var $11434 = self.expr;
                var $11435 = self.fkey;
                var _expr$9 = $11434;
                var self = Kind$Term$check$(_expr$9, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11437 = self.value;
                        var $11438 = self.errors;
                        var self = $11437;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11440 = self.value;
                                var _dsug$13 = Kind$Term$check$expand$get$($11434, $11435, $11440, _defs$3);
                                var self = _dsug$13;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $11442 = self.value;
                                        var $11443 = Kind$Term$check$patch$($11442, _type$2, _path$5);
                                        var self = $11443;
                                        break;
                                    case 'Maybe.none':
                                        var $11444 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                                        var self = $11444;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11445 = self.value;
                                        var $11446 = self.errors;
                                        var $11447 = Kind$Check$result$($11445, List$concat$($11438, $11446));
                                        var $11441 = $11447;
                                        break;
                                };
                                var $11439 = $11441;
                                break;
                            case 'Maybe.none':
                                var $11448 = Kind$Check$result$(Maybe$none, $11438);
                                var $11439 = $11448;
                                break;
                        };
                        var $11436 = $11439;
                        break;
                };
                var self = $11436;
                break;
            case 'Kind.Term.set':
                var $11449 = self.expr;
                var $11450 = self.fkey;
                var $11451 = self.fval;
                var _expr$10 = $11449;
                var self = Kind$Term$check$(_expr$10, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11453 = self.value;
                        var $11454 = self.errors;
                        var self = $11453;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11456 = self.value;
                                var _dsug$14 = Kind$Term$check$expand$set$($11449, $11450, $11451, $11456, _defs$3);
                                var self = _dsug$14;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $11458 = self.value;
                                        var $11459 = Kind$Term$check$patch$($11458, _type$2, _path$5);
                                        var self = $11459;
                                        break;
                                    case 'Maybe.none':
                                        var $11460 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                                        var self = $11460;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11461 = self.value;
                                        var $11462 = self.errors;
                                        var $11463 = Kind$Check$result$($11461, List$concat$($11454, $11462));
                                        var $11457 = $11463;
                                        break;
                                };
                                var $11455 = $11457;
                                break;
                            case 'Maybe.none':
                                var $11464 = Kind$Check$result$(Maybe$none, $11454);
                                var $11455 = $11464;
                                break;
                        };
                        var $11452 = $11455;
                        break;
                };
                var self = $11452;
                break;
            case 'Kind.Term.ope':
                var $11465 = self.name;
                var $11466 = self.arg0;
                var $11467 = self.arg1;
                var _otyp$10 = Maybe$default$(_type$2, Kind$Term$hol$(Bits$e));
                var _dsug$11 = Kind$Term$check$expand$ope$(Bool$true, $11465, $11466, $11467, _otyp$10, _defs$3);
                var self = _dsug$11;
                switch (self._) {
                    case 'Maybe.some':
                        var $11469 = self.value;
                        var $11470 = Kind$Term$check$patch$($11469, _type$2, _path$5);
                        var $11468 = $11470;
                        break;
                    case 'Maybe.none':
                        var self = Kind$Term$check$($11466, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11472 = self.value;
                                var $11473 = self.errors;
                                var self = $11472;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $11475 = self.value;
                                        var _dsug$15 = Kind$Term$check$expand$ope$(Bool$false, $11465, $11466, $11467, $11475, _defs$3);
                                        var self = _dsug$15;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11477 = self.value;
                                                var $11478 = Kind$Term$check$patch$($11477, _type$2, _path$5);
                                                var self = $11478;
                                                break;
                                            case 'Maybe.none':
                                                var $11479 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                                                var self = $11479;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11480 = self.value;
                                                var $11481 = self.errors;
                                                var $11482 = Kind$Check$result$($11480, List$concat$($11473, $11481));
                                                var $11476 = $11482;
                                                break;
                                        };
                                        var $11474 = $11476;
                                        break;
                                    case 'Maybe.none':
                                        var $11483 = Kind$Check$result$(Maybe$none, $11473);
                                        var $11474 = $11483;
                                        break;
                                };
                                var $11471 = $11474;
                                break;
                        };
                        var $11468 = $11471;
                        break;
                };
                var self = $11468;
                break;
            case 'Kind.Term.ori':
                var $11484 = self.orig;
                var $11485 = self.expr;
                var $11486 = Kind$Term$check$($11485, _type$2, _defs$3, _ctx$4, _path$5, Maybe$some$($11484));
                var self = $11486;
                break;
            case 'Kind.Term.typ':
                var $11487 = Kind$Check$result$(Maybe$some$(Kind$Term$typ), List$nil);
                var self = $11487;
                break;
            case 'Kind.Term.hol':
                var $11488 = Kind$Check$result$(_type$2, List$nil);
                var self = $11488;
                break;
            case 'Kind.Term.nat':
                var self = _type$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $11490 = self.value;
                        var _tnam$9 = Kind$Term$check$get_name_of_self_type$($11490, _defs$3);
                        var self = _tnam$9;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11492 = self.value;
                                var self = ($11492 === "Nat");
                                if (self) {
                                    var $11494 = Kind$Term$check$direct$(Kind$Term$ref$("Nat"), _defs$3);
                                    var $11493 = $11494;
                                } else {
                                    var _cast$11 = Kind$Term$ref$(($11492 + ".from_nat"));
                                    var _cast$12 = Kind$Term$app$(_cast$11, _term$1);
                                    var $11495 = Kind$Term$check$patch$(_cast$12, _type$2, _path$5);
                                    var $11493 = $11495;
                                };
                                var $11491 = $11493;
                                break;
                            case 'Maybe.none':
                                var $11496 = Kind$Term$check$direct$(Kind$Term$ref$("Nat"), _defs$3);
                                var $11491 = $11496;
                                break;
                        };
                        var $11489 = $11491;
                        break;
                    case 'Maybe.none':
                        var $11497 = Kind$Term$check$direct$(Kind$Term$ref$("Nat"), _defs$3);
                        var $11489 = $11497;
                        break;
                };
                var self = $11489;
                break;
            case 'Kind.Term.chr':
                var $11498 = Kind$Term$check$direct$(Kind$Term$ref$("Char"), _defs$3);
                var self = $11498;
                break;
            case 'Kind.Term.str':
                var $11499 = Kind$Term$check$direct$(Kind$Term$ref$("String"), _defs$3);
                var self = $11499;
                break;
        };
        switch (self._) {
            case 'Kind.Check.result':
                var $11500 = self.value;
                var $11501 = self.errors;
                var self = $11500;
                switch (self._) {
                    case 'Maybe.some':
                        var $11503 = self.value;
                        var self = _type$2;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11505 = self.value;
                                var self = Kind$Term$equal$go$($11505, $11503, _defs$3, (list_length(_ctx$4)), BitsSet$mut$new$(Unit$new));
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11507 = self.value;
                                        var $11508 = self.errors;
                                        var self = $11507;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11510 = self.value;
                                                var self = $11510;
                                                if (self) {
                                                    var $11512 = Kind$Check$result$(Maybe$some$($11505), List$nil);
                                                    var self = $11512;
                                                } else {
                                                    var $11513 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, Either$right$($11505), Either$right$($11503), _ctx$4), List$nil));
                                                    var self = $11513;
                                                };
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11514 = self.value;
                                                        var $11515 = self.errors;
                                                        var $11516 = Kind$Check$result$($11514, List$concat$($11508, $11515));
                                                        var $11511 = $11516;
                                                        break;
                                                };
                                                var $11509 = $11511;
                                                break;
                                            case 'Maybe.none':
                                                var $11517 = Kind$Check$result$(Maybe$none, $11508);
                                                var $11509 = $11517;
                                                break;
                                        };
                                        var $11506 = $11509;
                                        break;
                                };
                                var self = $11506;
                                break;
                            case 'Maybe.none':
                                var $11518 = Kind$Check$result$(Maybe$some$($11503), List$nil);
                                var self = $11518;
                                break;
                        };
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11519 = self.value;
                                var $11520 = self.errors;
                                var $11521 = Kind$Check$result$($11519, List$concat$($11501, $11520));
                                var $11504 = $11521;
                                break;
                        };
                        var $11502 = $11504;
                        break;
                    case 'Maybe.none':
                        var $11522 = Kind$Check$result$(Maybe$none, $11501);
                        var $11502 = $11522;
                        break;
                };
                var $11220 = $11502;
                break;
        };
        return $11220;
    };
    const Kind$Term$check = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Term$check$(x0, x1, x2, x3, x4, x5);

    function Kind$Term$patch_at$(_path$1, _term$2, _fn$3) {
        var self = _term$2;
        switch (self._) {
            case 'Kind.Term.all':
                var $11524 = self.eras;
                var $11525 = self.self;
                var $11526 = self.name;
                var $11527 = self.xtyp;
                var $11528 = self.body;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11530 = self.slice(0, -1);
                        var $11531 = Kind$Term$all$($11524, $11525, $11526, Kind$Term$patch_at$($11530, $11527, _fn$3), $11528);
                        var $11529 = $11531;
                        break;
                    case 'i':
                        var $11532 = self.slice(0, -1);
                        var $11533 = Kind$Term$all$($11524, $11525, $11526, $11527, (_s$10 => _x$11 => {
                            var $11534 = Kind$Term$patch_at$($11532, $11528(_s$10)(_x$11), _fn$3);
                            return $11534;
                        }));
                        var $11529 = $11533;
                        break;
                    case 'e':
                        var $11535 = _fn$3(_term$2);
                        var $11529 = $11535;
                        break;
                };
                var $11523 = $11529;
                break;
            case 'Kind.Term.lam':
                var $11536 = self.name;
                var $11537 = self.body;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11539 = _fn$3(_term$2);
                        var $11538 = $11539;
                        break;
                    case 'o':
                    case 'i':
                        var $11540 = Kind$Term$lam$($11536, (_x$7 => {
                            var $11541 = Kind$Term$patch_at$(Bits$tail$(_path$1), $11537(_x$7), _fn$3);
                            return $11541;
                        }));
                        var $11538 = $11540;
                        break;
                };
                var $11523 = $11538;
                break;
            case 'Kind.Term.app':
                var $11542 = self.func;
                var $11543 = self.argm;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11545 = self.slice(0, -1);
                        var $11546 = Kind$Term$app$(Kind$Term$patch_at$($11545, $11542, _fn$3), $11543);
                        var $11544 = $11546;
                        break;
                    case 'i':
                        var $11547 = self.slice(0, -1);
                        var $11548 = Kind$Term$app$($11542, Kind$Term$patch_at$($11547, $11543, _fn$3));
                        var $11544 = $11548;
                        break;
                    case 'e':
                        var $11549 = _fn$3(_term$2);
                        var $11544 = $11549;
                        break;
                };
                var $11523 = $11544;
                break;
            case 'Kind.Term.let':
                var $11550 = self.name;
                var $11551 = self.expr;
                var $11552 = self.body;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11554 = self.slice(0, -1);
                        var $11555 = Kind$Term$let$($11550, Kind$Term$patch_at$($11554, $11551, _fn$3), $11552);
                        var $11553 = $11555;
                        break;
                    case 'i':
                        var $11556 = self.slice(0, -1);
                        var $11557 = Kind$Term$let$($11550, $11551, (_x$8 => {
                            var $11558 = Kind$Term$patch_at$($11556, $11552(_x$8), _fn$3);
                            return $11558;
                        }));
                        var $11553 = $11557;
                        break;
                    case 'e':
                        var $11559 = _fn$3(_term$2);
                        var $11553 = $11559;
                        break;
                };
                var $11523 = $11553;
                break;
            case 'Kind.Term.def':
                var $11560 = self.name;
                var $11561 = self.expr;
                var $11562 = self.body;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11564 = self.slice(0, -1);
                        var $11565 = Kind$Term$def$($11560, Kind$Term$patch_at$($11564, $11561, _fn$3), $11562);
                        var $11563 = $11565;
                        break;
                    case 'i':
                        var $11566 = self.slice(0, -1);
                        var $11567 = Kind$Term$def$($11560, $11561, (_x$8 => {
                            var $11568 = Kind$Term$patch_at$($11566, $11562(_x$8), _fn$3);
                            return $11568;
                        }));
                        var $11563 = $11567;
                        break;
                    case 'e':
                        var $11569 = _fn$3(_term$2);
                        var $11563 = $11569;
                        break;
                };
                var $11523 = $11563;
                break;
            case 'Kind.Term.ann':
                var $11570 = self.done;
                var $11571 = self.term;
                var $11572 = self.type;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11574 = self.slice(0, -1);
                        var $11575 = Kind$Term$ann$($11570, Kind$Term$patch_at$($11574, $11571, _fn$3), $11572);
                        var $11573 = $11575;
                        break;
                    case 'i':
                        var $11576 = self.slice(0, -1);
                        var $11577 = Kind$Term$ann$($11570, $11571, Kind$Term$patch_at$($11576, $11572, _fn$3));
                        var $11573 = $11577;
                        break;
                    case 'e':
                        var $11578 = _fn$3(_term$2);
                        var $11573 = $11578;
                        break;
                };
                var $11523 = $11573;
                break;
            case 'Kind.Term.get':
                var $11579 = self.expr;
                var $11580 = self.fkey;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11582 = self.slice(0, -1);
                        var $11583 = Kind$Term$get$(Kind$Term$patch_at$($11582, $11579, _fn$3), $11580);
                        var $11581 = $11583;
                        break;
                    case 'i':
                        var $11584 = self.slice(0, -1);
                        var $11585 = Kind$Term$get$(Kind$Term$patch_at$($11584, $11579, _fn$3), $11580);
                        var $11581 = $11585;
                        break;
                    case 'e':
                        var $11586 = _fn$3(_term$2);
                        var $11581 = $11586;
                        break;
                };
                var $11523 = $11581;
                break;
            case 'Kind.Term.set':
                var $11587 = self.expr;
                var $11588 = self.fkey;
                var $11589 = self.fval;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11591 = self.slice(0, -1);
                        var $11592 = Kind$Term$set$(Kind$Term$patch_at$($11591, $11587, _fn$3), $11588, $11589);
                        var $11590 = $11592;
                        break;
                    case 'i':
                        var $11593 = self.slice(0, -1);
                        var $11594 = Kind$Term$set$($11587, $11588, Kind$Term$patch_at$($11593, $11589, _fn$3));
                        var $11590 = $11594;
                        break;
                    case 'e':
                        var $11595 = _fn$3(_term$2);
                        var $11590 = $11595;
                        break;
                };
                var $11523 = $11590;
                break;
            case 'Kind.Term.ope':
                var $11596 = self.name;
                var $11597 = self.arg0;
                var $11598 = self.arg1;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11600 = self.slice(0, -1);
                        var $11601 = Kind$Term$ope$($11596, Kind$Term$patch_at$($11600, $11597, _fn$3), $11598);
                        var $11599 = $11601;
                        break;
                    case 'i':
                        var $11602 = self.slice(0, -1);
                        var $11603 = Kind$Term$ope$($11596, $11597, Kind$Term$patch_at$($11602, $11598, _fn$3));
                        var $11599 = $11603;
                        break;
                    case 'e':
                        var $11604 = _fn$3(_term$2);
                        var $11599 = $11604;
                        break;
                };
                var $11523 = $11599;
                break;
            case 'Kind.Term.ori':
                var $11605 = self.orig;
                var $11606 = self.expr;
                var $11607 = Kind$Term$ori$($11605, Kind$Term$patch_at$(_path$1, $11606, _fn$3));
                var $11523 = $11607;
                break;
            case 'Kind.Term.var':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11609 = _fn$3(_term$2);
                        var $11608 = $11609;
                        break;
                    case 'o':
                    case 'i':
                        var $11610 = _term$2;
                        var $11608 = $11610;
                        break;
                };
                var $11523 = $11608;
                break;
            case 'Kind.Term.ref':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.new':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11612 = _fn$3(_term$2);
                        var $11611 = $11612;
                        break;
                    case 'o':
                    case 'i':
                        var $11613 = _term$2;
                        var $11611 = $11613;
                        break;
                };
                var $11523 = $11611;
                break;
            case 'Kind.Term.typ':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11615 = _fn$3(_term$2);
                        var $11614 = $11615;
                        break;
                    case 'o':
                    case 'i':
                        var $11616 = _term$2;
                        var $11614 = $11616;
                        break;
                };
                var $11523 = $11614;
                break;
            case 'Kind.Term.gol':
            case 'Kind.Term.num':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11618 = _fn$3(_term$2);
                        var $11617 = $11618;
                        break;
                    case 'o':
                    case 'i':
                        var $11619 = _term$2;
                        var $11617 = $11619;
                        break;
                };
                var $11523 = $11617;
                break;
            case 'Kind.Term.cse':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11621 = _fn$3(_term$2);
                        var $11620 = $11621;
                        break;
                    case 'o':
                    case 'i':
                        var $11622 = _term$2;
                        var $11620 = $11622;
                        break;
                };
                var $11523 = $11620;
                break;
        };
        return $11523;
    };
    const Kind$Term$patch_at = x0 => x1 => x2 => Kind$Term$patch_at$(x0, x1, x2);

    function Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _defs$9, _errs$10, _fixd$11) {
        var self = _errs$10;
        switch (self._) {
            case 'List.cons':
                var $11624 = self.head;
                var $11625 = self.tail;
                var self = $11624;
                switch (self._) {
                    case 'Kind.Error.waiting':
                        var $11627 = self.name;
                        var $11628 = IO$monad$((_m$bind$15 => _m$pure$16 => {
                            var $11629 = _m$bind$15;
                            return $11629;
                        }))(Kind$Synth$one$($11627, _defs$9))((_new_defs$15 => {
                            var self = _new_defs$15;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $11631 = self.value;
                                    var $11632 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, $11631, $11625, Bool$true);
                                    var $11630 = $11632;
                                    break;
                                case 'Maybe.none':
                                    var $11633 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _defs$9, $11625, _fixd$11);
                                    var $11630 = $11633;
                                    break;
                            };
                            return $11630;
                        }));
                        var $11626 = $11628;
                        break;
                    case 'Kind.Error.patch':
                        var $11634 = self.path;
                        var $11635 = self.term;
                        var self = $11634;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $11637 = self.slice(0, -1);
                                var _term$17 = Kind$Term$patch_at$($11637, _term$5, (_x$17 => {
                                    var $11639 = $11635;
                                    return $11639;
                                }));
                                var $11638 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$17, _type$6, _isct$7, _arit$8, _defs$9, $11625, Bool$true);
                                var $11636 = $11638;
                                break;
                            case 'i':
                                var $11640 = self.slice(0, -1);
                                var _type$17 = Kind$Term$patch_at$($11640, _type$6, (_x$17 => {
                                    var $11642 = $11635;
                                    return $11642;
                                }));
                                var $11641 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$17, _isct$7, _arit$8, _defs$9, $11625, Bool$true);
                                var $11636 = $11641;
                                break;
                            case 'e':
                                var $11643 = IO$monad$((_m$bind$16 => _m$pure$17 => {
                                    var $11644 = _m$pure$17;
                                    return $11644;
                                }))(Maybe$none);
                                var $11636 = $11643;
                                break;
                        };
                        var $11626 = $11636;
                        break;
                    case 'Kind.Error.undefined_reference':
                        var $11645 = self.name;
                        var $11646 = IO$monad$((_m$bind$16 => _m$pure$17 => {
                            var $11647 = _m$bind$16;
                            return $11647;
                        }))(Kind$Synth$one$($11645, _defs$9))((_new_defs$16 => {
                            var self = _new_defs$16;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $11649 = self.value;
                                    var $11650 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, $11649, $11625, Bool$true);
                                    var $11648 = $11650;
                                    break;
                                case 'Maybe.none':
                                    var $11651 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _defs$9, $11625, _fixd$11);
                                    var $11648 = $11651;
                                    break;
                            };
                            return $11648;
                        }));
                        var $11626 = $11646;
                        break;
                    case 'Kind.Error.type_mismatch':
                    case 'Kind.Error.show_goal':
                    case 'Kind.Error.indirect':
                    case 'Kind.Error.cant_infer':
                        var $11652 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _defs$9, $11625, _fixd$11);
                        var $11626 = $11652;
                        break;
                };
                var $11623 = $11626;
                break;
            case 'List.nil':
                var self = _fixd$11;
                if (self) {
                    var _type$12 = Kind$Term$bind$(List$nil, (_x$12 => {
                        var $11655 = (_x$12 + '1');
                        return $11655;
                    }), _type$6);
                    var _term$13 = Kind$Term$bind$(List$nil, (_x$13 => {
                        var $11656 = (_x$13 + '0');
                        return $11656;
                    }), _term$5);
                    var _defs$14 = Kind$Map$set$(_name$4, Kind$Def$new$(_file$1, _code$2, _orig$3, _name$4, _term$13, _type$12, _isct$7, _arit$8, Kind$Status$init), _defs$9);
                    var $11654 = IO$monad$((_m$bind$15 => _m$pure$16 => {
                        var $11657 = _m$pure$16;
                        return $11657;
                    }))(Maybe$some$(_defs$14));
                    var $11653 = $11654;
                } else {
                    var $11658 = IO$monad$((_m$bind$12 => _m$pure$13 => {
                        var $11659 = _m$pure$13;
                        return $11659;
                    }))(Maybe$none);
                    var $11653 = $11658;
                };
                var $11623 = $11653;
                break;
        };
        return $11623;
    };
    const Kind$Synth$fix = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => x9 => x10 => Kind$Synth$fix$(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10);

    function Kind$Status$fail$(_errors$1) {
        var $11660 = ({
            _: 'Kind.Status.fail',
            'errors': _errors$1
        });
        return $11660;
    };
    const Kind$Status$fail = x0 => Kind$Status$fail$(x0);

    function Kind$Synth$one$(_name$1, _defs$2) {
        var self = Kind$Map$get$(_name$1, _defs$2);
        switch (self._) {
            case 'Maybe.some':
                var $11662 = self.value;
                var self = $11662;
                switch (self._) {
                    case 'Kind.Def.new':
                        var $11664 = self.file;
                        var $11665 = self.code;
                        var $11666 = self.orig;
                        var $11667 = self.name;
                        var $11668 = self.term;
                        var $11669 = self.type;
                        var $11670 = self.isct;
                        var $11671 = self.arit;
                        var $11672 = self.stat;
                        var _file$13 = $11664;
                        var _code$14 = $11665;
                        var _orig$15 = $11666;
                        var _name$16 = $11667;
                        var _term$17 = $11668;
                        var _type$18 = $11669;
                        var _isct$19 = $11670;
                        var _arit$20 = $11671;
                        var _stat$21 = $11672;
                        var self = _stat$21;
                        switch (self._) {
                            case 'Kind.Status.init':
                                var _defs$22 = Kind$Map$set$(_name$16, Kind$Def$new$(_file$13, _code$14, _orig$15, _name$16, _term$17, _type$18, _isct$19, _arit$20, Kind$Status$wait), _defs$2);
                                var self = Kind$Term$check$(_type$18, Maybe$some$(Kind$Term$typ), _defs$22, List$nil, Kind$MPath$i$(Kind$MPath$nil), Maybe$none);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11675 = self.value;
                                        var $11676 = self.errors;
                                        var self = $11675;
                                        switch (self._) {
                                            case 'Maybe.none':
                                                var $11678 = Kind$Check$result$(Maybe$none, $11676);
                                                var $11677 = $11678;
                                                break;
                                            case 'Maybe.some':
                                                var self = Kind$Term$check$(_term$17, Maybe$some$(_type$18), _defs$22, List$nil, Kind$MPath$o$(Kind$MPath$nil), Maybe$none);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11680 = self.value;
                                                        var $11681 = self.errors;
                                                        var self = $11680;
                                                        switch (self._) {
                                                            case 'Maybe.none':
                                                                var $11683 = Kind$Check$result$(Maybe$none, $11681);
                                                                var $11682 = $11683;
                                                                break;
                                                            case 'Maybe.some':
                                                                var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                                                switch (self._) {
                                                                    case 'Kind.Check.result':
                                                                        var $11685 = self.value;
                                                                        var $11686 = self.errors;
                                                                        var $11687 = Kind$Check$result$($11685, List$concat$($11681, $11686));
                                                                        var $11684 = $11687;
                                                                        break;
                                                                };
                                                                var $11682 = $11684;
                                                                break;
                                                        };
                                                        var self = $11682;
                                                        break;
                                                };
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11688 = self.value;
                                                        var $11689 = self.errors;
                                                        var $11690 = Kind$Check$result$($11688, List$concat$($11676, $11689));
                                                        var $11679 = $11690;
                                                        break;
                                                };
                                                var $11677 = $11679;
                                                break;
                                        };
                                        var _checked$23 = $11677;
                                        break;
                                };
                                var self = _checked$23;
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11691 = self.errors;
                                        var self = List$is_empty$($11691);
                                        if (self) {
                                            var _defs$26 = Kind$Map$def$(_file$13, _code$14, _orig$15, _name$16, _term$17, _type$18, _isct$19, _arit$20, Bool$true, _defs$22);
                                            var $11693 = IO$monad$((_m$bind$27 => _m$pure$28 => {
                                                var $11694 = _m$pure$28;
                                                return $11694;
                                            }))(Maybe$some$(_defs$26));
                                            var $11692 = $11693;
                                        } else {
                                            var $11695 = IO$monad$((_m$bind$26 => _m$pure$27 => {
                                                var $11696 = _m$bind$26;
                                                return $11696;
                                            }))(Kind$Synth$fix$(_file$13, _code$14, _orig$15, _name$16, _term$17, _type$18, _isct$19, _arit$20, _defs$22, $11691, Bool$false))((_fixed$26 => {
                                                var self = _fixed$26;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $11698 = self.value;
                                                        var $11699 = Kind$Synth$one$(_name$16, $11698);
                                                        var $11697 = $11699;
                                                        break;
                                                    case 'Maybe.none':
                                                        var _stat$27 = Kind$Status$fail$($11691);
                                                        var _defs$28 = Kind$Map$set$(_name$16, Kind$Def$new$(_file$13, _code$14, _orig$15, _name$16, _term$17, _type$18, _isct$19, _arit$20, _stat$27), _defs$22);
                                                        var $11700 = IO$monad$((_m$bind$29 => _m$pure$30 => {
                                                            var $11701 = _m$pure$30;
                                                            return $11701;
                                                        }))(Maybe$some$(_defs$28));
                                                        var $11697 = $11700;
                                                        break;
                                                };
                                                return $11697;
                                            }));
                                            var $11692 = $11695;
                                        };
                                        var $11674 = $11692;
                                        break;
                                };
                                var $11673 = $11674;
                                break;
                            case 'Kind.Status.wait':
                                var $11702 = IO$monad$((_m$bind$22 => _m$pure$23 => {
                                    var $11703 = _m$pure$23;
                                    return $11703;
                                }))(Maybe$some$(_defs$2));
                                var $11673 = $11702;
                                break;
                            case 'Kind.Status.done':
                            case 'Kind.Status.fail':
                                var $11704 = IO$monad$((_m$bind$23 => _m$pure$24 => {
                                    var $11705 = _m$pure$24;
                                    return $11705;
                                }))(Maybe$some$(_defs$2));
                                var $11673 = $11704;
                                break;
                        };
                        var $11663 = $11673;
                        break;
                };
                var $11661 = $11663;
                break;
            case 'Maybe.none':
                var $11706 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $11707 = _m$bind$3;
                    return $11707;
                }))(IO$get_time)((_time_a$3 => {
                    var $11708 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $11709 = _m$bind$4;
                        return $11709;
                    }))(Kind$Synth$load$(_name$1, _defs$2))((_loaded$4 => {
                        var self = _loaded$4;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11711 = self.value;
                                var $11712 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                                    var $11713 = _m$bind$6;
                                    return $11713;
                                }))(IO$get_time)((_time_b$6 => {
                                    var $11714 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                                        var $11715 = _m$bind$7;
                                        return $11715;
                                    }))(Kind$Synth$one$(_name$1, $11711))((_result$7 => {
                                        var $11716 = IO$monad$((_m$bind$8 => _m$pure$9 => {
                                            var $11717 = _m$bind$8;
                                            return $11717;
                                        }))(IO$get_time)((_time_c$8 => {
                                            var $11718 = IO$monad$((_m$bind$9 => _m$pure$10 => {
                                                var $11719 = _m$pure$10;
                                                return $11719;
                                            }))(_result$7);
                                            return $11718;
                                        }));
                                        return $11716;
                                    }));
                                    return $11714;
                                }));
                                var $11710 = $11712;
                                break;
                            case 'Maybe.none':
                                var $11720 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                                    var $11721 = _m$pure$6;
                                    return $11721;
                                }))(Maybe$none);
                                var $11710 = $11720;
                                break;
                        };
                        return $11710;
                    }));
                    return $11708;
                }));
                var $11661 = $11706;
                break;
        };
        return $11661;
    };
    const Kind$Synth$one = x0 => x1 => Kind$Synth$one$(x0, x1);

    function BitsMap$from_list$(_xs$2) {
        var self = _xs$2;
        switch (self._) {
            case 'List.cons':
                var $11723 = self.head;
                var $11724 = self.tail;
                var self = $11723;
                switch (self._) {
                    case 'Pair.new':
                        var $11726 = self.fst;
                        var $11727 = self.snd;
                        var $11728 = (bitsmap_set($11726, $11727, BitsMap$from_list$($11724), 'set'));
                        var $11725 = $11728;
                        break;
                };
                var $11722 = $11725;
                break;
            case 'List.nil':
                var $11729 = BitsMap$new;
                var $11722 = $11729;
                break;
        };
        return $11722;
    };
    const BitsMap$from_list = x0 => BitsMap$from_list$(x0);
    const Kind$Term$inline$names = (() => {
        var _inl$1 = List$cons$("Monad.pure", List$cons$("Monad.bind", List$cons$("Monad.new", List$cons$("Parser.monad", List$cons$("Parser.bind", List$cons$("Parser.pure", List$cons$("Kind.Check.pure", List$cons$("Kind.Check.bind", List$cons$("Kind.Check.monad", List$cons$("Kind.Check.value", List$cons$("Kind.Check.none", List$nil)))))))))));
        var _kvs$2 = List$mapped$(_inl$1, (_x$2 => {
            var $11731 = Pair$new$((kind_name_to_bits(_x$2)), Unit$new);
            return $11731;
        }));
        var $11730 = BitsMap$from_list$(_kvs$2);
        return $11730;
    })();

    function Kind$Term$inline$reduce$(_term$1, _defs$2) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $11733 = self.name;
                var _inli$4 = BitsSet$has$((kind_name_to_bits($11733)), Kind$Term$inline$names);
                var self = _inli$4;
                if (self) {
                    var self = Kind$Map$get$($11733, _defs$2);
                    switch (self._) {
                        case 'Maybe.some':
                            var $11736 = self.value;
                            var self = $11736;
                            switch (self._) {
                                case 'Kind.Def.new':
                                    var $11738 = self.term;
                                    var $11739 = Kind$Term$inline$reduce$($11738, _defs$2);
                                    var $11737 = $11739;
                                    break;
                            };
                            var $11735 = $11737;
                            break;
                        case 'Maybe.none':
                            var $11740 = Kind$Term$ref$($11733);
                            var $11735 = $11740;
                            break;
                    };
                    var $11734 = $11735;
                } else {
                    var $11741 = _term$1;
                    var $11734 = $11741;
                };
                var $11732 = $11734;
                break;
            case 'Kind.Term.app':
                var $11742 = self.func;
                var $11743 = self.argm;
                var _func$5 = Kind$Term$inline$reduce$($11742, _defs$2);
                var self = _func$5;
                switch (self._) {
                    case 'Kind.Term.lam':
                        var $11745 = self.body;
                        var $11746 = Kind$Term$inline$reduce$($11745($11743), _defs$2);
                        var $11744 = $11746;
                        break;
                    case 'Kind.Term.let':
                        var $11747 = self.name;
                        var $11748 = self.expr;
                        var $11749 = self.body;
                        var $11750 = Kind$Term$let$($11747, $11748, (_x$9 => {
                            var $11751 = Kind$Term$inline$reduce$(Kind$Term$app$($11749(_x$9), $11743), _defs$2);
                            return $11751;
                        }));
                        var $11744 = $11750;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.app':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $11752 = _term$1;
                        var $11744 = $11752;
                        break;
                };
                var $11732 = $11744;
                break;
            case 'Kind.Term.ori':
                var $11753 = self.expr;
                var $11754 = Kind$Term$inline$reduce$($11753, _defs$2);
                var $11732 = $11754;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $11755 = _term$1;
                var $11732 = $11755;
                break;
        };
        return $11732;
    };
    const Kind$Term$inline$reduce = x0 => x1 => Kind$Term$inline$reduce$(x0, x1);

    function Kind$Term$inline$(_term$1, _defs$2) {
        var self = Kind$Term$inline$reduce$(_term$1, _defs$2);
        switch (self._) {
            case 'Kind.Term.var':
                var $11757 = self.name;
                var $11758 = self.indx;
                var $11759 = Kind$Term$var$($11757, $11758);
                var $11756 = $11759;
                break;
            case 'Kind.Term.ref':
                var $11760 = self.name;
                var $11761 = Kind$Term$ref$($11760);
                var $11756 = $11761;
                break;
            case 'Kind.Term.all':
                var $11762 = self.eras;
                var $11763 = self.self;
                var $11764 = self.name;
                var $11765 = self.xtyp;
                var $11766 = self.body;
                var $11767 = Kind$Term$all$($11762, $11763, $11764, Kind$Term$inline$($11765, _defs$2), (_s$8 => _x$9 => {
                    var $11768 = Kind$Term$inline$($11766(_s$8)(_x$9), _defs$2);
                    return $11768;
                }));
                var $11756 = $11767;
                break;
            case 'Kind.Term.lam':
                var $11769 = self.name;
                var $11770 = self.body;
                var $11771 = Kind$Term$lam$($11769, (_x$5 => {
                    var $11772 = Kind$Term$inline$($11770(_x$5), _defs$2);
                    return $11772;
                }));
                var $11756 = $11771;
                break;
            case 'Kind.Term.app':
                var $11773 = self.func;
                var $11774 = self.argm;
                var $11775 = Kind$Term$app$(Kind$Term$inline$($11773, _defs$2), Kind$Term$inline$($11774, _defs$2));
                var $11756 = $11775;
                break;
            case 'Kind.Term.let':
                var $11776 = self.name;
                var $11777 = self.expr;
                var $11778 = self.body;
                var $11779 = Kind$Term$let$($11776, Kind$Term$inline$($11777, _defs$2), (_x$6 => {
                    var $11780 = Kind$Term$inline$($11778(_x$6), _defs$2);
                    return $11780;
                }));
                var $11756 = $11779;
                break;
            case 'Kind.Term.def':
                var $11781 = self.name;
                var $11782 = self.expr;
                var $11783 = self.body;
                var $11784 = Kind$Term$def$($11781, Kind$Term$inline$($11782, _defs$2), (_x$6 => {
                    var $11785 = Kind$Term$inline$($11783(_x$6), _defs$2);
                    return $11785;
                }));
                var $11756 = $11784;
                break;
            case 'Kind.Term.ann':
                var $11786 = self.done;
                var $11787 = self.term;
                var $11788 = self.type;
                var $11789 = Kind$Term$ann$($11786, Kind$Term$inline$($11787, _defs$2), Kind$Term$inline$($11788, _defs$2));
                var $11756 = $11789;
                break;
            case 'Kind.Term.gol':
                var $11790 = self.name;
                var $11791 = self.dref;
                var $11792 = self.verb;
                var $11793 = Kind$Term$gol$($11790, $11791, $11792);
                var $11756 = $11793;
                break;
            case 'Kind.Term.hol':
                var $11794 = self.path;
                var $11795 = Kind$Term$hol$($11794);
                var $11756 = $11795;
                break;
            case 'Kind.Term.nat':
                var $11796 = self.natx;
                var $11797 = Kind$Term$nat$($11796);
                var $11756 = $11797;
                break;
            case 'Kind.Term.chr':
                var $11798 = self.chrx;
                var $11799 = Kind$Term$chr$($11798);
                var $11756 = $11799;
                break;
            case 'Kind.Term.str':
                var $11800 = self.strx;
                var $11801 = Kind$Term$str$($11800);
                var $11756 = $11801;
                break;
            case 'Kind.Term.ori':
                var $11802 = self.expr;
                var $11803 = Kind$Term$inline$($11802, _defs$2);
                var $11756 = $11803;
                break;
            case 'Kind.Term.typ':
                var $11804 = Kind$Term$typ;
                var $11756 = $11804;
                break;
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $11805 = _term$1;
                var $11756 = $11805;
                break;
        };
        return $11756;
    };
    const Kind$Term$inline = x0 => x1 => Kind$Term$inline$(x0, x1);

    function BitsMap$values$go$(_xs$2, _list$3) {
        var self = _xs$2;
        switch (self._) {
            case 'BitsMap.tie':
                var $11807 = self.val;
                var $11808 = self.lft;
                var $11809 = self.rgt;
                var self = $11807;
                switch (self._) {
                    case 'Maybe.some':
                        var $11811 = self.value;
                        var $11812 = List$cons$($11811, _list$3);
                        var _list0$7 = $11812;
                        break;
                    case 'Maybe.none':
                        var $11813 = _list$3;
                        var _list0$7 = $11813;
                        break;
                };
                var _list1$8 = BitsMap$values$go$($11808, _list0$7);
                var _list2$9 = BitsMap$values$go$($11809, _list1$8);
                var $11810 = _list2$9;
                var $11806 = $11810;
                break;
            case 'BitsMap.new':
                var $11814 = _list$3;
                var $11806 = $11814;
                break;
        };
        return $11806;
    };
    const BitsMap$values$go = x0 => x1 => BitsMap$values$go$(x0, x1);

    function BitsMap$values$(_xs$2) {
        var $11815 = BitsMap$values$go$(_xs$2, List$nil);
        return $11815;
    };
    const BitsMap$values = x0 => BitsMap$values$(x0);

    function Kind$Core$var_name$(_indx$1, _name$2, _brui$3, _vars$4) {
        var Kind$Core$var_name$ = (_indx$1, _name$2, _brui$3, _vars$4) => ({
            ctr: 'TCO',
            arg: [_indx$1, _name$2, _brui$3, _vars$4]
        });
        var Kind$Core$var_name = _indx$1 => _name$2 => _brui$3 => _vars$4 => Kind$Core$var_name$(_indx$1, _name$2, _brui$3, _vars$4);
        var arg = [_indx$1, _name$2, _brui$3, _vars$4];
        while (true) {
            let [_indx$1, _name$2, _brui$3, _vars$4] = arg;
            var R = (() => {
                var self = _indx$1;
                if (self === 0n) {
                    var self = _brui$3;
                    if (self === 0n) {
                        var $11817 = _name$2;
                        var $11816 = $11817;
                    } else {
                        var $11818 = (self - 1n);
                        var $11819 = (_name$2 + ("^" + Nat$show$(_brui$3)));
                        var $11816 = $11819;
                    };
                    return $11816;
                } else {
                    var $11820 = (self - 1n);
                    var self = _vars$4;
                    switch (self._) {
                        case 'List.cons':
                            var $11822 = self.head;
                            var $11823 = self.tail;
                            var self = (_name$2 === $11822);
                            if (self) {
                                var $11825 = Nat$succ$(_brui$3);
                                var _brui$8 = $11825;
                            } else {
                                var $11826 = _brui$3;
                                var _brui$8 = $11826;
                            };
                            var $11824 = Kind$Core$var_name$($11820, _name$2, _brui$8, $11823);
                            var $11821 = $11824;
                            break;
                        case 'List.nil':
                            var $11827 = "unbound";
                            var $11821 = $11827;
                            break;
                    };
                    return $11821;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$var_name = x0 => x1 => x2 => x3 => Kind$Core$var_name$(x0, x1, x2, x3);

    function Kind$Name$show$(_name$1) {
        var $11828 = _name$1;
        return $11828;
    };
    const Kind$Name$show = x0 => Kind$Name$show$(x0);

    function Bits$to_nat$(_b$1) {
        var self = _b$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $11830 = self.slice(0, -1);
                var $11831 = (2n * Bits$to_nat$($11830));
                var $11829 = $11831;
                break;
            case 'i':
                var $11832 = self.slice(0, -1);
                var $11833 = Nat$succ$((2n * Bits$to_nat$($11832)));
                var $11829 = $11833;
                break;
            case 'e':
                var $11834 = 0n;
                var $11829 = $11834;
                break;
        };
        return $11829;
    };
    const Bits$to_nat = x0 => Bits$to_nat$(x0);

    function U16$show_hex$(_a$1) {
        var self = _a$1;
        switch ('u16') {
            case 'u16':
                var $11836 = u16_to_word(self);
                var $11837 = Nat$to_string_base$(16n, Bits$to_nat$(Word$to_bits$($11836)));
                var $11835 = $11837;
                break;
        };
        return $11835;
    };
    const U16$show_hex = x0 => U16$show_hex$(x0);

    function Kind$Code$escape$char$(_chr$1) {
        var self = (_chr$1 === Kind$Code$backslash);
        if (self) {
            var $11839 = String$cons$(Kind$Code$backslash, String$cons$(_chr$1, String$nil));
            var $11838 = $11839;
        } else {
            var self = (_chr$1 === 34);
            if (self) {
                var $11841 = String$cons$(Kind$Code$backslash, String$cons$(_chr$1, String$nil));
                var $11840 = $11841;
            } else {
                var self = (_chr$1 === 39);
                if (self) {
                    var $11843 = String$cons$(Kind$Code$backslash, String$cons$(_chr$1, String$nil));
                    var $11842 = $11843;
                } else {
                    var self = U16$btw$(32, _chr$1, 126);
                    if (self) {
                        var $11845 = String$cons$(_chr$1, String$nil);
                        var $11844 = $11845;
                    } else {
                        var $11846 = (String$cons$(Kind$Code$backslash, String$nil) + ("u{" + (U16$show_hex$(_chr$1) + "}")));
                        var $11844 = $11846;
                    };
                    var $11842 = $11844;
                };
                var $11840 = $11842;
            };
            var $11838 = $11840;
        };
        return $11838;
    };
    const Kind$Code$escape$char = x0 => Kind$Code$escape$char$(x0);

    function Kind$Code$escape$go$(_str$1, _result$2) {
        var Kind$Code$escape$go$ = (_str$1, _result$2) => ({
            ctr: 'TCO',
            arg: [_str$1, _result$2]
        });
        var Kind$Code$escape$go = _str$1 => _result$2 => Kind$Code$escape$go$(_str$1, _result$2);
        var arg = [_str$1, _result$2];
        while (true) {
            let [_str$1, _result$2] = arg;
            var R = (() => {
                var self = _str$1;
                if (self.length === 0) {
                    var $11847 = String$reverse$(_result$2);
                    return $11847;
                } else {
                    var $11848 = self.charCodeAt(0);
                    var $11849 = self.slice(1);
                    var $11850 = Kind$Code$escape$go$($11849, (String$reverse$(Kind$Code$escape$char$($11848)) + _result$2));
                    return $11850;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Code$escape$go = x0 => x1 => Kind$Code$escape$go$(x0, x1);

    function Kind$Code$escape$(_str$1) {
        var $11851 = Kind$Code$escape$go$(_str$1, "");
        return $11851;
    };
    const Kind$Code$escape = x0 => Kind$Code$escape$(x0);

    function Kind$Core$show$go$(_term$1, _indx$2, _vars$3) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.var':
                var $11853 = self.name;
                var $11854 = self.indx;
                var $11855 = Kind$Core$var_name$(Nat$pred$((_indx$2 - $11854 <= 0n ? 0n : _indx$2 - $11854)), $11853, 0n, _vars$3);
                var $11852 = $11855;
                break;
            case 'Kind.Term.ref':
                var $11856 = self.name;
                var $11857 = Kind$Name$show$($11856);
                var $11852 = $11857;
                break;
            case 'Kind.Term.all':
                var $11858 = self.eras;
                var $11859 = self.self;
                var $11860 = self.name;
                var $11861 = self.xtyp;
                var $11862 = self.body;
                var _eras$9 = $11858;
                var self = _eras$9;
                if (self) {
                    var $11864 = "%";
                    var _init$10 = $11864;
                } else {
                    var $11865 = "@";
                    var _init$10 = $11865;
                };
                var _self$11 = Kind$Name$show$($11859);
                var _name$12 = Kind$Name$show$($11860);
                var _xtyp$13 = Kind$Core$show$go$($11861, _indx$2, _vars$3);
                var _body$14 = Kind$Core$show$go$($11862(Kind$Term$var$($11859, _indx$2))(Kind$Term$var$($11860, Nat$succ$(_indx$2))), Nat$succ$(Nat$succ$(_indx$2)), List$cons$($11860, List$cons$($11859, _vars$3)));
                var $11863 = String$flatten$(List$cons$(_init$10, List$cons$(_self$11, List$cons$("(", List$cons$(_name$12, List$cons$(":", List$cons$(_xtyp$13, List$cons$(") ", List$cons$(_body$14, List$nil)))))))));
                var $11852 = $11863;
                break;
            case 'Kind.Term.lam':
                var $11866 = self.name;
                var $11867 = self.body;
                var _name$6 = Kind$Name$show$($11866);
                var _body$7 = Kind$Core$show$go$($11867(Kind$Term$var$($11866, _indx$2)), Nat$succ$(_indx$2), List$cons$($11866, _vars$3));
                var $11868 = String$flatten$(List$cons$("#", List$cons$(_name$6, List$cons$(" ", List$cons$(_body$7, List$nil)))));
                var $11852 = $11868;
                break;
            case 'Kind.Term.app':
                var $11869 = self.func;
                var $11870 = self.argm;
                var _func$6 = Kind$Core$show$go$($11869, _indx$2, _vars$3);
                var _argm$7 = Kind$Core$show$go$($11870, _indx$2, _vars$3);
                var $11871 = String$flatten$(List$cons$("(", List$cons$(_func$6, List$cons$(" ", List$cons$(_argm$7, List$cons$(")", List$nil))))));
                var $11852 = $11871;
                break;
            case 'Kind.Term.let':
                var $11872 = self.name;
                var $11873 = self.expr;
                var $11874 = self.body;
                var _name$7 = Kind$Name$show$($11872);
                var _expr$8 = Kind$Core$show$go$($11873, _indx$2, _vars$3);
                var _body$9 = Kind$Core$show$go$($11874(Kind$Term$var$($11872, _indx$2)), Nat$succ$(_indx$2), List$cons$($11872, _vars$3));
                var $11875 = String$flatten$(List$cons$("!", List$cons$(_name$7, List$cons$(" = ", List$cons$(_expr$8, List$cons$("; ", List$cons$(_body$9, List$nil)))))));
                var $11852 = $11875;
                break;
            case 'Kind.Term.def':
                var $11876 = self.name;
                var $11877 = self.expr;
                var $11878 = self.body;
                var _name$7 = Kind$Name$show$($11876);
                var _expr$8 = Kind$Core$show$go$($11877, _indx$2, _vars$3);
                var _body$9 = Kind$Core$show$go$($11878(Kind$Term$var$($11876, _indx$2)), Nat$succ$(_indx$2), List$cons$($11876, _vars$3));
                var $11879 = String$flatten$(List$cons$("$", List$cons$(_name$7, List$cons$(" = ", List$cons$(_expr$8, List$cons$("; ", List$cons$(_body$9, List$nil)))))));
                var $11852 = $11879;
                break;
            case 'Kind.Term.ann':
                var $11880 = self.term;
                var $11881 = self.type;
                var _term$7 = Kind$Core$show$go$($11880, _indx$2, _vars$3);
                var _type$8 = Kind$Core$show$go$($11881, _indx$2, _vars$3);
                var $11882 = String$flatten$(List$cons$("{", List$cons$(_term$7, List$cons$(":", List$cons$(_type$8, List$cons$("}", List$nil))))));
                var $11852 = $11882;
                break;
            case 'Kind.Term.nat':
                var $11883 = self.natx;
                var $11884 = String$flatten$(List$cons$("+", List$cons$(Nat$show$($11883), List$nil)));
                var $11852 = $11884;
                break;
            case 'Kind.Term.chr':
                var $11885 = self.chrx;
                var $11886 = String$flatten$(List$cons$("\'", List$cons$(Kind$Code$escape$char$($11885), List$cons$("\'", List$nil))));
                var $11852 = $11886;
                break;
            case 'Kind.Term.str':
                var $11887 = self.strx;
                var $11888 = String$flatten$(List$cons$("\"", List$cons$(Kind$Code$escape$($11887), List$cons$("\"", List$nil))));
                var $11852 = $11888;
                break;
            case 'Kind.Term.ori':
                var $11889 = self.expr;
                var $11890 = Kind$Core$show$go$($11889, _indx$2, _vars$3);
                var $11852 = $11890;
                break;
            case 'Kind.Term.typ':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $11891 = "*";
                var $11852 = $11891;
                break;
        };
        return $11852;
    };
    const Kind$Core$show$go = x0 => x1 => x2 => Kind$Core$show$go$(x0, x1, x2);

    function Kind$Core$show$(_term$1) {
        var $11892 = Kind$Core$show$go$(_term$1, 0n, List$nil);
        return $11892;
    };
    const Kind$Core$show = x0 => Kind$Core$show$(x0);

    function Kind$Defs$core$(_defs$1) {
        var _result$2 = "";
        var _result$3 = (() => {
            var $11895 = _result$2;
            var $11896 = BitsMap$values$(_defs$1);
            let _result$4 = $11895;
            let _defn$3;
            while ($11896._ === 'List.cons') {
                _defn$3 = $11896.head;
                var self = _defn$3;
                switch (self._) {
                    case 'Kind.Def.new':
                        var $11897 = self.name;
                        var $11898 = self.term;
                        var $11899 = self.type;
                        var $11900 = self.stat;
                        var self = $11900;
                        switch (self._) {
                            case 'Kind.Status.init':
                            case 'Kind.Status.wait':
                            case 'Kind.Status.fail':
                                var $11902 = _result$4;
                                var $11901 = $11902;
                                break;
                            case 'Kind.Status.done':
                                var _name$15 = $11897;
                                var _term$16 = Kind$Core$show$($11898);
                                var _type$17 = Kind$Core$show$($11899);
                                var $11903 = String$flatten$(List$cons$(_result$4, List$cons$(_name$15, List$cons$(" : ", List$cons$(_type$17, List$cons$(" = ", List$cons$(_term$16, List$cons$(";\u{a}", List$nil))))))));
                                var $11901 = $11903;
                                break;
                        };
                        var $11895 = $11901;
                        break;
                };
                _result$4 = $11895;
                $11896 = $11896.tail;
            }
            return _result$4;
        })();
        var $11893 = _result$3;
        return $11893;
    };
    const Kind$Defs$core = x0 => Kind$Defs$core$(x0);

    function Kind$api$io$term_to_core$(_name$1) {
        var $11904 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $11905 = _m$bind$2;
            return $11905;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_new_defs$2 => {
            var self = _new_defs$2;
            switch (self._) {
                case 'Maybe.some':
                    var $11907 = self.value;
                    var $11908 = $11907;
                    var _defs$3 = $11908;
                    break;
                case 'Maybe.none':
                    var $11909 = Kind$Map$new;
                    var _defs$3 = $11909;
                    break;
            };
            var _defs$4 = BitsMap$map$((_defn$4 => {
                var self = _defn$4;
                switch (self._) {
                    case 'Kind.Def.new':
                        var $11911 = self.file;
                        var $11912 = self.code;
                        var $11913 = self.orig;
                        var $11914 = self.name;
                        var $11915 = self.term;
                        var $11916 = self.type;
                        var $11917 = self.isct;
                        var $11918 = self.arit;
                        var $11919 = self.stat;
                        var _term$14 = Kind$Term$inline$($11915, _defs$3);
                        var _type$15 = Kind$Term$inline$($11916, _defs$3);
                        var $11920 = Kind$Def$new$($11911, $11912, $11913, $11914, _term$14, _type$15, $11917, $11918, $11919);
                        var $11910 = $11920;
                        break;
                };
                return $11910;
            }), _defs$3);
            var $11906 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                var $11921 = _m$pure$6;
                return $11921;
            }))(Kind$Defs$core$(_defs$4));
            return $11906;
        }));
        return $11904;
    };
    const Kind$api$io$term_to_core = x0 => Kind$api$io$term_to_core$(x0);

    function Kind$Comp$Defs$compile$defn$adjust$(_defn$1, _defs$2) {
        var self = _defn$1;
        switch (self._) {
            case 'Kind.Def.new':
                var $11923 = self.file;
                var $11924 = self.code;
                var $11925 = self.orig;
                var $11926 = self.name;
                var $11927 = self.term;
                var $11928 = self.type;
                var $11929 = self.isct;
                var $11930 = self.arit;
                var $11931 = self.stat;
                var _term$12 = Kind$Term$inline$($11927, _defs$2);
                var _type$13 = Kind$Term$inline$($11928, _defs$2);
                var $11932 = Kind$Def$new$($11923, $11924, $11925, $11926, _term$12, _type$13, $11929, $11930, $11931);
                var $11922 = $11932;
                break;
        };
        return $11922;
    };
    const Kind$Comp$Defs$compile$defn$adjust = x0 => x1 => Kind$Comp$Defs$compile$defn$adjust$(x0, x1);

    function Kind$Comp$var$(_name$1) {
        var $11933 = ({
            _: 'Kind.Comp.var',
            'name': _name$1
        });
        return $11933;
    };
    const Kind$Comp$var = x0 => Kind$Comp$var$(x0);
    const Kind$Comp$nil = ({
        _: 'Kind.Comp.nil'
    });

    function Kind$Comp$ref$(_name$1) {
        var $11934 = ({
            _: 'Kind.Comp.ref',
            'name': _name$1
        });
        return $11934;
    };
    const Kind$Comp$ref = x0 => Kind$Comp$ref$(x0);
    const Kind$Comp$Prim$bool = ({
        _: 'Kind.Comp.Prim.bool'
    });
    const Kind$Comp$Prim$nat = ({
        _: 'Kind.Comp.Prim.nat'
    });
    const Kind$Comp$Prim$u16 = ({
        _: 'Kind.Comp.Prim.u16'
    });
    const Kind$Comp$Prim$string = ({
        _: 'Kind.Comp.Prim.string'
    });
    const Kind$Comp$Prim$natives = List$cons$(Pair$new$("Bool", Kind$Comp$Prim$bool), List$cons$(Pair$new$("Nat", Kind$Comp$Prim$nat), List$cons$(Pair$new$("U16", Kind$Comp$Prim$u16), List$cons$(Pair$new$("String", Kind$Comp$Prim$string), List$nil))));

    function Kind$Term$equal$(_a$1, _b$2, _defs$3) {
        var self = Kind$Term$equal$go$(_a$1, _b$2, _defs$3, 0n, BitsSet$new);
        switch (self._) {
            case 'Kind.Check.result':
                var $11936 = self.value;
                var $11937 = Maybe$default$($11936, Bool$false);
                var $11935 = $11937;
                break;
        };
        return $11935;
    };
    const Kind$Term$equal = x0 => x1 => x2 => Kind$Term$equal$(x0, x1, x2);

    function Kind$Comp$compile$prim_of$(_type$1, _defs$2) {
        var _result$3 = Maybe$none;
        var _result$4 = (() => {
            var $11940 = _result$3;
            var $11941 = Kind$Comp$Prim$natives;
            let _result$5 = $11940;
            let _prim$4;
            while ($11941._ === 'List.cons') {
                _prim$4 = $11941.head;
                var self = _prim$4;
                switch (self._) {
                    case 'Pair.new':
                        var $11942 = self.fst;
                        var $11943 = self.snd;
                        var self = _result$5;
                        switch (self._) {
                            case 'Maybe.none':
                                var self = Kind$Term$equal$(_type$1, Kind$Term$ref$($11942), _defs$2);
                                if (self) {
                                    var $11946 = Maybe$some$($11943);
                                    var $11945 = $11946;
                                } else {
                                    var $11947 = Maybe$none;
                                    var $11945 = $11947;
                                };
                                var $11944 = $11945;
                                break;
                            case 'Maybe.some':
                                var $11948 = _result$5;
                                var $11944 = $11948;
                                break;
                        };
                        var $11940 = $11944;
                        break;
                };
                _result$5 = $11940;
                $11941 = $11941.tail;
            }
            return _result$5;
        })();
        var $11938 = _result$4;
        return $11938;
    };
    const Kind$Comp$compile$prim_of = x0 => x1 => Kind$Comp$compile$prim_of$(x0, x1);

    function String$ends_with$(_xs$1, _match$2) {
        var _xs_reserved$3 = String$reverse$(_xs$1);
        var _match_reversed$4 = String$reverse$(_match$2);
        var $11949 = String$starts_with$(_xs_reserved$3, _match_reversed$4);
        return $11949;
    };
    const String$ends_with = x0 => x1 => String$ends_with$(x0, x1);

    function Kind$Comp$compile$adt$get_fields$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.all':
                var $11951 = self.eras;
                var $11952 = self.name;
                var $11953 = self.body;
                var _head$7 = $11952;
                var _tail$8 = Kind$Comp$compile$adt$get_fields$($11953(Kind$Term$var$("", 0n))(Kind$Term$var$("", 0n)));
                var self = $11951;
                if (self) {
                    var $11955 = _tail$8;
                    var $11954 = $11955;
                } else {
                    var $11956 = List$cons$(_head$7, _tail$8);
                    var $11954 = $11956;
                };
                var $11950 = $11954;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $11957 = List$nil;
                var $11950 = $11957;
                break;
        };
        return $11950;
    };
    const Kind$Comp$compile$adt$get_fields = x0 => Kind$Comp$compile$adt$get_fields$(x0);

    function Kind$Comp$compile$adt$get_constructors$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.all':
                var $11959 = self.name;
                var $11960 = self.xtyp;
                var $11961 = self.body;
                var _tail$7 = Kind$Comp$compile$adt$get_constructors$($11961(Kind$Term$var$("", 0n))(Kind$Term$var$("", 0n)));
                var _name$8 = $11959;
                var _flds$9 = Kind$Comp$compile$adt$get_fields$($11960);
                var $11962 = List$cons$(Pair$new$(_name$8, _flds$9), _tail$7);
                var $11958 = $11962;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $11963 = List$nil;
                var $11958 = $11963;
                break;
        };
        return $11958;
    };
    const Kind$Comp$compile$adt$get_constructors = x0 => Kind$Comp$compile$adt$get_constructors$(x0);

    function Kind$Comp$Prim$data$(_name$1, _ctrs$2) {
        var $11964 = ({
            _: 'Kind.Comp.Prim.data',
            'name': _name$1,
            'ctrs': _ctrs$2
        });
        return $11964;
    };
    const Kind$Comp$Prim$data = x0 => x1 => Kind$Comp$Prim$data$(x0, x1);

    function Kind$Comp$compile$adt$(_term$1, _defs$2) {
        var _term$3 = Kind$Term$reduce$(_term$1, _defs$2);
        var self = _term$3;
        switch (self._) {
            case 'Kind.Term.all':
                var $11966 = self.self;
                var $11967 = self.body;
                var self = String$ends_with$($11966, ".Self");
                if (self) {
                    var _body$9 = $11967(Kind$Term$var$("", 0n))(Kind$Term$var$("", 0n));
                    var _data$10 = Kind$Comp$compile$adt$get_constructors$(_body$9);
                    var _name$11 = String$take$((String$length$($11966) - 5n <= 0n ? 0n : String$length$($11966) - 5n), $11966);
                    var $11969 = Maybe$some$(Kind$Comp$Prim$data$(_name$11, _data$10));
                    var $11968 = $11969;
                } else {
                    var $11970 = Maybe$none;
                    var $11968 = $11970;
                };
                var $11965 = $11968;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $11971 = Maybe$none;
                var $11965 = $11971;
                break;
        };
        return $11965;
    };
    const Kind$Comp$compile$adt = x0 => x1 => Kind$Comp$compile$adt$(x0, x1);

    function Kind$Comp$eli$(_prim$1, _expr$2) {
        var $11972 = ({
            _: 'Kind.Comp.eli',
            'prim': _prim$1,
            'expr': _expr$2
        });
        return $11972;
    };
    const Kind$Comp$eli = x0 => x1 => Kind$Comp$eli$(x0, x1);

    function Kind$Comp$app$(_func$1, _argm$2) {
        var $11973 = ({
            _: 'Kind.Comp.app',
            'func': _func$1,
            'argm': _argm$2
        });
        return $11973;
    };
    const Kind$Comp$app = x0 => x1 => Kind$Comp$app$(x0, x1);

    function Kind$Comp$let$(_name$1, _expr$2, _body$3) {
        var $11974 = ({
            _: 'Kind.Comp.let',
            'name': _name$1,
            'expr': _expr$2,
            'body': _body$3
        });
        return $11974;
    };
    const Kind$Comp$let = x0 => x1 => x2 => Kind$Comp$let$(x0, x1, x2);

    function Kind$Comp$nat$(_natx$1) {
        var $11975 = ({
            _: 'Kind.Comp.nat',
            'natx': _natx$1
        });
        return $11975;
    };
    const Kind$Comp$nat = x0 => Kind$Comp$nat$(x0);

    function Kind$Comp$chr$(_chrx$1) {
        var $11976 = ({
            _: 'Kind.Comp.chr',
            'chrx': _chrx$1
        });
        return $11976;
    };
    const Kind$Comp$chr = x0 => Kind$Comp$chr$(x0);

    function Kind$Comp$str$(_strx$1) {
        var $11977 = ({
            _: 'Kind.Comp.str',
            'strx': _strx$1
        });
        return $11977;
    };
    const Kind$Comp$str = x0 => Kind$Comp$str$(x0);

    function Kind$Comp$lam$(_name$1, _body$2) {
        var $11978 = ({
            _: 'Kind.Comp.lam',
            'name': _name$1,
            'body': _body$2
        });
        return $11978;
    };
    const Kind$Comp$lam = x0 => x1 => Kind$Comp$lam$(x0, x1);

    function Kind$Comp$ins$(_prim$1, _expr$2) {
        var $11979 = ({
            _: 'Kind.Comp.ins',
            'prim': _prim$1,
            'expr': _expr$2
        });
        return $11979;
    };
    const Kind$Comp$ins = x0 => x1 => Kind$Comp$ins$(x0, x1);

    function Kind$Comp$compile$(_term$1, _type$2, _defs$3, _size$4) {
        var self = _type$2;
        switch (self._) {
            case 'Maybe.some':
                var $11981 = self.value;
                var _typv$6 = Kind$Term$reduce$($11981, _defs$3);
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.lam':
                        var $11983 = self.name;
                        var $11984 = self.body;
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.all':
                                var $11986 = self.eras;
                                var $11987 = self.xtyp;
                                var $11988 = self.body;
                                var _self_var$14 = Kind$Term$ann$(Bool$true, _term$1, $11981);
                                var _name_uid$15 = ($11983 + ("$" + Nat$show$(_size$4)));
                                var _name_var$16 = Kind$Term$ann$(Bool$true, Kind$Term$var$(_name_uid$15, (_size$4 + 1n)), $11987);
                                var _body_typ$17 = $11988(_self_var$14)(_name_var$16);
                                var self = Kind$Comp$compile$($11984(_name_var$16), Maybe$some$(_body_typ$17), _defs$3, (_size$4 + 1n));
                                switch (self._) {
                                    case 'Pair.new':
                                        var $11990 = self.fst;
                                        var self = $11986;
                                        if (self) {
                                            var $11992 = $11990;
                                            var _term_cmp$20 = $11992;
                                        } else {
                                            var $11993 = Kind$Comp$lam$(_name_uid$15, $11990);
                                            var _term_cmp$20 = $11993;
                                        };
                                        var self = Kind$Comp$compile$prim_of$($11981, _defs$3);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11994 = self.value;
                                                var $11995 = Kind$Comp$ins$($11994, _term_cmp$20);
                                                var _term_cmp$21 = $11995;
                                                break;
                                            case 'Maybe.none':
                                                var self = Kind$Comp$compile$adt$($11981, _defs$3);
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $11997 = self.value;
                                                        var $11998 = Kind$Comp$ins$($11997, _term_cmp$20);
                                                        var $11996 = $11998;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $11999 = _term_cmp$20;
                                                        var $11996 = $11999;
                                                        break;
                                                };
                                                var _term_cmp$21 = $11996;
                                                break;
                                        };
                                        var $11991 = Pair$new$(_term_cmp$21, $11981);
                                        var $11989 = $11991;
                                        break;
                                };
                                var $11985 = $11989;
                                break;
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.typ':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12000 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $11985 = $12000;
                                break;
                        };
                        var $11982 = $11985;
                        break;
                    case 'Kind.Term.let':
                        var $12001 = self.name;
                        var $12002 = self.expr;
                        var $12003 = self.body;
                        var self = Kind$Comp$compile$($12002, Maybe$none, _defs$3, _size$4);
                        switch (self._) {
                            case 'Pair.new':
                                var $12005 = self.fst;
                                var $12006 = self.snd;
                                var _name_uid$12 = ($12001 + ("$" + Nat$show$(_size$4)));
                                var _expr_var$13 = Kind$Term$ann$(Bool$true, Kind$Term$var$(_name_uid$12, (_size$4 + 1n)), $12006);
                                var self = Kind$Comp$compile$($12003(_expr_var$13), _type$2, _defs$3, (_size$4 + 1n));
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12008 = self.fst;
                                        var $12009 = self.snd;
                                        var _term_cmp$16 = Kind$Comp$let$(_name_uid$12, $12005, $12008);
                                        var _term_typ$17 = $12009;
                                        var $12010 = Pair$new$(_term_cmp$16, _term_typ$17);
                                        var $12007 = $12010;
                                        break;
                                };
                                var $12004 = $12007;
                                break;
                        };
                        var $11982 = $12004;
                        break;
                    case 'Kind.Term.ori':
                        var $12011 = self.expr;
                        var $12012 = Kind$Comp$compile$($12011, _type$2, _defs$3, _size$4);
                        var $11982 = $12012;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.app':
                    case 'Kind.Term.get':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12014 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $11981);
                                var $12013 = $12014;
                                break;
                            case 'Kind.Term.typ':
                                var $12015 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12013 = $12015;
                                break;
                        };
                        var $11982 = $12013;
                        break;
                    case 'Kind.Term.ref':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.new':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12017 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $11981);
                                var $12016 = $12017;
                                break;
                            case 'Kind.Term.typ':
                                var $12018 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12016 = $12018;
                                break;
                        };
                        var $11982 = $12016;
                        break;
                    case 'Kind.Term.typ':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12020 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $11981);
                                var $12019 = $12020;
                                break;
                            case 'Kind.Term.typ':
                                var $12021 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12019 = $12021;
                                break;
                        };
                        var $11982 = $12019;
                        break;
                    case 'Kind.Term.all':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12023 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $11981);
                                var $12022 = $12023;
                                break;
                            case 'Kind.Term.typ':
                                var $12024 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12022 = $12024;
                                break;
                        };
                        var $11982 = $12022;
                        break;
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.num':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12026 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $11981);
                                var $12025 = $12026;
                                break;
                            case 'Kind.Term.typ':
                                var $12027 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12025 = $12027;
                                break;
                        };
                        var $11982 = $12025;
                        break;
                    case 'Kind.Term.cse':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12029 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $11981);
                                var $12028 = $12029;
                                break;
                            case 'Kind.Term.typ':
                                var $12030 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12028 = $12030;
                                break;
                        };
                        var $11982 = $12028;
                        break;
                };
                var $11980 = $11982;
                break;
            case 'Maybe.none':
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.var':
                        var $12032 = self.name;
                        var $12033 = self.indx;
                        var $12034 = Pair$new$(Kind$Comp$var$($12032), Kind$Term$var$($12032, $12033));
                        var $12031 = $12034;
                        break;
                    case 'Kind.Term.ref':
                        var $12035 = self.name;
                        var self = Kind$Map$get$($12035, _defs$3);
                        switch (self._) {
                            case 'Maybe.some':
                                var $12037 = self.value;
                                var $12038 = Pair$new$(Kind$Comp$ref$($12035), (() => {
                                    var self = $12037;
                                    switch (self._) {
                                        case 'Kind.Def.new':
                                            var $12039 = self.type;
                                            var $12040 = $12039;
                                            return $12040;
                                    };
                                })());
                                var $12036 = $12038;
                                break;
                            case 'Maybe.none':
                                var $12041 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12036 = $12041;
                                break;
                        };
                        var $12031 = $12036;
                        break;
                    case 'Kind.Term.app':
                        var $12042 = self.func;
                        var $12043 = self.argm;
                        var self = Kind$Comp$compile$($12042, Maybe$none, _defs$3, _size$4);
                        switch (self._) {
                            case 'Pair.new':
                                var $12045 = self.fst;
                                var $12046 = self.snd;
                                var self = Kind$Term$reduce$($12046, _defs$3);
                                switch (self._) {
                                    case 'Kind.Term.all':
                                        var $12048 = self.eras;
                                        var $12049 = self.xtyp;
                                        var $12050 = self.body;
                                        var self = Kind$Comp$compile$($12043, Maybe$some$($12049), _defs$3, _size$4);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $12052 = self.fst;
                                                var _term_typ$16 = $12050($12042)($12043);
                                                var self = Kind$Comp$compile$prim_of$($12046, _defs$3);
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $12054 = self.value;
                                                        var $12055 = Kind$Comp$eli$($12054, $12045);
                                                        var _term_cmp$17 = $12055;
                                                        break;
                                                    case 'Maybe.none':
                                                        var self = Kind$Comp$compile$adt$($12046, _defs$3);
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $12057 = self.value;
                                                                var $12058 = Kind$Comp$eli$($12057, $12045);
                                                                var $12056 = $12058;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $12059 = $12045;
                                                                var $12056 = $12059;
                                                                break;
                                                        };
                                                        var _term_cmp$17 = $12056;
                                                        break;
                                                };
                                                var self = $12048;
                                                if (self) {
                                                    var $12060 = _term_cmp$17;
                                                    var _term_cmp$18 = $12060;
                                                } else {
                                                    var $12061 = Kind$Comp$app$(_term_cmp$17, $12052);
                                                    var _term_cmp$18 = $12061;
                                                };
                                                var $12053 = Pair$new$(_term_cmp$18, _term_typ$16);
                                                var $12051 = $12053;
                                                break;
                                        };
                                        var $12047 = $12051;
                                        break;
                                    case 'Kind.Term.var':
                                    case 'Kind.Term.ref':
                                    case 'Kind.Term.typ':
                                    case 'Kind.Term.lam':
                                    case 'Kind.Term.app':
                                    case 'Kind.Term.let':
                                    case 'Kind.Term.def':
                                    case 'Kind.Term.ann':
                                    case 'Kind.Term.gol':
                                    case 'Kind.Term.hol':
                                    case 'Kind.Term.nat':
                                    case 'Kind.Term.chr':
                                    case 'Kind.Term.str':
                                    case 'Kind.Term.num':
                                    case 'Kind.Term.cse':
                                    case 'Kind.Term.new':
                                    case 'Kind.Term.get':
                                    case 'Kind.Term.set':
                                    case 'Kind.Term.ope':
                                    case 'Kind.Term.ori':
                                        var $12062 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                        var $12047 = $12062;
                                        break;
                                };
                                var $12044 = $12047;
                                break;
                        };
                        var $12031 = $12044;
                        break;
                    case 'Kind.Term.let':
                        var $12063 = self.name;
                        var $12064 = self.expr;
                        var $12065 = self.body;
                        var self = Kind$Comp$compile$($12064, Maybe$none, _defs$3, _size$4);
                        switch (self._) {
                            case 'Pair.new':
                                var $12067 = self.fst;
                                var $12068 = self.snd;
                                var _name_uid$10 = ($12063 + ("$" + Nat$show$(_size$4)));
                                var _expr_var$11 = Kind$Term$ann$(Bool$true, Kind$Term$var$(_name_uid$10, (_size$4 + 1n)), $12068);
                                var self = Kind$Comp$compile$($12065(_expr_var$11), Maybe$none, _defs$3, (_size$4 + 1n));
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12070 = self.fst;
                                        var $12071 = self.snd;
                                        var $12072 = Pair$new$(Kind$Comp$let$(_name_uid$10, $12067, $12070), $12071);
                                        var $12069 = $12072;
                                        break;
                                };
                                var $12066 = $12069;
                                break;
                        };
                        var $12031 = $12066;
                        break;
                    case 'Kind.Term.def':
                        var $12073 = self.expr;
                        var $12074 = self.body;
                        var $12075 = Kind$Comp$compile$($12074($12073), Maybe$none, _defs$3, _size$4);
                        var $12031 = $12075;
                        break;
                    case 'Kind.Term.ann':
                        var $12076 = self.term;
                        var $12077 = self.type;
                        var $12078 = Kind$Comp$compile$($12076, Maybe$some$($12077), _defs$3, _size$4);
                        var $12031 = $12078;
                        break;
                    case 'Kind.Term.nat':
                        var $12079 = self.natx;
                        var $12080 = Pair$new$(Kind$Comp$nat$($12079), Kind$Term$ref$("Nat"));
                        var $12031 = $12080;
                        break;
                    case 'Kind.Term.chr':
                        var $12081 = self.chrx;
                        var $12082 = Pair$new$(Kind$Comp$chr$($12081), Kind$Term$ref$("Char"));
                        var $12031 = $12082;
                        break;
                    case 'Kind.Term.str':
                        var $12083 = self.strx;
                        var $12084 = Pair$new$(Kind$Comp$str$($12083), Kind$Term$ref$("String"));
                        var $12031 = $12084;
                        break;
                    case 'Kind.Term.ori':
                        var $12085 = self.expr;
                        var $12086 = Kind$Comp$compile$($12085, Maybe$none, _defs$3, _size$4);
                        var $12031 = $12086;
                        break;
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $12087 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                        var $12031 = $12087;
                        break;
                };
                var $11980 = $12031;
                break;
        };
        return $11980;
    };
    const Kind$Comp$compile = x0 => x1 => x2 => x3 => Kind$Comp$compile$(x0, x1, x2, x3);

    function Kind$Comp$Defs$compile$defn$(_defn$1, _defs$2) {
        var self = _defn$1;
        switch (self._) {
            case 'Kind.Def.new':
                var $12089 = self.term;
                var $12090 = self.type;
                var self = Kind$Comp$compile$($12089, Maybe$some$($12090), _defs$2, 0n);
                switch (self._) {
                    case 'Pair.new':
                        var $12092 = self.fst;
                        var $12093 = $12092;
                        var $12091 = $12093;
                        break;
                };
                var $12088 = $12091;
                break;
        };
        return $12088;
    };
    const Kind$Comp$Defs$compile$defn = x0 => x1 => Kind$Comp$Defs$compile$defn$(x0, x1);

    function Kind$Comp$Defs$compile$(_defs$1) {
        var _defs$2 = BitsMap$map$((_x$2 => {
            var $12095 = Kind$Comp$Defs$compile$defn$adjust$(_x$2, _defs$1);
            return $12095;
        }), _defs$1);
        var _defs$3 = BitsMap$map$((_x$3 => {
            var $12096 = Kind$Comp$Defs$compile$defn$(_x$3, _defs$2);
            return $12096;
        }), _defs$2);
        var $12094 = _defs$3;
        return $12094;
    };
    const Kind$Comp$Defs$compile = x0 => Kind$Comp$Defs$compile$(x0);

    function Kind$Comp$dependency_sort$go$(_term$1, _defs$2, _seen$3, _list$4) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Comp.ref':
                var $12098 = self.name;
                var self = Kind$Map$get$($12098, _seen$3);
                switch (self._) {
                    case 'Maybe.none':
                        var self = Kind$Map$get$($12098, _defs$2);
                        switch (self._) {
                            case 'Maybe.some':
                                var $12101 = self.value;
                                var _term$7 = $12101;
                                var _seen$8 = Kind$Map$set$($12098, Unit$new, _seen$3);
                                var self = Kind$Comp$dependency_sort$go$(_term$7, _defs$2, _seen$8, _list$4);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12103 = self.fst;
                                        var $12104 = self.snd;
                                        var _list$11 = List$cons$(Pair$new$($12098, $12101), $12104);
                                        var $12105 = Pair$new$($12103, _list$11);
                                        var $12102 = $12105;
                                        break;
                                };
                                var $12100 = $12102;
                                break;
                            case 'Maybe.none':
                                var $12106 = Pair$new$(_seen$3, _list$4);
                                var $12100 = $12106;
                                break;
                        };
                        var $12099 = $12100;
                        break;
                    case 'Maybe.some':
                        var $12107 = Pair$new$(_seen$3, _list$4);
                        var $12099 = $12107;
                        break;
                };
                var $12097 = $12099;
                break;
            case 'Kind.Comp.lam':
                var $12108 = self.body;
                var self = Kind$Comp$dependency_sort$go$($12108, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12110 = self.fst;
                        var $12111 = self.snd;
                        var $12112 = Pair$new$($12110, $12111);
                        var $12109 = $12112;
                        break;
                };
                var $12097 = $12109;
                break;
            case 'Kind.Comp.app':
                var $12113 = self.func;
                var $12114 = self.argm;
                var self = Kind$Comp$dependency_sort$go$($12113, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12116 = self.fst;
                        var $12117 = self.snd;
                        var self = Kind$Comp$dependency_sort$go$($12114, _defs$2, $12116, $12117);
                        switch (self._) {
                            case 'Pair.new':
                                var $12119 = self.fst;
                                var $12120 = self.snd;
                                var $12121 = Pair$new$($12119, $12120);
                                var $12118 = $12121;
                                break;
                        };
                        var $12115 = $12118;
                        break;
                };
                var $12097 = $12115;
                break;
            case 'Kind.Comp.let':
                var $12122 = self.expr;
                var $12123 = self.body;
                var self = Kind$Comp$dependency_sort$go$($12122, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12125 = self.fst;
                        var $12126 = self.snd;
                        var self = Kind$Comp$dependency_sort$go$($12123, _defs$2, $12125, $12126);
                        switch (self._) {
                            case 'Pair.new':
                                var $12128 = self.fst;
                                var $12129 = self.snd;
                                var $12130 = Pair$new$($12128, $12129);
                                var $12127 = $12130;
                                break;
                        };
                        var $12124 = $12127;
                        break;
                };
                var $12097 = $12124;
                break;
            case 'Kind.Comp.eli':
                var $12131 = self.expr;
                var self = Kind$Comp$dependency_sort$go$($12131, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12133 = self.fst;
                        var $12134 = self.snd;
                        var $12135 = Pair$new$($12133, $12134);
                        var $12132 = $12135;
                        break;
                };
                var $12097 = $12132;
                break;
            case 'Kind.Comp.ins':
                var $12136 = self.expr;
                var self = Kind$Comp$dependency_sort$go$($12136, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12138 = self.fst;
                        var $12139 = self.snd;
                        var $12140 = Pair$new$($12138, $12139);
                        var $12137 = $12140;
                        break;
                };
                var $12097 = $12137;
                break;
            case 'Kind.Comp.nil':
            case 'Kind.Comp.var':
            case 'Kind.Comp.nat':
            case 'Kind.Comp.chr':
            case 'Kind.Comp.str':
            case 'Kind.Comp.txt':
                var $12141 = Pair$new$(_seen$3, _list$4);
                var $12097 = $12141;
                break;
        };
        return $12097;
    };
    const Kind$Comp$dependency_sort$go = x0 => x1 => x2 => x3 => Kind$Comp$dependency_sort$go$(x0, x1, x2, x3);

    function Kind$Comp$dependency_sort$(_main$1, _defs$2) {
        var _term$3 = Kind$Comp$ref$(_main$1);
        var _seen$4 = Kind$Map$new;
        var _list$5 = List$nil;
        var self = Kind$Comp$dependency_sort$go$(_term$3, _defs$2, _seen$4, _list$5);
        switch (self._) {
            case 'Pair.new':
                var $12143 = self.snd;
                var $12144 = List$reverse$($12143);
                var $12142 = $12144;
                break;
        };
        return $12142;
    };
    const Kind$Comp$dependency_sort = x0 => x1 => Kind$Comp$dependency_sort$(x0, x1);

    function Kind$Comp$replace$(_str$1, _vars$2) {
        var self = _str$1;
        if (self.length === 0) {
            var $12146 = _str$1;
            var $12145 = $12146;
        } else {
            var $12147 = self.charCodeAt(0);
            var $12148 = self.slice(1);
            var self = $12148;
            if (self.length === 0) {
                var $12150 = _str$1;
                var $12149 = $12150;
            } else {
                var $12151 = self.charCodeAt(0);
                var $12152 = self.slice(1);
                var _a$7 = $12147;
                var _b$8 = $12151;
                var self = ((_a$7 === 36) && ((_b$8 >= 48) && (_b$8 <= 57)));
                if (self) {
                    var $12154 = (Maybe$default$(List$get$(Char$dec_value$(_b$8), _vars$2), "?") + Kind$Comp$replace$($12152, _vars$2));
                    var $12153 = $12154;
                } else {
                    var $12155 = String$cons$(_a$7, Kind$Comp$replace$($12148, _vars$2));
                    var $12153 = $12155;
                };
                var $12149 = $12153;
            };
            var $12145 = $12149;
        };
        return $12145;
    };
    const Kind$Comp$replace = x0 => x1 => Kind$Comp$replace$(x0, x1);

    function List$create$go$(_len$2, _create_value$3, _result$4) {
        var List$create$go$ = (_len$2, _create_value$3, _result$4) => ({
            ctr: 'TCO',
            arg: [_len$2, _create_value$3, _result$4]
        });
        var List$create$go = _len$2 => _create_value$3 => _result$4 => List$create$go$(_len$2, _create_value$3, _result$4);
        var arg = [_len$2, _create_value$3, _result$4];
        while (true) {
            let [_len$2, _create_value$3, _result$4] = arg;
            var R = (() => {
                var self = _len$2;
                if (self === 0n) {
                    var $12156 = _result$4;
                    return $12156;
                } else {
                    var $12157 = (self - 1n);
                    var $12158 = List$create$go$($12157, _create_value$3, List$cons$(_create_value$3($12157), _result$4));
                    return $12158;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$create$go = x0 => x1 => x2 => List$create$go$(x0, x1, x2);

    function List$create$(_len$2, _create_value$3) {
        var $12159 = List$create$go$(_len$2, _create_value$3, List$nil);
        return $12159;
    };
    const List$create = x0 => x1 => List$create$(x0, x1);

    function Kind$Comp$Prim$instantiator$go$(_lang$1, _prim$2, _depth$3, _defs$4, _ctor$5, _j$6) {
        var self = _ctor$5;
        switch (self._) {
            case 'Pair.new':
                var $12161 = self.fst;
                var $12162 = self.snd;
                var self = (_j$6 === $12161);
                if (self) {
                    var $12164 = Kind$Comp$replace$($12162, List$create$($12161, (_j$9 => {
                        var $12165 = ("x" + Nat$show$(_j$9));
                        return $12165;
                    })));
                    var $12163 = $12164;
                } else {
                    var self = _lang$1;
                    switch (self._) {
                        case 'Kind.Comp.Language.new':
                            var $12167 = self.gram;
                            var $12168 = $12167;
                            var self = $12168;
                            break;
                    };
                    switch (self._) {
                        case 'Kind.Comp.Grammar.new':
                            var $12169 = self.lambda;
                            var $12170 = $12169;
                            var $12166 = $12170;
                            break;
                    };
                    var $12166 = $12166(("x" + Nat$show$(_j$6)))(Kind$Comp$Prim$instantiator$go$(_lang$1, _prim$2, _depth$3, _defs$4, _ctor$5, Nat$succ$(_j$6)));
                    var $12163 = $12166;
                };
                var $12160 = $12163;
                break;
        };
        return $12160;
    };
    const Kind$Comp$Prim$instantiator$go = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Comp$Prim$instantiator$go$(x0, x1, x2, x3, x4, x5);

    function Kind$Comp$Prim$instantiator$(_lang$1, _prim$2, _depth$3, _defs$4) {
        var self = _lang$1;
        switch (self._) {
            case 'Kind.Comp.Language.new':
                var $12172 = self.nati;
                var $12173 = $12172;
                var _shape$5 = $12173;
                break;
        };
        var _shape$5 = _shape$5(_prim$2);
        var self = _shape$5;
        switch (self._) {
            case 'Kind.Comp.Native.new':
                var $12174 = self.inst;
                var _text$8 = "x";
                var _text$9 = (() => {
                    var $12177 = _text$8;
                    var $12178 = $12174;
                    let _text$10 = $12177;
                    let _ctor$9;
                    while ($12178._ === 'List.cons') {
                        _ctor$9 = $12178.head;
                        var self = _lang$1;
                        switch (self._) {
                            case 'Kind.Comp.Language.new':
                                var $12179 = self.gram;
                                var $12180 = $12179;
                                var self = $12180;
                                break;
                        };
                        switch (self._) {
                            case 'Kind.Comp.Grammar.new':
                                var $12181 = self.application;
                                var $12182 = $12181;
                                var $12177 = $12182;
                                break;
                        };
                        var $12177 = $12177(_text$10)(Kind$Comp$Prim$instantiator$go$(_lang$1, _prim$2, _depth$3, _defs$4, _ctor$9, 0n));
                        _text$10 = $12177;
                        $12178 = $12178.tail;
                    }
                    return _text$10;
                })();
                var self = _lang$1;
                switch (self._) {
                    case 'Kind.Comp.Language.new':
                        var $12183 = self.gram;
                        var $12184 = $12183;
                        var self = $12184;
                        break;
                };
                switch (self._) {
                    case 'Kind.Comp.Grammar.new':
                        var $12185 = self.lambda;
                        var $12186 = $12185;
                        var $12175 = $12186;
                        break;
                };
                var $12175 = $12175("x")(_text$9);
                var $12171 = $12175;
                break;
        };
        return $12171;
    };
    const Kind$Comp$Prim$instantiator = x0 => x1 => x2 => x3 => Kind$Comp$Prim$instantiator$(x0, x1, x2, x3);

    function Kind$Comp$get_args$go$(_term$1, _args$2) {
        var Kind$Comp$get_args$go$ = (_term$1, _args$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _args$2]
        });
        var Kind$Comp$get_args$go = _term$1 => _args$2 => Kind$Comp$get_args$go$(_term$1, _args$2);
        var arg = [_term$1, _args$2];
        while (true) {
            let [_term$1, _args$2] = arg;
            var R = (() => {
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Comp.app':
                        var $12187 = self.func;
                        var $12188 = self.argm;
                        var $12189 = Kind$Comp$get_args$go$($12187, List$cons$($12188, _args$2));
                        return $12189;
                    case 'Kind.Comp.nil':
                    case 'Kind.Comp.var':
                    case 'Kind.Comp.ref':
                    case 'Kind.Comp.lam':
                    case 'Kind.Comp.let':
                    case 'Kind.Comp.eli':
                    case 'Kind.Comp.ins':
                    case 'Kind.Comp.nat':
                    case 'Kind.Comp.chr':
                    case 'Kind.Comp.str':
                    case 'Kind.Comp.txt':
                        var $12190 = Pair$new$(_term$1, _args$2);
                        return $12190;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Comp$get_args$go = x0 => x1 => Kind$Comp$get_args$go$(x0, x1);

    function Kind$Comp$get_args$(_term$1) {
        var $12191 = Kind$Comp$get_args$go$(_term$1, List$nil);
        return $12191;
    };
    const Kind$Comp$get_args = x0 => Kind$Comp$get_args$(x0);

    function Kind$Comp$get_arity$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Comp.lam':
                var $12193 = self.body;
                var $12194 = (1n + Kind$Comp$get_arity$($12193));
                var $12192 = $12194;
                break;
            case 'Kind.Comp.nil':
            case 'Kind.Comp.var':
            case 'Kind.Comp.ref':
            case 'Kind.Comp.app':
            case 'Kind.Comp.let':
            case 'Kind.Comp.eli':
            case 'Kind.Comp.ins':
            case 'Kind.Comp.nat':
            case 'Kind.Comp.chr':
            case 'Kind.Comp.str':
            case 'Kind.Comp.txt':
                var $12195 = 0n;
                var $12192 = $12195;
                break;
        };
        return $12192;
    };
    const Kind$Comp$get_arity = x0 => Kind$Comp$get_arity$(x0);

    function Kind$Comp$get_vars$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Comp.lam':
                var $12197 = self.name;
                var $12198 = self.body;
                var self = Kind$Comp$get_vars$($12198);
                switch (self._) {
                    case 'Pair.new':
                        var $12200 = self.fst;
                        var $12201 = self.snd;
                        var $12202 = Pair$new$(List$cons$($12197, $12200), $12201);
                        var $12199 = $12202;
                        break;
                };
                var $12196 = $12199;
                break;
            case 'Kind.Comp.nil':
            case 'Kind.Comp.var':
            case 'Kind.Comp.ref':
            case 'Kind.Comp.app':
            case 'Kind.Comp.let':
            case 'Kind.Comp.eli':
            case 'Kind.Comp.ins':
            case 'Kind.Comp.nat':
            case 'Kind.Comp.chr':
            case 'Kind.Comp.str':
            case 'Kind.Comp.txt':
                var $12203 = Pair$new$(List$nil, _term$1);
                var $12196 = $12203;
                break;
        };
        return $12196;
    };
    const Kind$Comp$get_vars = x0 => Kind$Comp$get_vars$(x0);

    function Kind$Comp$Prim$inst$go$(_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7) {
        var Kind$Comp$Prim$inst$go$ = (_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7) => ({
            ctr: 'TCO',
            arg: [_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7]
        });
        var Kind$Comp$Prim$inst$go = _lang$1 => _name$2 => _inst$3 => _vars$4 => _args$5 => _depth$6 => _defs$7 => Kind$Comp$Prim$inst$go$(_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7);
        var arg = [_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7];
        while (true) {
            let [_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7] = arg;
            var R = (() => {
                var self = _inst$3;
                switch (self._) {
                    case 'List.cons':
                        var $12204 = self.head;
                        var $12205 = self.tail;
                        var self = _vars$4;
                        switch (self._) {
                            case 'List.cons':
                                var $12207 = self.head;
                                var $12208 = self.tail;
                                var self = (_name$2 === $12207);
                                if (self) {
                                    var self = $12204;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $12211 = self.fst;
                                            var $12212 = self.snd;
                                            var self = ($12211 === (list_length(_args$5)));
                                            if (self) {
                                                var $12214 = Maybe$some$(Kind$Comp$replace$($12212, List$mapped$(_args$5, (_x$14 => {
                                                    var $12215 = Kind$Comp$transpile$term$(_lang$1, _x$14, _depth$6, _defs$7);
                                                    return $12215;
                                                }))));
                                                var $12213 = $12214;
                                            } else {
                                                var $12216 = Maybe$none;
                                                var $12213 = $12216;
                                            };
                                            var $12210 = $12213;
                                            break;
                                    };
                                    var $12209 = $12210;
                                } else {
                                    var $12217 = Kind$Comp$Prim$inst$go$(_lang$1, _name$2, $12205, $12208, _args$5, _depth$6, _defs$7);
                                    var $12209 = $12217;
                                };
                                var $12206 = $12209;
                                break;
                            case 'List.nil':
                                var $12218 = Maybe$none;
                                var $12206 = $12218;
                                break;
                        };
                        return $12206;
                    case 'List.nil':
                        var self = _vars$4;
                        switch (self._) {
                            case 'List.nil':
                            case 'List.cons':
                                var $12220 = Maybe$none;
                                var $12219 = $12220;
                                break;
                        };
                        return $12219;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Comp$Prim$inst$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => Kind$Comp$Prim$inst$go$(x0, x1, x2, x3, x4, x5, x6);

    function Kind$Comp$Prim$inst$(_lang$1, _term$2, _depth$3, _defs$4) {
        var self = _term$2;
        switch (self._) {
            case 'Kind.Comp.ins':
                var $12222 = self.prim;
                var $12223 = self.expr;
                var self = _lang$1;
                switch (self._) {
                    case 'Kind.Comp.Language.new':
                        var $12225 = self.nati;
                        var $12226 = $12225;
                        var _shape$7 = $12226;
                        break;
                };
                var _shape$7 = _shape$7($12222);
                var self = _shape$7;
                switch (self._) {
                    case 'Kind.Comp.Native.new':
                        var $12227 = self.inst;
                        var self = Kind$Comp$get_vars$($12223);
                        switch (self._) {
                            case 'Pair.new':
                                var $12229 = self.fst;
                                var $12230 = self.snd;
                                var self = ((list_length($12227)) === (list_length($12229)));
                                if (self) {
                                    var self = Kind$Comp$get_args$($12230);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $12233 = self.fst;
                                            var $12234 = self.snd;
                                            var self = $12233;
                                            switch (self._) {
                                                case 'Kind.Comp.var':
                                                    var $12236 = self.name;
                                                    var $12237 = Kind$Comp$Prim$inst$go$(_lang$1, $12236, $12227, $12229, $12234, _depth$3, _defs$4);
                                                    var $12235 = $12237;
                                                    break;
                                                case 'Kind.Comp.ref':
                                                    var $12238 = self.name;
                                                    var $12239 = Kind$Comp$Prim$inst$go$(_lang$1, $12238, $12227, $12229, $12234, _depth$3, _defs$4);
                                                    var $12235 = $12239;
                                                    break;
                                                case 'Kind.Comp.nil':
                                                case 'Kind.Comp.lam':
                                                case 'Kind.Comp.app':
                                                case 'Kind.Comp.let':
                                                case 'Kind.Comp.eli':
                                                case 'Kind.Comp.ins':
                                                case 'Kind.Comp.nat':
                                                case 'Kind.Comp.chr':
                                                case 'Kind.Comp.str':
                                                case 'Kind.Comp.txt':
                                                    var $12240 = Maybe$none;
                                                    var $12235 = $12240;
                                                    break;
                                            };
                                            var $12232 = $12235;
                                            break;
                                    };
                                    var $12231 = $12232;
                                } else {
                                    var $12241 = Maybe$none;
                                    var $12231 = $12241;
                                };
                                var $12228 = $12231;
                                break;
                        };
                        var $12224 = $12228;
                        break;
                };
                var $12221 = $12224;
                break;
            case 'Kind.Comp.nil':
            case 'Kind.Comp.var':
            case 'Kind.Comp.ref':
            case 'Kind.Comp.lam':
            case 'Kind.Comp.app':
            case 'Kind.Comp.let':
            case 'Kind.Comp.eli':
            case 'Kind.Comp.nat':
            case 'Kind.Comp.chr':
            case 'Kind.Comp.str':
            case 'Kind.Comp.txt':
                var $12242 = Maybe$none;
                var $12221 = $12242;
                break;
        };
        return $12221;
    };
    const Kind$Comp$Prim$inst = x0 => x1 => x2 => x3 => Kind$Comp$Prim$inst$(x0, x1, x2, x3);

    function Word$fold$(_nil$3, _w0$4, _w1$5, _word$6) {
        var self = _word$6;
        switch (self._) {
            case 'Word.o':
                var $12244 = self.pred;
                var $12245 = _w0$4(Word$fold$(_nil$3, _w0$4, _w1$5, $12244));
                var $12243 = $12245;
                break;
            case 'Word.i':
                var $12246 = self.pred;
                var $12247 = _w1$5(Word$fold$(_nil$3, _w0$4, _w1$5, $12246));
                var $12243 = $12247;
                break;
            case 'Word.e':
                var $12248 = _nil$3;
                var $12243 = $12248;
                break;
        };
        return $12243;
    };
    const Word$fold = x0 => x1 => x2 => x3 => Word$fold$(x0, x1, x2, x3);

    function Word$to_nat$(_word$2) {
        var $12249 = Word$fold$(0n, a1 => (2n * a1), (_x$4 => {
            var $12250 = Nat$succ$((2n * _x$4));
            return $12250;
        }), _word$2);
        return $12249;
    };
    const Word$to_nat = x0 => Word$to_nat$(x0);
    const U16$to_nat = a0 => (BigInt(a0));

    function Kind$Comp$transpile$term$(_lang$1, _comp$2, _depth$3, _defs$4) {
        var _go$5 = Kind$Comp$transpile$term(_lang$1);
        var self = Kind$Comp$Prim$inst$(_lang$1, _comp$2, _depth$3, _defs$4);
        switch (self._) {
            case 'Maybe.some':
                var $12252 = self.value;
                var $12253 = $12252;
                var $12251 = $12253;
                break;
            case 'Maybe.none':
                var self = Kind$Comp$Prim$elim$(_lang$1, _comp$2, _depth$3, _defs$4);
                switch (self._) {
                    case 'Maybe.some':
                        var $12255 = self.value;
                        var $12256 = $12255;
                        var $12254 = $12256;
                        break;
                    case 'Maybe.none':
                        var self = _comp$2;
                        switch (self._) {
                            case 'Kind.Comp.var':
                                var $12258 = self.name;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12260 = self.gram;
                                        var $12261 = $12260;
                                        var self = $12261;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12262 = self.name;
                                        var $12263 = $12262;
                                        var $12259 = $12263;
                                        break;
                                };
                                var $12259 = $12259($12258);
                                var $12257 = $12259;
                                break;
                            case 'Kind.Comp.ref':
                                var $12264 = self.name;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12266 = self.gram;
                                        var $12267 = $12266;
                                        var self = $12267;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12268 = self.name;
                                        var $12269 = $12268;
                                        var $12265 = $12269;
                                        break;
                                };
                                var $12265 = $12265($12264);
                                var $12257 = $12265;
                                break;
                            case 'Kind.Comp.lam':
                                var $12270 = self.name;
                                var $12271 = self.body;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12273 = self.gram;
                                        var $12274 = $12273;
                                        var self = $12274;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12275 = self.lambda;
                                        var $12276 = $12275;
                                        var $12272 = $12276;
                                        break;
                                };
                                var $12272 = $12272((() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12277 = self.gram;
                                            var $12278 = $12277;
                                            var self = $12278;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12279 = self.name;
                                            var $12280 = $12279;
                                            return $12280;
                                    };
                                })()($12270))(_go$5($12271)(Nat$succ$(_depth$3))(_defs$4));
                                var $12257 = $12272;
                                break;
                            case 'Kind.Comp.app':
                                var $12281 = self.func;
                                var $12282 = self.argm;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12284 = self.gram;
                                        var $12285 = $12284;
                                        var self = $12285;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12286 = self.application;
                                        var $12287 = $12286;
                                        var $12283 = $12287;
                                        break;
                                };
                                var $12283 = $12283(_go$5($12281)(_depth$3)(_defs$4))(_go$5($12282)(_depth$3)(_defs$4));
                                var $12257 = $12283;
                                break;
                            case 'Kind.Comp.let':
                                var $12288 = self.name;
                                var $12289 = self.expr;
                                var $12290 = self.body;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12292 = self.gram;
                                        var $12293 = $12292;
                                        var self = $12293;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12294 = self.local_definition;
                                        var $12295 = $12294;
                                        var $12291 = $12295;
                                        break;
                                };
                                var $12291 = $12291((() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12296 = self.gram;
                                            var $12297 = $12296;
                                            var self = $12297;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12298 = self.name;
                                            var $12299 = $12298;
                                            return $12299;
                                    };
                                })()($12288))(_go$5($12289)(_depth$3)(_defs$4))(_go$5($12290)(Nat$succ$(_depth$3))(_defs$4));
                                var $12257 = $12291;
                                break;
                            case 'Kind.Comp.eli':
                                var $12300 = self.prim;
                                var $12301 = self.expr;
                                var self = $12300;
                                switch (self._) {
                                    case 'Kind.Comp.Prim.unit':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12304 = self.gram;
                                                var $12305 = $12304;
                                                var self = $12305;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12306 = self.application;
                                                var $12307 = $12306;
                                                var $12303 = $12307;
                                                break;
                                        };
                                        var $12303 = $12303((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12308 = self.gram;
                                                    var $12309 = $12308;
                                                    var self = $12309;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12310 = self.inst_name;
                                                    var $12311 = $12310;
                                                    return $12311;
                                            };
                                        })()("Unit"))(_go$5($12301)(_depth$3)(_defs$4));
                                        var $12302 = $12303;
                                        break;
                                    case 'Kind.Comp.Prim.bool':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12313 = self.gram;
                                                var $12314 = $12313;
                                                var self = $12314;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12315 = self.application;
                                                var $12316 = $12315;
                                                var $12312 = $12316;
                                                break;
                                        };
                                        var $12312 = $12312((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12317 = self.gram;
                                                    var $12318 = $12317;
                                                    var self = $12318;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12319 = self.inst_name;
                                                    var $12320 = $12319;
                                                    return $12320;
                                            };
                                        })()("Bool"))(_go$5($12301)(_depth$3)(_defs$4));
                                        var $12302 = $12312;
                                        break;
                                    case 'Kind.Comp.Prim.nat':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12322 = self.gram;
                                                var $12323 = $12322;
                                                var self = $12323;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12324 = self.application;
                                                var $12325 = $12324;
                                                var $12321 = $12325;
                                                break;
                                        };
                                        var $12321 = $12321((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12326 = self.gram;
                                                    var $12327 = $12326;
                                                    var self = $12327;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12328 = self.inst_name;
                                                    var $12329 = $12328;
                                                    return $12329;
                                            };
                                        })()("Nat"))(_go$5($12301)(_depth$3)(_defs$4));
                                        var $12302 = $12321;
                                        break;
                                    case 'Kind.Comp.Prim.u16':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12331 = self.gram;
                                                var $12332 = $12331;
                                                var self = $12332;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12333 = self.application;
                                                var $12334 = $12333;
                                                var $12330 = $12334;
                                                break;
                                        };
                                        var $12330 = $12330((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12335 = self.gram;
                                                    var $12336 = $12335;
                                                    var self = $12336;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12337 = self.inst_name;
                                                    var $12338 = $12337;
                                                    return $12338;
                                            };
                                        })()("U16"))(_go$5($12301)(_depth$3)(_defs$4));
                                        var $12302 = $12330;
                                        break;
                                    case 'Kind.Comp.Prim.string':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12340 = self.gram;
                                                var $12341 = $12340;
                                                var self = $12341;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12342 = self.application;
                                                var $12343 = $12342;
                                                var $12339 = $12343;
                                                break;
                                        };
                                        var $12339 = $12339((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12344 = self.gram;
                                                    var $12345 = $12344;
                                                    var self = $12345;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12346 = self.inst_name;
                                                    var $12347 = $12346;
                                                    return $12347;
                                            };
                                        })()("String"))(_go$5($12301)(_depth$3)(_defs$4));
                                        var $12302 = $12339;
                                        break;
                                    case 'Kind.Comp.Prim.data':
                                        var $12348 = _go$5($12301)(_depth$3)(_defs$4);
                                        var $12302 = $12348;
                                        break;
                                };
                                var $12257 = $12302;
                                break;
                            case 'Kind.Comp.ins':
                                var $12349 = self.prim;
                                var $12350 = self.expr;
                                var self = $12349;
                                switch (self._) {
                                    case 'Kind.Comp.Prim.unit':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12353 = self.gram;
                                                var $12354 = $12353;
                                                var self = $12354;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12355 = self.application;
                                                var $12356 = $12355;
                                                var $12352 = $12356;
                                                break;
                                        };
                                        var $12352 = $12352((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12357 = self.gram;
                                                    var $12358 = $12357;
                                                    var self = $12358;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12359 = self.inst_name;
                                                    var $12360 = $12359;
                                                    return $12360;
                                            };
                                        })()("Unit"))(_go$5($12350)(_depth$3)(_defs$4));
                                        var $12351 = $12352;
                                        break;
                                    case 'Kind.Comp.Prim.bool':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12362 = self.gram;
                                                var $12363 = $12362;
                                                var self = $12363;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12364 = self.application;
                                                var $12365 = $12364;
                                                var $12361 = $12365;
                                                break;
                                        };
                                        var $12361 = $12361((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12366 = self.gram;
                                                    var $12367 = $12366;
                                                    var self = $12367;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12368 = self.inst_name;
                                                    var $12369 = $12368;
                                                    return $12369;
                                            };
                                        })()("Bool"))(_go$5($12350)(_depth$3)(_defs$4));
                                        var $12351 = $12361;
                                        break;
                                    case 'Kind.Comp.Prim.nat':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12371 = self.gram;
                                                var $12372 = $12371;
                                                var self = $12372;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12373 = self.application;
                                                var $12374 = $12373;
                                                var $12370 = $12374;
                                                break;
                                        };
                                        var $12370 = $12370((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12375 = self.gram;
                                                    var $12376 = $12375;
                                                    var self = $12376;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12377 = self.inst_name;
                                                    var $12378 = $12377;
                                                    return $12378;
                                            };
                                        })()("Nat"))(_go$5($12350)(_depth$3)(_defs$4));
                                        var $12351 = $12370;
                                        break;
                                    case 'Kind.Comp.Prim.u16':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12380 = self.gram;
                                                var $12381 = $12380;
                                                var self = $12381;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12382 = self.application;
                                                var $12383 = $12382;
                                                var $12379 = $12383;
                                                break;
                                        };
                                        var $12379 = $12379((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12384 = self.gram;
                                                    var $12385 = $12384;
                                                    var self = $12385;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12386 = self.inst_name;
                                                    var $12387 = $12386;
                                                    return $12387;
                                            };
                                        })()("U16"))(_go$5($12350)(_depth$3)(_defs$4));
                                        var $12351 = $12379;
                                        break;
                                    case 'Kind.Comp.Prim.string':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12389 = self.gram;
                                                var $12390 = $12389;
                                                var self = $12390;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12391 = self.application;
                                                var $12392 = $12391;
                                                var $12388 = $12392;
                                                break;
                                        };
                                        var $12388 = $12388((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12393 = self.gram;
                                                    var $12394 = $12393;
                                                    var self = $12394;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12395 = self.inst_name;
                                                    var $12396 = $12395;
                                                    return $12396;
                                            };
                                        })()("String"))(_go$5($12350)(_depth$3)(_defs$4));
                                        var $12351 = $12388;
                                        break;
                                    case 'Kind.Comp.Prim.data':
                                        var $12397 = _go$5($12350)(_depth$3)(_defs$4);
                                        var $12351 = $12397;
                                        break;
                                };
                                var $12257 = $12351;
                                break;
                            case 'Kind.Comp.nat':
                                var $12398 = self.natx;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12400 = self.gram;
                                        var $12401 = $12400;
                                        var self = $12401;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12402 = self.nat;
                                        var $12403 = $12402;
                                        var $12399 = $12403;
                                        break;
                                };
                                var $12399 = $12399($12398);
                                var $12257 = $12399;
                                break;
                            case 'Kind.Comp.chr':
                                var $12404 = self.chrx;
                                var $12405 = Nat$show$((BigInt($12404)));
                                var $12257 = $12405;
                                break;
                            case 'Kind.Comp.str':
                                var $12406 = self.strx;
                                var $12407 = ("\"" + ((() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12408 = self.gram;
                                            var $12409 = $12408;
                                            var self = $12409;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12410 = self.string_literal;
                                            var $12411 = $12410;
                                            return $12411;
                                    };
                                })()($12406) + "\""));
                                var $12257 = $12407;
                                break;
                            case 'Kind.Comp.txt':
                                var $12412 = self.text;
                                var $12413 = $12412;
                                var $12257 = $12413;
                                break;
                            case 'Kind.Comp.nil':
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12415 = self.gram;
                                        var $12416 = $12415;
                                        var self = $12416;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12417 = self.null;
                                        var $12418 = $12417;
                                        var $12414 = $12418;
                                        break;
                                };
                                var $12257 = $12414;
                                break;
                        };
                        var $12254 = $12257;
                        break;
                };
                var $12251 = $12254;
                break;
        };
        return $12251;
    };
    const Kind$Comp$transpile$term = x0 => x1 => x2 => x3 => Kind$Comp$transpile$term$(x0, x1, x2, x3);

    function List$map$(_f$3, _as$4) {
        var self = _as$4;
        switch (self._) {
            case 'List.cons':
                var $12420 = self.head;
                var $12421 = self.tail;
                var $12422 = List$cons$(_f$3($12420), List$map$(_f$3, $12421));
                var $12419 = $12422;
                break;
            case 'List.nil':
                var $12423 = List$nil;
                var $12419 = $12423;
                break;
        };
        return $12419;
    };
    const List$map = x0 => x1 => List$map$(x0, x1);

    function List$seq$go$(_n$1, _xs$2) {
        var List$seq$go$ = (_n$1, _xs$2) => ({
            ctr: 'TCO',
            arg: [_n$1, _xs$2]
        });
        var List$seq$go = _n$1 => _xs$2 => List$seq$go$(_n$1, _xs$2);
        var arg = [_n$1, _xs$2];
        while (true) {
            let [_n$1, _xs$2] = arg;
            var R = (() => {
                var self = _n$1;
                if (self === 0n) {
                    var $12424 = _xs$2;
                    return $12424;
                } else {
                    var $12425 = (self - 1n);
                    var $12426 = List$seq$go$($12425, List$cons$($12425, _xs$2));
                    return $12426;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$seq$go = x0 => x1 => List$seq$go$(x0, x1);

    function List$seq$(_n$1) {
        var $12427 = List$seq$go$(_n$1, List$nil);
        return $12427;
    };
    const List$seq = x0 => List$seq$(x0);

    function Kind$Comp$txt$(_text$1) {
        var $12428 = ({
            _: 'Kind.Comp.txt',
            'text': _text$1
        });
        return $12428;
    };
    const Kind$Comp$txt = x0 => Kind$Comp$txt$(x0);

    function Kind$Comp$subst$(_name$1, _value$2, _term$3) {
        var self = _term$3;
        switch (self._) {
            case 'Kind.Comp.var':
                var $12430 = self.name;
                var self = (_name$1 === $12430);
                if (self) {
                    var $12432 = _value$2;
                    var $12431 = $12432;
                } else {
                    var $12433 = Kind$Comp$var$($12430);
                    var $12431 = $12433;
                };
                var $12429 = $12431;
                break;
            case 'Kind.Comp.ref':
                var $12434 = self.name;
                var $12435 = Kind$Comp$ref$($12434);
                var $12429 = $12435;
                break;
            case 'Kind.Comp.lam':
                var $12436 = self.name;
                var $12437 = self.body;
                var $12438 = Kind$Comp$lam$($12436, (() => {
                    var self = (_name$1 === $12436);
                    if (self) {
                        var $12439 = $12437;
                        return $12439;
                    } else {
                        var $12440 = Kind$Comp$subst$(_name$1, _value$2, $12437);
                        return $12440;
                    };
                })());
                var $12429 = $12438;
                break;
            case 'Kind.Comp.app':
                var $12441 = self.func;
                var $12442 = self.argm;
                var $12443 = Kind$Comp$app$(Kind$Comp$subst$(_name$1, _value$2, $12441), Kind$Comp$subst$(_name$1, _value$2, $12442));
                var $12429 = $12443;
                break;
            case 'Kind.Comp.let':
                var $12444 = self.name;
                var $12445 = self.expr;
                var $12446 = self.body;
                var $12447 = Kind$Comp$let$($12444, Kind$Comp$subst$(_name$1, _value$2, $12445), (() => {
                    var self = (_name$1 === $12444);
                    if (self) {
                        var $12448 = $12446;
                        return $12448;
                    } else {
                        var $12449 = Kind$Comp$subst$(_name$1, _value$2, $12446);
                        return $12449;
                    };
                })());
                var $12429 = $12447;
                break;
            case 'Kind.Comp.eli':
                var $12450 = self.prim;
                var $12451 = self.expr;
                var $12452 = Kind$Comp$eli$($12450, Kind$Comp$subst$(_name$1, _value$2, $12451));
                var $12429 = $12452;
                break;
            case 'Kind.Comp.ins':
                var $12453 = self.prim;
                var $12454 = self.expr;
                var $12455 = Kind$Comp$ins$($12453, Kind$Comp$subst$(_name$1, _value$2, $12454));
                var $12429 = $12455;
                break;
            case 'Kind.Comp.nat':
                var $12456 = self.natx;
                var $12457 = Kind$Comp$nat$($12456);
                var $12429 = $12457;
                break;
            case 'Kind.Comp.chr':
                var $12458 = self.chrx;
                var $12459 = Kind$Comp$chr$($12458);
                var $12429 = $12459;
                break;
            case 'Kind.Comp.str':
                var $12460 = self.strx;
                var $12461 = Kind$Comp$str$($12460);
                var $12429 = $12461;
                break;
            case 'Kind.Comp.txt':
                var $12462 = self.text;
                var $12463 = Kind$Comp$txt$($12462);
                var $12429 = $12463;
                break;
            case 'Kind.Comp.nil':
                var $12464 = Kind$Comp$nil;
                var $12429 = $12464;
                break;
        };
        return $12429;
    };
    const Kind$Comp$subst = x0 => x1 => x2 => Kind$Comp$subst$(x0, x1, x2);

    function Kind$Comp$apply$(_term$1, _args$2) {
        var Kind$Comp$apply$ = (_term$1, _args$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _args$2]
        });
        var Kind$Comp$apply = _term$1 => _args$2 => Kind$Comp$apply$(_term$1, _args$2);
        var arg = [_term$1, _args$2];
        while (true) {
            let [_term$1, _args$2] = arg;
            var R = (() => {
                var self = _args$2;
                switch (self._) {
                    case 'List.cons':
                        var $12465 = self.head;
                        var $12466 = self.tail;
                        var self = _term$1;
                        switch (self._) {
                            case 'Kind.Comp.lam':
                                var $12468 = self.name;
                                var $12469 = self.body;
                                var $12470 = Kind$Comp$apply$(Kind$Comp$subst$($12468, $12465, $12469), $12466);
                                var $12467 = $12470;
                                break;
                            case 'Kind.Comp.nil':
                            case 'Kind.Comp.var':
                            case 'Kind.Comp.ref':
                            case 'Kind.Comp.app':
                            case 'Kind.Comp.let':
                            case 'Kind.Comp.eli':
                            case 'Kind.Comp.ins':
                            case 'Kind.Comp.nat':
                            case 'Kind.Comp.chr':
                            case 'Kind.Comp.str':
                            case 'Kind.Comp.txt':
                                var $12471 = Kind$Comp$apply$(Kind$Comp$app$(_term$1, $12465), $12466);
                                var $12467 = $12471;
                                break;
                        };
                        return $12467;
                    case 'List.nil':
                        var $12472 = _term$1;
                        return $12472;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Comp$apply = x0 => x1 => Kind$Comp$apply$(x0, x1);

    function Kind$Comp$Prim$elim$(_lang$1, _term$2, _depth$3, _defs$4) {
        var self = Kind$Comp$get_args$(_term$2);
        switch (self._) {
            case 'Pair.new':
                var $12474 = self.fst;
                var $12475 = self.snd;
                var self = $12474;
                switch (self._) {
                    case 'Kind.Comp.ref':
                        var $12477 = self.name;
                        var self = Kind$Map$get$($12477, _defs$4);
                        switch (self._) {
                            case 'Maybe.some':
                                var $12479 = self.value;
                                var _arity$9 = Kind$Comp$get_arity$($12479);
                                var self = ((_arity$9 === (list_length($12475))) && (_arity$9 > 0n));
                                if (self) {
                                    var _inlined_args$10 = List$map$((_arg$10 => {
                                        var $12482 = Kind$Comp$transpile$term$(_lang$1, _arg$10, _depth$3, _defs$4);
                                        return $12482;
                                    }), $12475);
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12483 = self.gram;
                                            var $12484 = $12483;
                                            var self = $12484;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12485 = self.global_application;
                                            var $12486 = $12485;
                                            var _code$11 = $12486;
                                            break;
                                    };
                                    var _code$11 = _code$11($12477)(_inlined_args$10);
                                    var $12481 = Maybe$some$(_code$11);
                                    var $12480 = $12481;
                                } else {
                                    var $12487 = Maybe$none;
                                    var $12480 = $12487;
                                };
                                var $12478 = $12480;
                                break;
                            case 'Maybe.none':
                                var $12488 = Maybe$none;
                                var $12478 = $12488;
                                break;
                        };
                        var $12476 = $12478;
                        break;
                    case 'Kind.Comp.eli':
                        var $12489 = self.prim;
                        var $12490 = self.expr;
                        var self = _lang$1;
                        switch (self._) {
                            case 'Kind.Comp.Language.new':
                                var $12492 = self.nati;
                                var $12493 = $12492;
                                var _shape$9 = $12493;
                                break;
                        };
                        var _shape$9 = _shape$9($12489);
                        var self = _shape$9;
                        switch (self._) {
                            case 'Kind.Comp.Native.new':
                                var $12494 = self.elim;
                                var self = $12494;
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12496 = self.fst;
                                        var $12497 = self.snd;
                                        var _args_len$14 = (list_length($12475));
                                        var _cses_len$15 = (list_length($12497));
                                        var self = (_args_len$14 > _cses_len$15);
                                        if (self) {
                                            var $12499 = Maybe$none;
                                            var $12498 = $12499;
                                        } else {
                                            var _lams_len$16 = (_cses_len$15 - _args_len$14 <= 0n ? 0n : _cses_len$15 - _args_len$14);
                                            var _args$17 = Nat$for$($12475, 0n, _lams_len$16, (_i$17 => _args$18 => {
                                                var $12501 = List$concat$(_args$18, List$cons$(Kind$Comp$var$(("c" + Nat$show$(_i$17))), List$nil));
                                                return $12501;
                                            }));
                                            var _self$18 = ("self" + Nat$show$(_depth$3));
                                            var _cse_body_list$19 = List$map$((_item$19 => {
                                                var self = _item$19;
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $12503 = self.fst;
                                                        var $12504 = self.snd;
                                                        var self = $12503;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $12506 = self.fst;
                                                                var $12507 = self.snd;
                                                                var _flds_len$24 = (list_length($12507));
                                                                var _let_args_n$25 = List$reverse$(List$seq$(_flds_len$24));
                                                                var _lam_args_n$26 = List$reverse$(List$seq$(_lams_len$16));
                                                                var _keys$27 = List$create$(_flds_len$24, (_k$27 => {
                                                                    var $12509 = Kind$Comp$var$(("f" + Nat$show$((_depth$3 + _k$27))));
                                                                    return $12509;
                                                                }));
                                                                var _argj$28 = Kind$Comp$apply$($12504, _keys$27);
                                                                var _body$29 = Kind$Comp$transpile$term$(_lang$1, _argj$28, ((_depth$3 + _flds_len$24) + _lams_len$16), _defs$4);
                                                                var _body$30 = (() => {
                                                                    var $12511 = _body$29;
                                                                    var $12512 = _lam_args_n$26;
                                                                    let _body$31 = $12511;
                                                                    let _i$30;
                                                                    while ($12512._ === 'List.cons') {
                                                                        _i$30 = $12512.head;
                                                                        var self = _lang$1;
                                                                        switch (self._) {
                                                                            case 'Kind.Comp.Language.new':
                                                                                var $12513 = self.gram;
                                                                                var $12514 = $12513;
                                                                                var self = $12514;
                                                                                break;
                                                                        };
                                                                        switch (self._) {
                                                                            case 'Kind.Comp.Grammar.new':
                                                                                var $12515 = self.lambda;
                                                                                var $12516 = $12515;
                                                                                var $12511 = $12516;
                                                                                break;
                                                                        };
                                                                        var $12511 = $12511(("c" + Nat$show$(_i$30)))(_body$31);
                                                                        _body$31 = $12511;
                                                                        $12512 = $12512.tail;
                                                                    }
                                                                    return _body$31;
                                                                })();
                                                                var _text$31 = _body$30;
                                                                var _text$32 = (() => {
                                                                    var $12518 = _text$31;
                                                                    var $12519 = _let_args_n$25;
                                                                    let _text$33 = $12518;
                                                                    let _k$32;
                                                                    while ($12519._ === 'List.cons') {
                                                                        _k$32 = $12519.head;
                                                                        var self = _lang$1;
                                                                        switch (self._) {
                                                                            case 'Kind.Comp.Language.new':
                                                                                var $12520 = self.gram;
                                                                                var $12521 = $12520;
                                                                                var self = $12521;
                                                                                break;
                                                                        };
                                                                        switch (self._) {
                                                                            case 'Kind.Comp.Grammar.new':
                                                                                var $12522 = self.local_definition;
                                                                                var $12523 = $12522;
                                                                                var $12518 = $12523;
                                                                                break;
                                                                        };
                                                                        var $12518 = $12518(("f" + Nat$show$((_depth$3 + _k$32))))(Kind$Comp$replace$(Maybe$default$(List$get$(_k$32, $12507), ""), List$cons$(_self$18, List$nil)))(_text$33);
                                                                        _text$33 = $12518;
                                                                        $12519 = $12519.tail;
                                                                    }
                                                                    return _text$33;
                                                                })();
                                                                var $12508 = Pair$new$($12506, _text$32);
                                                                var $12505 = $12508;
                                                                break;
                                                        };
                                                        var $12502 = $12505;
                                                        break;
                                                };
                                                return $12502;
                                            }), List$zip$($12497, _args$17));
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12524 = self.gram;
                                                    var $12525 = $12524;
                                                    var self = $12525;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12526 = self.select;
                                                    var $12527 = $12526;
                                                    var _ret$20 = $12527;
                                                    break;
                                            };
                                            var _ret$20 = _ret$20(Kind$Comp$replace$($12496, List$cons$(_self$18, List$nil)))(_cse_body_list$19);
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12528 = self.gram;
                                                    var $12529 = $12528;
                                                    var self = $12529;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12530 = self.local_definition;
                                                    var $12531 = $12530;
                                                    var _ret$21 = $12531;
                                                    break;
                                            };
                                            var _ret$21 = _ret$21(_self$18)(Kind$Comp$transpile$term$(_lang$1, $12490, _depth$3, _defs$4))(_ret$20);
                                            var $12500 = Maybe$some$(_ret$21);
                                            var $12498 = $12500;
                                        };
                                        var $12495 = $12498;
                                        break;
                                };
                                var $12491 = $12495;
                                break;
                        };
                        var $12476 = $12491;
                        break;
                    case 'Kind.Comp.nil':
                    case 'Kind.Comp.var':
                    case 'Kind.Comp.lam':
                    case 'Kind.Comp.app':
                    case 'Kind.Comp.let':
                    case 'Kind.Comp.ins':
                    case 'Kind.Comp.nat':
                    case 'Kind.Comp.chr':
                    case 'Kind.Comp.str':
                    case 'Kind.Comp.txt':
                        var $12532 = Maybe$none;
                        var $12476 = $12532;
                        break;
                };
                var $12473 = $12476;
                break;
        };
        return $12473;
    };
    const Kind$Comp$Prim$elim = x0 => x1 => x2 => x3 => Kind$Comp$Prim$elim$(x0, x1, x2, x3);

    function Kind$Comp$Prim$eliminator$(_lang$1, _prim$2, _depth$3, _defs$4) {
        var _term$5 = Kind$Comp$eli$(_prim$2, Kind$Comp$var$("x"));
        var _text$6 = Maybe$default$(Kind$Comp$Prim$elim$(_lang$1, _term$5, 0n, _defs$4), "");
        var _term$7 = Kind$Comp$lam$("x", Kind$Comp$txt$(_text$6));
        var $12533 = Kind$Comp$transpile$term$(_lang$1, _term$7, _depth$3, _defs$4);
        return $12533;
    };
    const Kind$Comp$Prim$eliminator = x0 => x1 => x2 => x3 => Kind$Comp$Prim$eliminator$(x0, x1, x2, x3);

    function BBL$lookup$(_cmp$3, _key$4, _map$5) {
        var BBL$lookup$ = (_cmp$3, _key$4, _map$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _key$4, _map$5]
        });
        var BBL$lookup = _cmp$3 => _key$4 => _map$5 => BBL$lookup$(_cmp$3, _key$4, _map$5);
        var arg = [_cmp$3, _key$4, _map$5];
        while (true) {
            let [_cmp$3, _key$4, _map$5] = arg;
            var R = (() => {
                var self = _map$5;
                switch (self._) {
                    case 'BBL.bin':
                        var $12534 = self.key;
                        var $12535 = self.val;
                        var $12536 = self.left;
                        var $12537 = self.right;
                        var self = _cmp$3(_key$4)($12534);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $12539 = BBL$lookup$(_cmp$3, _key$4, $12536);
                                var $12538 = $12539;
                                break;
                            case 'Cmp.eql':
                                var $12540 = Maybe$some$($12535);
                                var $12538 = $12540;
                                break;
                            case 'Cmp.gtn':
                                var $12541 = BBL$lookup$(_cmp$3, _key$4, $12537);
                                var $12538 = $12541;
                                break;
                        };
                        return $12538;
                    case 'BBL.tip':
                        var $12542 = Maybe$none;
                        return $12542;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BBL$lookup = x0 => x1 => x2 => BBL$lookup$(x0, x1, x2);

    function U16$cmp$(_a$1, _b$2) {
        var self = (_a$1 < _b$2);
        if (self) {
            var $12544 = Cmp$ltn;
            var $12543 = $12544;
        } else {
            var self = (_a$1 === _b$2);
            if (self) {
                var $12546 = Cmp$eql;
                var $12545 = $12546;
            } else {
                var $12547 = Cmp$gtn;
                var $12545 = $12547;
            };
            var $12543 = $12545;
        };
        return $12543;
    };
    const U16$cmp = x0 => x1 => U16$cmp$(x0, x1);

    function String$cmp$(_a$1, _b$2) {
        var String$cmp$ = (_a$1, _b$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _b$2]
        });
        var String$cmp = _a$1 => _b$2 => String$cmp$(_a$1, _b$2);
        var arg = [_a$1, _b$2];
        while (true) {
            let [_a$1, _b$2] = arg;
            var R = (() => {
                var self = _a$1;
                if (self.length === 0) {
                    var self = _b$2;
                    if (self.length === 0) {
                        var $12549 = Cmp$eql;
                        var $12548 = $12549;
                    } else {
                        var $12550 = self.charCodeAt(0);
                        var $12551 = self.slice(1);
                        var $12552 = Cmp$ltn;
                        var $12548 = $12552;
                    };
                    return $12548;
                } else {
                    var $12553 = self.charCodeAt(0);
                    var $12554 = self.slice(1);
                    var self = _b$2;
                    if (self.length === 0) {
                        var $12556 = Cmp$gtn;
                        var $12555 = $12556;
                    } else {
                        var $12557 = self.charCodeAt(0);
                        var $12558 = self.slice(1);
                        var self = U16$cmp$($12553, $12557);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $12560 = Cmp$ltn;
                                var $12559 = $12560;
                                break;
                            case 'Cmp.eql':
                                var $12561 = String$cmp$($12554, $12558);
                                var $12559 = $12561;
                                break;
                            case 'Cmp.gtn':
                                var $12562 = Cmp$gtn;
                                var $12559 = $12562;
                                break;
                        };
                        var $12555 = $12559;
                    };
                    return $12555;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$cmp = x0 => x1 => String$cmp$(x0, x1);

    function Map$get$(_key$2, _map$3) {
        var $12563 = BBL$lookup$(String$cmp, _key$2, _map$3);
        return $12563;
    };
    const Map$get = x0 => x1 => Map$get$(x0, x1);

    function BBL$(_K$1, _V$2) {
        var $12564 = null;
        return $12564;
    };
    const BBL = x0 => x1 => BBL$(x0, x1);

    function Map$(_V$1) {
        var $12565 = null;
        return $12565;
    };
    const Map = x0 => Map$(x0);

    function Kind$Comp$transpile$global_definitions$(_lang$1, _defs_list$2, _defs$3) {
        var _code$4 = "";
        var _code$5 = (() => {
            var $12568 = _code$4;
            var $12569 = Kind$Comp$Prim$natives;
            let _code$6 = $12568;
            let _nati$5;
            while ($12569._ === 'List.cons') {
                _nati$5 = $12569.head;
                var self = _nati$5;
                switch (self._) {
                    case 'Pair.new':
                        var $12570 = self.fst;
                        var $12571 = self.snd;
                        var _code$9 = (_code$6 + (() => {
                            var self = _lang$1;
                            switch (self._) {
                                case 'Kind.Comp.Language.new':
                                    var $12573 = self.gram;
                                    var $12574 = $12573;
                                    var self = $12574;
                                    break;
                            };
                            switch (self._) {
                                case 'Kind.Comp.Grammar.new':
                                    var $12575 = self.global_function;
                                    var $12576 = $12575;
                                    return $12576;
                            };
                        })()((() => {
                            var self = _lang$1;
                            switch (self._) {
                                case 'Kind.Comp.Language.new':
                                    var $12577 = self.gram;
                                    var $12578 = $12577;
                                    var self = $12578;
                                    break;
                            };
                            switch (self._) {
                                case 'Kind.Comp.Grammar.new':
                                    var $12579 = self.inst_name;
                                    var $12580 = $12579;
                                    return $12580;
                            };
                        })()($12570))(List$nil)(Kind$Comp$Prim$instantiator$(_lang$1, $12571, 0n, _defs$3)));
                        var _code$10 = (_code$9 + (() => {
                            var self = _lang$1;
                            switch (self._) {
                                case 'Kind.Comp.Language.new':
                                    var $12581 = self.gram;
                                    var $12582 = $12581;
                                    var self = $12582;
                                    break;
                            };
                            switch (self._) {
                                case 'Kind.Comp.Grammar.new':
                                    var $12583 = self.global_function;
                                    var $12584 = $12583;
                                    return $12584;
                            };
                        })()((() => {
                            var self = _lang$1;
                            switch (self._) {
                                case 'Kind.Comp.Language.new':
                                    var $12585 = self.gram;
                                    var $12586 = $12585;
                                    var self = $12586;
                                    break;
                            };
                            switch (self._) {
                                case 'Kind.Comp.Grammar.new':
                                    var $12587 = self.elim_name;
                                    var $12588 = $12587;
                                    return $12588;
                            };
                        })()($12570))(List$nil)(Kind$Comp$Prim$eliminator$(_lang$1, $12571, 0n, _defs$3)));
                        var $12572 = _code$10;
                        var $12568 = $12572;
                        break;
                };
                _code$6 = $12568;
                $12569 = $12569.tail;
            }
            return _code$6;
        })();
        var _code$6 = (() => {
            var $12590 = _code$5;
            var $12591 = _defs_list$2;
            let _code$7 = $12590;
            let _defn$6;
            while ($12591._ === 'List.cons') {
                _defn$6 = $12591.head;
                var self = _defn$6;
                switch (self._) {
                    case 'Pair.new':
                        var $12592 = self.fst;
                        var $12593 = self.snd;
                        var self = Kind$Comp$get_vars$($12593);
                        switch (self._) {
                            case 'Pair.new':
                                var $12595 = self.fst;
                                var $12596 = self.snd;
                                var _code$12 = (_code$7 + (() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12598 = self.gram;
                                            var $12599 = $12598;
                                            var self = $12599;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12600 = self.global_function;
                                            var $12601 = $12600;
                                            return $12601;
                                    };
                                })()($12592)($12595)((() => {
                                    var self = Map$get$($12592, (() => {
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12602 = self.opts;
                                                var $12603 = $12602;
                                                return $12603;
                                        };
                                    })());
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $12604 = self.value;
                                            var $12605 = Kind$Comp$replace$(Pair$snd$($12604), $12595);
                                            return $12605;
                                        case 'Maybe.none':
                                            var $12606 = Kind$Comp$transpile$term$(_lang$1, $12596, 0n, _defs$3);
                                            return $12606;
                                    };
                                })()));
                                var $12597 = _code$12;
                                var $12594 = $12597;
                                break;
                        };
                        var $12590 = $12594;
                        break;
                };
                _code$7 = $12590;
                $12591 = $12591.tail;
            }
            return _code$7;
        })();
        var $12566 = _code$6;
        return $12566;
    };
    const Kind$Comp$transpile$global_definitions = x0 => x1 => x2 => Kind$Comp$transpile$global_definitions$(x0, x1, x2);

    function Kind$Comp$transpile$(_lang$1, _main$2, _defs$3) {
        var _defs_list$4 = Kind$Comp$dependency_sort$(_main$2, _defs$3);
        var self = _lang$1;
        switch (self._) {
            case 'Kind.Comp.Language.new':
                var $12608 = self.gram;
                var $12609 = $12608;
                var self = $12609;
                break;
        };
        switch (self._) {
            case 'Kind.Comp.Grammar.new':
                var $12610 = self.program;
                var $12611 = $12610;
                var _code$5 = $12611;
                break;
        };
        var _code$5 = _code$5(_main$2)(((() => {
            var self = _lang$1;
            switch (self._) {
                case 'Kind.Comp.Language.new':
                    var $12612 = self.base;
                    var $12613 = $12612;
                    return $12613;
            };
        })() + ("\u{a}\u{a}" + Kind$Comp$transpile$global_definitions$(_lang$1, _defs_list$4, _defs$3))));
        var $12607 = _code$5;
        return $12607;
    };
    const Kind$Comp$transpile = x0 => x1 => x2 => Kind$Comp$transpile$(x0, x1, x2);

    function Kind$Comp$Language$new$(_gram$1, _nati$2, _opts$3, _base$4) {
        var $12614 = ({
            _: 'Kind.Comp.Language.new',
            'gram': _gram$1,
            'nati': _nati$2,
            'opts': _opts$3,
            'base': _base$4
        });
        return $12614;
    };
    const Kind$Comp$Language$new = x0 => x1 => x2 => x3 => Kind$Comp$Language$new$(x0, x1, x2, x3);

    function Kind$Comp$Grammar$new$(_null$1, _name$2, _inst_name$3, _elim_name$4, _lambda$5, _application$6, _local_definition$7, _global_function$8, _global_application$9, _select$10, _string_literal$11, _nat$12, _module$13, _program$14) {
        var $12615 = ({
            _: 'Kind.Comp.Grammar.new',
            'null': _null$1,
            'name': _name$2,
            'inst_name': _inst_name$3,
            'elim_name': _elim_name$4,
            'lambda': _lambda$5,
            'application': _application$6,
            'local_definition': _local_definition$7,
            'global_function': _global_function$8,
            'global_application': _global_application$9,
            'select': _select$10,
            'string_literal': _string_literal$11,
            'nat': _nat$12,
            'module': _module$13,
            'program': _program$14
        });
        return $12615;
    };
    const Kind$Comp$Grammar$new = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => x9 => x10 => x11 => x12 => x13 => Kind$Comp$Grammar$new$(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13);
    const Kind$Comp$Target$Scheme$null = "\'()";

    function Kind$Comp$Target$Scheme$name$(_name$1) {
        var self = String$is_empty$(_name$1);
        if (self) {
            var $12617 = "-";
            var $12616 = $12617;
        } else {
            var $12618 = _name$1;
            var $12616 = $12618;
        };
        return $12616;
    };
    const Kind$Comp$Target$Scheme$name = x0 => Kind$Comp$Target$Scheme$name$(x0);

    function Kind$Comp$Target$Scheme$inst_name$(_name$1) {
        var $12619 = (_name$1 + "-inst");
        return $12619;
    };
    const Kind$Comp$Target$Scheme$inst_name = x0 => Kind$Comp$Target$Scheme$inst_name$(x0);

    function Kind$Comp$Target$Scheme$elim_name$(_name$1) {
        var $12620 = (_name$1 + "-elim");
        return $12620;
    };
    const Kind$Comp$Target$Scheme$elim_name = x0 => Kind$Comp$Target$Scheme$elim_name$(x0);

    function Kind$Comp$Target$Scheme$lambda$(_name$1, _body$2) {
        var $12621 = ("(lambda (" + (_name$1 + (") " + (_body$2 + ")"))));
        return $12621;
    };
    const Kind$Comp$Target$Scheme$lambda = x0 => x1 => Kind$Comp$Target$Scheme$lambda$(x0, x1);

    function Kind$Comp$Target$Scheme$application$(_func$1, _argm$2) {
        var $12622 = ("(" + (_func$1 + (" " + (_argm$2 + ")"))));
        return $12622;
    };
    const Kind$Comp$Target$Scheme$application = x0 => x1 => Kind$Comp$Target$Scheme$application$(x0, x1);

    function Kind$Comp$Target$Scheme$local_definition$(_name$1, _expr$2, _body$3) {
        var $12623 = ("(let ((" + (_name$1 + (" " + (_expr$2 + (")) " + (_body$3 + ")"))))));
        return $12623;
    };
    const Kind$Comp$Target$Scheme$local_definition = x0 => x1 => x2 => Kind$Comp$Target$Scheme$local_definition$(x0, x1, x2);

    function Kind$Comp$Target$Scheme$global_application$(_name$1, _args$2) {
        var $12624 = ("($" + (_name$1 + (" " + (String$join$(" ", _args$2) + ")"))));
        return $12624;
    };
    const Kind$Comp$Target$Scheme$global_application = x0 => x1 => Kind$Comp$Target$Scheme$global_application$(x0, x1);

    function Kind$Comp$Target$Scheme$nest_lambdas$aux$(_fun$1, _args$2, _rem_args$3) {
        var self = _rem_args$3;
        switch (self._) {
            case 'List.cons':
                var $12626 = self.head;
                var $12627 = self.tail;
                var $12628 = Kind$Comp$Target$Scheme$lambda$($12626, Kind$Comp$Target$Scheme$nest_lambdas$aux$(_fun$1, _args$2, $12627));
                var $12625 = $12628;
                break;
            case 'List.nil':
                var $12629 = Kind$Comp$Target$Scheme$global_application$(_fun$1, _args$2);
                var $12625 = $12629;
                break;
        };
        return $12625;
    };
    const Kind$Comp$Target$Scheme$nest_lambdas$aux = x0 => x1 => x2 => Kind$Comp$Target$Scheme$nest_lambdas$aux$(x0, x1, x2);

    function Kind$Comp$Target$Scheme$nest_lambdas$(_name$1, _args$2) {
        var _body$3 = Kind$Comp$Target$Scheme$nest_lambdas$aux$(_name$1, _args$2, _args$2);
        var $12630 = ("(define " + (_name$1 + (" " + (_body$3 + ")\u{a}"))));
        return $12630;
    };
    const Kind$Comp$Target$Scheme$nest_lambdas = x0 => x1 => Kind$Comp$Target$Scheme$nest_lambdas$(x0, x1);

    function Kind$Comp$Target$Scheme$global_function$(_name$1, _args$2, _body$3) {
        var self = _args$2;
        switch (self._) {
            case 'List.nil':
                var $12632 = ("(define " + (_name$1 + (" " + (_body$3 + ")\u{a}"))));
                var $12631 = $12632;
                break;
            case 'List.cons':
                var $12633 = ("(define ($" + (_name$1 + (" " + (String$join$(" ", _args$2) + (") " + (_body$3 + (")\u{a}" + Kind$Comp$Target$Scheme$nest_lambdas$(_name$1, _args$2))))))));
                var $12631 = $12633;
                break;
        };
        return $12631;
    };
    const Kind$Comp$Target$Scheme$global_function = x0 => x1 => x2 => Kind$Comp$Target$Scheme$global_function$(x0, x1, x2);

    function Kind$Comp$Target$Scheme$select$(_term$1, _cse_body_list$2) {
        var _cses$3 = "";
        var _cses$4 = (() => {
            var $12636 = _cses$3;
            var $12637 = _cse_body_list$2;
            let _cses$5 = $12636;
            let _cse_body$4;
            while ($12637._ === 'List.cons') {
                _cse_body$4 = $12637.head;
                var self = _cse_body$4;
                switch (self._) {
                    case 'Pair.new':
                        var $12638 = self.fst;
                        var $12639 = self.snd;
                        var $12640 = ("(" + ($12638 + (" " + ($12639 + ")"))));
                        var $12636 = $12640;
                        break;
                };
                _cses$5 = $12636;
                $12637 = $12637.tail;
            }
            return _cses$5;
        })();
        var $12634 = ("(case " + (_term$1 + (" " + (_cses$4 + ")"))));
        return $12634;
    };
    const Kind$Comp$Target$Scheme$select = x0 => x1 => Kind$Comp$Target$Scheme$select$(x0, x1);

    function Char$to_string$(_chr$1) {
        var $12641 = String$cons$(_chr$1, String$nil);
        return $12641;
    };
    const Char$to_string = x0 => Char$to_string$(x0);

    function Kind$Comp$Target$Scheme$string_literal$(_str$1) {
        var self = _str$1;
        if (self.length === 0) {
            var $12643 = "";
            var $12642 = $12643;
        } else {
            var $12644 = self.charCodeAt(0);
            var $12645 = self.slice(1);
            var $12646 = ((() => {
                var self = (($12644 === 92) || ($12644 === 34));
                if (self) {
                    var $12647 = ("\\" + Char$to_string$($12644));
                    return $12647;
                } else {
                    var self = (($12644 >= 32) && ($12644 <= 126));
                    if (self) {
                        var $12649 = Char$to_string$($12644);
                        var $12648 = $12649;
                    } else {
                        var $12650 = ("\\x" + (U16$show_hex$($12644) + ";"));
                        var $12648 = $12650;
                    };
                    return $12648;
                };
            })() + Kind$Comp$Target$Scheme$string_literal$($12645));
            var $12642 = $12646;
        };
        return $12642;
    };
    const Kind$Comp$Target$Scheme$string_literal = x0 => Kind$Comp$Target$Scheme$string_literal$(x0);

    function Kind$Comp$Target$Scheme$nat$(_nat$1) {
        var $12651 = Nat$show$(_nat$1);
        return $12651;
    };
    const Kind$Comp$Target$Scheme$nat = x0 => Kind$Comp$Target$Scheme$nat$(x0);
    const Kind$Comp$Target$Scheme$exports = List$cons$("suffix?", List$cons$("prefix?", List$cons$("run-all", List$cons$("run_io", List$cons$("print-lines", List$cons$("run_kind", List$cons$("make-string-view", List$cons$("string-view?", List$cons$("string-view-end", List$cons$("string-view-start", List$cons$("kstring-length", List$cons$("kstring-head", List$cons$("kstring-tail", List$cons$("string-view-ref", List$cons$("kstring?", List$cons$("kstring->string", List$cons$("kstring-append", List$cons$("kstring-getter", List$cons$("kstring_join", List$nil)))))))))))))))))));

    function Kind$Comp$Target$Scheme$module$(_name$1, _exports$2, _defs$3) {
        var _code$4 = ("#!chezscheme\u{a}(library (" + (_name$1 + ") (export"));
        var _code$5 = (() => {
            var $12654 = _code$4;
            var $12655 = Kind$Comp$Target$Scheme$exports;
            let _code$6 = $12654;
            let _export$5;
            while ($12655._ === 'List.cons') {
                _export$5 = $12655.head;
                var $12654 = (_code$6 + (" " + _export$5));
                _code$6 = $12654;
                $12655 = $12655.tail;
            }
            return _code$6;
        })();
        var _code$6 = (() => {
            var $12657 = _code$5;
            var $12658 = _exports$2;
            let _code$7 = $12657;
            let _export$6;
            while ($12658._ === 'List.cons') {
                _export$6 = $12658.head;
                var $12657 = (_code$7 + (" " + _export$6));
                _code$7 = $12657;
                $12658 = $12658.tail;
            }
            return _code$7;
        })();
        var _code$7 = (_code$6 + ")\u{a}");
        var _code$8 = (_code$7 + "(import (chezscheme))\u{a}");
        var _code$9 = (_code$8 + (_defs$3 + ")"));
        var $12652 = _code$9;
        return $12652;
    };
    const Kind$Comp$Target$Scheme$module = x0 => x1 => x2 => Kind$Comp$Target$Scheme$module$(x0, x1, x2);

    function Kind$Comp$Target$Scheme$program$(_main$1, _defs$2) {
        var _code$3 = (_defs$2 + ("(run_kind " + (_main$1 + ")")));
        var $12659 = _code$3;
        return $12659;
    };
    const Kind$Comp$Target$Scheme$program = x0 => x1 => Kind$Comp$Target$Scheme$program$(x0, x1);
    const Kind$Comp$Target$Scheme$grammar = Kind$Comp$Grammar$new$(Kind$Comp$Target$Scheme$null, Kind$Comp$Target$Scheme$name, Kind$Comp$Target$Scheme$inst_name, Kind$Comp$Target$Scheme$elim_name, Kind$Comp$Target$Scheme$lambda, Kind$Comp$Target$Scheme$application, Kind$Comp$Target$Scheme$local_definition, Kind$Comp$Target$Scheme$global_function, Kind$Comp$Target$Scheme$global_application, Kind$Comp$Target$Scheme$select, Kind$Comp$Target$Scheme$string_literal, Kind$Comp$Target$Scheme$nat, Kind$Comp$Target$Scheme$module, Kind$Comp$Target$Scheme$program);

    function Kind$Comp$Native$new$(_inst$1, _elim$2) {
        var $12660 = ({
            _: 'Kind.Comp.Native.new',
            'inst': _inst$1,
            'elim': _elim$2
        });
        return $12660;
    };
    const Kind$Comp$Native$new = x0 => x1 => Kind$Comp$Native$new$(x0, x1);

    function Kind$Comp$Target$Scheme$natives$(_prim$1) {
        var self = _prim$1;
        switch (self._) {
            case 'Kind.Comp.Prim.data':
                var $12662 = self.name;
                var $12663 = self.ctrs;
                var $12664 = Kind$Comp$Native$new$(List$fold$($12663, List$nil, (_ctr$4 => _result$5 => {
                    var self = _ctr$4;
                    switch (self._) {
                        case 'Pair.new':
                            var $12666 = self.fst;
                            var $12667 = self.snd;
                            var _fields_size$8 = (list_length($12667));
                            var _fields_vars$9 = String$join$("", List$create$(_fields_size$8, (_x$9 => {
                                var $12669 = (" $" + Nat$show$(_x$9));
                                return $12669;
                            })));
                            var $12668 = List$cons$(Pair$new$(_fields_size$8, ("(vector \'" + ($12662 + ("." + ($12666 + (_fields_vars$9 + ")")))))), _result$5);
                            var $12665 = $12668;
                            break;
                    };
                    return $12665;
                })), Pair$new$("(get $0 0)", List$fold$($12663, List$nil, (_ctr$4 => _result$5 => {
                    var self = _ctr$4;
                    switch (self._) {
                        case 'Pair.new':
                            var $12671 = self.fst;
                            var $12672 = self.snd;
                            var _fields_size$8 = (list_length($12672));
                            var _fields_gets$9 = List$create$(_fields_size$8, (_i$9 => {
                                var $12674 = ("(get $0 " + (Nat$show$(Nat$succ$(_i$9)) + ")"));
                                return $12674;
                            }));
                            var $12673 = List$cons$(Pair$new$(("\'" + ($12662 + ("." + $12671))), _fields_gets$9), _result$5);
                            var $12670 = $12673;
                            break;
                    };
                    return $12670;
                }))));
                var $12661 = $12664;
                break;
            case 'Kind.Comp.Prim.unit':
                var $12675 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "#t"), List$nil), Pair$new$("#t", List$cons$(Pair$new$("#t", List$nil), List$nil)));
                var $12661 = $12675;
                break;
            case 'Kind.Comp.Prim.bool':
                var $12676 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "#t"), List$cons$(Pair$new$(0n, "#f"), List$nil)), Pair$new$("$0", List$cons$(Pair$new$("#t", List$nil), List$cons$(Pair$new$("#f", List$nil), List$nil))));
                var $12661 = $12676;
                break;
            case 'Kind.Comp.Prim.nat':
                var $12677 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "0"), List$cons$(Pair$new$(1n, "(+ $0 1)"), List$nil)), Pair$new$("(= $0 0)", List$cons$(Pair$new$("#t", List$nil), List$cons$(Pair$new$("#f", List$cons$("(- $0 1)", List$nil)), List$nil))));
                var $12661 = $12677;
                break;
            case 'Kind.Comp.Prim.u16':
                var $12678 = Kind$Comp$Native$new$(List$cons$(Pair$new$(1n, "(word-to-u16 $0)"), List$nil), Pair$new$("#t", List$cons$(Pair$new$("#t", List$cons$("(u16-to-word $0)", List$nil)), List$nil)));
                var $12661 = $12678;
                break;
            case 'Kind.Comp.Prim.string':
                var $12679 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "\"\""), List$cons$(Pair$new$(2n, "(kstring-append (make-string 1 (integer->char $0)) $1)"), List$nil)), Pair$new$("(<= (kstring-length $0) 0)", List$cons$(Pair$new$("#t", List$nil), List$cons$(Pair$new$("#f", List$cons$("(char->integer (kstring-head $0))", List$cons$("(kstring-tail $0)", List$nil))), List$nil))));
                var $12661 = $12679;
                break;
        };
        return $12661;
    };
    const Kind$Comp$Target$Scheme$natives = x0 => Kind$Comp$Target$Scheme$natives$(x0);

    function BBL$bin$(_size$3, _key$4, _val$5, _left$6, _right$7) {
        var $12680 = ({
            _: 'BBL.bin',
            'size': _size$3,
            'key': _key$4,
            'val': _val$5,
            'left': _left$6,
            'right': _right$7
        });
        return $12680;
    };
    const BBL$bin = x0 => x1 => x2 => x3 => x4 => BBL$bin$(x0, x1, x2, x3, x4);

    function U32$new$(_value$1) {
        var $12681 = word_to_u32(_value$1);
        return $12681;
    };
    const U32$new = x0 => U32$new$(x0);
    const Nat$to_u32 = a0 => (Number(a0) >>> 0);
    const BBL$tip = ({
        _: 'BBL.tip'
    });

    function BBL$singleton$(_key$3, _val$4) {
        var $12682 = BBL$bin$(1, _key$3, _val$4, BBL$tip, BBL$tip);
        return $12682;
    };
    const BBL$singleton = x0 => x1 => BBL$singleton$(x0, x1);

    function BBL$size$(_map$3) {
        var self = _map$3;
        switch (self._) {
            case 'BBL.bin':
                var $12684 = self.size;
                var $12685 = $12684;
                var $12683 = $12685;
                break;
            case 'BBL.tip':
                var $12686 = 0;
                var $12683 = $12686;
                break;
        };
        return $12683;
    };
    const BBL$size = x0 => BBL$size$(x0);
    const U32$add = a0 => a1 => ((a0 + a1) >>> 0);
    const U32$mul = a0 => a1 => ((a0 * a1) >>> 0);
    const BBL$w = 3;
    const U32$ltn = a0 => a1 => (a0 < a1);
    const U32$from_nat = a0 => (Number(a0) >>> 0);

    function BBL$node$(_key$3, _val$4, _left$5, _right$6) {
        var _size_left$7 = BBL$size$(_left$5);
        var _size_right$8 = BBL$size$(_right$6);
        var _new_size$9 = ((1 + ((_size_left$7 + _size_right$8) >>> 0)) >>> 0);
        var $12687 = BBL$bin$(_new_size$9, _key$3, _val$4, _left$5, _right$6);
        return $12687;
    };
    const BBL$node = x0 => x1 => x2 => x3 => BBL$node$(x0, x1, x2, x3);

    function Cmp$as_gtn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $12689 = Bool$false;
                var $12688 = $12689;
                break;
            case 'Cmp.gtn':
                var $12690 = Bool$true;
                var $12688 = $12690;
                break;
        };
        return $12688;
    };
    const Cmp$as_gtn = x0 => Cmp$as_gtn$(x0);

    function Word$gtn$(_a$2, _b$3) {
        var $12691 = Cmp$as_gtn$(Word$cmp$(_a$2, _b$3));
        return $12691;
    };
    const Word$gtn = x0 => x1 => Word$gtn$(x0, x1);
    const U32$gtn = a0 => a1 => (a0 > a1);

    function BBL$balance$(_k$3, _v$4, _l$5, _r$6) {
        var _size_l$7 = BBL$size$(_l$5);
        var _size_r$8 = BBL$size$(_r$6);
        var _size_l_plus_size_r$9 = ((_size_l$7 + _size_r$8) >>> 0);
        var _w_x_size_l$10 = ((BBL$w * _size_l$7) >>> 0);
        var _w_x_size_r$11 = ((BBL$w * _size_r$8) >>> 0);
        var self = (_size_l_plus_size_r$9 < 2);
        if (self) {
            var $12693 = BBL$node$(_k$3, _v$4, _l$5, _r$6);
            var $12692 = $12693;
        } else {
            var self = (_size_r$8 > _w_x_size_l$10);
            if (self) {
                var self = _r$6;
                switch (self._) {
                    case 'BBL.bin':
                        var $12696 = self.key;
                        var $12697 = self.val;
                        var $12698 = self.left;
                        var $12699 = self.right;
                        var _size_rl$17 = BBL$size$($12698);
                        var _size_rr$18 = BBL$size$($12699);
                        var self = (_size_rl$17 < _size_rr$18);
                        if (self) {
                            var _new_key$19 = $12696;
                            var _new_val$20 = $12697;
                            var _new_left$21 = BBL$node$(_k$3, _v$4, _l$5, $12698);
                            var _new_right$22 = $12699;
                            var $12701 = BBL$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                            var $12700 = $12701;
                        } else {
                            var self = $12698;
                            switch (self._) {
                                case 'BBL.bin':
                                    var $12703 = self.key;
                                    var $12704 = self.val;
                                    var $12705 = self.left;
                                    var $12706 = self.right;
                                    var _new_key$24 = $12703;
                                    var _new_val$25 = $12704;
                                    var _new_left$26 = BBL$node$(_k$3, _v$4, _l$5, $12705);
                                    var _new_right$27 = BBL$node$($12696, $12697, $12706, $12699);
                                    var $12707 = BBL$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                    var $12702 = $12707;
                                    break;
                                case 'BBL.tip':
                                    var $12708 = BBL$node$(_k$3, _v$4, _l$5, _r$6);
                                    var $12702 = $12708;
                                    break;
                            };
                            var $12700 = $12702;
                        };
                        var $12695 = $12700;
                        break;
                    case 'BBL.tip':
                        var $12709 = BBL$node$(_k$3, _v$4, _l$5, _r$6);
                        var $12695 = $12709;
                        break;
                };
                var $12694 = $12695;
            } else {
                var self = (_size_l$7 > _w_x_size_r$11);
                if (self) {
                    var self = _l$5;
                    switch (self._) {
                        case 'BBL.bin':
                            var $12712 = self.key;
                            var $12713 = self.val;
                            var $12714 = self.left;
                            var $12715 = self.right;
                            var _size_ll$17 = BBL$size$($12714);
                            var _size_lr$18 = BBL$size$($12715);
                            var self = (_size_lr$18 < _size_ll$17);
                            if (self) {
                                var _new_key$19 = $12712;
                                var _new_val$20 = $12713;
                                var _new_left$21 = $12714;
                                var _new_right$22 = BBL$node$(_k$3, _v$4, $12715, _r$6);
                                var $12717 = BBL$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                                var $12716 = $12717;
                            } else {
                                var self = $12715;
                                switch (self._) {
                                    case 'BBL.bin':
                                        var $12719 = self.key;
                                        var $12720 = self.val;
                                        var $12721 = self.left;
                                        var $12722 = self.right;
                                        var _new_key$24 = $12719;
                                        var _new_val$25 = $12720;
                                        var _new_left$26 = BBL$node$($12712, $12713, $12714, $12721);
                                        var _new_right$27 = BBL$node$(_k$3, _v$4, $12722, _r$6);
                                        var $12723 = BBL$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                        var $12718 = $12723;
                                        break;
                                    case 'BBL.tip':
                                        var $12724 = BBL$node$(_k$3, _v$4, _l$5, _r$6);
                                        var $12718 = $12724;
                                        break;
                                };
                                var $12716 = $12718;
                            };
                            var $12711 = $12716;
                            break;
                        case 'BBL.tip':
                            var $12725 = BBL$node$(_k$3, _v$4, _l$5, _r$6);
                            var $12711 = $12725;
                            break;
                    };
                    var $12710 = $12711;
                } else {
                    var $12726 = BBL$node$(_k$3, _v$4, _l$5, _r$6);
                    var $12710 = $12726;
                };
                var $12694 = $12710;
            };
            var $12692 = $12694;
        };
        return $12692;
    };
    const BBL$balance = x0 => x1 => x2 => x3 => BBL$balance$(x0, x1, x2, x3);

    function BBL$insert$(_cmp$3, _key$4, _val$5, _map$6) {
        var self = _map$6;
        switch (self._) {
            case 'BBL.bin':
                var $12728 = self.key;
                var $12729 = self.val;
                var $12730 = self.left;
                var $12731 = self.right;
                var self = _cmp$3(_key$4)($12728);
                switch (self._) {
                    case 'Cmp.ltn':
                        var _new_key$12 = $12728;
                        var _new_val$13 = $12729;
                        var _new_left$14 = BBL$insert$(_cmp$3, _key$4, _val$5, $12730);
                        var _new_right$15 = $12731;
                        var $12733 = BBL$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $12732 = $12733;
                        break;
                    case 'Cmp.eql':
                        var $12734 = BBL$node$(_key$4, _val$5, $12730, $12731);
                        var $12732 = $12734;
                        break;
                    case 'Cmp.gtn':
                        var _new_key$12 = $12728;
                        var _new_val$13 = $12729;
                        var _new_left$14 = $12730;
                        var _new_right$15 = BBL$insert$(_cmp$3, _key$4, _val$5, $12731);
                        var $12735 = BBL$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $12732 = $12735;
                        break;
                };
                var $12727 = $12732;
                break;
            case 'BBL.tip':
                var $12736 = BBL$singleton$(_key$4, _val$5);
                var $12727 = $12736;
                break;
        };
        return $12727;
    };
    const BBL$insert = x0 => x1 => x2 => x3 => BBL$insert$(x0, x1, x2, x3);

    function BBL$from_list$go$(_cmp$3, _acc$4, _xs$5) {
        var BBL$from_list$go$ = (_cmp$3, _acc$4, _xs$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _acc$4, _xs$5]
        });
        var BBL$from_list$go = _cmp$3 => _acc$4 => _xs$5 => BBL$from_list$go$(_cmp$3, _acc$4, _xs$5);
        var arg = [_cmp$3, _acc$4, _xs$5];
        while (true) {
            let [_cmp$3, _acc$4, _xs$5] = arg;
            var R = (() => {
                var self = _xs$5;
                switch (self._) {
                    case 'List.cons':
                        var $12737 = self.head;
                        var $12738 = self.tail;
                        var _key$8 = Pair$fst$($12737);
                        var _val$9 = Pair$snd$($12737);
                        var _new_acc$10 = BBL$insert$(_cmp$3, _key$8, _val$9, _acc$4);
                        var $12739 = BBL$from_list$go$(_cmp$3, _new_acc$10, $12738);
                        return $12739;
                    case 'List.nil':
                        var $12740 = _acc$4;
                        return $12740;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BBL$from_list$go = x0 => x1 => x2 => BBL$from_list$go$(x0, x1, x2);

    function BBL$from_list$(_cmp$3, _xs$4) {
        var $12741 = BBL$from_list$go$(_cmp$3, BBL$tip, _xs$4);
        return $12741;
    };
    const BBL$from_list = x0 => x1 => BBL$from_list$(x0, x1);

    function Map$from_list$(_xs$2) {
        var $12742 = BBL$from_list$(String$cmp, _xs$2);
        return $12742;
    };
    const Map$from_list = x0 => Map$from_list$(x0);
    const Kind$Comp$Target$Scheme$optimizeds = Map$from_list$(List$cons$(Pair$new$("Bool.not", Pair$new$(1n, "(not $0)")), List$cons$(Pair$new$("Bool.and", Pair$new$(2n, "(and $0 $1)")), List$cons$(Pair$new$("Bool.if", Pair$new$(3n, "(if $0 $1 $2)")), List$cons$(Pair$new$("Bool.or", Pair$new$(2n, "(or $0 $1)")), List$cons$(Pair$new$("Nat.add", Pair$new$(2n, "(+ $0 $1)")), List$cons$(Pair$new$("Nat.sub", Pair$new$(2n, "(max (- $0 $1) 0)")), List$cons$(Pair$new$("Nat.mul", Pair$new$(2n, "(* $0 $1)")), List$cons$(Pair$new$("Nat.div", Pair$new$(2n, "(div $0 $1)")), List$cons$(Pair$new$("Nat.mod", Pair$new$(2n, "(mod $0 $1)")), List$cons$(Pair$new$("Nat.pow", Pair$new$(2n, "(expt $0 $1)")), List$cons$(Pair$new$("Nat.ltn", Pair$new$(2n, "(< $0 $1)")), List$cons$(Pair$new$("Nat.lte", Pair$new$(2n, "(<= $0 $1)")), List$cons$(Pair$new$("Nat.eql", Pair$new$(2n, "(= $0 $1)")), List$cons$(Pair$new$("Nat.gte", Pair$new$(2n, "(>= $0 $1)")), List$cons$(Pair$new$("Nat.gtn", Pair$new$(2n, "(> $0 $1)")), List$cons$(Pair$new$("Nat.to_u16", Pair$new$(1n, "$0")), List$cons$(Pair$new$("Nat.show", Pair$new$(1n, "(number->string $0)")), List$cons$(Pair$new$("U16.add", Pair$new$(2n, "(mod (+ $0 $1) 65536)")), List$cons$(Pair$new$("U16.sub", Pair$new$(2n, "(mod (- $0 $1) 65536)")), List$cons$(Pair$new$("U16.mul", Pair$new$(2n, "(mod (* $0 $1) 65536)")), List$cons$(Pair$new$("U16.div", Pair$new$(2n, "(div $0 $1)")), List$cons$(Pair$new$("U16.mod", Pair$new$(2n, "(mod $0 $1)")), List$cons$(Pair$new$("U16.pow", Pair$new$(2n, "(mod (expt $0 $1) 65536)")), List$cons$(Pair$new$("U16.ltn", Pair$new$(2n, "(< $0 $1)")), List$cons$(Pair$new$("U16.lte", Pair$new$(2n, "(<= $0 $1)")), List$cons$(Pair$new$("U16.eql", Pair$new$(2n, "(= $0 $1)")), List$cons$(Pair$new$("U16.gte", Pair$new$(2n, "(>= $0 $1)")), List$cons$(Pair$new$("U16.gtn", Pair$new$(2n, "(> $0 $1)")), List$cons$(Pair$new$("U16.inc", Pair$new$(2n, "(+ $0 1)")), List$cons$(Pair$new$("U16.to_nat", Pair$new$(1n, "$0")), List$cons$(Pair$new$("String.eql", Pair$new$(2n, "(string=? (kstring->string $0) (kstring->string $1))")), List$cons$(Pair$new$("String.concat", Pair$new$(2n, "(kstring-append $0 $1)")), List$nil)))))))))))))))))))))))))))))))));
    const Kind$Comp$Target$Scheme$basics = "; string-view record type (fast way to get a tail)\u{a}(define-record string-view\u{a}  ((immutable data)  ; underlying string\u{a}   (immutable start) ; start position (inclusive)\u{a}   (immutable end))) ; end position (exclusive)\u{a}\u{a}(define string-view-ref\u{a}  (lambda (x y)\u{a}    (string-ref (string-view-data x) (+ (string-view-start x) y))))\u{a}\u{a}(define kstring-tail\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      (make-string-view\u{a}        (string-view-data x)\u{a}        (+ (string-view-start x) 1)\u{a}        (string-view-end x))\u{a}      (make-string-view\u{a}        x\u{a}        1\u{a}        (string-length x)))))\u{a}\u{a}(define kstring-head\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      (string-ref (string-view-data x) (string-view-start x))\u{a}      (string-ref x 0))))\u{a}\u{a}(define kstring-length\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      (- (string-view-end x) (string-view-start x))\u{a}      (string-length x))))\u{a}\u{a}(define kstring?\u{a}  (lambda (x)\u{a}    (or (string-view? x) (string? x))))\u{a}\u{a}(define kstring->string\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      (substring (string-view-data x) (string-view-start x) (string-view-end x))\u{a}      x)))\u{a}\u{a}; TODO depending on x, we could safely append data at the end\u{a}(define kstring-append\u{a}  (lambda (x y)\u{a}    (string-append (kstring->string x) (kstring->string y))))\u{a}\u{a}(define kstring-getter\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      string-view-ref\u{a}      string-ref)))\u{a}\u{a}; Joins a list of strings with an intercalated separator\u{a}(define (kstring_join sep strs fst)\u{a}  (if (null? strs) \u{a}    \"\"\u{a}    (kstring-append\u{a}      (if fst \"\" sep)\u{a}      (car strs)\u{a}      (kstring_join sep (cdr strs) #f))))\u{a}\u{a}; Short alias to vector-ref\u{a}(define get vector-ref)\u{a}\u{a}; Converts a Kind word to a native integer\u{a}(define (word-to-u16 w)\u{a}  (define (word-to-u16-go i w x)\u{a}    (cond ((= 16 i) x)\u{a}      ((symbol=? \'Word.e (get w 0)) (word-to-u16-go (+ i 1) (vector \'Word.e) x))\u{a}      ((symbol=? \'Word.o (get w 0)) (word-to-u16-go (+ i 1) (get w 1) x))\u{a}      ((symbol=? \'Word.i (get w 0)) (word-to-u16-go (+ i 1) (get w 1) (fxior x (fxarithmetic-shift-left 1 i))))))\u{a}  (word-to-u16-go 0 w 0))\u{a}\u{a}; Converts a native integer to a Kind word\u{a}(define (u16-to-word x)\u{a}  (define (u16-to-word-go i x w)\u{a}    (if (= 16 i) w (u16-to-word-go (+ i 1) x\u{a}      (if (= (fxand (fxarithmetic-shift-right x (- 15 i)) 1) 0)\u{a}        (vector \'Word.o w)\u{a}        (vector \'Word.i w)))))\u{a}  (u16-to-word-go 0 x (vector \'Word.e)))\u{a}\u{a}(define suffix?\u{a}  (lambda (str suff)\u{a}    (let ((suff_length (string-length suff))\u{a}          (str_length (string-length str)))\u{a}      (if (<= suff_length str_length)\u{a}        (string=?\u{a}          (substring str (- str_length suff_length) str_length)\u{a}          suff)\u{a}        #f))))\u{a}\u{a}(define prefix?\u{a}  (lambda (str pref)\u{a}    (let ((pref_length (string-length pref))\u{a}          (str_length (string-length str)))\u{a}      (if (<= pref_length str_length)\u{a}        (string=?\u{a}          (substring str 0 pref_length)\u{a}          pref)\u{a}        #f))))\u{a}\u{a}; Returns the last index that chr occurs in str, -1 otherwise\u{a}(define (last_index_of chr kstr idx)\u{a}  (let ((str (kstring->string kstr)))\u{a}    (if (= idx (kstring-length str))\u{a}      -1\u{a}      (let ((rest (last_index_of chr str (+ idx 1))))\u{a}        (if (char=? (string-ref str idx) chr)\u{a}          (max idx rest)\u{a}          rest)))))\u{a}\u{a}; Returns the first index that chr occurs in str, -1 otherwise\u{a}(define (first_index_of chr kstr idx)\u{a}  (let ((str (kstring->string kstr)))\u{a}    (if (= idx (string-length str))\u{a}      -1\u{a}      (if (char=? (string-ref str idx) chr)\u{a}        idx\u{a}        (first_index_of chr str (+ idx 1))))))\u{a}\u{a}; Splits a string using an identifier\u{a}(define (split_at_first chr kstr)\u{a}  (let ((str (kstring->string kstr)))\u{a}    (let ((split_idx (first_index_of chr str 0)))\u{a}      (if (= split_idx -1)\u{a}        str\u{a}        (cons\u{a}          (substring str 0 split_idx)\u{a}          (substring str (+ split_idx 1) (string-length str)))))))\u{a}\u{a}; Splits a string using an identifier\u{a}(define (split_at_last chr kstr)\u{a}  (let ((str (kstring->string kstr)))\u{a}    (let ((split_idx (last_index_of chr str 0)))\u{a}      (if (= split_idx -1)\u{a}        str\u{a}        (cons\u{a}          (substring str 0 split_idx)\u{a}          (substring str (+ split_idx 1) (string-length str)))))))\u{a}\u{a}; Converts a date to a string, in milliseconds\u{a}(define (time_to_string time)\u{a}  (number->string\u{a}    (+ (* (time-second time) 1000)\u{a}      (div (time-nanosecond time) 1000000))))\u{a}\u{a}; Prints a text with a newline\u{a}(define (print txt)\u{a}  (display (kstring->string txt))\u{a}  (display \"\u{a}\"))\u{a}\u{a}; Gets a line from stdin\u{a}(define (get_line)\u{a}  (let ((port (current-input-port)))\u{a}    (get-line port)))\u{a}\u{a}; Deletes a file\u{a}(define (del_file file)\u{a}  (delete-file (kstring->string file)))\u{a}\u{a}; Gets the contents of a file as a string\u{a}; If it doesn\'t exist, returns empty\u{a}(define (get_file ifile)\u{a}  (let ((file (kstring->string ifile)))\u{a}    (if (file-exists? file)\u{a}      (let ((port (open-input-file file)))\u{a}        (let ((text (get-string-all port)))\u{a}          (begin\u{a}            (close-input-port port)\u{a}            text)))\u{a}      \"\")))\u{a}\u{a}; Sets the contents of a file\u{a}(define (set_file file text)\u{a}  (system (string-append \"mkdir -p \" (car (split_at_last #\\/ file))))\u{a}  (if (file-exists? file) (delete-file file))\u{a}  (let ((port (open-output-file file)))\u{a}    (begin\u{a}      (display text port)\u{a}      (close-output-port port))))\u{a}\u{a}; Returns a list of files in a directory\u{a}(define (get_dir path)\u{a}  (directory-list path)) \u{a}\u{a}; Returns the time a file was modified. TODO: test on Windows/Linux\u{a}(define (get_file_mtime file)\u{a}  (time_to_string (file-modification-time (kstring->string file))))\u{a}\u{a}; Returns the current time\u{a}(define (get_time)\u{a}  (time_to_string (current-time)))\u{a}\u{a}; Performs a single Kind IO action\u{a}(define (io_action iname)\u{a}  (let ((name (kstring->string iname)))\u{a}  (case name\u{a}    (\"print\" (lambda (x) (print x)))\u{a}    (\"put_string\" (lambda (x) (display x)))\u{a}    (\"get_line\" (lambda (x) (get_line)))\u{a}    (\"del_file\" (lambda (x) (del_file x)))\u{a}    (\"get_file\" (lambda (x) (get_file x)))\u{a}    (\"set_file\" (lambda (x) (let ((file_text (split_at_first #\\= (kstring->string x)))) (set_file (car file_text) (cdr file_text)))))\u{a}    (\"get_dir\" (lambda (x) (get_dir x)))\u{a}    (\"get_file_mtime\" (lambda (x) (get_file_mtime x)))\u{a}    (\"get_time\" (lambda (x) (get_time)))\u{a}    (\"request\" (lambda (x) \"\"))\u{a}    (else (display (string-append \"IO action not found: \" name))))))\u{a}\u{a}; Runs a Kind IO program\u{a}(define (run_io io)\u{a}  (case (vector-ref io 0)\u{a}    (\'IO.end (vector-ref io 1))\u{a}    (\'IO.ask (let (\u{a}      (io_query (vector-ref io 1))\u{a}      (io_param (vector-ref io 2))\u{a}      (io_then (vector-ref io 3)))\u{a}      (run_io (io_then ((io_action io_query) io_param)))))))\u{a}\u{a}(define (run_kind term)\u{a}  (if\u{a}    (and\u{a}      (vector? term)\u{a}      (or\u{a}        (eq? (vector-ref term 0) \'IO.ask)\u{a}        (eq? (vector-ref term 0) \'IO.end)))\u{a}    (run_io term)\u{a}    (print term)))\u{a}\u{a}(define (print-lines args)\u{a}  (unless (null? args)\u{a}    (display (car args))\u{a}    (newline)\u{a}    (print-lines (cdr args))))\u{a}\u{a}(define run-all\u{a}    (lambda (p)\u{a}      (let ((code (get-datum p)))\u{a}        (unless (eq? code #!eof)\u{a}          (compile code)\u{a}          (run-all p)))))\u{a}";
    const Kind$Comp$Target$Scheme$Language = Kind$Comp$Language$new$(Kind$Comp$Target$Scheme$grammar, Kind$Comp$Target$Scheme$natives, Kind$Comp$Target$Scheme$optimizeds, Kind$Comp$Target$Scheme$basics);

    function Kind$api$io$term_to_scheme$(_name$1) {
        var $12743 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $12744 = _m$bind$2;
            return $12744;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_defs$2 => {
            var _defs$3 = Maybe$default$(_defs$2, Kind$Map$new);
            var _compiled$4 = Kind$Comp$Defs$compile$(_defs$3);
            var _schemed$5 = Kind$Comp$transpile$(Kind$Comp$Target$Scheme$Language, _name$1, _compiled$4);
            var $12745 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                var $12746 = _m$pure$7;
                return $12746;
            }))(_schemed$5);
            return $12745;
        }));
        return $12743;
    };
    const Kind$api$io$term_to_scheme = x0 => Kind$api$io$term_to_scheme$(x0);

    function Kind$Synth$many$(_names$1, _defs$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.cons':
                var $12748 = self.head;
                var $12749 = self.tail;
                var $12750 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                    var $12751 = _m$bind$5;
                    return $12751;
                }))(Kind$Synth$one$($12748, _defs$2))((_new_defs$5 => {
                    var self = _new_defs$5;
                    switch (self._) {
                        case 'Maybe.some':
                            var $12753 = self.value;
                            var $12754 = Kind$Synth$many$($12749, $12753);
                            var $12752 = $12754;
                            break;
                        case 'Maybe.none':
                            var $12755 = Kind$Synth$many$($12749, _defs$2);
                            var $12752 = $12755;
                            break;
                    };
                    return $12752;
                }));
                var $12747 = $12750;
                break;
            case 'List.nil':
                var $12756 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $12757 = _m$pure$4;
                    return $12757;
                }))(_defs$2);
                var $12747 = $12756;
                break;
        };
        return $12747;
    };
    const Kind$Synth$many = x0 => x1 => Kind$Synth$many$(x0, x1);

    function Kind$Comp$dependency_sort$module$(_exports$1, _defs$2) {
        var _ret$3 = Pair$new$(Kind$Map$new, List$nil);
        var _ret$4 = (() => {
            var $12760 = _ret$3;
            var $12761 = _exports$1;
            let _ret$5 = $12760;
            let _export$4;
            while ($12761._ === 'List.cons') {
                _export$4 = $12761.head;
                var _term$6 = Kind$Comp$ref$(_export$4);
                var self = _ret$5;
                switch (self._) {
                    case 'Pair.new':
                        var $12762 = self.fst;
                        var $12763 = self.snd;
                        var $12764 = Kind$Comp$dependency_sort$go$(_term$6, _defs$2, $12762, $12763);
                        var $12760 = $12764;
                        break;
                };
                _ret$5 = $12760;
                $12761 = $12761.tail;
            }
            return _ret$5;
        })();
        var self = _ret$4;
        switch (self._) {
            case 'Pair.new':
                var $12765 = self.snd;
                var $12766 = List$reverse$($12765);
                var $12758 = $12766;
                break;
        };
        return $12758;
    };
    const Kind$Comp$dependency_sort$module = x0 => x1 => Kind$Comp$dependency_sort$module$(x0, x1);

    function Kind$Comp$transpile$module$(_lang$1, _name$2, _exports$3, _defs$4) {
        var _defs_list$5 = Kind$Comp$dependency_sort$module$(_exports$3, _defs$4);
        var self = _lang$1;
        switch (self._) {
            case 'Kind.Comp.Language.new':
                var $12768 = self.gram;
                var $12769 = $12768;
                var self = $12769;
                break;
        };
        switch (self._) {
            case 'Kind.Comp.Grammar.new':
                var $12770 = self.module;
                var $12771 = $12770;
                var _code$6 = $12771;
                break;
        };
        var _code$6 = _code$6(_name$2)(_exports$3)(((() => {
            var self = _lang$1;
            switch (self._) {
                case 'Kind.Comp.Language.new':
                    var $12772 = self.base;
                    var $12773 = $12772;
                    return $12773;
            };
        })() + ("\u{a}\u{a}" + Kind$Comp$transpile$global_definitions$(_lang$1, _defs_list$5, _defs$4))));
        var $12767 = _code$6;
        return $12767;
    };
    const Kind$Comp$transpile$module = x0 => x1 => x2 => x3 => Kind$Comp$transpile$module$(x0, x1, x2, x3);

    function Kind$api$io$terms_to_scheme_lib$(_name$1, _exports$2) {
        var $12774 = IO$monad$((_m$bind$3 => _m$pure$4 => {
            var $12775 = _m$bind$3;
            return $12775;
        }))(Kind$Synth$many$(_exports$2, Kind$Map$new))((_defs$3 => {
            var _compiled$4 = Kind$Comp$Defs$compile$(_defs$3);
            var _schemed$5 = Kind$Comp$transpile$module$(Kind$Comp$Target$Scheme$Language, _name$1, _exports$2, _compiled$4);
            var $12776 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                var $12777 = _m$pure$7;
                return $12777;
            }))(_schemed$5);
            return $12776;
        }));
        return $12774;
    };
    const Kind$api$io$terms_to_scheme_lib = x0 => x1 => Kind$api$io$terms_to_scheme_lib$(x0, x1);

    function BitsMap$keys$go$(_xs$2, _key$3, _list$4) {
        var self = _xs$2;
        switch (self._) {
            case 'BitsMap.tie':
                var $12779 = self.val;
                var $12780 = self.lft;
                var $12781 = self.rgt;
                var self = $12779;
                switch (self._) {
                    case 'Maybe.none':
                        var $12783 = _list$4;
                        var _list0$8 = $12783;
                        break;
                    case 'Maybe.some':
                        var $12784 = List$cons$(Bits$reverse$(_key$3), _list$4);
                        var _list0$8 = $12784;
                        break;
                };
                var _list1$9 = BitsMap$keys$go$($12780, (_key$3 + '0'), _list0$8);
                var _list2$10 = BitsMap$keys$go$($12781, (_key$3 + '1'), _list1$9);
                var $12782 = _list2$10;
                var $12778 = $12782;
                break;
            case 'BitsMap.new':
                var $12785 = _list$4;
                var $12778 = $12785;
                break;
        };
        return $12778;
    };
    const BitsMap$keys$go = x0 => x1 => x2 => BitsMap$keys$go$(x0, x1, x2);

    function BitsMap$keys$(_xs$2) {
        var $12786 = List$reverse$(BitsMap$keys$go$(_xs$2, Bits$e, List$nil));
        return $12786;
    };
    const BitsMap$keys = x0 => BitsMap$keys$(x0);

    function Kind$Synth$file$(_file$1, _defs$2) {
        var $12787 = IO$monad$((_m$bind$3 => _m$pure$4 => {
            var $12788 = _m$bind$3;
            return $12788;
        }))(IO$get_file$(_file$1))((_code$3 => {
            var _read$4 = Kind$Defs$read$(_file$1, _code$3, _defs$2);
            var self = _read$4;
            switch (self._) {
                case 'Either.left':
                    var $12790 = self.value;
                    var $12791 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                        var $12792 = _m$pure$7;
                        return $12792;
                    }))(Either$left$($12790));
                    var $12789 = $12791;
                    break;
                case 'Either.right':
                    var $12793 = self.value;
                    var _file_defs$6 = $12793;
                    var _file_keys$7 = BitsMap$keys$(_file_defs$6);
                    var _file_nams$8 = List$mapped$(_file_keys$7, Kind$Name$from_bits);
                    var $12794 = IO$monad$((_m$bind$9 => _m$pure$10 => {
                        var $12795 = _m$bind$9;
                        return $12795;
                    }))(Kind$Synth$many$(_file_nams$8, _file_defs$6))((_defs$9 => {
                        var $12796 = IO$monad$((_m$bind$10 => _m$pure$11 => {
                            var $12797 = _m$pure$11;
                            return $12797;
                        }))(Either$right$(Pair$new$(_file_nams$8, _defs$9)));
                        return $12796;
                    }));
                    var $12789 = $12794;
                    break;
            };
            return $12789;
        }));
        return $12787;
    };
    const Kind$Synth$file = x0 => x1 => Kind$Synth$file$(x0, x1);

    function IO$put_string$(_text$1) {
        var $12798 = IO$ask$("put_string", _text$1, (_skip$2 => {
            var $12799 = IO$end$(Unit$new);
            return $12799;
        }));
        return $12798;
    };
    const IO$put_string = x0 => IO$put_string$(x0);

    function IO$print$(_text$1) {
        var $12800 = IO$put_string$((_text$1 + "\u{a}"));
        return $12800;
    };
    const IO$print = x0 => IO$print$(x0);

    function Kind$Term$show$as_nat$go$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $12802 = self.name;
                var self = ($12802 === "Nat.zero");
                if (self) {
                    var $12804 = Maybe$some$(0n);
                    var $12803 = $12804;
                } else {
                    var $12805 = Maybe$none;
                    var $12803 = $12805;
                };
                var $12801 = $12803;
                break;
            case 'Kind.Term.app':
                var $12806 = self.func;
                var $12807 = self.argm;
                var self = $12806;
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $12809 = self.name;
                        var self = ($12809 === "Nat.succ");
                        if (self) {
                            var $12811 = Maybe$monad$((_m$bind$5 => _m$pure$6 => {
                                var $12812 = _m$bind$5;
                                return $12812;
                            }))(Kind$Term$show$as_nat$go$($12807))((_pred$5 => {
                                var $12813 = Maybe$monad$((_m$bind$6 => _m$pure$7 => {
                                    var $12814 = _m$pure$7;
                                    return $12814;
                                }))(Nat$succ$(_pred$5));
                                return $12813;
                            }));
                            var $12810 = $12811;
                        } else {
                            var $12815 = Maybe$none;
                            var $12810 = $12815;
                        };
                        var $12808 = $12810;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $12816 = Maybe$none;
                        var $12808 = $12816;
                        break;
                };
                var $12801 = $12808;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $12817 = Maybe$none;
                var $12801 = $12817;
                break;
        };
        return $12801;
    };
    const Kind$Term$show$as_nat$go = x0 => Kind$Term$show$as_nat$go$(x0);

    function Kind$Term$show$as_nat$(_term$1) {
        var $12818 = Maybe$mapped$(Kind$Term$show$as_nat$go$(_term$1), Nat$show);
        return $12818;
    };
    const Kind$Term$show$as_nat = x0 => Kind$Term$show$as_nat$(x0);

    function Kind$Term$show$is_ref$(_term$1, _name$2) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $12820 = self.name;
                var $12821 = (_name$2 === $12820);
                var $12819 = $12821;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $12822 = Bool$false;
                var $12819 = $12822;
                break;
        };
        return $12819;
    };
    const Kind$Term$show$is_ref = x0 => x1 => Kind$Term$show$is_ref$(x0, x1);

    function Kind$Term$show$app$done$(_term$1, _path$2, _args$3) {
        var _arity$4 = (list_length(_args$3));
        var self = (Kind$Term$show$is_ref$(_term$1, "Equal") && (_arity$4 === 3n));
        if (self) {
            var _func$5 = Kind$Term$show$go$(_term$1, _path$2);
            var _eq_lft$6 = Maybe$default$(List$at$(1n, _args$3), "?");
            var _eq_rgt$7 = Maybe$default$(List$at$(2n, _args$3), "?");
            var $12824 = String$flatten$(List$cons$(_eq_lft$6, List$cons$(" == ", List$cons$(_eq_rgt$7, List$nil))));
            var $12823 = $12824;
        } else {
            var _func$5 = Kind$Term$show$go$(_term$1, _path$2);
            var self = _func$5;
            if (self.length === 0) {
                var $12826 = Bool$false;
                var _wrap$6 = $12826;
            } else {
                var $12827 = self.charCodeAt(0);
                var $12828 = self.slice(1);
                var $12829 = ($12827 === 40);
                var _wrap$6 = $12829;
            };
            var _args$7 = String$join$(",", _args$3);
            var self = _wrap$6;
            if (self) {
                var $12830 = String$flatten$(List$cons$("(", List$cons$(_func$5, List$cons$(")", List$nil))));
                var _func$8 = $12830;
            } else {
                var $12831 = _func$5;
                var _func$8 = $12831;
            };
            var $12825 = String$flatten$(List$cons$(_func$8, List$cons$("(", List$cons$(_args$7, List$cons$(")", List$nil)))));
            var $12823 = $12825;
        };
        return $12823;
    };
    const Kind$Term$show$app$done = x0 => x1 => x2 => Kind$Term$show$app$done$(x0, x1, x2);

    function Kind$Term$show$app$(_term$1, _path$2, _args$3) {
        var Kind$Term$show$app$ = (_term$1, _path$2, _args$3) => ({
            ctr: 'TCO',
            arg: [_term$1, _path$2, _args$3]
        });
        var Kind$Term$show$app = _term$1 => _path$2 => _args$3 => Kind$Term$show$app$(_term$1, _path$2, _args$3);
        var arg = [_term$1, _path$2, _args$3];
        while (true) {
            let [_term$1, _path$2, _args$3] = arg;
            var R = (() => {
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.app':
                        var $12832 = self.func;
                        var $12833 = self.argm;
                        var $12834 = Kind$Term$show$app$($12832, Kind$MPath$o$(_path$2), List$cons$(Kind$Term$show$go$($12833, Kind$MPath$i$(_path$2)), _args$3));
                        return $12834;
                    case 'Kind.Term.ori':
                        var $12835 = self.expr;
                        var $12836 = Kind$Term$show$app$($12835, _path$2, _args$3);
                        return $12836;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $12837 = Kind$Term$show$app$done$(_term$1, _path$2, _args$3);
                        return $12837;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$show$app = x0 => x1 => x2 => Kind$Term$show$app$(x0, x1, x2);

    function BitsMap$to_list$(_xs$2) {
        var $12838 = List$reverse$(BitsMap$to_list$go$(_xs$2, Bits$e, List$nil));
        return $12838;
    };
    const BitsMap$to_list = x0 => BitsMap$to_list$(x0);

    function Kind$Term$show$go$(_term$1, _path$2) {
        var self = Kind$Term$show$as_nat$(_term$1);
        switch (self._) {
            case 'Maybe.some':
                var $12840 = self.value;
                var $12841 = $12840;
                var $12839 = $12841;
                break;
            case 'Maybe.none':
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.var':
                        var $12843 = self.name;
                        var $12844 = Kind$Name$show$($12843);
                        var $12842 = $12844;
                        break;
                    case 'Kind.Term.ref':
                        var $12845 = self.name;
                        var _name$4 = Kind$Name$show$($12845);
                        var self = _path$2;
                        switch (self._) {
                            case 'Maybe.some':
                                var $12847 = self.value;
                                var _path_val$6 = ((Bits$e + '1') + Kind$Path$to_bits$($12847));
                                var _path_str$7 = Nat$show$(Bits$to_nat$(_path_val$6));
                                var $12848 = String$flatten$(List$cons$(_name$4, List$cons$(Kind$Code$color$("2", ("-" + _path_str$7)), List$nil)));
                                var $12846 = $12848;
                                break;
                            case 'Maybe.none':
                                var $12849 = _name$4;
                                var $12846 = $12849;
                                break;
                        };
                        var $12842 = $12846;
                        break;
                    case 'Kind.Term.all':
                        var $12850 = self.eras;
                        var $12851 = self.self;
                        var $12852 = self.name;
                        var $12853 = self.xtyp;
                        var $12854 = self.body;
                        var _eras$8 = $12850;
                        var _self$9 = Kind$Name$show$($12851);
                        var _name$10 = Kind$Name$show$($12852);
                        var _type$11 = Kind$Term$show$go$($12853, Kind$MPath$o$(_path$2));
                        var self = _eras$8;
                        if (self) {
                            var $12856 = "<";
                            var _open$12 = $12856;
                        } else {
                            var $12857 = "(";
                            var _open$12 = $12857;
                        };
                        var self = _eras$8;
                        if (self) {
                            var $12858 = ">";
                            var _clos$13 = $12858;
                        } else {
                            var $12859 = ")";
                            var _clos$13 = $12859;
                        };
                        var _body$14 = Kind$Term$show$go$($12854(Kind$Term$var$($12851, 0n))(Kind$Term$var$($12852, 0n)), Kind$MPath$i$(_path$2));
                        var $12855 = String$flatten$(List$cons$(_self$9, List$cons$(_open$12, List$cons$(_name$10, List$cons$(":", List$cons$(_type$11, List$cons$(_clos$13, List$cons$(" ", List$cons$(_body$14, List$nil)))))))));
                        var $12842 = $12855;
                        break;
                    case 'Kind.Term.lam':
                        var $12860 = self.name;
                        var $12861 = self.body;
                        var _name$5 = Kind$Name$show$($12860);
                        var _body$6 = Kind$Term$show$go$($12861(Kind$Term$var$($12860, 0n)), Kind$MPath$o$(_path$2));
                        var $12862 = String$flatten$(List$cons$("(", List$cons$(_name$5, List$cons$(") ", List$cons$(_body$6, List$nil)))));
                        var $12842 = $12862;
                        break;
                    case 'Kind.Term.let':
                        var $12863 = self.name;
                        var $12864 = self.expr;
                        var $12865 = self.body;
                        var _name$6 = Kind$Name$show$($12863);
                        var _expr$7 = Kind$Term$show$go$($12864, Kind$MPath$o$(_path$2));
                        var _body$8 = Kind$Term$show$go$($12865(Kind$Term$var$($12863, 0n)), Kind$MPath$i$(_path$2));
                        var $12866 = String$flatten$(List$cons$("let ", List$cons$(_name$6, List$cons$(" = ", List$cons$(_expr$7, List$cons$("; ", List$cons$(_body$8, List$nil)))))));
                        var $12842 = $12866;
                        break;
                    case 'Kind.Term.def':
                        var $12867 = self.name;
                        var $12868 = self.expr;
                        var $12869 = self.body;
                        var _name$6 = Kind$Name$show$($12867);
                        var _expr$7 = Kind$Term$show$go$($12868, Kind$MPath$o$(_path$2));
                        var _body$8 = Kind$Term$show$go$($12869(Kind$Term$var$($12867, 0n)), Kind$MPath$i$(_path$2));
                        var $12870 = String$flatten$(List$cons$("def ", List$cons$(_name$6, List$cons$(" = ", List$cons$(_expr$7, List$cons$("; ", List$cons$(_body$8, List$nil)))))));
                        var $12842 = $12870;
                        break;
                    case 'Kind.Term.ann':
                        var $12871 = self.term;
                        var $12872 = self.type;
                        var _term$6 = Kind$Term$show$go$($12871, Kind$MPath$o$(_path$2));
                        var _type$7 = Kind$Term$show$go$($12872, Kind$MPath$i$(_path$2));
                        var $12873 = String$flatten$(List$cons$(_term$6, List$cons$("::", List$cons$(_type$7, List$nil))));
                        var $12842 = $12873;
                        break;
                    case 'Kind.Term.gol':
                        var $12874 = self.name;
                        var _name$6 = Kind$Name$show$($12874);
                        var $12875 = String$flatten$(List$cons$("?", List$cons$(_name$6, List$nil)));
                        var $12842 = $12875;
                        break;
                    case 'Kind.Term.nat':
                        var $12876 = self.natx;
                        var $12877 = String$flatten$(List$cons$(Nat$show$($12876), List$nil));
                        var $12842 = $12877;
                        break;
                    case 'Kind.Term.chr':
                        var $12878 = self.chrx;
                        var $12879 = String$flatten$(List$cons$("\'", List$cons$(Kind$Code$escape$char$($12878), List$cons$("\'", List$nil))));
                        var $12842 = $12879;
                        break;
                    case 'Kind.Term.str':
                        var $12880 = self.strx;
                        var $12881 = String$flatten$(List$cons$("\"", List$cons$(Kind$Code$escape$($12880), List$cons$("\"", List$nil))));
                        var $12842 = $12881;
                        break;
                    case 'Kind.Term.num':
                        var $12882 = self.sign;
                        var $12883 = self.numb;
                        var $12884 = self.frac;
                        var $12885 = String$flatten$(List$cons$((() => {
                            var self = $12882;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $12886 = self.value;
                                    var self = $12886;
                                    if (self) {
                                        var $12888 = "+";
                                        var $12887 = $12888;
                                    } else {
                                        var $12889 = "-";
                                        var $12887 = $12889;
                                    };
                                    return $12887;
                                case 'Maybe.none':
                                    var $12890 = "";
                                    return $12890;
                            };
                        })(), List$cons$(Nat$show$($12883), List$cons$((() => {
                            var self = $12884;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $12891 = self.value;
                                    var $12892 = ("." + Nat$show$($12891));
                                    return $12892;
                                case 'Maybe.none':
                                    var $12893 = "";
                                    return $12893;
                            };
                        })(), List$nil))));
                        var $12842 = $12885;
                        break;
                    case 'Kind.Term.cse':
                        var $12894 = self.expr;
                        var $12895 = self.name;
                        var $12896 = self.with;
                        var $12897 = self.cses;
                        var $12898 = self.moti;
                        var _expr$9 = Kind$Term$show$go$($12894, Kind$MPath$o$(_path$2));
                        var _name$10 = Kind$Name$show$($12895);
                        var _wyth$11 = String$join$("; ", List$mapped$($12896, (_with_var$11 => {
                            var self = _with_var$11;
                            switch (self._) {
                                case 'Kind.Ann.new':
                                    var $12901 = self.name;
                                    var $12902 = self.type;
                                    var self = $12902;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $12904 = self.value;
                                            var $12905 = ($12901 + (": " + Kind$Term$show$go$($12904, Maybe$none)));
                                            var $12903 = $12905;
                                            break;
                                        case 'Maybe.none':
                                            var $12906 = $12901;
                                            var $12903 = $12906;
                                            break;
                                    };
                                    var $12900 = $12903;
                                    break;
                            };
                            return $12900;
                        })));
                        var _cses$12 = BitsMap$to_list$($12897);
                        var _cses$13 = String$join$("", List$mapped$(_cses$12, (_x$13 => {
                            var _name$14 = Kind$Name$from_bits$(Pair$fst$(_x$13));
                            var _term$15 = Kind$Term$show$go$(Pair$snd$(_x$13), Maybe$none);
                            var $12907 = String$flatten$(List$cons$(_name$14, List$cons$(": ", List$cons$(_term$15, List$cons$(", ", List$nil)))));
                            return $12907;
                        })));
                        var self = $12898;
                        switch (self._) {
                            case 'Maybe.some':
                                var $12908 = self.value;
                                var $12909 = String$flatten$(List$cons$(": ", List$cons$(Kind$Term$show$go$($12908, Maybe$none), List$nil)));
                                var _moti$14 = $12909;
                                break;
                            case 'Maybe.none':
                                var $12910 = "";
                                var _moti$14 = $12910;
                                break;
                        };
                        var $12899 = String$flatten$(List$cons$("case ", List$cons$(_expr$9, List$cons$(" as ", List$cons$(_name$10, List$cons$(_wyth$11, List$cons$(" { ", List$cons$(_cses$13, List$cons$("}", List$cons$(_moti$14, List$nil))))))))));
                        var $12842 = $12899;
                        break;
                    case 'Kind.Term.new':
                        var $12911 = self.args;
                        var _args$4 = List$fold$($12911, (_path$4 => {
                            var $12913 = List$nil;
                            return $12913;
                        }), (_arg$4 => _res$5 => _path$6 => {
                            var $12914 = List$cons$(Kind$Term$show$go$(_arg$4, _path$6), _res$5(Kind$MPath$o$(_path$6)));
                            return $12914;
                        }))(_path$2);
                        var $12912 = String$flatten$(List$cons$("{", List$cons$(String$join$(",", _args$4), List$cons$("}", List$nil))));
                        var $12842 = $12912;
                        break;
                    case 'Kind.Term.get':
                        var $12915 = self.expr;
                        var $12916 = self.fkey;
                        var _expr$5 = Kind$Term$show$go$($12915, Kind$MPath$o$(_path$2));
                        var $12917 = String$flatten$(List$cons$(_expr$5, List$cons$("@", List$cons$($12916, List$nil))));
                        var $12842 = $12917;
                        break;
                    case 'Kind.Term.set':
                        var $12918 = self.expr;
                        var $12919 = self.fkey;
                        var $12920 = self.fval;
                        var _expr$6 = Kind$Term$show$go$($12918, Kind$MPath$o$(_path$2));
                        var _fval$7 = Kind$Term$show$go$($12920, Kind$MPath$i$(_path$2));
                        var $12921 = String$flatten$(List$cons$(_expr$6, List$cons$("@", List$cons$($12919, List$cons$(" <- ", List$cons$(_fval$7, List$nil))))));
                        var $12842 = $12921;
                        break;
                    case 'Kind.Term.ope':
                        var $12922 = self.name;
                        var $12923 = self.arg0;
                        var $12924 = self.arg1;
                        var _arg0$6 = Kind$Term$show$go$($12923, Kind$MPath$o$(_path$2));
                        var _arg1$7 = Kind$Term$show$go$($12924, Kind$MPath$i$(_path$2));
                        var $12925 = String$flatten$(List$cons$("(", List$cons$(_arg0$6, List$cons$(" ", List$cons$($12922, List$cons$(" ", List$cons$(_arg1$7, List$cons$(")", List$nil))))))));
                        var $12842 = $12925;
                        break;
                    case 'Kind.Term.ori':
                        var $12926 = self.expr;
                        var $12927 = Kind$Term$show$go$($12926, _path$2);
                        var $12842 = $12927;
                        break;
                    case 'Kind.Term.typ':
                        var $12928 = "Type";
                        var $12842 = $12928;
                        break;
                    case 'Kind.Term.app':
                        var $12929 = Kind$Term$show$app$(_term$1, _path$2, List$nil);
                        var $12842 = $12929;
                        break;
                    case 'Kind.Term.hol':
                        var $12930 = "_";
                        var $12842 = $12930;
                        break;
                };
                var $12839 = $12842;
                break;
        };
        return $12839;
    };
    const Kind$Term$show$go = x0 => x1 => Kind$Term$show$go$(x0, x1);

    function Kind$Term$show$(_term$1) {
        var $12931 = Kind$Term$show$go$(_term$1, Maybe$none);
        return $12931;
    };
    const Kind$Term$show = x0 => Kind$Term$show$(x0);

    function Kind$Defs$report$types$(_defs$1, _names$2) {
        var _types$3 = "";
        var _types$4 = (() => {
            var $12934 = _types$3;
            var $12935 = _names$2;
            let _types$5 = $12934;
            let _name$4;
            while ($12935._ === 'List.cons') {
                _name$4 = $12935.head;
                var self = Kind$Map$get$(_name$4, _defs$1);
                switch (self._) {
                    case 'Maybe.some':
                        var $12936 = self.value;
                        var self = $12936;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $12938 = self.type;
                                var $12939 = (_types$5 + (_name$4 + (": " + (Kind$Term$show$($12938) + "\u{a}"))));
                                var $12937 = $12939;
                                break;
                        };
                        var $12934 = $12937;
                        break;
                    case 'Maybe.none':
                        var $12940 = _types$5;
                        var $12934 = $12940;
                        break;
                };
                _types$5 = $12934;
                $12935 = $12935.tail;
            }
            return _types$5;
        })();
        var $12932 = _types$4;
        return $12932;
    };
    const Kind$Defs$report$types = x0 => x1 => Kind$Defs$report$types$(x0, x1);

    function List$filter$(_f$2, _xs$3) {
        var self = _xs$3;
        switch (self._) {
            case 'List.cons':
                var $12942 = self.head;
                var $12943 = self.tail;
                var self = _f$2($12942);
                if (self) {
                    var $12945 = List$cons$($12942, List$filter$(_f$2, $12943));
                    var $12944 = $12945;
                } else {
                    var $12946 = List$filter$(_f$2, $12943);
                    var $12944 = $12946;
                };
                var $12941 = $12944;
                break;
            case 'List.nil':
                var $12947 = List$nil;
                var $12941 = $12947;
                break;
        };
        return $12941;
    };
    const List$filter = x0 => x1 => List$filter$(x0, x1);

    function Kind$Error$is_undef$(_error$1) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
            case 'Kind.Error.show_goal':
            case 'Kind.Error.waiting':
            case 'Kind.Error.indirect':
            case 'Kind.Error.patch':
            case 'Kind.Error.cant_infer':
                var $12949 = Bool$false;
                var $12948 = $12949;
                break;
            case 'Kind.Error.undefined_reference':
                var $12950 = Bool$true;
                var $12948 = $12950;
                break;
        };
        return $12948;
    };
    const Kind$Error$is_undef = x0 => Kind$Error$is_undef$(x0);

    function Kind$Error$is_mistake$(_error$1) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
            case 'Kind.Error.cant_infer':
                var $12952 = Bool$true;
                var $12951 = $12952;
                break;
            case 'Kind.Error.show_goal':
            case 'Kind.Error.waiting':
            case 'Kind.Error.indirect':
            case 'Kind.Error.patch':
            case 'Kind.Error.undefined_reference':
                var $12953 = Bool$false;
                var $12951 = $12953;
                break;
        };
        return $12951;
    };
    const Kind$Error$is_mistake = x0 => Kind$Error$is_mistake$(x0);

    function Kind$Error$is_goal$(_error$1) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
            case 'Kind.Error.waiting':
            case 'Kind.Error.indirect':
            case 'Kind.Error.patch':
            case 'Kind.Error.undefined_reference':
            case 'Kind.Error.cant_infer':
                var $12955 = Bool$false;
                var $12954 = $12955;
                break;
            case 'Kind.Error.show_goal':
                var $12956 = Bool$true;
                var $12954 = $12956;
                break;
        };
        return $12954;
    };
    const Kind$Error$is_goal = x0 => Kind$Error$is_goal$(x0);

    function Kind$Error$relevant$(_errors$1) {
        var _undefs$2 = List$filter$(Kind$Error$is_undef, _errors$1);
        var _mistakes$3 = List$filter$(Kind$Error$is_mistake, _errors$1);
        var _goals$4 = List$filter$(Kind$Error$is_goal, _errors$1);
        var self = _undefs$2;
        switch (self._) {
            case 'List.nil':
                var self = _mistakes$3;
                switch (self._) {
                    case 'List.cons':
                        var $12959 = self.head;
                        var $12960 = List$concat$(List$cons$($12959, List$nil), _goals$4);
                        var $12958 = $12960;
                        break;
                    case 'List.nil':
                        var $12961 = _goals$4;
                        var $12958 = $12961;
                        break;
                };
                var $12957 = $12958;
                break;
            case 'List.cons':
                var $12962 = List$concat$(_undefs$2, _goals$4);
                var $12957 = $12962;
                break;
        };
        return $12957;
    };
    const Kind$Error$relevant = x0 => Kind$Error$relevant$(x0);

    function Kind$Context$show$(_context$1) {
        var self = _context$1;
        switch (self._) {
            case 'List.cons':
                var $12964 = self.head;
                var $12965 = self.tail;
                var self = $12964;
                switch (self._) {
                    case 'Pair.new':
                        var $12967 = self.fst;
                        var $12968 = self.snd;
                        var _name$6 = Kind$Name$show$($12967);
                        var _type$7 = Kind$Term$show$(Kind$Term$normalize$($12968, Kind$Map$new));
                        var _rest$8 = Kind$Context$show$($12965);
                        var $12969 = (_rest$8 + ("- " + (_name$6 + (": " + (_type$7 + "\u{a}")))));
                        var $12966 = $12969;
                        break;
                };
                var $12963 = $12966;
                break;
            case 'List.nil':
                var $12970 = "";
                var $12963 = $12970;
                break;
        };
        return $12963;
    };
    const Kind$Context$show = x0 => Kind$Context$show$(x0);

    function Kind$Term$expand_at$(_path$1, _term$2, _defs$3) {
        var $12971 = Kind$Term$patch_at$(_path$1, _term$2, (_term$4 => {
            var self = _term$4;
            switch (self._) {
                case 'Kind.Term.ref':
                    var $12973 = self.name;
                    var self = Kind$Map$get$($12973, _defs$3);
                    switch (self._) {
                        case 'Maybe.some':
                            var $12975 = self.value;
                            var self = $12975;
                            switch (self._) {
                                case 'Kind.Def.new':
                                    var $12977 = self.term;
                                    var $12978 = $12977;
                                    var $12976 = $12978;
                                    break;
                            };
                            var $12974 = $12976;
                            break;
                        case 'Maybe.none':
                            var $12979 = Kind$Term$ref$($12973);
                            var $12974 = $12979;
                            break;
                    };
                    var $12972 = $12974;
                    break;
                case 'Kind.Term.var':
                case 'Kind.Term.typ':
                case 'Kind.Term.all':
                case 'Kind.Term.lam':
                case 'Kind.Term.app':
                case 'Kind.Term.let':
                case 'Kind.Term.def':
                case 'Kind.Term.ann':
                case 'Kind.Term.gol':
                case 'Kind.Term.hol':
                case 'Kind.Term.nat':
                case 'Kind.Term.chr':
                case 'Kind.Term.str':
                case 'Kind.Term.num':
                case 'Kind.Term.cse':
                case 'Kind.Term.new':
                case 'Kind.Term.get':
                case 'Kind.Term.set':
                case 'Kind.Term.ope':
                case 'Kind.Term.ori':
                    var $12980 = _term$4;
                    var $12972 = $12980;
                    break;
            };
            return $12972;
        }));
        return $12971;
    };
    const Kind$Term$expand_at = x0 => x1 => x2 => Kind$Term$expand_at$(x0, x1, x2);

    function Kind$Term$expand_ct$(_term$1, _defs$2, _arity$3) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.var':
                var $12982 = self.name;
                var $12983 = self.indx;
                var $12984 = Kind$Term$var$($12982, $12983);
                var $12981 = $12984;
                break;
            case 'Kind.Term.ref':
                var $12985 = self.name;
                var self = Kind$Map$get$($12985, _defs$2);
                switch (self._) {
                    case 'Maybe.some':
                        var $12987 = self.value;
                        var self = $12987;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $12989 = self.term;
                                var $12990 = self.isct;
                                var $12991 = self.arit;
                                var self = ($12990 && (_arity$3 > $12991));
                                if (self) {
                                    var $12993 = $12989;
                                    var $12992 = $12993;
                                } else {
                                    var $12994 = Kind$Term$ref$($12985);
                                    var $12992 = $12994;
                                };
                                var $12988 = $12992;
                                break;
                        };
                        var $12986 = $12988;
                        break;
                    case 'Maybe.none':
                        var $12995 = Kind$Term$ref$($12985);
                        var $12986 = $12995;
                        break;
                };
                var $12981 = $12986;
                break;
            case 'Kind.Term.all':
                var $12996 = self.eras;
                var $12997 = self.self;
                var $12998 = self.name;
                var $12999 = self.xtyp;
                var $13000 = self.body;
                var $13001 = Kind$Term$all$($12996, $12997, $12998, Kind$Term$expand_ct$($12999, _defs$2, 0n), (_s$9 => _x$10 => {
                    var $13002 = Kind$Term$expand_ct$($13000(_s$9)(_x$10), _defs$2, 0n);
                    return $13002;
                }));
                var $12981 = $13001;
                break;
            case 'Kind.Term.lam':
                var $13003 = self.name;
                var $13004 = self.body;
                var $13005 = Kind$Term$lam$($13003, (_x$6 => {
                    var $13006 = Kind$Term$expand_ct$($13004(_x$6), _defs$2, 0n);
                    return $13006;
                }));
                var $12981 = $13005;
                break;
            case 'Kind.Term.app':
                var $13007 = self.func;
                var $13008 = self.argm;
                var $13009 = Kind$Term$app$(Kind$Term$expand_ct$($13007, _defs$2, Nat$succ$(_arity$3)), Kind$Term$expand_ct$($13008, _defs$2, 0n));
                var $12981 = $13009;
                break;
            case 'Kind.Term.let':
                var $13010 = self.name;
                var $13011 = self.expr;
                var $13012 = self.body;
                var $13013 = Kind$Term$let$($13010, Kind$Term$expand_ct$($13011, _defs$2, 0n), (_x$7 => {
                    var $13014 = Kind$Term$expand_ct$($13012(_x$7), _defs$2, 0n);
                    return $13014;
                }));
                var $12981 = $13013;
                break;
            case 'Kind.Term.def':
                var $13015 = self.name;
                var $13016 = self.expr;
                var $13017 = self.body;
                var $13018 = Kind$Term$def$($13015, Kind$Term$expand_ct$($13016, _defs$2, 0n), (_x$7 => {
                    var $13019 = Kind$Term$expand_ct$($13017(_x$7), _defs$2, 0n);
                    return $13019;
                }));
                var $12981 = $13018;
                break;
            case 'Kind.Term.ann':
                var $13020 = self.done;
                var $13021 = self.term;
                var $13022 = self.type;
                var $13023 = Kind$Term$ann$($13020, Kind$Term$expand_ct$($13021, _defs$2, 0n), Kind$Term$expand_ct$($13022, _defs$2, 0n));
                var $12981 = $13023;
                break;
            case 'Kind.Term.gol':
                var $13024 = self.name;
                var $13025 = self.dref;
                var $13026 = self.verb;
                var $13027 = Kind$Term$gol$($13024, $13025, $13026);
                var $12981 = $13027;
                break;
            case 'Kind.Term.hol':
                var $13028 = self.path;
                var $13029 = Kind$Term$hol$($13028);
                var $12981 = $13029;
                break;
            case 'Kind.Term.nat':
                var $13030 = self.natx;
                var $13031 = Kind$Term$nat$($13030);
                var $12981 = $13031;
                break;
            case 'Kind.Term.chr':
                var $13032 = self.chrx;
                var $13033 = Kind$Term$chr$($13032);
                var $12981 = $13033;
                break;
            case 'Kind.Term.str':
                var $13034 = self.strx;
                var $13035 = Kind$Term$str$($13034);
                var $12981 = $13035;
                break;
            case 'Kind.Term.ori':
                var $13036 = self.orig;
                var $13037 = self.expr;
                var $13038 = Kind$Term$ori$($13036, $13037);
                var $12981 = $13038;
                break;
            case 'Kind.Term.typ':
                var $13039 = Kind$Term$typ;
                var $12981 = $13039;
                break;
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $13040 = _term$1;
                var $12981 = $13040;
                break;
        };
        return $12981;
    };
    const Kind$Term$expand_ct = x0 => x1 => x2 => Kind$Term$expand_ct$(x0, x1, x2);

    function Kind$Term$expand$(_dref$1, _term$2, _defs$3) {
        var _term$4 = Kind$Term$normalize$(_term$2, Kind$Map$new);
        var _term$5 = (() => {
            var $13043 = _term$4;
            var $13044 = _dref$1;
            let _term$6 = $13043;
            let _path$5;
            while ($13044._ === 'List.cons') {
                _path$5 = $13044.head;
                var _term$7 = Kind$Term$expand_at$(_path$5, _term$6, _defs$3);
                var _term$8 = Kind$Term$normalize$(_term$7, Kind$Map$new);
                var _term$9 = Kind$Term$expand_ct$(_term$8, _defs$3, 0n);
                var _term$10 = Kind$Term$normalize$(_term$9, Kind$Map$new);
                var $13043 = _term$10;
                _term$6 = $13043;
                $13044 = $13044.tail;
            }
            return _term$6;
        })();
        var $13041 = _term$5;
        return $13041;
    };
    const Kind$Term$expand = x0 => x1 => x2 => Kind$Term$expand$(x0, x1, x2);

    function Kind$Error$show$(_error$1, _defs$2) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
                var $13046 = self.expected;
                var $13047 = self.detected;
                var $13048 = self.context;
                var self = $13046;
                switch (self._) {
                    case 'Either.left':
                        var $13050 = self.value;
                        var $13051 = $13050;
                        var _expected$7 = $13051;
                        break;
                    case 'Either.right':
                        var $13052 = self.value;
                        var $13053 = Kind$Term$show$(Kind$Term$normalize$($13052, BitsMap$new));
                        var _expected$7 = $13053;
                        break;
                };
                var self = $13047;
                switch (self._) {
                    case 'Either.left':
                        var $13054 = self.value;
                        var $13055 = $13054;
                        var _detected$8 = $13055;
                        break;
                    case 'Either.right':
                        var $13056 = self.value;
                        var $13057 = Kind$Term$show$(Kind$Term$normalize$($13056, BitsMap$new));
                        var _detected$8 = $13057;
                        break;
                };
                var $13049 = ("Type mismatch.\u{a}" + ("- Expected: " + (_expected$7 + ("\u{a}" + ("- Detected: " + (_detected$8 + ("\u{a}" + (() => {
                    var self = $13048;
                    switch (self._) {
                        case 'List.nil':
                            var $13058 = "";
                            return $13058;
                        case 'List.cons':
                            var $13059 = ("With context:\u{a}" + Kind$Context$show$($13048));
                            return $13059;
                    };
                })())))))));
                var $13045 = $13049;
                break;
            case 'Kind.Error.show_goal':
                var $13060 = self.name;
                var $13061 = self.dref;
                var $13062 = self.verb;
                var $13063 = self.goal;
                var $13064 = self.context;
                var _goal_name$8 = ("Goal ?" + (Kind$Name$show$($13060) + ":\u{a}"));
                var self = $13063;
                switch (self._) {
                    case 'Maybe.some':
                        var $13066 = self.value;
                        var _goal$10 = Kind$Term$expand$($13061, $13066, _defs$2);
                        var $13067 = ("With type: " + ((() => {
                            var self = $13062;
                            if (self) {
                                var $13068 = Kind$Term$show$go$(_goal$10, Maybe$some$((_x$11 => {
                                    var $13069 = _x$11;
                                    return $13069;
                                })));
                                return $13068;
                            } else {
                                var $13070 = Kind$Term$show$(_goal$10);
                                return $13070;
                            };
                        })() + "\u{a}"));
                        var _with_type$9 = $13067;
                        break;
                    case 'Maybe.none':
                        var $13071 = "";
                        var _with_type$9 = $13071;
                        break;
                };
                var self = $13064;
                switch (self._) {
                    case 'List.nil':
                        var $13072 = "";
                        var _with_ctxt$10 = $13072;
                        break;
                    case 'List.cons':
                        var $13073 = ("With context:\u{a}" + Kind$Context$show$($13064));
                        var _with_ctxt$10 = $13073;
                        break;
                };
                var $13065 = String$flatten$(List$cons$(_goal_name$8, List$cons$(_with_type$9, List$cons$(_with_ctxt$10, List$nil))));
                var $13045 = $13065;
                break;
            case 'Kind.Error.waiting':
                var $13074 = self.name;
                var $13075 = ("Waiting for \'" + ($13074 + "\'."));
                var $13045 = $13075;
                break;
            case 'Kind.Error.indirect':
                var $13076 = self.name;
                var $13077 = ("Error on dependency \'" + ($13076 + "\'."));
                var $13045 = $13077;
                break;
            case 'Kind.Error.patch':
                var $13078 = self.term;
                var $13079 = ("Patching: " + Kind$Term$show$($13078));
                var $13045 = $13079;
                break;
            case 'Kind.Error.undefined_reference':
                var $13080 = self.name;
                var $13081 = ("Undefined reference: " + (Kind$Name$show$($13080) + "\u{a}"));
                var $13045 = $13081;
                break;
            case 'Kind.Error.cant_infer':
                var $13082 = self.term;
                var $13083 = self.context;
                var _term$6 = Kind$Term$show$($13082);
                var _context$7 = Kind$Context$show$($13083);
                var $13084 = ("Can\'t infer type of: " + (_term$6 + ("\u{a}" + ("With context:\u{a}" + _context$7))));
                var $13045 = $13084;
                break;
        };
        return $13045;
    };
    const Kind$Error$show = x0 => x1 => Kind$Error$show$(x0, x1);

    function Kind$Error$origin$(_error$1) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
                var $13086 = self.origin;
                var $13087 = $13086;
                var $13085 = $13087;
                break;
            case 'Kind.Error.undefined_reference':
                var $13088 = self.origin;
                var $13089 = $13088;
                var $13085 = $13089;
                break;
            case 'Kind.Error.cant_infer':
                var $13090 = self.origin;
                var $13091 = $13090;
                var $13085 = $13091;
                break;
            case 'Kind.Error.show_goal':
            case 'Kind.Error.waiting':
            case 'Kind.Error.indirect':
            case 'Kind.Error.patch':
                var $13092 = Maybe$none;
                var $13085 = $13092;
                break;
        };
        return $13085;
    };
    const Kind$Error$origin = x0 => Kind$Error$origin$(x0);

    function Kind$Defs$report$errors$(_defs$1) {
        var _errors$2 = "";
        var _errors$3 = (() => {
            var $13095 = _errors$2;
            var $13096 = BitsMap$keys$(_defs$1);
            let _errors$4 = $13095;
            let _key$3;
            while ($13096._ === 'List.cons') {
                _key$3 = $13096.head;
                var _name$5 = Kind$Name$from_bits$(_key$3);
                var _defn$6 = Kind$Map$get$(_name$5, _defs$1);
                var self = _defn$6;
                switch (self._) {
                    case 'Maybe.some':
                        var $13097 = self.value;
                        var self = $13097;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $13099 = self.file;
                                var $13100 = self.code;
                                var $13101 = self.name;
                                var $13102 = self.stat;
                                var self = $13102;
                                switch (self._) {
                                    case 'Kind.Status.fail':
                                        var $13104 = self.errors;
                                        var self = $13104;
                                        switch (self._) {
                                            case 'List.nil':
                                                var $13106 = _errors$4;
                                                var $13105 = $13106;
                                                break;
                                            case 'List.cons':
                                                var _name_str$20 = $13101;
                                                var _rel_errs$21 = Kind$Error$relevant$($13104);
                                                var _errors$22 = (() => {
                                                    var $13109 = _errors$4;
                                                    var $13110 = _rel_errs$21;
                                                    let _errors$23 = $13109;
                                                    let _err$22;
                                                    while ($13110._ === 'List.cons') {
                                                        _err$22 = $13110.head;
                                                        var _err_msg$24 = Kind$Error$show$(_err$22, _defs$1);
                                                        var _ori_val$25 = Kind$Error$origin$(_err$22);
                                                        var self = _ori_val$25;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $13111 = self.value;
                                                                var self = $13111;
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $13113 = self.fst;
                                                                        var $13114 = self.snd;
                                                                        var _inside$29 = ("Inside \'" + ($13099 + "\':\u{a}"));
                                                                        var _source$30 = Kind$Code$highlight$($13100, $13113, $13113, $13114);
                                                                        var $13115 = (_errors$23 + (_err_msg$24 + (_inside$29 + (_source$30 + ("\u{a}" + "\u{a}")))));
                                                                        var $13112 = $13115;
                                                                        break;
                                                                };
                                                                var $13109 = $13112;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $13116 = (_errors$23 + (_err_msg$24 + "\u{a}"));
                                                                var $13109 = $13116;
                                                                break;
                                                        };
                                                        _errors$23 = $13109;
                                                        $13110 = $13110.tail;
                                                    }
                                                    return _errors$23;
                                                })();
                                                var $13107 = _errors$22;
                                                var $13105 = $13107;
                                                break;
                                        };
                                        var $13103 = $13105;
                                        break;
                                    case 'Kind.Status.init':
                                    case 'Kind.Status.wait':
                                    case 'Kind.Status.done':
                                        var $13117 = _errors$4;
                                        var $13103 = $13117;
                                        break;
                                };
                                var $13098 = $13103;
                                break;
                        };
                        var $13095 = $13098;
                        break;
                    case 'Maybe.none':
                        var $13118 = _errors$4;
                        var $13095 = $13118;
                        break;
                };
                _errors$4 = $13095;
                $13096 = $13096.tail;
            }
            return _errors$4;
        })();
        var $13093 = _errors$3;
        return $13093;
    };
    const Kind$Defs$report$errors = x0 => Kind$Defs$report$errors$(x0);

    function Kind$Defs$report$(_defs$1, _names$2) {
        var _types$3 = Kind$Defs$report$types$(_defs$1, _names$2);
        var _errors$4 = Kind$Defs$report$errors$(_defs$1);
        var self = _errors$4;
        if (self.length === 0) {
            var $13120 = "All terms check.";
            var _errors$5 = $13120;
        } else {
            var $13121 = self.charCodeAt(0);
            var $13122 = self.slice(1);
            var $13123 = _errors$4;
            var _errors$5 = $13123;
        };
        var $13119 = (_types$3 + ("\u{a}" + _errors$5));
        return $13119;
    };
    const Kind$Defs$report = x0 => x1 => Kind$Defs$report$(x0, x1);

    function IO$set_file$(_name$1, _content$2) {
        var $13124 = IO$ask$("set_file", (_name$1 + ("=" + _content$2)), (_ok$3 => {
            var $13125 = IO$end$(Unit$new);
            return $13125;
        }));
        return $13124;
    };
    const IO$set_file = x0 => x1 => IO$set_file$(x0, x1);

    function Bool$show$(_b$1) {
        var self = _b$1;
        if (self) {
            var $13127 = "Bool.true";
            var $13126 = $13127;
        } else {
            var $13128 = "Bool.false";
            var $13126 = $13128;
        };
        return $13126;
    };
    const Bool$show = x0 => Bool$show$(x0);

    function Kind$Defs$cache$go$(_kvs$1) {
        var self = _kvs$1;
        switch (self._) {
            case 'List.cons':
                var $13130 = self.head;
                var $13131 = self.tail;
                var self = $13130;
                switch (self._) {
                    case 'Pair.new':
                        var $13133 = self.fst;
                        var $13134 = self.snd;
                        var self = $13134;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $13136 = self.file;
                                var $13137 = self.term;
                                var $13138 = self.type;
                                var $13139 = self.isct;
                                var $13140 = self.arit;
                                var $13141 = self.stat;
                                var self = $13141;
                                switch (self._) {
                                    case 'Kind.Status.init':
                                    case 'Kind.Status.wait':
                                    case 'Kind.Status.fail':
                                        var $13143 = Kind$Defs$cache$go$($13131);
                                        var $13142 = $13143;
                                        break;
                                    case 'Kind.Status.done':
                                        var $13144 = IO$monad$((_m$bind$16 => _m$pure$17 => {
                                            var $13145 = _m$bind$16;
                                            return $13145;
                                        }))(IO$get_file_mtime$($13136))((_time$16 => {
                                            var $13146 = IO$monad$((_m$bind$17 => _m$pure$18 => {
                                                var $13147 = _m$bind$17;
                                                return $13147;
                                            }))(IO$set_file$(String$to_lower$((".cache/" + ($13133 + ".term"))), Kind$Core$show$($13137)))((_$17 => {
                                                var $13148 = IO$monad$((_m$bind$18 => _m$pure$19 => {
                                                    var $13149 = _m$bind$18;
                                                    return $13149;
                                                }))(IO$set_file$(String$to_lower$((".cache/" + ($13133 + ".type"))), Kind$Core$show$($13138)))((_$18 => {
                                                    var $13150 = IO$monad$((_m$bind$19 => _m$pure$20 => {
                                                        var $13151 = _m$bind$19;
                                                        return $13151;
                                                    }))(IO$set_file$(String$to_lower$((".cache/" + ($13133 + ".isct"))), Bool$show$($13139)))((_$19 => {
                                                        var $13152 = IO$monad$((_m$bind$20 => _m$pure$21 => {
                                                            var $13153 = _m$bind$20;
                                                            return $13153;
                                                        }))(IO$set_file$(String$to_lower$((".cache/" + ($13133 + ".arit"))), Nat$show$($13140)))((_$20 => {
                                                            var $13154 = IO$monad$((_m$bind$21 => _m$pure$22 => {
                                                                var $13155 = _m$bind$21;
                                                                return $13155;
                                                            }))(IO$set_file$(String$to_lower$((".cache/" + ($13133 + ".file"))), $13136))((_$21 => {
                                                                var $13156 = IO$monad$((_m$bind$22 => _m$pure$23 => {
                                                                    var $13157 = _m$bind$22;
                                                                    return $13157;
                                                                }))(IO$set_file$(String$to_lower$((".cache/" + ($13133 + ".time"))), _time$16))((_$22 => {
                                                                    var $13158 = Kind$Defs$cache$go$($13131);
                                                                    return $13158;
                                                                }));
                                                                return $13156;
                                                            }));
                                                            return $13154;
                                                        }));
                                                        return $13152;
                                                    }));
                                                    return $13150;
                                                }));
                                                return $13148;
                                            }));
                                            return $13146;
                                        }));
                                        var $13142 = $13144;
                                        break;
                                };
                                var $13135 = $13142;
                                break;
                        };
                        var $13132 = $13135;
                        break;
                };
                var $13129 = $13132;
                break;
            case 'List.nil':
                var $13159 = IO$monad$((_m$bind$2 => _m$pure$3 => {
                    var $13160 = _m$pure$3;
                    return $13160;
                }))(Unit$new);
                var $13129 = $13159;
                break;
        };
        return $13129;
    };
    const Kind$Defs$cache$go = x0 => Kind$Defs$cache$go$(x0);

    function Kind$Defs$cache$(_defs$1) {
        var $13161 = Kind$Defs$cache$go$(Kind$Map$to_list$(_defs$1));
        return $13161;
    };
    const Kind$Defs$cache = x0 => Kind$Defs$cache$(x0);

    function Kind$api$io$check_file$(_file$1) {
        var $13162 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13163 = _m$bind$2;
            return $13163;
        }))(Kind$Synth$file$(_file$1, Kind$Map$new))((_loaded$2 => {
            var self = _loaded$2;
            switch (self._) {
                case 'Either.left':
                    var $13165 = self.value;
                    var $13166 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $13167 = _m$bind$4;
                        return $13167;
                    }))(IO$print$(String$flatten$(List$cons$("On \'", List$cons$(_file$1, List$cons$("\':", List$nil))))))((_$4 => {
                        var $13168 = IO$print$($13165);
                        return $13168;
                    }));
                    var $13164 = $13166;
                    break;
                case 'Either.right':
                    var $13169 = self.value;
                    var self = $13169;
                    switch (self._) {
                        case 'Pair.new':
                            var $13171 = self.fst;
                            var $13172 = self.snd;
                            var _nams$6 = $13171;
                            var _defs$7 = $13172;
                            var self = _nams$6;
                            switch (self._) {
                                case 'List.nil':
                                    var $13174 = IO$print$(("File not found or empty: \'" + (_file$1 + "\'.")));
                                    var $13173 = $13174;
                                    break;
                                case 'List.cons':
                                    var $13175 = IO$monad$((_m$bind$10 => _m$pure$11 => {
                                        var $13176 = _m$bind$10;
                                        return $13176;
                                    }))(IO$print$(Kind$Defs$report$(_defs$7, _nams$6)))((_$10 => {
                                        var $13177 = Kind$Defs$cache$(_defs$7);
                                        return $13177;
                                    }));
                                    var $13173 = $13175;
                                    break;
                            };
                            var $13170 = $13173;
                            break;
                    };
                    var $13164 = $13170;
                    break;
            };
            return $13164;
        }));
        return $13162;
    };
    const Kind$api$io$check_file = x0 => Kind$api$io$check_file$(x0);

    function Kind$Synth$files$go$(_files$1, _defs$2) {
        var self = _files$1;
        switch (self._) {
            case 'List.cons':
                var $13179 = self.head;
                var $13180 = self.tail;
                var $13181 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                    var $13182 = _m$bind$5;
                    return $13182;
                }))(Kind$Synth$file$($13179, _defs$2))((_file_synth$5 => {
                    var self = _file_synth$5;
                    switch (self._) {
                        case 'Either.right':
                            var $13184 = self.value;
                            var _nams$7 = Pair$fst$($13184);
                            var _defs$8 = Pair$snd$($13184);
                            var $13185 = IO$monad$((_m$bind$9 => _m$pure$10 => {
                                var $13186 = _m$bind$9;
                                return $13186;
                            }))(Kind$Synth$files$go$($13180, _defs$8))((_rest$9 => {
                                var _nams$10 = List$concat$(_nams$7, Pair$fst$(_rest$9));
                                var _defs$11 = Pair$snd$(_rest$9);
                                var $13187 = IO$monad$((_m$bind$12 => _m$pure$13 => {
                                    var $13188 = _m$pure$13;
                                    return $13188;
                                }))(Pair$new$(_nams$10, _defs$11));
                                return $13187;
                            }));
                            var $13183 = $13185;
                            break;
                        case 'Either.left':
                            var $13189 = Kind$Synth$files$go$($13180, _defs$2);
                            var $13183 = $13189;
                            break;
                    };
                    return $13183;
                }));
                var $13178 = $13181;
                break;
            case 'List.nil':
                var $13190 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $13191 = _m$pure$4;
                    return $13191;
                }))(Pair$new$(List$nil, _defs$2));
                var $13178 = $13190;
                break;
        };
        return $13178;
    };
    const Kind$Synth$files$go = x0 => x1 => Kind$Synth$files$go$(x0, x1);

    function Kind$Synth$remove_duplicate_names$(_names$1) {
        var _map$2 = List$fold$(_names$1, Kind$Map$new, (_name$2 => {
            var $13193 = Kind$Map$set(_name$2)(Unit$new);
            return $13193;
        }));
        var $13192 = List$mapped$(BitsMap$keys$(_map$2), Kind$Name$from_bits);
        return $13192;
    };
    const Kind$Synth$remove_duplicate_names = x0 => Kind$Synth$remove_duplicate_names$(x0);

    function Kind$Synth$files$(_files$1, _defs$2) {
        var $13194 = IO$monad$((_m$bind$3 => _m$pure$4 => {
            var $13195 = _m$bind$3;
            return $13195;
        }))(Kind$Synth$files$go$(_files$1, _defs$2))((_got$3 => {
            var _nams$4 = Kind$Synth$remove_duplicate_names$(Pair$fst$(_got$3));
            var _defs$5 = Pair$snd$(_got$3);
            var $13196 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                var $13197 = _m$pure$7;
                return $13197;
            }))(Pair$new$(_nams$4, _defs$5));
            return $13196;
        }));
        return $13194;
    };
    const Kind$Synth$files = x0 => x1 => Kind$Synth$files$(x0, x1);

    function Kind$api$io$check_files$(_files$1) {
        var $13198 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13199 = _m$bind$2;
            return $13199;
        }))(Kind$Synth$files$(_files$1, Kind$Map$new))((_loaded$2 => {
            var _nams$3 = Pair$fst$(_loaded$2);
            var _defs$4 = Pair$snd$(_loaded$2);
            var self = _nams$3;
            switch (self._) {
                case 'List.nil':
                    var $13201 = IO$print$("No valid Kind file found.");
                    var $13200 = $13201;
                    break;
                case 'List.cons':
                    var $13202 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                        var $13203 = _m$bind$7;
                        return $13203;
                    }))(IO$print$(Kind$Defs$report$(_defs$4, _nams$3)))((_$7 => {
                        var $13204 = Kind$Defs$cache$(_defs$4);
                        return $13204;
                    }));
                    var $13200 = $13202;
                    break;
            };
            return $13200;
        }));
        return $13198;
    };
    const Kind$api$io$check_files = x0 => Kind$api$io$check_files$(x0);

    function Kind$api$io$check_term$(_name$1) {
        var $13205 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13206 = _m$bind$2;
            return $13206;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_defs$2 => {
            var self = _defs$2;
            switch (self._) {
                case 'Maybe.some':
                    var $13208 = self.value;
                    var $13209 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $13210 = _m$bind$4;
                        return $13210;
                    }))(IO$print$(Kind$Defs$report$($13208, List$cons$(_name$1, List$nil))))((_$4 => {
                        var $13211 = Kind$Defs$cache$($13208);
                        return $13211;
                    }));
                    var $13207 = $13209;
                    break;
                case 'Maybe.none':
                    var _notfound$3 = ("Term not found: \'" + (_name$1 + "\'."));
                    var _filelist$4 = List$mapped$(Kind$Synth$files_of$(_name$1), (_x$4 => {
                        var $13213 = ("\'" + (_x$4 + "\'"));
                        return $13213;
                    }));
                    var _searched$5 = ("Searched on: " + (String$join$(", ", _filelist$4) + "."));
                    var $13212 = IO$print$((_notfound$3 + ("\u{a}" + _searched$5)));
                    var $13207 = $13212;
                    break;
            };
            return $13207;
        }));
        return $13205;
    };
    const Kind$api$io$check_term = x0 => Kind$api$io$check_term$(x0);

    function Kind$api$io$show_term$(_name$1) {
        var $13214 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13215 = _m$bind$2;
            return $13215;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_new_defs$2 => {
            var $13216 = IO$print$((() => {
                var self = _new_defs$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $13217 = self.value;
                        var _defs$4 = $13217;
                        var _defn$5 = Kind$Map$get$(_name$1, _defs$4);
                        var self = _defn$5;
                        switch (self._) {
                            case 'Maybe.some':
                                var $13219 = self.value;
                                var self = $13219;
                                switch (self._) {
                                    case 'Kind.Def.new':
                                        var $13221 = self.term;
                                        var _term$16 = $13221;
                                        var $13222 = Kind$Term$show$(_term$16);
                                        var $13220 = $13222;
                                        break;
                                };
                                var $13218 = $13220;
                                break;
                            case 'Maybe.none':
                                var $13223 = ("Term not found: \'" + (_name$1 + "\'."));
                                var $13218 = $13223;
                                break;
                        };
                        return $13218;
                    case 'Maybe.none':
                        var _notfound$3 = ("Term not found: \'" + (_name$1 + "\'."));
                        var _filelist$4 = List$mapped$(Kind$Synth$files_of$(_name$1), (_x$4 => {
                            var $13225 = ("\'" + (_x$4 + "\'"));
                            return $13225;
                        }));
                        var _searched$5 = ("Searched on: " + (String$join$(", ", _filelist$4) + "."));
                        var $13224 = (_notfound$3 + ("\u{a}" + _searched$5));
                        return $13224;
                };
            })());
            return $13216;
        }));
        return $13214;
    };
    const Kind$api$io$show_term = x0 => Kind$api$io$show_term$(x0);

    function Kind$api$io$show_term_normal$(_name$1) {
        var $13226 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13227 = _m$bind$2;
            return $13227;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_new_defs$2 => {
            var $13228 = IO$print$((() => {
                var self = _new_defs$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $13229 = self.value;
                        var _defs$4 = $13229;
                        var _defn$5 = Kind$Map$get$(_name$1, _defs$4);
                        var self = _defn$5;
                        switch (self._) {
                            case 'Maybe.some':
                                var $13231 = self.value;
                                var self = $13231;
                                switch (self._) {
                                    case 'Kind.Def.new':
                                        var $13233 = self.term;
                                        var _term$16 = $13233;
                                        var _norm$17 = Kind$Term$normalize$(_term$16, _defs$4);
                                        var $13234 = Kind$Term$show$(_norm$17);
                                        var $13232 = $13234;
                                        break;
                                };
                                var $13230 = $13232;
                                break;
                            case 'Maybe.none':
                                var $13235 = ("Term not found: \'" + (_name$1 + "\'."));
                                var $13230 = $13235;
                                break;
                        };
                        return $13230;
                    case 'Maybe.none':
                        var _notfound$3 = ("Term not found: \'" + (_name$1 + "\'."));
                        var _filelist$4 = List$mapped$(Kind$Synth$files_of$(_name$1), (_x$4 => {
                            var $13237 = ("\'" + (_x$4 + "\'"));
                            return $13237;
                        }));
                        var _searched$5 = ("Searched on: " + (String$join$(", ", _filelist$4) + "."));
                        var $13236 = (_notfound$3 + ("\u{a}" + _searched$5));
                        return $13236;
                };
            })());
            return $13228;
        }));
        return $13226;
    };
    const Kind$api$io$show_term_normal = x0 => Kind$api$io$show_term_normal$(x0);

    function IO$purify$(_io$2) {
        var IO$purify$ = (_io$2) => ({
            ctr: 'TCO',
            arg: [_io$2]
        });
        var IO$purify = _io$2 => IO$purify$(_io$2);
        var arg = [_io$2];
        while (true) {
            let [_io$2] = arg;
            var R = (() => {
                var self = _io$2;
                switch (self._) {
                    case 'IO.end':
                        var $13238 = self.value;
                        var $13239 = $13238;
                        return $13239;
                    case 'IO.ask':
                        var $13240 = self.then;
                        var $13241 = IO$purify$($13240(""));
                        return $13241;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const IO$purify = x0 => IO$purify$(x0);

    function Kind$api$check_code$(_code$1) {
        var self = Kind$Defs$read$("Main.kind", _code$1, Kind$Map$new);
        switch (self._) {
            case 'Either.left':
                var $13243 = self.value;
                var $13244 = $13243;
                var $13242 = $13244;
                break;
            case 'Either.right':
                var $13245 = self.value;
                var $13246 = IO$purify$((() => {
                    var _defs$3 = $13245;
                    var _nams$4 = List$mapped$(BitsMap$keys$(_defs$3), Kind$Name$from_bits);
                    var $13247 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                        var $13248 = _m$bind$5;
                        return $13248;
                    }))(Kind$Synth$many$(_nams$4, _defs$3))((_defs$5 => {
                        var $13249 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                            var $13250 = _m$pure$7;
                            return $13250;
                        }))(Kind$Defs$report$(_defs$5, _nams$4));
                        return $13249;
                    }));
                    return $13247;
                })());
                var $13242 = $13246;
                break;
        };
        return $13242;
    };
    const Kind$api$check_code = x0 => Kind$api$check_code$(x0);

    function Kind$Term$read$(_code$1) {
        var self = Kind$Parser$term(Parser$State$new$(Maybe$none, "", 0n, 0n, _code$1));
        switch (self._) {
            case 'Parser.Reply.value':
                var $13252 = self.val;
                var $13253 = Maybe$some$($13252);
                var $13251 = $13253;
                break;
            case 'Parser.Reply.error':
                var $13254 = Maybe$none;
                var $13251 = $13254;
                break;
        };
        return $13251;
    };
    const Kind$Term$read = x0 => Kind$Term$read$(x0);
    const Kind$api$export = (() => {
        var _e$1 = Kind$api$io$term_to_core;
        var _e$2 = Kind$api$io$term_to_scheme;
        var _e$3 = Kind$api$io$terms_to_scheme_lib;
        var _e$4 = Kind$api$io$check_file;
        var _e$5 = Kind$api$io$check_files;
        var _e$6 = Kind$api$io$check_term;
        var _e$7 = Kind$api$io$show_term;
        var _e$8 = Kind$api$io$show_term_normal;
        var _e$9 = Kind$api$check_code;
        var _e$10 = Kind$Term$read;
        var $13255 = IO$monad$((_m$bind$11 => _m$pure$12 => {
            var $13256 = _m$pure$12;
            return $13256;
        }))(Unit$new);
        return $13255;
    })();
    return {
        '$main$': () => run(Kind$api$export),
        'run': run,
        'IO': IO,
        'IO.ask': IO$ask,
        'IO.bind': IO$bind,
        'IO.end': IO$end,
        'IO.monad': IO$monad,
        'Maybe': Maybe,
        'BitsMap': BitsMap,
        'Maybe.none': Maybe$none,
        'BitsMap.get': BitsMap$get,
        'Bits.e': Bits$e,
        'Bits.o': Bits$o,
        'Bits.i': Bits$i,
        'Bool.true': Bool$true,
        'Bool.false': Bool$false,
        'Cmp.as_ltn': Cmp$as_ltn,
        'Cmp.ltn': Cmp$ltn,
        'Cmp.gtn': Cmp$gtn,
        'Word.cmp.go': Word$cmp$go,
        'Cmp.eql': Cmp$eql,
        'Word.cmp': Word$cmp,
        'Word.ltn': Word$ltn,
        'Nat.succ': Nat$succ,
        'Nat.zero': Nat$zero,
        'U16.ltn': U16$ltn,
        'U16.new': U16$new,
        'Nat.apply': Nat$apply,
        'Word': Word,
        'Word.e': Word$e,
        'Word.i': Word$i,
        'Word.o': Word$o,
        'Word.inc': Word$inc,
        'Word.zero': Word$zero,
        'Nat.to_word': Nat$to_word,
        'Nat.to_u16': Nat$to_u16,
        'Kind.Name.to_bits': Kind$Name$to_bits,
        'Kind.Map.get': Kind$Map$get,
        'Maybe.default': Maybe$default,
        'Parser.State.new': Parser$State$new,
        'Maybe.some': Maybe$some,
        'Parser.run': Parser$run,
        'Parser.Reply': Parser$Reply,
        'List': List,
        'Parser.Reply.error': Parser$Reply$error,
        'Nat.gtn': Nat$gtn,
        'Parser.Error.combine': Parser$Error$combine,
        'Parser.Error.maybe_combine': Parser$Error$maybe_combine,
        'Parser.Reply.value': Parser$Reply$value,
        'List.nil': List$nil,
        'List.cons': List$cons,
        'Parser.many.go': Parser$many$go,
        'Parser.many': Parser$many,
        'Parser.many1': Parser$many1,
        'Parser.Error.new': Parser$Error$new,
        'Parser.Reply.fail': Parser$Reply$fail,
        'Cmp.as_eql': Cmp$as_eql,
        'Word.eql': Word$eql,
        'U16.eql': U16$eql,
        'Parser.digit': Parser$digit,
        'Nat.add': Nat$add,
        'Nat.mul': Nat$mul,
        'Nat.from_base.go': Nat$from_base$go,
        'List.reverse.go': List$reverse$go,
        'List.reverse': List$reverse,
        'Nat.from_base': Nat$from_base,
        'Parser.nat': Parser$nat,
        'Nat.read': Nat$read,
        'IO.get_time': IO$get_time,
        'Kind.Synth.load.cached.is_loop': Kind$Synth$load$cached$is_loop,
        'IO.get_file': IO$get_file,
        'String.nil': String$nil,
        'String.cons': String$cons,
        'String.map': String$map,
        'Bool.and': Bool$and,
        'Cmp.as_gte': Cmp$as_gte,
        'Word.gte': Word$gte,
        'U16.gte': U16$gte,
        'Cmp.as_lte': Cmp$as_lte,
        'Word.lte': Word$lte,
        'U16.lte': U16$lte,
        'Word.adder': Word$adder,
        'Word.add': Word$add,
        'U16.add': U16$add,
        'Char.to_lower': Char$to_lower,
        'String.to_lower': String$to_lower,
        'String.concat': String$concat,
        'Bool.not': Bool$not,
        'String.is_empty': String$is_empty,
        'IO.get_file_mtime': IO$get_file_mtime,
        'String.eql': String$eql,
        'Pair.new': Pair$new,
        'Maybe.bind': Maybe$bind,
        'Maybe.monad': Maybe$monad,
        'Pair': Pair,
        'Unit.new': Unit$new,
        'Bool.or': Bool$or,
        'Kind.Core.read.spaces': Kind$Core$read$spaces,
        'Kind.Term.ref': Kind$Term$ref,
        'Char.eql': Char$eql,
        'Kind.Term.typ': Kind$Term$typ,
        'Kind.Core.read.is_name': Kind$Core$read$is_name,
        'Kind.Core.read.name': Kind$Core$read$name,
        'Kind.Core.read.char': Kind$Core$read$char,
        'Kind.Term.all': Kind$Term$all,
        'Kind.Term.lam': Kind$Term$lam,
        'Kind.Term.app': Kind$Term$app,
        'Kind.Term.let': Kind$Term$let,
        'Kind.Term.def': Kind$Term$def,
        'Kind.Term.ann': Kind$Term$ann,
        'String.starts_with': String$starts_with,
        'String.drop': String$drop,
        'Char.is_hex': Char$is_hex,
        'Word.shift_left.one.go': Word$shift_left$one$go,
        'Word.shift_left.one': Word$shift_left$one,
        'Word.shift_left': Word$shift_left,
        'Word.mul.go': Word$mul$go,
        'Word.to_zero': Word$to_zero,
        'Word.mul': Word$mul,
        'U16.mul': U16$mul,
        'U16.inc': U16$inc,
        'Word.subber': Word$subber,
        'Word.sub': Word$sub,
        'U16.sub': U16$sub,
        'U16.zero': U16$zero,
        'Char.hex_value16': Char$hex_value16,
        'Kind.Core.read.u16': Kind$Core$read$u16,
        'Kind.Core.read.chrx': Kind$Core$read$chrx,
        'Kind.Term.chr': Kind$Term$chr,
        'Kind.Core.read.strx': Kind$Core$read$strx,
        'Kind.Term.str': Kind$Term$str,
        'Char.dec_value': Char$dec_value,
        'Kind.Core.read.natx': Kind$Core$read$natx,
        'Kind.Term.nat': Kind$Term$nat,
        'Pair.fst': Pair$fst,
        'Nat.eql': Nat$eql,
        'Nat.pred': Nat$pred,
        'Kind.Core.read.find': Kind$Core$read$find,
        'Pair.snd': Pair$snd,
        'Kind.Core.read.term': Kind$Core$read$term,
        'Kind.Core.read': Kind$Core$read,
        'Bool.read': Bool$read,
        'Kind.Status.done': Kind$Status$done,
        'Kind.Def.new': Kind$Def$new,
        'Kind.Synth.load.cached.def': Kind$Synth$load$cached$def,
        'BitsMap.tie': BitsMap$tie,
        'BitsMap.new': BitsMap$new,
        'BitsMap.set': BitsMap$set,
        'Kind.Map.set': Kind$Map$set,
        'Kind.Map.new': Kind$Map$new,
        'Kind.Map': Kind$Map,
        'Kind.Core.dependencies.go': Kind$Core$dependencies$go,
        'List.mapped': List$mapped,
        'Bits.reverse.tco': Bits$reverse$tco,
        'Bits.reverse': Bits$reverse,
        'BitsMap.to_list.go': BitsMap$to_list$go,
        'Kind.Name.from_bits': Kind$Name$from_bits,
        'Kind.Map.to_list': Kind$Map$to_list,
        'Kind.Map.keys': Kind$Map$keys,
        'Kind.Synth.load.cached': Kind$Synth$load$cached,
        'IO.request': IO$request,
        'Kind.Synth.get_kind_code': Kind$Synth$get_kind_code,
        'Parser.is_eof': Parser$is_eof,
        'Parser': Parser,
        'Parser.choice': Parser$choice,
        'Parser.text.go': Parser$text$go,
        'Parser.text': Parser$text,
        'Parser.eof': Parser$eof,
        'Parser.until.go': Parser$until$go,
        'Parser.until': Parser$until,
        'Parser.one': Parser$one,
        'Kind.Parser.comment': Kind$Parser$comment,
        'Kind.Parser.spaces': Kind$Parser$spaces,
        'Parser.get_idx': Parser$get_idx,
        'U16.btw': U16$btw,
        'Kind.Name.is_letter': Kind$Name$is_letter,
        'Kind.Parser.letter': Kind$Parser$letter,
        'List.fold': List$fold,
        'Parser.fail': Parser$fail,
        'String.head': String$head,
        'Kind.Parser.name1': Kind$Parser$name1,
        'Parser.until1': Parser$until1,
        'Parser.wrap1': Parser$wrap1,
        'Kind.Parser.text': Kind$Parser$text,
        'Parser.maybe': Parser$maybe,
        'Kind.Parser.items1': Kind$Parser$items1,
        'Kind.Parser.name': Kind$Parser$name,
        'Kind.Term.ori': Kind$Term$ori,
        'Kind.Parser.block': Kind$Parser$block,
        'Kind.Parser.dom.prop': Kind$Parser$dom$prop,
        'Kind.Term.hol': Kind$Term$hol,
        'Kind.Parser.dom.gen_prop.go': Kind$Parser$dom$gen_prop$go,
        'Kind.Parser.dom.gen_prop': Kind$Parser$dom$gen_prop,
        'Kind.Parser.dom.for': Kind$Parser$dom$for,
        'Kind.Parser.dom.dynamic': Kind$Parser$dom$dynamic,
        'Kind.Parser.dom.text': Kind$Parser$dom$text,
        'Kind.Parser.dom.leaf': Kind$Parser$dom$leaf,
        'Kind.Parser.dom.transform_children': Kind$Parser$dom$transform_children,
        'Kind.Parser.dom.node': Kind$Parser$dom$node,
        'Kind.Parser.dom': Kind$Parser$dom,
        'Kind.Parser.forall': Kind$Parser$forall,
        'Parser.wrap': Parser$wrap,
        'Kind.Parser.items': Kind$Parser$items,
        'Kind.Parser.lambda.make': Kind$Parser$lambda$make,
        'Kind.Parser.lambda.make.start': Kind$Parser$lambda$make$start,
        'Kind.Parser.lambda': Kind$Parser$lambda,
        'Kind.Parser.lambda.erased': Kind$Parser$lambda$erased,
        'Kind.Parser.parenthesis': Kind$Parser$parenthesis,
        'Kind.Parser.letforrange': Kind$Parser$letforrange,
        'Kind.Parser.letforrange.u32': Kind$Parser$letforrange$u32,
        'Kind.Parser.letforrange.with': Kind$Parser$letforrange$with,
        'Kind.Parser.letforrange.u32.with': Kind$Parser$letforrange$u32$with,
        'Kind.Parser.letforrange.i32': Kind$Parser$letforrange$i32,
        'Kind.Parser.letforrange.i32.with': Kind$Parser$letforrange$i32$with,
        'Kind.Parser.letforrange.nat': Kind$Parser$letforrange$nat,
        'Kind.Parser.letforrange.nat.with': Kind$Parser$letforrange$nat$with,
        'Kind.Parser.letforin': Kind$Parser$letforin,
        'Kind.Parser.letforin.with': Kind$Parser$letforin$with,
        'Kind.Parser.letwhile': Kind$Parser$letwhile,
        'Kind.Parser.letwhile.with': Kind$Parser$letwhile$with,
        'Kind.Parser.let': Kind$Parser$let,
        'Kind.Parser.let.omit': Kind$Parser$let$omit,
        'Kind.Parser.getwhile': Kind$Parser$getwhile,
        'Kind.Parser.getwhile.with': Kind$Parser$getwhile$with,
        'Kind.Parser.get': Kind$Parser$get,
        'Kind.Parser.get.omit': Kind$Parser$get$omit,
        'Kind.Parser.def': Kind$Parser$def,
        'Kind.Parser.goal_rewrite': Kind$Parser$goal_rewrite,
        'Kind.Parser.if': Kind$Parser$if,
        'Kind.Code.backslash': Kind$Code$backslash,
        'Kind.Code.escapes': Kind$Code$escapes,
        'Kind.Parser.char.single': Kind$Parser$char$single,
        'Kind.Parser.char': Kind$Parser$char,
        'String.reverse.go': String$reverse$go,
        'String.reverse': String$reverse,
        'Kind.Parser.string.go': Kind$Parser$string$go,
        'Kind.Parser.string': Kind$Parser$string,
        'Kind.Term.new': Kind$Term$new,
        'Kind.Parser.new': Kind$Parser$new,
        'Kind.Parser.sigma.type': Kind$Parser$sigma$type,
        'Kind.Parser.some': Kind$Parser$some,
        'Kind.Parser.not': Kind$Parser$not,
        'Kind.Parser.left': Kind$Parser$left,
        'Kind.Parser.right': Kind$Parser$right,
        'Kind.Parser.apply': Kind$Parser$apply,
        'Kind.Parser.chain': Kind$Parser$chain,
        'Kind.Parser.mirror': Kind$Parser$mirror,
        'Kind.Name.read': Kind$Name$read,
        'Kind.Parser.list': Kind$Parser$list,
        'Kind.Parser.map': Kind$Parser$map,
        'Kind.Parser.log': Kind$Parser$log,
        'Char.to_upper': Char$to_upper,
        'String.to_upper': String$to_upper,
        'String.is_upper': String$is_upper,
        'String.take': String$take,
        'Nat.sub': Nat$sub,
        'String.slice': String$slice,
        'Kind.Term.unroll_nat': Kind$Term$unroll_nat,
        'Word.to_bits': Word$to_bits,
        'U16.to_bits': U16$to_bits,
        'Kind.Term.unroll_chr.bits': Kind$Term$unroll_chr$bits,
        'Kind.Term.unroll_chr': Kind$Term$unroll_chr,
        'Kind.Term.unroll_str': Kind$Term$unroll_str,
        'Kind.Term.reduce': Kind$Term$reduce,
        'Kind.Term.cse': Kind$Term$cse,
        'Kind.Parser.open': Kind$Parser$open,
        'Kind.Parser.do.statements': Kind$Parser$do$statements,
        'Kind.Parser.do': Kind$Parser$do,
        'Parser.try': Parser$try,
        'Parser.avoiding': Parser$avoiding,
        'Kind.Term.extract_name': Kind$Term$extract_name,
        'Kind.Ann.new': Kind$Ann$new,
        'Kind.Parser.case.with': Kind$Parser$case$with,
        'Kind.Parser.case.case': Kind$Parser$case$case,
        'Parser.append_error': Parser$append_error,
        'Kind.Parser.case.group': Kind$Parser$case$group,
        'BitsMap.map': BitsMap$map,
        'Kind.Map.map': Kind$Map$map,
        'Kind.Parser.case.build': Kind$Parser$case$build,
        'Kind.Parser.case': Kind$Parser$case,
        'Kind.Parser.without': Kind$Parser$without,
        'Kind.Parser.switch.case': Kind$Parser$switch$case,
        'Kind.Parser.switch': Kind$Parser$switch,
        'Bits.tail': Bits$tail,
        'Bits.inc': Bits$inc,
        'Nat.to_bits': Nat$to_bits,
        'Maybe.is_some': Maybe$is_some,
        'Kind.Term.gol': Kind$Term$gol,
        'Kind.Parser.goal': Kind$Parser$goal,
        'Kind.Parser.hole': Kind$Parser$hole,
        'Kind.Parser.float.sign': Kind$Parser$float$sign,
        'List.any': List$any,
        'Kind.Parser.float.str_digit': Kind$Parser$float$str_digit,
        'String.from_list': String$from_list,
        'Kind.Parser.float.64': Kind$Parser$float$64,
        'Kind.Parser.float.32': Kind$Parser$float$32,
        'Either': Either,
        'Either.left': Either$left,
        'Either.right': Either$right,
        'Nat.sub_rem': Nat$sub_rem,
        'Nat.div_mod.go': Nat$div_mod$go,
        'Nat.div_mod': Nat$div_mod,
        'Nat.to_base.go': Nat$to_base$go,
        'Nat.to_base': Nat$to_base,
        'Nat.mod.go': Nat$mod$go,
        'Nat.mod': Nat$mod,
        'Nat.lte': Nat$lte,
        'List.at': List$at,
        'Nat.show_digit': Nat$show_digit,
        'Nat.to_string_base': Nat$to_string_base,
        'Nat.show': Nat$show,
        'Kind.Parser.int_pos': Kind$Parser$int_pos,
        'Kind.Parser.int_neg': Kind$Parser$int_neg,
        'Kind.Parser.machine_integer.signed': Kind$Parser$machine_integer$signed,
        'Parser.hex_digit': Parser$hex_digit,
        'Parser.hex_nat': Parser$hex_nat,
        'Kind.Parser.nat': Kind$Parser$nat,
        'Kind.Parser.machine_integer.unsigned': Kind$Parser$machine_integer$unsigned,
        'Kind.Parser.u64': Kind$Parser$u64,
        'Kind.Parser.u32': Kind$Parser$u32,
        'Kind.Parser.u16': Kind$Parser$u16,
        'Kind.Parser.u8': Kind$Parser$u8,
        'Parser.Number.new': Parser$Number$new,
        'Parser.num': Parser$num,
        'Kind.Term.num': Kind$Term$num,
        'Kind.Parser.num': Kind$Parser$num,
        'Kind.Parser.reference': Kind$Parser$reference,
        'Kind.Parser.text_now': Kind$Parser$text_now,
        'Kind.Parser.items_now': Kind$Parser$items_now,
        'List.for': List$for,
        'Kind.Parser.application': Kind$Parser$application,
        'Kind.Parser.application.erased': Kind$Parser$application$erased,
        'Kind.Parser.list_set': Kind$Parser$list_set,
        'Kind.Parser.list_get': Kind$Parser$list_get,
        'Kind.Parser.map_set': Kind$Parser$map_set,
        'Kind.Parser.map_get': Kind$Parser$map_get,
        'Kind.Term.set': Kind$Term$set,
        'Kind.Parser.field_set': Kind$Parser$field_set,
        'Kind.Term.get': Kind$Term$get,
        'Kind.Parser.field_get': Kind$Parser$field_get,
        'Kind.Parser.arrow': Kind$Parser$arrow,
        'Kind.Parser.concat': Kind$Parser$concat,
        'Kind.Parser.equality': Kind$Parser$equality,
        'Kind.Term.ope': Kind$Term$ope,
        'Kind.Parser.op': Kind$Parser$op,
        'Kind.Parser.add': Kind$Parser$add,
        'Kind.Parser.sub': Kind$Parser$sub,
        'Kind.Parser.mul': Kind$Parser$mul,
        'Kind.Parser.div': Kind$Parser$div,
        'Kind.Parser.mod': Kind$Parser$mod,
        'Kind.Parser.ltn': Kind$Parser$ltn,
        'Kind.Parser.lte': Kind$Parser$lte,
        'Kind.Parser.eql': Kind$Parser$eql,
        'Kind.Parser.gte': Kind$Parser$gte,
        'Kind.Parser.gtn': Kind$Parser$gtn,
        'Kind.Parser.and': Kind$Parser$and,
        'Kind.Parser.or': Kind$Parser$or,
        'Kind.Parser.default': Kind$Parser$default,
        'Kind.Parser.cons': Kind$Parser$cons,
        'Kind.Parser.string_concat': Kind$Parser$string_concat,
        'Kind.Parser.sigma': Kind$Parser$sigma,
        'Kind.Parser.inequality': Kind$Parser$inequality,
        'Kind.Parser.rewrite': Kind$Parser$rewrite,
        'Kind.Parser.annotation': Kind$Parser$annotation,
        'Kind.Parser.application.hole': Kind$Parser$application$hole,
        'Kind.Parser.term.suffix': Kind$Parser$term$suffix,
        'Kind.Parser.term': Kind$Parser$term,
        'Kind.Parser.name_term': Kind$Parser$name_term,
        'Kind.Binder.new': Kind$Binder$new,
        'Kind.Parser.binder.homo': Kind$Parser$binder$homo,
        'List.concat': List$concat,
        'List.flatten': List$flatten,
        'Kind.Parser.binder': Kind$Parser$binder,
        'List.length': List$length,
        'Kind.Parser.forall.make': Kind$Parser$forall$make,
        'List.at_last': List$at_last,
        'Kind.Term.var': Kind$Term$var,
        'Kind.Context.get_name_skips': Kind$Context$get_name_skips,
        'Kind.Name.eql': Kind$Name$eql,
        'Kind.Context.find.go': Kind$Context$find$go,
        'Kind.Context.find': Kind$Context$find,
        'Kind.Path.o': Kind$Path$o,
        'Kind.Path.i': Kind$Path$i,
        'Kind.Path.to_bits': Kind$Path$to_bits,
        'Kind.Term.bind': Kind$Term$bind,
        'Trampoline.call': Trampoline$call,
        'Trampoline': Trampoline,
        'Trampoline.wrap': Trampoline$wrap,
        'BitsMap.set_if_empty.cps.go': BitsMap$set_if_empty$cps$go,
        'Trampoline.done': Trampoline$done,
        'BitsMap.set_if_empty.cps': BitsMap$set_if_empty$cps,
        'BitsMap.set_if_empty': BitsMap$set_if_empty,
        'Kind.Map.set_if_empty': Kind$Map$set_if_empty,
        'Kind.Status.init': Kind$Status$init,
        'Kind.Map.def': Kind$Map$def,
        'Kind.Parser.file.def': Kind$Parser$file$def,
        'Kind.Parser.ADT.Constructor.new': Kind$Parser$ADT$Constructor$new,
        'Kind.Parser.ADT.ctor': Kind$Parser$ADT$ctor,
        'Kind.Parser.ADT.Datatype.new': Kind$Parser$ADT$Datatype$new,
        'Kind.Parser.ADT.adt': Kind$Parser$ADT$adt,
        'Kind.Parser.ADT.Datatype.build_term.motive.go': Kind$Parser$ADT$Datatype$build_term$motive$go,
        'Kind.Parser.ADT.Datatype.build_term.motive': Kind$Parser$ADT$Datatype$build_term$motive,
        'String.flatten.go': String$flatten$go,
        'String.flatten': String$flatten,
        'Kind.Parser.ADT.Datatype.build_term.constructor.go': Kind$Parser$ADT$Datatype$build_term$constructor$go,
        'Kind.Parser.ADT.Datatype.build_term.constructor': Kind$Parser$ADT$Datatype$build_term$constructor,
        'Kind.Parser.ADT.Datatype.build_term.constructors.go': Kind$Parser$ADT$Datatype$build_term$constructors$go,
        'Kind.Parser.ADT.Datatype.build_term.constructors': Kind$Parser$ADT$Datatype$build_term$constructors,
        'Kind.Parser.ADT.Datatype.build_term.go': Kind$Parser$ADT$Datatype$build_term$go,
        'Kind.Parser.ADT.Datatype.build_term': Kind$Parser$ADT$Datatype$build_term,
        'Kind.Parser.ADT.Datatype.build_type.go': Kind$Parser$ADT$Datatype$build_type$go,
        'Kind.Parser.ADT.Datatype.build_type': Kind$Parser$ADT$Datatype$build_type,
        'Kind.Parser.ADT.Constructor.build_term.opt.go': Kind$Parser$ADT$Constructor$build_term$opt$go,
        'Kind.Parser.ADT.Constructor.build_term.opt': Kind$Parser$ADT$Constructor$build_term$opt,
        'Kind.Parser.ADT.Constructor.build_term.go': Kind$Parser$ADT$Constructor$build_term$go,
        'Kind.Parser.ADT.Constructor.build_term': Kind$Parser$ADT$Constructor$build_term,
        'Kind.Parser.ADT.Constructor.build_type.go': Kind$Parser$ADT$Constructor$build_type$go,
        'Kind.Parser.ADT.Constructor.build_type': Kind$Parser$ADT$Constructor$build_type,
        'List.is_empty': List$is_empty,
        'Kind.Term.get_args.go': Kind$Term$get_args$go,
        'Kind.Term.get_args': Kind$Term$get_args,
        'Kind.Parser.ADT.Derive.stringifier.term.cont': Kind$Parser$ADT$Derive$stringifier$term$cont,
        'Kind.Parser.ADT.Derive.stringifier.term.args': Kind$Parser$ADT$Derive$stringifier$term$args,
        'Kind.Parser.ADT.Derive.stringifier.ctr': Kind$Parser$ADT$Derive$stringifier$ctr,
        'Kind.Parser.ADT.Derive.stringifier.term.ctrs': Kind$Parser$ADT$Derive$stringifier$term$ctrs,
        'Kind.Parser.ADT.Derive.stringifier.term': Kind$Parser$ADT$Derive$stringifier$term,
        'Kind.Parser.ADT.Derive.stringifier.type': Kind$Parser$ADT$Derive$stringifier$type,
        'Kind.Parser.ADT.Derived.new': Kind$Parser$ADT$Derived$new,
        'Kind.Parser.ADT.Derive.parser.term.cont': Kind$Parser$ADT$Derive$parser$term$cont,
        'Kind.Parser.ADT.Derive.parser.term.args': Kind$Parser$ADT$Derive$parser$term$args,
        'Kind.Parser.ADT.Derive.parser.term.cses': Kind$Parser$ADT$Derive$parser$term$cses,
        'Kind.Parser.ADT.Derive.parser.term': Kind$Parser$ADT$Derive$parser$term,
        'Kind.Parser.ADT.Derive.parser.type': Kind$Parser$ADT$Derive$parser$type,
        'Kind.Parser.ADT.Derive.serializer.term.cont': Kind$Parser$ADT$Derive$serializer$term$cont,
        'Kind.Parser.ADT.Derive.serializer.term.args': Kind$Parser$ADT$Derive$serializer$term$args,
        'Kind.Parser.ADT.Derive.serializer.ctr.bits': Kind$Parser$ADT$Derive$serializer$ctr$bits,
        'Kind.Parser.ADT.Derive.serializer.ctr': Kind$Parser$ADT$Derive$serializer$ctr,
        'Kind.Parser.ADT.Derive.serializer.term.ctrs': Kind$Parser$ADT$Derive$serializer$term$ctrs,
        'Bits.zeros': Bits$zeros,
        'Nat.div': Nat$div,
        'Nat.bitlen': Nat$bitlen,
        'Kind.Parser.ADT.Derive.serializer.term': Kind$Parser$ADT$Derive$serializer$term,
        'Kind.Parser.ADT.Derive.serializer.type': Kind$Parser$ADT$Derive$serializer$type,
        'Kind.Parser.ADT.Derive.serializer.term.bits': Kind$Parser$ADT$Derive$serializer$term$bits,
        'Kind.Parser.ADT.Derive.deserializer.term.cont': Kind$Parser$ADT$Derive$deserializer$term$cont,
        'Kind.Parser.ADT.Derive.deserializer.term.args': Kind$Parser$ADT$Derive$deserializer$term$args,
        'Kind.Parser.ADT.Derive.deserializer.term.cses': Kind$Parser$ADT$Derive$deserializer$term$cses,
        'Kind.Parser.ADT.Derive.deserializer.term': Kind$Parser$ADT$Derive$deserializer$term,
        'Kind.Parser.ADT.Derive.deserializer.type': Kind$Parser$ADT$Derive$deserializer$type,
        'Kind.Parser.ADT.Derive.by_name': Kind$Parser$ADT$Derive$by_name,
        'Kind.Parser.file.adt': Kind$Parser$file$adt,
        'Kind.Parser.file.end': Kind$Parser$file$end,
        'Kind.Parser.file': Kind$Parser$file,
        'String.join.go': String$join$go,
        'String.join': String$join,
        'Kind.Code.highlight.end': Kind$Code$highlight$end,
        'Maybe.extract': Maybe$extract,
        'Nat.is_zero': Nat$is_zero,
        'Nat.double': Nat$double,
        'String.pad_right': String$pad_right,
        'String.pad_left': String$pad_left,
        'Kind.Code.color': Kind$Code$color,
        'List.take': List$take,
        'Kind.Code.highlight.go': Kind$Code$highlight$go,
        'Kind.Code.highlight': Kind$Code$highlight,
        'Kind.Defs.read': Kind$Defs$read,
        'Kind.Synth.load.go': Kind$Synth$load$go,
        'Kind.Synth.files_of.make': Kind$Synth$files_of$make,
        'String.length.go': String$length$go,
        'String.length': String$length,
        'String.split.go': String$split$go,
        'String.split': String$split,
        'Kind.Synth.files_of': Kind$Synth$files_of,
        'Kind.Synth.load': Kind$Synth$load,
        'Kind.Status.wait': Kind$Status$wait,
        'Kind.Check': Kind$Check,
        'Kind.Check.result': Kind$Check$result,
        'Kind.Error.undefined_reference': Kind$Error$undefined_reference,
        'Kind.Error.waiting': Kind$Error$waiting,
        'Kind.Error.indirect': Kind$Error$indirect,
        'Maybe.mapped': Maybe$mapped,
        'Kind.MPath.o': Kind$MPath$o,
        'Kind.MPath.i': Kind$MPath$i,
        'Kind.Error.patch': Kind$Error$patch,
        'Kind.MPath.to_bits': Kind$MPath$to_bits,
        'Kind.Term.check.patch': Kind$Term$check$patch,
        'Kind.Error.type_mismatch': Kind$Error$type_mismatch,
        'Kind.Error.show_goal': Kind$Error$show_goal,
        'Kind.Path.nil': Kind$Path$nil,
        'Kind.MPath.nil': Kind$MPath$nil,
        'Kind.Term.check.direct': Kind$Term$check$direct,
        'Kind.Term.check.get_name_of_self_type.slice': Kind$Term$check$get_name_of_self_type$slice,
        'Kind.Term.check.get_name_of_self_type': Kind$Term$check$get_name_of_self_type,
        'Kind.Term.check.expand.num.nat': Kind$Term$check$expand$num$nat,
        'Kind.Term.check.expand.num.int': Kind$Term$check$expand$num$int,
        'Kind.Term.check.expand.num.other': Kind$Term$check$expand$num$other,
        'Kind.Term.check.expand.num': Kind$Term$check$expand$num,
        'Kind.Term.check.infer_types_of_with': Kind$Term$check$infer_types_of_with,
        'Kind.Term.normalize': Kind$Term$normalize,
        'Kind.Term.check.expand.cse.motive.go': Kind$Term$check$expand$cse$motive$go,
        'List.tail': List$tail,
        'Kind.Term.SmartMotive.vals.cont': Kind$Term$SmartMotive$vals$cont,
        'Kind.Term.SmartMotive.vals': Kind$Term$SmartMotive$vals,
        'Kind.Term.SmartMotive.nams.cont': Kind$Term$SmartMotive$nams$cont,
        'Kind.Term.SmartMotive.nams': Kind$Term$SmartMotive$nams,
        'List.zip': List$zip,
        'Nat.gte': Nat$gte,
        'Bits.concat': Bits$concat,
        'Kind.Term.serialize.go': Kind$Term$serialize$go,
        'Kind.Term.serialize': Kind$Term$serialize,
        'Bits.eql': Bits$eql,
        'Kind.Term.identical': Kind$Term$identical,
        'Kind.Term.SmartMotive.replace': Kind$Term$SmartMotive$replace,
        'Kind.Term.SmartMotive.make': Kind$Term$SmartMotive$make,
        'Kind.Term.check.expand.cse.motive': Kind$Term$check$expand$cse$motive,
        'Kind.Term.check.expand.cse.argument': Kind$Term$check$expand$cse$argument,
        'Maybe.or': Maybe$or,
        'Kind.Term.check.expand.cse.cases': Kind$Term$check$expand$cse$cases,
        'Kind.Term.check.expand.cse': Kind$Term$check$expand$cse,
        'Kind.Error.cant_infer': Kind$Error$cant_infer,
        'Kind.Term.check.cant_infer': Kind$Term$check$cant_infer,
        'Kind.Term.get_bnds': Kind$Term$get_bnds,
        'List.last.go': List$last$go,
        'List.last': List$last,
        'Kind.Term.check.expand.set.count_params': Kind$Term$check$expand$set$count_params,
        'Nat.for': Nat$for,
        'List.get': List$get,
        'Kind.Term.check.expand.new.pair': Kind$Term$check$expand$new$pair,
        'Kind.Term.check.expand.new': Kind$Term$check$expand$new,
        'Kind.Term.check.expand.get.selector': Kind$Term$check$expand$get$selector,
        'Kind.Term.check.expand.get': Kind$Term$check$expand$get,
        'Kind.Term.check.expand.set.selector': Kind$Term$check$expand$set$selector,
        'Kind.Term.check.expand.set': Kind$Term$check$expand$set,
        'String.at': String$at,
        'String.last': String$last,
        'Kind.Term.check.expand.ope': Kind$Term$check$expand$ope,
        'BitsSet.has': BitsSet$has,
        'BitsSet.mut.has': BitsSet$mut$has,
        'Kind.Term.equal.extra_holes.funari': Kind$Term$equal$extra_holes$funari,
        'Kind.Term.has_holes': Kind$Term$has_holes,
        'Kind.Term.equal.hole': Kind$Term$equal$hole,
        'Kind.Term.equal.extra_holes.filler': Kind$Term$equal$extra_holes$filler,
        'Kind.Term.equal.extra_holes': Kind$Term$equal$extra_holes,
        'BitsSet.set': BitsSet$set,
        'BitsSet.mut.set': BitsSet$mut$set,
        'Bool.eql': Bool$eql,
        'Kind.Term.equal.go': Kind$Term$equal$go,
        'BitsSet.new': BitsSet$new,
        'BitsSet.mut.new': BitsSet$mut$new,
        'Kind.Term.check': Kind$Term$check,
        'Kind.Term.patch_at': Kind$Term$patch_at,
        'Kind.Synth.fix': Kind$Synth$fix,
        'Kind.Status.fail': Kind$Status$fail,
        'Kind.Synth.one': Kind$Synth$one,
        'BitsMap.from_list': BitsMap$from_list,
        'Kind.Term.inline.names': Kind$Term$inline$names,
        'Kind.Term.inline.reduce': Kind$Term$inline$reduce,
        'Kind.Term.inline': Kind$Term$inline,
        'BitsMap.values.go': BitsMap$values$go,
        'BitsMap.values': BitsMap$values,
        'Kind.Core.var_name': Kind$Core$var_name,
        'Kind.Name.show': Kind$Name$show,
        'Bits.to_nat': Bits$to_nat,
        'U16.show_hex': U16$show_hex,
        'Kind.Code.escape.char': Kind$Code$escape$char,
        'Kind.Code.escape.go': Kind$Code$escape$go,
        'Kind.Code.escape': Kind$Code$escape,
        'Kind.Core.show.go': Kind$Core$show$go,
        'Kind.Core.show': Kind$Core$show,
        'Kind.Defs.core': Kind$Defs$core,
        'Kind.api.io.term_to_core': Kind$api$io$term_to_core,
        'Kind.Comp.Defs.compile.defn.adjust': Kind$Comp$Defs$compile$defn$adjust,
        'Kind.Comp.var': Kind$Comp$var,
        'Kind.Comp.nil': Kind$Comp$nil,
        'Kind.Comp.ref': Kind$Comp$ref,
        'Kind.Comp.Prim.bool': Kind$Comp$Prim$bool,
        'Kind.Comp.Prim.nat': Kind$Comp$Prim$nat,
        'Kind.Comp.Prim.u16': Kind$Comp$Prim$u16,
        'Kind.Comp.Prim.string': Kind$Comp$Prim$string,
        'Kind.Comp.Prim.natives': Kind$Comp$Prim$natives,
        'Kind.Term.equal': Kind$Term$equal,
        'Kind.Comp.compile.prim_of': Kind$Comp$compile$prim_of,
        'String.ends_with': String$ends_with,
        'Kind.Comp.compile.adt.get_fields': Kind$Comp$compile$adt$get_fields,
        'Kind.Comp.compile.adt.get_constructors': Kind$Comp$compile$adt$get_constructors,
        'Kind.Comp.Prim.data': Kind$Comp$Prim$data,
        'Kind.Comp.compile.adt': Kind$Comp$compile$adt,
        'Kind.Comp.eli': Kind$Comp$eli,
        'Kind.Comp.app': Kind$Comp$app,
        'Kind.Comp.let': Kind$Comp$let,
        'Kind.Comp.nat': Kind$Comp$nat,
        'Kind.Comp.chr': Kind$Comp$chr,
        'Kind.Comp.str': Kind$Comp$str,
        'Kind.Comp.lam': Kind$Comp$lam,
        'Kind.Comp.ins': Kind$Comp$ins,
        'Kind.Comp.compile': Kind$Comp$compile,
        'Kind.Comp.Defs.compile.defn': Kind$Comp$Defs$compile$defn,
        'Kind.Comp.Defs.compile': Kind$Comp$Defs$compile,
        'Kind.Comp.dependency_sort.go': Kind$Comp$dependency_sort$go,
        'Kind.Comp.dependency_sort': Kind$Comp$dependency_sort,
        'Kind.Comp.replace': Kind$Comp$replace,
        'List.create.go': List$create$go,
        'List.create': List$create,
        'Kind.Comp.Prim.instantiator.go': Kind$Comp$Prim$instantiator$go,
        'Kind.Comp.Prim.instantiator': Kind$Comp$Prim$instantiator,
        'Kind.Comp.get_args.go': Kind$Comp$get_args$go,
        'Kind.Comp.get_args': Kind$Comp$get_args,
        'Kind.Comp.get_arity': Kind$Comp$get_arity,
        'Kind.Comp.get_vars': Kind$Comp$get_vars,
        'Kind.Comp.Prim.inst.go': Kind$Comp$Prim$inst$go,
        'Kind.Comp.Prim.inst': Kind$Comp$Prim$inst,
        'Word.fold': Word$fold,
        'Word.to_nat': Word$to_nat,
        'U16.to_nat': U16$to_nat,
        'Kind.Comp.transpile.term': Kind$Comp$transpile$term,
        'List.map': List$map,
        'List.seq.go': List$seq$go,
        'List.seq': List$seq,
        'Kind.Comp.txt': Kind$Comp$txt,
        'Kind.Comp.subst': Kind$Comp$subst,
        'Kind.Comp.apply': Kind$Comp$apply,
        'Kind.Comp.Prim.elim': Kind$Comp$Prim$elim,
        'Kind.Comp.Prim.eliminator': Kind$Comp$Prim$eliminator,
        'BBL.lookup': BBL$lookup,
        'U16.cmp': U16$cmp,
        'String.cmp': String$cmp,
        'Map.get': Map$get,
        'BBL': BBL,
        'Map': Map,
        'Kind.Comp.transpile.global_definitions': Kind$Comp$transpile$global_definitions,
        'Kind.Comp.transpile': Kind$Comp$transpile,
        'Kind.Comp.Language.new': Kind$Comp$Language$new,
        'Kind.Comp.Grammar.new': Kind$Comp$Grammar$new,
        'Kind.Comp.Target.Scheme.null': Kind$Comp$Target$Scheme$null,
        'Kind.Comp.Target.Scheme.name': Kind$Comp$Target$Scheme$name,
        'Kind.Comp.Target.Scheme.inst_name': Kind$Comp$Target$Scheme$inst_name,
        'Kind.Comp.Target.Scheme.elim_name': Kind$Comp$Target$Scheme$elim_name,
        'Kind.Comp.Target.Scheme.lambda': Kind$Comp$Target$Scheme$lambda,
        'Kind.Comp.Target.Scheme.application': Kind$Comp$Target$Scheme$application,
        'Kind.Comp.Target.Scheme.local_definition': Kind$Comp$Target$Scheme$local_definition,
        'Kind.Comp.Target.Scheme.global_application': Kind$Comp$Target$Scheme$global_application,
        'Kind.Comp.Target.Scheme.nest_lambdas.aux': Kind$Comp$Target$Scheme$nest_lambdas$aux,
        'Kind.Comp.Target.Scheme.nest_lambdas': Kind$Comp$Target$Scheme$nest_lambdas,
        'Kind.Comp.Target.Scheme.global_function': Kind$Comp$Target$Scheme$global_function,
        'Kind.Comp.Target.Scheme.select': Kind$Comp$Target$Scheme$select,
        'Char.to_string': Char$to_string,
        'Kind.Comp.Target.Scheme.string_literal': Kind$Comp$Target$Scheme$string_literal,
        'Kind.Comp.Target.Scheme.nat': Kind$Comp$Target$Scheme$nat,
        'Kind.Comp.Target.Scheme.exports': Kind$Comp$Target$Scheme$exports,
        'Kind.Comp.Target.Scheme.module': Kind$Comp$Target$Scheme$module,
        'Kind.Comp.Target.Scheme.program': Kind$Comp$Target$Scheme$program,
        'Kind.Comp.Target.Scheme.grammar': Kind$Comp$Target$Scheme$grammar,
        'Kind.Comp.Native.new': Kind$Comp$Native$new,
        'Kind.Comp.Target.Scheme.natives': Kind$Comp$Target$Scheme$natives,
        'BBL.bin': BBL$bin,
        'U32.new': U32$new,
        'Nat.to_u32': Nat$to_u32,
        'BBL.tip': BBL$tip,
        'BBL.singleton': BBL$singleton,
        'BBL.size': BBL$size,
        'U32.add': U32$add,
        'U32.mul': U32$mul,
        'BBL.w': BBL$w,
        'U32.ltn': U32$ltn,
        'U32.from_nat': U32$from_nat,
        'BBL.node': BBL$node,
        'Cmp.as_gtn': Cmp$as_gtn,
        'Word.gtn': Word$gtn,
        'U32.gtn': U32$gtn,
        'BBL.balance': BBL$balance,
        'BBL.insert': BBL$insert,
        'BBL.from_list.go': BBL$from_list$go,
        'BBL.from_list': BBL$from_list,
        'Map.from_list': Map$from_list,
        'Kind.Comp.Target.Scheme.optimizeds': Kind$Comp$Target$Scheme$optimizeds,
        'Kind.Comp.Target.Scheme.basics': Kind$Comp$Target$Scheme$basics,
        'Kind.Comp.Target.Scheme.Language': Kind$Comp$Target$Scheme$Language,
        'Kind.api.io.term_to_scheme': Kind$api$io$term_to_scheme,
        'Kind.Synth.many': Kind$Synth$many,
        'Kind.Comp.dependency_sort.module': Kind$Comp$dependency_sort$module,
        'Kind.Comp.transpile.module': Kind$Comp$transpile$module,
        'Kind.api.io.terms_to_scheme_lib': Kind$api$io$terms_to_scheme_lib,
        'BitsMap.keys.go': BitsMap$keys$go,
        'BitsMap.keys': BitsMap$keys,
        'Kind.Synth.file': Kind$Synth$file,
        'IO.put_string': IO$put_string,
        'IO.print': IO$print,
        'Kind.Term.show.as_nat.go': Kind$Term$show$as_nat$go,
        'Kind.Term.show.as_nat': Kind$Term$show$as_nat,
        'Kind.Term.show.is_ref': Kind$Term$show$is_ref,
        'Kind.Term.show.app.done': Kind$Term$show$app$done,
        'Kind.Term.show.app': Kind$Term$show$app,
        'BitsMap.to_list': BitsMap$to_list,
        'Kind.Term.show.go': Kind$Term$show$go,
        'Kind.Term.show': Kind$Term$show,
        'Kind.Defs.report.types': Kind$Defs$report$types,
        'List.filter': List$filter,
        'Kind.Error.is_undef': Kind$Error$is_undef,
        'Kind.Error.is_mistake': Kind$Error$is_mistake,
        'Kind.Error.is_goal': Kind$Error$is_goal,
        'Kind.Error.relevant': Kind$Error$relevant,
        'Kind.Context.show': Kind$Context$show,
        'Kind.Term.expand_at': Kind$Term$expand_at,
        'Kind.Term.expand_ct': Kind$Term$expand_ct,
        'Kind.Term.expand': Kind$Term$expand,
        'Kind.Error.show': Kind$Error$show,
        'Kind.Error.origin': Kind$Error$origin,
        'Kind.Defs.report.errors': Kind$Defs$report$errors,
        'Kind.Defs.report': Kind$Defs$report,
        'IO.set_file': IO$set_file,
        'Bool.show': Bool$show,
        'Kind.Defs.cache.go': Kind$Defs$cache$go,
        'Kind.Defs.cache': Kind$Defs$cache,
        'Kind.api.io.check_file': Kind$api$io$check_file,
        'Kind.Synth.files.go': Kind$Synth$files$go,
        'Kind.Synth.remove_duplicate_names': Kind$Synth$remove_duplicate_names,
        'Kind.Synth.files': Kind$Synth$files,
        'Kind.api.io.check_files': Kind$api$io$check_files,
        'Kind.api.io.check_term': Kind$api$io$check_term,
        'Kind.api.io.show_term': Kind$api$io$show_term,
        'Kind.api.io.show_term_normal': Kind$api$io$show_term_normal,
        'IO.purify': IO$purify,
        'Kind.api.check_code': Kind$api$check_code,
        'Kind.Term.read': Kind$Term$read,
        'Kind.api.export': Kind$api$export,
    };
})();