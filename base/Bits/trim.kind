Bits.trim(new_len: Nat, bits: Bits): Bits
  case new_len {
    zero: Bits.e,
    succ: case bits {
      e: Bits.o(Bits.trim(new_len.pred, Bits.e)),
      o: Bits.o(Bits.trim(new_len.pred, bits.pred)),
      i: Bits.i(Bits.trim(new_len.pred, bits.pred)),
    }
  }

Bits.trim.insert(bits: Bits): Bits
  case bits {
    e : Bits.o(Bits.e)
    o : Bits.o(Bits.trim.insert(bits.pred))
    i : Bits.i(Bits.trim.insert(bits.pred))
  }
