#idx #code (((code #code (Parser.Reply Nat)) ((((Parser.Reply.error Nat) idx) code) "Not a digit.")) #code.head #code.tail !sidx = (Nat.succ idx); (((((U16.eql code.head) '0') # (Parser.Reply Nat)) ((((Parser.Reply.value Nat) sidx) code.tail) +0)) (((((U16.eql code.head) '1') # (Parser.Reply Nat)) ((((Parser.Reply.value Nat) sidx) code.tail) +1)) (((((U16.eql code.head) '2') # (Parser.Reply Nat)) ((((Parser.Reply.value Nat) sidx) code.tail) +2)) (((((U16.eql code.head) '3') # (Parser.Reply Nat)) ((((Parser.Reply.value Nat) sidx) code.tail) +3)) (((((U16.eql code.head) '4') # (Parser.Reply Nat)) ((((Parser.Reply.value Nat) sidx) code.tail) +4)) (((((U16.eql code.head) '5') # (Parser.Reply Nat)) ((((Parser.Reply.value Nat) sidx) code.tail) +5)) (((((U16.eql code.head) '6') # (Parser.Reply Nat)) ((((Parser.Reply.value Nat) sidx) code.tail) +6)) (((((U16.eql code.head) '7') # (Parser.Reply Nat)) ((((Parser.Reply.value Nat) sidx) code.tail) +7)) (((((U16.eql code.head) '8') # (Parser.Reply Nat)) ((((Parser.Reply.value Nat) sidx) code.tail) +8)) (((((U16.eql code.head) '9') # (Parser.Reply Nat)) ((((Parser.Reply.value Nat) sidx) code.tail) +9)) ((((Parser.Reply.error Nat) idx) code) "Not a digit."))))))))))))