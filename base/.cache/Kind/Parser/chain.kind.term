((((((Monad.bind Parser) Parser.monad) Nat) Kind.Term) Kind.Parser.init) #init ((((((Monad.bind Parser) Parser.monad) Unit) Kind.Term) (Kind.Parser.text "chain(")) # ((((((Monad.bind Parser) Parser.monad) Kind.Term) Kind.Term) Kind.Parser.term) #eql0 ((((((Monad.bind Parser) Parser.monad) Unit) Kind.Term) (Kind.Parser.text ",")) # ((((((Monad.bind Parser) Parser.monad) Kind.Term) Kind.Term) Kind.Parser.term) #eql1 ((((((Monad.bind Parser) Parser.monad) Unit) Kind.Term) (Kind.Parser.text ")")) # ((((((Monad.bind Parser) Parser.monad) ((Pair Nat) Nat)) Kind.Term) (Kind.Parser.stop init)) #orig !term = (Kind.Term.ref "Equal.chain"); !term = ((Kind.Term.app term) (Kind.Term.hol Bits.e)); !term = ((Kind.Term.app term) (Kind.Term.hol Bits.e)); !term = ((Kind.Term.app term) (Kind.Term.hol Bits.e)); !term = ((Kind.Term.app term) (Kind.Term.hol Bits.e)); !term = ((Kind.Term.app term) eql0); !term = ((Kind.Term.app term) eql1); ((((Monad.pure Parser) Parser.monad) Kind.Term) ((Kind.Term.ori orig) term)))))))))