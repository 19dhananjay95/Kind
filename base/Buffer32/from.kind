Buffer32.from(str: String): Buffer32
  let size = ((String.byte_length(str) - 1) / 4) + 1
  // log("byte size: " | Nat.show(size))
  Buffer32.from.go(str, Buffer32.alloc(size), 0#32)

Buffer32.from.go(str: String, buf: Buffer32, idx: U32): Buffer32
  case str {
    nil : buf
    cons:
      let c = Char.to_utf8(str.head)
      let u = Buffer8.to_u32(c)
      let new_buf = Buffer32.set(idx, u, buf)
      Buffer32.from.go(str.tail, new_buf, U32.add(1, idx))
  }
