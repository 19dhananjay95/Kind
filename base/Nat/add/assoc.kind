Nat.add.assoc(
  a: Nat, b: Nat, c: Nat
): Equal<Nat>(Nat.add(Nat.add(a, b), c), Nat.add(a, Nat.add(b, c)))
 case a {
   zero: refl
   succ: 
    let h=Nat.add.assoc(a.pred, b, c)
    Equal.apply!!<Nat.add(Nat.add(a.pred,b),c), Nat.add(a.pred,Nat.add(b,c)),Nat.succ>(h)
 }!
