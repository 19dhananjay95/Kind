Kind.Parser.if: Parser(Kind.Term)
  Parser {
    get init = Kind.Parser.init;
    get u = Kind.Parser.text_error("if ", "Expected \"if \"");
    get cond = Kind.Parser.term;
    get u = Kind.Parser.text_error("then", "Expected \"then\" after \"if …\"");
    get tcse = Kind.Parser.term;
    get u = Kind.Parser.text_error("else", "Expected \"else\" after \"if … then …\"");
    get fcse = Kind.Parser.term;
    get orig = Kind.Parser.stop(init);
    let term = cond;
    let term = Kind.Term.app(term, Kind.Term.lam("", (x) Kind.Term.hol(Bits.e)));
    let term = Kind.Term.app(term, tcse);
    let term = Kind.Term.app(term, fcse);
    return Kind.Term.ori(orig, term);
  }
