((((((Monad.bind Parser) Parser.monad) Nat) Kind.Term) Kind.Parser.init) #init ((((((Monad.bind Parser) Parser.monad) Unit) Kind.Term) (Kind.Parser.text "log(")) # ((((((Monad.bind Parser) Parser.monad) (List Kind.Term)) Kind.Term) (((Parser.until Kind.Term) (Kind.Parser.text ")")) ((Kind.Parser.item Kind.Term) Kind.Parser.term))) #strs ((((((Monad.bind Parser) Parser.monad) Kind.Term) Kind.Term) Kind.Parser.term) #cont !term = (Kind.Term.ref "Debug.log"); !term = ((Kind.Term.app term) (Kind.Term.hol Bits.e)); !args = (((((List.fold Kind.Term) strs) Kind.Term) (Kind.Term.ref "String.nil")) #x #xs !arg = (Kind.Term.ref "String.concat"); !arg = ((Kind.Term.app arg) x); !arg = ((Kind.Term.app arg) xs); arg); !term = ((Kind.Term.app term) args); !term = ((Kind.Term.app term) ((Kind.Term.lam "x") #x cont)); ((((((Monad.bind Parser) Parser.monad) ((Pair Nat) Nat)) Kind.Term) (Kind.Parser.stop init)) #orig ((((Monad.pure Parser) Parser.monad) Kind.Term) ((Kind.Term.ori orig) term)))))))