Parser.bind<A: Type, B: Type>(parse: Parser(A), next: A -> Parser(B)): Parser(B)
  (long, idx, code)
    reply = parse(long, idx, code)
    case reply {
      error: case long {
        none:
          Parser.Reply.error<B>(reply.val),
        some:
          val = Parser.ErrorAt.combine(reply.val, long.value)
          Parser.Reply.error<B>(val)
      }
      value:
        l = Parser.ErrorAt.maybe_combine(long, reply.long)
        next(reply.val, l, reply.idx, reply.code),
    }
