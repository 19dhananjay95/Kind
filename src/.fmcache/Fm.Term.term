%Fm.Term.Self(P:@(:Fm.Term) *) @(var:@(name:Fm.Name) @(indx:Nat) (P ((Fm.Term.var name) indx))) @(ref:@(name:Fm.Name) (P (Fm.Term.ref name))) @(typ:(P Fm.Term.typ)) @(all:@(eras:Bool) @(self:Fm.Name) @(name:Fm.Name) @(xtyp:Fm.Term) @(body:@(:Fm.Term) @(:Fm.Term) Fm.Term) (P (((((Fm.Term.all eras) self) name) xtyp) body))) @(lam:@(name:Fm.Name) @(body:@(:Fm.Term) Fm.Term) (P ((Fm.Term.lam name) body))) @(app:@(func:Fm.Term) @(argm:Fm.Term) (P ((Fm.Term.app func) argm))) @(let:@(name:Fm.Name) @(expr:Fm.Term) @(body:@(:Fm.Term) Fm.Term) (P (((Fm.Term.let name) expr) body))) @(def:@(name:Fm.Name) @(expr:Fm.Term) @(body:@(:Fm.Term) Fm.Term) (P (((Fm.Term.def name) expr) body))) @(ann:@(done:Bool) @(term:Fm.Term) @(type:Fm.Term) (P (((Fm.Term.ann done) term) type))) @(gol:@(name:Fm.Name) @(dref:(List Bits)) @(verb:Bool) (P (((Fm.Term.gol name) dref) verb))) @(hol:@(path:Bits) (P (Fm.Term.hol path))) @(nat:@(natx:Nat) (P (Fm.Term.nat natx))) @(chr:@(chrx:Char) (P (Fm.Term.chr chrx))) @(str:@(strx:String) (P (Fm.Term.str strx))) @(cse:@(path:Bits) @(expr:Fm.Term) @(name:Fm.Name) @(with:(List Fm.Def)) @(cses:(Map Fm.Term)) @(moti:(Maybe Fm.Term)) (P ((((((Fm.Term.cse path) expr) name) with) cses) moti))) @(ori:@(orig:((Pair Nat) Nat)) @(expr:Fm.Term) (P ((Fm.Term.ori orig) expr))) (P Fm.Term.Self)