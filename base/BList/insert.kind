BList.consTree(A : Type, e : BList.BTree<A>, tree : BList<A>) : BList<A>
  case tree {
     nil : [BList.Digit.One!(e)]
     cons : case tree.head as value {
         Zero : BList.Digit.One!(e) & tree.tail
         One : BList.Digit.Zero! & BList.consTree!(BList.merge!(e, value.tree), tree.tail)
     }
  }

BList.insert(A : Type, v : A, tree : BList<A>) : BList<A>
  BList.consTree!(BList.BTree.Leaf!(v), tree)