def kaelin_example:
  dup map_to_string = map_to_string
  # (map_to_string #kaelin.map)

def kaelin:
  kaelin_example

// :::::::::::::
// :: Vector2 ::
// :::::::::::::

def add2: {a b}
  get [ax,ay] = a
  get [bx,by] = b
  [|ax + bx|, |ay + by|]

// :::::::::::
// :: Thing ::
// :::::::::::

def Air:
  {Air Wall Throne Hero}
  Air

def Wall:
  {Air Wall Throne Hero}
  Wall

def Throne:
  {Air Throne Hero Wall}
  Throne

def Hero: {pid}
  {Air Wall Throne Hero}
  let dir = [1,0]
  (Hero pid dir)

def thing_to_icon: {thing}
  let case_air    = (to_chars " .")
  let case_wall   = (to_chars " W")
  let case_throne = (to_chars " T")
  let case_hero   = {pid dir} (to_chars " H")
  (thing case_air case_wall case_throne case_hero)

// :::::::::
// :: Map ::
// :::::::::

def kaelin.map:
  let O   = Air
  let a   = (Hero 0)
  let b   = (Hero 1)
  let c   = (Hero 2)
  let d   = (Hero 3)
  let e   = (Hero 4)
  let f   = (Hero 5)
  let g   = (Hero 6)
  let h   = (Hero 7)
  let W   = Wall
  let T   = Throne
  let r00 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#W],[#W,#W]],[[#W,#W],[#W,#W]]]]]
  let r01 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#W],[#O,#O]],[[#h,#g],[#O,#T]]]]]
  let r02 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#f,#W]]]]]
  let r03 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#e,#W]]]]]
  let r04 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#W]]]]]
  let r05 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#W],[#O,#O]],[[#O,#O],[#O,#W]]]]]
  let r06 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#W],[#W,#O]],[[#O,#O],[#W,#W]]]]]
  let r07 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r08 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r09 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r10 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r11 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r12 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r13 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r14 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r15 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r16 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r17 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r18 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r19 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r20 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r21 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r22 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r23 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r24 = [[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r25 = [[[[[#W,#W],[#O,#O]],[[#O,#W],[#W,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r26 = [[[[[#W,#O],[#O,#O]],[[#O,#O],[#W,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r27 = [[[[[#W,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r28 = [[[[[#W,#a],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r29 = [[[[[#W,#b],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r30 = [[[[[#T,#O],[#c,#d]],[[#O,#O],[#W,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  let r31 = [[[[[#W,#T],[#W,#W]],[[#W,#W],[#W,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]],[[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]],[[[#O,#O],[#O,#O]],[[#O,#O],[#O,#O]]]]]
  [[[[[r00,r01],[r02,r03]],[[r04,r05],[r06,r07]]],[[[r08,r09],[r10,r11]],[[r12,r13],[r14,r15]]]],
   [[[[r16,r17],[r18,r19]],[[r20,r21],[r22,r23]]],[[[r24,r25],[r26,r27]],[[r28,r29],[r30,r31]]]]]

def kaelin.map.index: {x y}
  ||y * 32| + x|

  
def map_to_string:
  dup fold = (fold_array ~10)
  # {map}
    let chars = (fold #kaelin.map #concat #thing_to_icon)
    let chars = (cons-every #64 #10 chars)
    (from_chars chars)
  
// ::::::::::
// :: Move ::
// ::::::::::

def Walk: {pos}
  {Walk}
  (Walk pos)
