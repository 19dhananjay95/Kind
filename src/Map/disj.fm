Map.disj<A: Type>(a: Map(A), b: Map(A)): Bool
  case a {
    new: Bool.true,
    tie: case b {
      new: Bool.true,
      tie: 
        let v = case a.val {
          none: Bool.true,
          some: case b.val {
            none: Bool.true,
            some: Bool.false 
          }
        }
        Bool.and(v, Bool.and(Map.disj!(a.lft, b.lft), Map.disj!(a.rgt, b.rgt)))
    }
  }