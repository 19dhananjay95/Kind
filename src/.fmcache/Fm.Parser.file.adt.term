#file #code #defs ((((((Monad.bind Parser) Parser.monad) Nat) Fm.Defs) Fm.Parser.init) #init ((((((Monad.bind Parser) Parser.monad) Fm.Datatype) Fm.Defs) Fm.Parser.datatype) #adt ((((((Monad.bind Parser) Parser.monad) ((Pair Nat) Nat)) Fm.Defs) (Fm.Parser.stop init)) #orig ((adt #adt (Parser Fm.Defs)) #adt.name #adt.pars #adt.inds #adt.ctrs !term = (Fm.Datatype.build_term adt); !term = (((Fm.Term.bind (List.nil ((Pair Fm.Name) Fm.Term))) #x (Bits.i x)) term); !type = (Fm.Datatype.build_type adt); !type = (((Fm.Term.bind (List.nil ((Pair Fm.Name) Fm.Term))) #x (Bits.o x)) type); !defs = (((((((((Fm.define file) code) orig) adt.name) term) type) Bool.false) Bool.false) defs); !defs = (((((List.fold Fm.Constructor) adt.ctrs) Fm.Defs) defs) #ctr #defs !typ_name = adt.name; !ctr_name = (String.flatten (((List.cons String) typ_name) (((List.cons Fm.Name) (Fm.Name.read ".")) (((List.cons Fm.Name) ((ctr #ctr Fm.Name) #ctr.name #ctr.args #ctr.inds ctr.name)) (List.nil Fm.Name))))); !ctr_term = ((Fm.Constructor.build_term adt) ctr); !ctr_term = (((Fm.Term.bind (List.nil ((Pair Fm.Name) Fm.Term))) #x (Bits.i x)) ctr_term); !ctr_type = ((Fm.Constructor.build_type adt) ctr); !ctr_type = (((Fm.Term.bind (List.nil ((Pair Fm.Name) Fm.Term))) #x (Bits.o x)) ctr_type); (((((((((Fm.define file) code) orig) ctr_name) ctr_term) ctr_type) Bool.true) Bool.false) defs)); ((((Monad.pure Parser) Parser.monad) Fm.Defs) defs)))))