// The 'Arena' map
App.Kaelin.Map.arena: App.Kaelin.Map
  map = NatMap.new!
  map_size = App.Kaelin.Constants.map_size
  width    = U32.add(U32.mul(map_size, 2#32), 1#32) // map_size * 2 + 1
  height   = U32.add(U32.mul(map_size, 2#32), 1#32) // map_size * 2 + 1

  // TODO: Define this elsewhere?
  // Defines all possible images inside a tile
  terrain_img = App.Kaelin.Resources.terrains

  new_terrain = App.Kaelin.Terrain.new(terrain_img)
  new_terrain = App.Kaelin.Map.Entity.background(new_terrain)

  //// loops through the half of the map_size
  for j : U32 from 0 to height with map:   //U32
    for i : U32 from 0 to width with map:  // U32
      // generate int axial coordinate
      coord_i = I32.sub( U32.to_i32(i),  U32.to_i32(map_size)) // i - map_size
      coord_j = I32.sub( U32.to_i32(j),  U32.to_i32(map_size)) // j - map_size
      coord = App.Kaelin.Coord.new(coord_i, coord_j)
      fit = App.Kaelin.Coord.fit(coord, map_size)

      case fit {
        true:
          App.Kaelin.Map.push(coord, new_terrain, map)
        false:
          map
      }
    map
  map
