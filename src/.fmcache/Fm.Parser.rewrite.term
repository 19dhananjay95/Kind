#init #subt ((((((Monad.bind Parser) Parser.monad) Unit) Fm.Term) (Fm.Parser.text "::")) # ((((((Monad.bind Parser) Parser.monad) Unit) Fm.Term) (Fm.Parser.text "rewrite")) # ((((((Monad.bind Parser) Parser.monad) Fm.Name) Fm.Term) Fm.Parser.name1) #name ((((((Monad.bind Parser) Parser.monad) Unit) Fm.Term) (Fm.Parser.text "in")) # ((((((Monad.bind Parser) Parser.monad) Fm.Term) Fm.Term) Fm.Parser.term) #type ((((((Monad.bind Parser) Parser.monad) Unit) Fm.Term) (Fm.Parser.text "with")) # ((((((Monad.bind Parser) Parser.monad) Fm.Term) Fm.Term) Fm.Parser.term) #iseq ((((((Monad.bind Parser) Parser.monad) ((Pair Nat) Nat)) Fm.Term) (Fm.Parser.stop init)) #orig !term = (Fm.Term.ref "Equal.rewrite"); !term = ((Fm.Term.app term) (Fm.Term.hol Bits.e)); !term = ((Fm.Term.app term) (Fm.Term.hol Bits.e)); !term = ((Fm.Term.app term) (Fm.Term.hol Bits.e)); !term = ((Fm.Term.app term) iseq); !term = ((Fm.Term.app term) ((Fm.Term.lam name) #x type)); !term = ((Fm.Term.app term) subt); ((((Monad.pure Parser) Parser.monad) Fm.Term) ((Fm.Term.ori orig) term))))))))))