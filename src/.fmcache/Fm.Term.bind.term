#vars #path #term (((((((((((((((((term #term Fm.Term) #term.name #term.indx ((((((List.at_last ((Pair Fm.Name) Fm.Term)) term.indx) vars) #got Fm.Term) ((Fm.Term.var term.name) term.indx)) #got.value (((Pair.snd Fm.Name) Fm.Term) got.value))) #term.name (((((Fm.Context.find term.name) vars) #got Fm.Term) (Fm.Term.ref term.name)) #got.value got.value)) Fm.Term.typ) #term.eras #term.self #term.name #term.xtyp #term.body !vlen = ((List.length ((Pair Fm.Name) Fm.Term)) vars); $xtyp = (((Fm.Term.bind vars) (Fm.Path.o path)) term.xtyp); $body = {#s #x (((Fm.Term.bind (((List.cons ((Pair Fm.Name) Fm.Term)) ((((Pair.new Fm.Name) Fm.Term) term.name) x)) (((List.cons ((Pair Fm.Name) Fm.Term)) ((((Pair.new Fm.Name) Fm.Term) term.self) s)) vars))) (Fm.Path.i path)) ((term.body ((Fm.Term.var term.self) vlen)) ((Fm.Term.var term.name) (Nat.succ vlen)))):@(:Fm.Term) @(:Fm.Term) Fm.Term}; (((((Fm.Term.all term.eras) term.self) term.name) xtyp) body)) #term.name #term.body !vlen = ((List.length ((Pair Fm.Name) Fm.Term)) vars); $body = {#x (((Fm.Term.bind (((List.cons ((Pair Fm.Name) Fm.Term)) ((((Pair.new Fm.Name) Fm.Term) term.name) x)) vars)) (Fm.Path.o path)) (term.body ((Fm.Term.var term.name) vlen))):@(:Fm.Term) Fm.Term}; ((Fm.Term.lam term.name) body)) #term.func #term.argm $func = (((Fm.Term.bind vars) (Fm.Path.o path)) term.func); $argm = (((Fm.Term.bind vars) (Fm.Path.i path)) term.argm); ((Fm.Term.app func) argm)) #term.name #term.expr #term.body !vlen = ((List.length ((Pair Fm.Name) Fm.Term)) vars); $expr = (((Fm.Term.bind vars) (Fm.Path.o path)) term.expr); $body = {#x (((Fm.Term.bind (((List.cons ((Pair Fm.Name) Fm.Term)) ((((Pair.new Fm.Name) Fm.Term) term.name) x)) vars)) (Fm.Path.i path)) (term.body ((Fm.Term.var term.name) vlen))):@(:Fm.Term) Fm.Term}; (((Fm.Term.let term.name) expr) body)) #term.name #term.expr #term.body !vlen = ((List.length ((Pair Fm.Name) Fm.Term)) vars); $expr = (((Fm.Term.bind vars) (Fm.Path.o path)) term.expr); $body = {#x (((Fm.Term.bind (((List.cons ((Pair Fm.Name) Fm.Term)) ((((Pair.new Fm.Name) Fm.Term) term.name) x)) vars)) (Fm.Path.i path)) (term.body ((Fm.Term.var term.name) vlen))):@(:Fm.Term) Fm.Term}; (((Fm.Term.def term.name) expr) body)) #term.done #term.term #term.type $term = (((Fm.Term.bind vars) (Fm.Path.o path)) term.term); $type = (((Fm.Term.bind vars) (Fm.Path.i path)) term.type); (((Fm.Term.ann term.done) term) type)) #term.name #term.dref #term.verb (((Fm.Term.gol term.name) term.dref) term.verb)) #term.path (Fm.Term.hol (Fm.Path.to_bits path))) #term.natx (Fm.Term.nat term.natx)) #term.chrx (Fm.Term.chr term.chrx)) #term.strx (Fm.Term.str term.strx)) #term.path #term.expr #term.name #term.with #term.cses #term.moti !expr = (((Fm.Term.bind vars) (Fm.Path.o path)) term.expr); !name = term.name; !wyth = term.with; !cses = term.cses; !moti = term.moti; ((((((Fm.Term.cse (Fm.Path.to_bits path)) expr) name) wyth) cses) moti)) #term.orig #term.expr ((Fm.Term.ori term.orig) (((Fm.Term.bind vars) path) term.expr)))