#term #indx #vars (((((((((((((((((term #term Fm.Name) #term.name #term.indx ((((Fm.Core.var_name (Nat.pred ((Nat.sub indx) term.indx))) term.name) +0) vars)) #term.name (Fm.Name.show term.name)) "*") #term.eras #term.self #term.name #term.xtyp #term.body !eras = term.eras; !init = (((eras # String) "%") "@"); !self = (Fm.Name.show term.self); !name = (Fm.Name.show term.name); !xtyp = (((Fm.Core.show.go term.xtyp) indx) vars); !body = (((Fm.Core.show.go ((term.body ((Fm.Term.var term.self) indx)) ((Fm.Term.var term.name) (Nat.succ indx)))) (Nat.succ (Nat.succ indx))) (((List.cons Fm.Name) term.name) (((List.cons Fm.Name) term.self) vars))); (String.flatten (((List.cons String) init) (((List.cons String) self) (((List.cons String) "(") (((List.cons String) name) (((List.cons String) ":") (((List.cons String) xtyp) (((List.cons String) ") ") (((List.cons String) body) (List.nil String))))))))))) #term.name #term.body !name = (Fm.Name.show term.name); !body = (((Fm.Core.show.go (term.body ((Fm.Term.var term.name) indx))) (Nat.succ indx)) (((List.cons Fm.Name) term.name) vars)); (String.flatten (((List.cons String) "#") (((List.cons String) name) (((List.cons String) " ") (((List.cons String) body) (List.nil String))))))) #term.func #term.argm !func = (((Fm.Core.show.go term.func) indx) vars); !argm = (((Fm.Core.show.go term.argm) indx) vars); (String.flatten (((List.cons String) "(") (((List.cons String) func) (((List.cons String) " ") (((List.cons String) argm) (((List.cons String) ")") (List.nil String)))))))) #term.name #term.expr #term.body !name = (Fm.Name.show term.name); !expr = (((Fm.Core.show.go term.expr) indx) vars); !body = (((Fm.Core.show.go (term.body ((Fm.Term.var term.name) indx))) (Nat.succ indx)) (((List.cons Fm.Name) term.name) vars)); (String.flatten (((List.cons String) "!") (((List.cons String) name) (((List.cons String) " = ") (((List.cons String) expr) (((List.cons String) "; ") (((List.cons String) body) (List.nil String))))))))) #term.name #term.expr #term.body !name = (Fm.Name.show term.name); !expr = (((Fm.Core.show.go term.expr) indx) vars); !body = (((Fm.Core.show.go (term.body ((Fm.Term.var term.name) indx))) (Nat.succ indx)) (((List.cons Fm.Name) term.name) vars)); (String.flatten (((List.cons String) "$") (((List.cons String) name) (((List.cons String) " = ") (((List.cons String) expr) (((List.cons String) "; ") (((List.cons String) body) (List.nil String))))))))) #term.done #term.term #term.type !term = (((Fm.Core.show.go term.term) indx) vars); !type = (((Fm.Core.show.go term.type) indx) vars); (String.flatten (((List.cons String) "{") (((List.cons String) term) (((List.cons String) ":") (((List.cons String) type) (((List.cons String) "}") (List.nil String)))))))) #term.name #term.dref #term.verb "<GOL>") #term.path "<HOL>") #term.natx (String.flatten (((List.cons String) "+") (((List.cons String) (Nat.show term.natx)) (List.nil String))))) #term.chrx (String.flatten (((List.cons String) "\'") (((List.cons String) (Fm.escape.char term.chrx)) (((List.cons String) "\'") (List.nil String)))))) #term.strx (String.flatten (((List.cons String) "\"") (((List.cons String) (Fm.escape term.strx)) (((List.cons String) "\"") (List.nil String)))))) #term.path #term.expr #term.name #term.with #term.cses #term.moti "<CSE>") #term.orig #term.expr (((Fm.Core.show.go term.expr) indx) vars))