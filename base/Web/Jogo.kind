Web.Jogo.State: Type
  BitsMap(Pair(U32, U32))

Web.Jogo.room: String
  "0x196581625482"

Web.Jogo.command.A: String
  "0x0000000000000000000000000000000000000000000000000000000000000000"

Web.Jogo.command.D: String
  "0x0000000000000000000000000000000000000000000000000000000000000001"

Web.Jogo.command.S: String
  "0x0000000000000000000000000000000000000000000000000000000000000002"

Web.Jogo.command.W: String
  "0x0000000000000000000000000000000000000000000000000000000000000003"

Web.Jogo.command(user: String, cmd: String, state: Web.Jogo.State): Web.Jogo.State
  let key = String.to_bits(user)
  case BitsMap.get!(key, state) as player {
    none:
      BitsMap.set!(key, {128u, 128u}, state)
    some:
      open player.value
      let spd = 3u
      let p_x = player.value.fst
      let p_y = player.value.snd
      switch String.eql(cmd) {
        Web.Jogo.command.A:
          BitsMap.set!(key, {U32.sub(p_x,spd), p_y}, state)
        Web.Jogo.command.D:
          BitsMap.set!(key, {U32.add(p_x,spd), p_y}, state)
        Web.Jogo.command.W:
          BitsMap.set!(key, {p_x, U32.sub(p_y,spd)}, state)
        Web.Jogo.command.S:
          BitsMap.set!(key, {p_x, U32.add(p_y,spd)}, state)
      } default state
  }

// A demo application that renders a square on the screen
Web.Jogo: App(Web.Jogo.State)
  let vbox = VoxBox.alloc_capacity(3200u)
  let init = BitsMap.new!
  let draw = (state)
    let vbox = VoxBox.clear(vbox)
    let vbox = for pos in BitsMap.values!(state):
      open pos
      VoxBox.Draw.image(pos.fst, pos.snd, 0u, Web.Jogo.hero, vbox)
    DOM.vbox({}, {}, vbox)
  let when = (event, state)
    case event {
      init: App.watch(Web.Jogo.room)
      key_down: switch U16.eql(event.code) {
        'A': App.post(Web.Jogo.room, Web.Jogo.command.A)
        'D': App.post(Web.Jogo.room, Web.Jogo.command.D)
        'W': App.post(Web.Jogo.room, Web.Jogo.command.W)
        'S': App.post(Web.Jogo.room, Web.Jogo.command.S)
      } default App.pass
      post: App.store!(Web.Jogo.command(event.addr, event.data, state))
    } default App.pass
  App.new!(init, draw, when)
