BBT.from_list.go<K: Type, V: Type>(
  cmp : K -> K -> Cmp, 
  acc : BBT<K,V>, 
  xs  : List<Pair<K,V>>
) : BBT<K,V> 
  case xs {
    nil : acc,
    cons:  
      let key = Pair.fst<K,V>(xs.head)
      let val = Pair.snd<K,V>(xs.head)
      let new_acc = BBT.insert<K,V>(cmp, key, val, acc)
      BBT.from_list.go<K,V>(cmp, new_acc, xs.tail)     
  }